//==============================================================================
// Copyright (c) 2010-2019 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  CL counter definitions for GFX9
//==============================================================================

#include "GPACounter.h"
#include "GPAHWCounterGfx9.h"
#include "GPAHWExposedCountersGfx9.h"
#include "GPAHWCounterCLGfx9.h"

// This file is autogenerated by the ConvertHWEnums project

namespace CounterGfx9
{
    GPA_HardwareCounterDesc* CLCounterGroupArrayGfx9[] = {
        CB0countersGfx9,
        CB1countersGfx9,
        CB2countersGfx9,
        CB3countersGfx9,
        CPFcountersGfx9,
        DB0countersGfx9,
        DB1countersGfx9,
        DB2countersGfx9,
        DB3countersGfx9,
        GRBMcountersGfx9,
        GRBMSE0countersGfx9,
        PA_SU0countersGfx9,
        PA_SC0countersGfx9,
        SPI0countersGfx9,
        SQ0countersGfx9,
        SQ_ES0countersGfx9,
        SQ_GS0countersGfx9,
        SQ_VS0countersGfx9,
        SQ_PS0countersGfx9,
        SQ_LS0countersGfx9,
        SQ_HS0countersGfx9,
        SQ_CS0countersGfx9,
        SX0countersGfx9,
        TA0countersGfx9,
        TA1countersGfx9,
        TA2countersGfx9,
        TA3countersGfx9,
        TA4countersGfx9,
        TA5countersGfx9,
        TA6countersGfx9,
        TA7countersGfx9,
        TA8countersGfx9,
        TA9countersGfx9,
        TA10countersGfx9,
        TA11countersGfx9,
        TA12countersGfx9,
        TA13countersGfx9,
        TA14countersGfx9,
        TA15countersGfx9,
        TCA0countersGfx9,
        TCA1countersGfx9,
        TCC0countersGfx9,
        TCC1countersGfx9,
        TCC2countersGfx9,
        TCC3countersGfx9,
        TCC4countersGfx9,
        TCC5countersGfx9,
        TCC6countersGfx9,
        TCC7countersGfx9,
        TCC8countersGfx9,
        TCC9countersGfx9,
        TCC10countersGfx9,
        TCC11countersGfx9,
        TCC12countersGfx9,
        TCC13countersGfx9,
        TCC14countersGfx9,
        TCC15countersGfx9,
        TD0countersGfx9,
        TD1countersGfx9,
        TD2countersGfx9,
        TD3countersGfx9,
        TD4countersGfx9,
        TD5countersGfx9,
        TD6countersGfx9,
        TD7countersGfx9,
        TD8countersGfx9,
        TD9countersGfx9,
        TD10countersGfx9,
        TD11countersGfx9,
        TD12countersGfx9,
        TD13countersGfx9,
        TD14countersGfx9,
        TD15countersGfx9,
        TCP0countersGfx9,
        TCP1countersGfx9,
        TCP2countersGfx9,
        TCP3countersGfx9,
        TCP4countersGfx9,
        TCP5countersGfx9,
        TCP6countersGfx9,
        TCP7countersGfx9,
        TCP8countersGfx9,
        TCP9countersGfx9,
        TCP10countersGfx9,
        TCP11countersGfx9,
        TCP12countersGfx9,
        TCP13countersGfx9,
        TCP14countersGfx9,
        TCP15countersGfx9,
        GDScountersGfx9,
        VGT0countersGfx9,
        IA0countersGfx9,
        WDcountersGfx9,
        CPGcountersGfx9,
        CPCcountersGfx9,
        ATCcountersGfx9,
        ATCL2countersGfx9,
        MCVML2countersGfx9,
        GCEA0countersGfx9,
        GCEA1countersGfx9,
        GCEA2countersGfx9,
        GCEA3countersGfx9,
        GCEA4countersGfx9,
        GCEA5countersGfx9,
        GCEA6countersGfx9,
        GCEA7countersGfx9,
        GCEA8countersGfx9,
        GCEA9countersGfx9,
        GCEA10countersGfx9,
        GCEA11countersGfx9,
        GCEA12countersGfx9,
        GCEA13countersGfx9,
        GCEA14countersGfx9,
        GCEA15countersGfx9,
        RPBcountersGfx9,
        RMI0countersGfx9,
        RMI1countersGfx9,
        RMI2countersGfx9,
        RMI3countersGfx9,
        RMI4countersGfx9,
        RMI5countersGfx9,
        RMI6countersGfx9,
        RMI7countersGfx9,
    };

    GPA_HardwareCounterDesc* CLExposedCountersGroupArrayGfx9[] = {
        CB0ExposedCountersGfx9,
        CB1ExposedCountersGfx9,
        CB2ExposedCountersGfx9,
        CB3ExposedCountersGfx9,
        CPFExposedCountersGfx9,
        DB0ExposedCountersGfx9,
        DB1ExposedCountersGfx9,
        DB2ExposedCountersGfx9,
        DB3ExposedCountersGfx9,
        GRBMExposedCountersGfx9,
        PA_SU0ExposedCountersGfx9,
        PA_SC0ExposedCountersGfx9,
        SPI0ExposedCountersGfx9,
        SQ0ExposedCountersGfx9,
        SQ_ES0ExposedCountersGfx9,
        SQ_GS0ExposedCountersGfx9,
        SQ_VS0ExposedCountersGfx9,
        SQ_PS0ExposedCountersGfx9,
        SQ_LS0ExposedCountersGfx9,
        SQ_HS0ExposedCountersGfx9,
        SQ_CS0ExposedCountersGfx9,
        SX0ExposedCountersGfx9,
        TA0ExposedCountersGfx9,
        TA1ExposedCountersGfx9,
        TA2ExposedCountersGfx9,
        TA3ExposedCountersGfx9,
        TA4ExposedCountersGfx9,
        TA5ExposedCountersGfx9,
        TA6ExposedCountersGfx9,
        TA7ExposedCountersGfx9,
        TA8ExposedCountersGfx9,
        TA9ExposedCountersGfx9,
        TA10ExposedCountersGfx9,
        TA11ExposedCountersGfx9,
        TA12ExposedCountersGfx9,
        TA13ExposedCountersGfx9,
        TA14ExposedCountersGfx9,
        TA15ExposedCountersGfx9,
        TCC0ExposedCountersGfx9,
        TCC1ExposedCountersGfx9,
        TCC2ExposedCountersGfx9,
        TCC3ExposedCountersGfx9,
        TCC4ExposedCountersGfx9,
        TCC5ExposedCountersGfx9,
        TCC6ExposedCountersGfx9,
        TCC7ExposedCountersGfx9,
        TCC8ExposedCountersGfx9,
        TCC9ExposedCountersGfx9,
        TCC10ExposedCountersGfx9,
        TCC11ExposedCountersGfx9,
        TCC12ExposedCountersGfx9,
        TCC13ExposedCountersGfx9,
        TCC14ExposedCountersGfx9,
        TCC15ExposedCountersGfx9,
        TCP0ExposedCountersGfx9,
        TCP1ExposedCountersGfx9,
        TCP2ExposedCountersGfx9,
        TCP3ExposedCountersGfx9,
        TCP4ExposedCountersGfx9,
        TCP5ExposedCountersGfx9,
        TCP6ExposedCountersGfx9,
        TCP7ExposedCountersGfx9,
        TCP8ExposedCountersGfx9,
        TCP9ExposedCountersGfx9,
        TCP10ExposedCountersGfx9,
        TCP11ExposedCountersGfx9,
        TCP12ExposedCountersGfx9,
        TCP13ExposedCountersGfx9,
        TCP14ExposedCountersGfx9,
        TCP15ExposedCountersGfx9,
        VGT0ExposedCountersGfx9,
        GCEA0ExposedCountersGfx9,
        GCEA1ExposedCountersGfx9,
        GCEA2ExposedCountersGfx9,
        GCEA3ExposedCountersGfx9,
        GCEA4ExposedCountersGfx9,
        GCEA5ExposedCountersGfx9,
        GCEA6ExposedCountersGfx9,
        GCEA7ExposedCountersGfx9,
        GCEA8ExposedCountersGfx9,
        GCEA9ExposedCountersGfx9,
        GCEA10ExposedCountersGfx9,
        GCEA11ExposedCountersGfx9,
        GCEA12ExposedCountersGfx9,
        GCEA13ExposedCountersGfx9,
        GCEA14ExposedCountersGfx9,
        GCEA15ExposedCountersGfx9,
    };

    GPA_CounterGroupDesc HWCLGroupsGfx9[] = {
        {0, "CB0", 0, 438, 4, 4},
        {1, "CB1", 1, 438, 4, 4},
        {2, "CB2", 2, 438, 4, 4},
        {3, "CB3", 3, 438, 4, 4},
        {4, "CPF", 0, 32, 2, 4},
        {5, "DB0", 0, 328, 4, 6},
        {6, "DB1", 1, 328, 4, 6},
        {7, "DB2", 2, 328, 4, 6},
        {8, "DB3", 3, 328, 4, 6},
        {9, "GRBM", 0, 38, 2, 0},
        {10, "GRBMSE", 0, 16, 4, 0},
        {11, "PA_SU", 0, 351, 4, 6},
        {12, "PA_SC", 0, 492, 8, 4},
        {13, "SPI", 0, 196, 6, 16},
        {14, "SQ", 0, 374, 16, 16},
        {15, "SQ_ES", 0, 374, 16, 16},
        {16, "SQ_GS", 0, 374, 16, 16},
        {17, "SQ_VS", 0, 374, 16, 16},
        {18, "SQ_PS", 0, 374, 16, 16},
        {19, "SQ_LS", 0, 374, 16, 16},
        {20, "SQ_HS", 0, 374, 16, 16},
        {21, "SQ_CS", 0, 374, 16, 16},
        {22, "SX", 0, 208, 4, 8},
        {23, "TA0", 0, 119, 2, 4},
        {24, "TA1", 1, 119, 2, 4},
        {25, "TA2", 2, 119, 2, 4},
        {26, "TA3", 3, 119, 2, 4},
        {27, "TA4", 4, 119, 2, 4},
        {28, "TA5", 5, 119, 2, 4},
        {29, "TA6", 6, 119, 2, 4},
        {30, "TA7", 7, 119, 2, 4},
        {31, "TA8", 8, 119, 2, 4},
        {32, "TA9", 9, 119, 2, 4},
        {33, "TA10", 10, 119, 2, 4},
        {34, "TA11", 11, 119, 2, 4},
        {35, "TA12", 12, 119, 2, 4},
        {36, "TA13", 13, 119, 2, 4},
        {37, "TA14", 14, 119, 2, 4},
        {38, "TA15", 15, 119, 2, 4},
        {39, "TCA0", 0, 35, 4, 8},
        {40, "TCA1", 1, 35, 4, 8},
        {41, "TCC0", 0, 282, 4, 8},
        {42, "TCC1", 1, 282, 4, 8},
        {43, "TCC2", 2, 282, 4, 8},
        {44, "TCC3", 3, 282, 4, 8},
        {45, "TCC4", 4, 282, 4, 8},
        {46, "TCC5", 5, 282, 4, 8},
        {47, "TCC6", 6, 282, 4, 8},
        {48, "TCC7", 7, 282, 4, 8},
        {49, "TCC8", 8, 282, 4, 8},
        {50, "TCC9", 9, 282, 4, 8},
        {51, "TCC10", 10, 282, 4, 8},
        {52, "TCC11", 11, 282, 4, 8},
        {53, "TCC12", 12, 282, 4, 8},
        {54, "TCC13", 13, 282, 4, 8},
        {55, "TCC14", 14, 282, 4, 8},
        {56, "TCC15", 15, 282, 4, 8},
        {57, "TD0", 0, 57, 2, 4},
        {58, "TD1", 1, 57, 2, 4},
        {59, "TD2", 2, 57, 2, 4},
        {60, "TD3", 3, 57, 2, 4},
        {61, "TD4", 4, 57, 2, 4},
        {62, "TD5", 5, 57, 2, 4},
        {63, "TD6", 6, 57, 2, 4},
        {64, "TD7", 7, 57, 2, 4},
        {65, "TD8", 8, 57, 2, 4},
        {66, "TD9", 9, 57, 2, 4},
        {67, "TD10", 10, 57, 2, 4},
        {68, "TD11", 11, 57, 2, 4},
        {69, "TD12", 12, 57, 2, 4},
        {70, "TD13", 13, 57, 2, 4},
        {71, "TD14", 14, 57, 2, 4},
        {72, "TD15", 15, 57, 2, 4},
        {73, "TCP0", 0, 85, 4, 6},
        {74, "TCP1", 1, 85, 4, 6},
        {75, "TCP2", 2, 85, 4, 6},
        {76, "TCP3", 3, 85, 4, 6},
        {77, "TCP4", 4, 85, 4, 6},
        {78, "TCP5", 5, 85, 4, 6},
        {79, "TCP6", 6, 85, 4, 6},
        {80, "TCP7", 7, 85, 4, 6},
        {81, "TCP8", 8, 85, 4, 6},
        {82, "TCP9", 9, 85, 4, 6},
        {83, "TCP10", 10, 85, 4, 6},
        {84, "TCP11", 11, 85, 4, 6},
        {85, "TCP12", 12, 85, 4, 6},
        {86, "TCP13", 13, 85, 4, 6},
        {87, "TCP14", 14, 85, 4, 6},
        {88, "TCP15", 15, 85, 4, 6},
        {89, "GDS", 0, 121, 4, 4},
        {90, "VGT", 0, 148, 4, 5},
        {91, "IA", 0, 32, 4, 4},
        {92, "WD", 0, 58, 4, 0},
        {93, "CPG", 0, 60, 2, 4},
        {94, "CPC", 0, 35, 2, 4},
        {95, "ATC", 0, 24, 4, 0},
        {96, "ATCL2", 0, 8, 2, 0},
        {97, "MCVML2", 0, 21, 8, 0},
        {98, "GCEA0", 0, 83, 2, 0},
        {99, "GCEA1", 1, 83, 2, 0},
        {100, "GCEA2", 2, 83, 2, 0},
        {101, "GCEA3", 3, 83, 2, 0},
        {102, "GCEA4", 4, 83, 2, 0},
        {103, "GCEA5", 5, 83, 2, 0},
        {104, "GCEA6", 6, 83, 2, 0},
        {105, "GCEA7", 7, 83, 2, 0},
        {106, "GCEA8", 8, 83, 2, 0},
        {107, "GCEA9", 9, 83, 2, 0},
        {108, "GCEA10", 10, 83, 2, 0},
        {109, "GCEA11", 11, 83, 2, 0},
        {110, "GCEA12", 12, 83, 2, 0},
        {111, "GCEA13", 13, 83, 2, 0},
        {112, "GCEA14", 14, 83, 2, 0},
        {113, "GCEA15", 15, 83, 2, 0},
        {114, "RPB", 0, 95, 4, 0},
        {115, "RMI0", 0, 257, 4, 4},
        {116, "RMI1", 1, 257, 4, 4},
        {117, "RMI2", 2, 257, 4, 4},
        {118, "RMI3", 3, 257, 4, 4},
        {119, "RMI4", 4, 257, 4, 4},
        {120, "RMI5", 5, 257, 4, 4},
        {121, "RMI6", 6, 257, 4, 4},
        {122, "RMI7", 7, 257, 4, 4},
    };

    GPA_CounterGroupExposedCounterDesc HWCLExposedCountersByGroupGfx9[] = {
        {0, 0, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {1, 438, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {2, 876, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {3, 1314, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {4, 1752, {0, 23}},
        {5, 1784, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {6, 2112, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {7, 2440, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {8, 2768, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {9, 3096, {0, 2}},
        {11, 3150, {8, 14, 21, 54, 55, 56, 57, 61, 62, 73, 74, 105, 109}},
        {12, 3501, {159, 160, 161, 162, 235, 236, 237, 238, 259}},
        {13, 3993, {1, 10, 20, 23, 32, 38, 42, 43, 46, 48, 49, 52, 54, 59}},
        {14, 4189, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {15, 4563, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {16, 4937, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {17, 5311, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {18, 5685, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {19, 6059, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {20, 6433, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {21, 6807, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {22, 7181, {12, 14, 17, 19, 22, 24, 27, 29}},
        {23, 7389, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {24, 7508, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {25, 7627, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {26, 7746, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {27, 7865, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {28, 7984, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {29, 8103, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {30, 8222, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {31, 8341, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {32, 8460, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {33, 8579, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {34, 8698, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {35, 8817, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {36, 8936, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {37, 9055, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {38, 9174, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {41, 9363, {20, 22, 29, 30, 33, 41, 42}},
        {42, 9645, {20, 22, 29, 30, 33, 41, 42}},
        {43, 9927, {20, 22, 29, 30, 33, 41, 42}},
        {44, 10209, {20, 22, 29, 30, 33, 41, 42}},
        {45, 10491, {20, 22, 29, 30, 33, 41, 42}},
        {46, 10773, {20, 22, 29, 30, 33, 41, 42}},
        {47, 11055, {20, 22, 29, 30, 33, 41, 42}},
        {48, 11337, {20, 22, 29, 30, 33, 41, 42}},
        {49, 11619, {20, 22, 29, 30, 33, 41, 42}},
        {50, 11901, {20, 22, 29, 30, 33, 41, 42}},
        {51, 12183, {20, 22, 29, 30, 33, 41, 42}},
        {52, 12465, {20, 22, 29, 30, 33, 41, 42}},
        {53, 12747, {20, 22, 29, 30, 33, 41, 42}},
        {54, 13029, {20, 22, 29, 30, 33, 41, 42}},
        {55, 13311, {20, 22, 29, 30, 33, 41, 42}},
        {56, 13593, {20, 22, 29, 30, 33, 41, 42}},
        {73, 14787, {6, 60, 69, 70, 71, 72}},
        {74, 14872, {6, 60, 69, 70, 71, 72}},
        {75, 14957, {6, 60, 69, 70, 71, 72}},
        {76, 15042, {6, 60, 69, 70, 71, 72}},
        {77, 15127, {6, 60, 69, 70, 71, 72}},
        {78, 15212, {6, 60, 69, 70, 71, 72}},
        {79, 15297, {6, 60, 69, 70, 71, 72}},
        {80, 15382, {6, 60, 69, 70, 71, 72}},
        {81, 15467, {6, 60, 69, 70, 71, 72}},
        {82, 15552, {6, 60, 69, 70, 71, 72}},
        {83, 15637, {6, 60, 69, 70, 71, 72}},
        {84, 15722, {6, 60, 69, 70, 71, 72}},
        {85, 15807, {6, 60, 69, 70, 71, 72}},
        {86, 15892, {6, 60, 69, 70, 71, 72}},
        {87, 15977, {6, 60, 69, 70, 71, 72}},
        {88, 16062, {6, 60, 69, 70, 71, 72}},
        {90, 16268, {1, 9, 20, 96, 105, 125}},
        {98, 16654, {55, 57}},
        {99, 16737, {55, 57}},
        {100, 16820, {55, 57}},
        {101, 16903, {55, 57}},
        {102, 16986, {55, 57}},
        {103, 17069, {55, 57}},
        {104, 17152, {55, 57}},
        {105, 17235, {55, 57}},
        {106, 17318, {55, 57}},
        {107, 17401, {55, 57}},
        {108, 17484, {55, 57}},
        {109, 17567, {55, 57}},
        {110, 17650, {55, 57}},
        {111, 17733, {55, 57}},
        {112, 17816, {55, 57}},
        {113, 17899, {55, 57}},
    };

    GPA_PaddedCounterDesc CLPaddedCounterByGroupGfx9[] = {
        {11, 3150, {292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350}},
        {12, 3501, {491}},
        {41, 9363, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {42, 9645, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {43, 9927, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {44, 10209, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {45, 10491, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {46, 10773, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {47, 11055, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {48, 11337, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {49, 11619, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {50, 11901, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {51, 12183, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {52, 12465, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {53, 12747, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {54, 13029, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {55, 13311, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {56, 13593, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {98, 16654, {77, 78, 79, 80, 81, 82}},
        {99, 16737, {77, 78, 79, 80, 81, 82}},
        {100, 16820, {77, 78, 79, 80, 81, 82}},
        {101, 16903, {77, 78, 79, 80, 81, 82}},
        {102, 16986, {77, 78, 79, 80, 81, 82}},
        {103, 17069, {77, 78, 79, 80, 81, 82}},
        {104, 17152, {77, 78, 79, 80, 81, 82}},
        {105, 17235, {77, 78, 79, 80, 81, 82}},
        {106, 17318, {77, 78, 79, 80, 81, 82}},
        {107, 17401, {77, 78, 79, 80, 81, 82}},
        {108, 17484, {77, 78, 79, 80, 81, 82}},
        {109, 17567, {77, 78, 79, 80, 81, 82}},
        {110, 17650, {77, 78, 79, 80, 81, 82}},
        {111, 17733, {77, 78, 79, 80, 81, 82}},
        {112, 17816, {77, 78, 79, 80, 81, 82}},
        {113, 17899, {77, 78, 79, 80, 81, 82}},
        {114, 17982, {63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94}},
    };

    GPA_SQCounterGroupDesc HWCLSQGroupsGfx9[] = {
        {14, 0, SQ_ALL},
        {15, 0, SQ_ES},
        {16, 0, SQ_GS},
        {17, 0, SQ_VS},
        {18, 0, SQ_PS},
        {19, 0, SQ_LS},
        {20, 0, SQ_HS},
        {21, 0, SQ_CS},
    };


    unsigned int HWCLSQIsolatedGroupsGfx9[] = {
        23, // Ta
        24, // Ta
        25, // Ta
        26, // Ta
        27, // Ta
        28, // Ta
        29, // Ta
        30, // Ta
        31, // Ta
        32, // Ta
        33, // Ta
        34, // Ta
        35, // Ta
        36, // Ta
        37, // Ta
        38, // Ta
        39, // Tca
        40, // Tca
        41, // Tcc
        42, // Tcc
        43, // Tcc
        44, // Tcc
        45, // Tcc
        46, // Tcc
        47, // Tcc
        48, // Tcc
        49, // Tcc
        50, // Tcc
        51, // Tcc
        52, // Tcc
        53, // Tcc
        54, // Tcc
        55, // Tcc
        56, // Tcc
        57, // Td
        58, // Td
        59, // Td
        60, // Td
        61, // Td
        62, // Td
        63, // Td
        64, // Td
        65, // Td
        66, // Td
        67, // Td
        68, // Td
        69, // Td
        70, // Td
        71, // Td
        72, // Td
        73, // Tcp
        74, // Tcp
        75, // Tcp
        76, // Tcp
        77, // Tcp
        78, // Tcp
        79, // Tcp
        80, // Tcp
        81, // Tcp
        82, // Tcp
        83, // Tcp
        84, // Tcp
        85, // Tcp
        86, // Tcp
        87, // Tcp
        88, // Tcp
    };

    const std::set<unsigned int> HWCLTimestampBlockIdsGfx9 =       {}; ///< Timestamp block id's for CL for Gfx9 family
    const std::set<unsigned int> HWCLTimeCounterIndicesGfx9 =      {}; ///< Timestamp counter indices for CL for Gfx9 family
    const unsigned int           HWCLGroupCountGfx9                = sizeof(HWCLGroupsGfx9) / sizeof(GPA_CounterGroupDesc);
    const unsigned int           HWCLExposedCountersGroupCountGfx9 = 87;
    const unsigned int           CLPaddedCounterGroupCountGfx9 = 35;
    const unsigned int           HWCLSQGroupCountGfx9              = sizeof(HWCLSQGroupsGfx9) / sizeof(GPA_SQCounterGroupDesc);
    const unsigned int           HWCLSQIsolatedGroupCountGfx9      = sizeof(HWCLSQIsolatedGroupsGfx9) / sizeof(unsigned int);
}; // namespace
