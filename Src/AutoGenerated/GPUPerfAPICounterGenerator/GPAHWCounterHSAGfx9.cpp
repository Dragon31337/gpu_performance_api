//==============================================================================
// Copyright (c) 2010-2019 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  HSA counter definitions for GFX9
//==============================================================================

#include "GPACounter.h"
#include "GPAHWCounterGfx9.h"
#include "GPAHWExposedCountersGfx9.h"
#include "GPAHWCounterHSAGfx9.h"

// This file is autogenerated by the ConvertHWEnums project

namespace CounterGfx9
{
    GPA_HardwareCounterDesc* HSACounterGroupArrayGfx9[] = {
        CPCcountersGfx9,
        CPFcountersGfx9,
        GDScountersGfx9,
        GRBMcountersGfx9,
        GRBMSE0countersGfx9,
        SPI0countersGfx9,
        SQ0countersGfx9,
        SQ_CS0countersGfx9,
        SX0countersGfx9,
        TA0countersGfx9,
        TA1countersGfx9,
        TA2countersGfx9,
        TA3countersGfx9,
        TA4countersGfx9,
        TA5countersGfx9,
        TA6countersGfx9,
        TA7countersGfx9,
        TA8countersGfx9,
        TA9countersGfx9,
        TA10countersGfx9,
        TA11countersGfx9,
        TA12countersGfx9,
        TA13countersGfx9,
        TA14countersGfx9,
        TA15countersGfx9,
        TCA0countersGfx9,
        TCA1countersGfx9,
        TCC0countersGfx9,
        TCC1countersGfx9,
        TCC2countersGfx9,
        TCC3countersGfx9,
        TCC4countersGfx9,
        TCC5countersGfx9,
        TCC6countersGfx9,
        TCC7countersGfx9,
        TCC8countersGfx9,
        TCC9countersGfx9,
        TCC10countersGfx9,
        TCC11countersGfx9,
        TCC12countersGfx9,
        TCC13countersGfx9,
        TCC14countersGfx9,
        TCC15countersGfx9,
        TCP0countersGfx9,
        TCP1countersGfx9,
        TCP2countersGfx9,
        TCP3countersGfx9,
        TCP4countersGfx9,
        TCP5countersGfx9,
        TCP6countersGfx9,
        TCP7countersGfx9,
        TCP8countersGfx9,
        TCP9countersGfx9,
        TCP10countersGfx9,
        TCP11countersGfx9,
        TCP12countersGfx9,
        TCP13countersGfx9,
        TCP14countersGfx9,
        TCP15countersGfx9,
        TD0countersGfx9,
        TD1countersGfx9,
        TD2countersGfx9,
        TD3countersGfx9,
        TD4countersGfx9,
        TD5countersGfx9,
        TD6countersGfx9,
        TD7countersGfx9,
        TD8countersGfx9,
        TD9countersGfx9,
        TD10countersGfx9,
        TD11countersGfx9,
        TD12countersGfx9,
        TD13countersGfx9,
        TD14countersGfx9,
        TD15countersGfx9,
        MCVML2countersGfx9,
        ATCcountersGfx9,
        ATCL2countersGfx9,
        GCEA0countersGfx9,
        GCEA1countersGfx9,
        GCEA2countersGfx9,
        GCEA3countersGfx9,
        GCEA4countersGfx9,
        GCEA5countersGfx9,
        GCEA6countersGfx9,
        GCEA7countersGfx9,
        GCEA8countersGfx9,
        GCEA9countersGfx9,
        GCEA10countersGfx9,
        GCEA11countersGfx9,
        GCEA12countersGfx9,
        GCEA13countersGfx9,
        GCEA14countersGfx9,
        GCEA15countersGfx9,
        RPBcountersGfx9,
    };

    GPA_HardwareCounterDesc* HSAExposedCountersGroupArrayGfx9[] = {
        CPFExposedCountersGfx9,
        GRBMExposedCountersGfx9,
        SPI0ExposedCountersGfx9,
        SQ0ExposedCountersGfx9,
        SQ_CS0ExposedCountersGfx9,
        SX0ExposedCountersGfx9,
        TA0ExposedCountersGfx9,
        TA1ExposedCountersGfx9,
        TA2ExposedCountersGfx9,
        TA3ExposedCountersGfx9,
        TA4ExposedCountersGfx9,
        TA5ExposedCountersGfx9,
        TA6ExposedCountersGfx9,
        TA7ExposedCountersGfx9,
        TA8ExposedCountersGfx9,
        TA9ExposedCountersGfx9,
        TA10ExposedCountersGfx9,
        TA11ExposedCountersGfx9,
        TA12ExposedCountersGfx9,
        TA13ExposedCountersGfx9,
        TA14ExposedCountersGfx9,
        TA15ExposedCountersGfx9,
        TCC0ExposedCountersGfx9,
        TCC1ExposedCountersGfx9,
        TCC2ExposedCountersGfx9,
        TCC3ExposedCountersGfx9,
        TCC4ExposedCountersGfx9,
        TCC5ExposedCountersGfx9,
        TCC6ExposedCountersGfx9,
        TCC7ExposedCountersGfx9,
        TCC8ExposedCountersGfx9,
        TCC9ExposedCountersGfx9,
        TCC10ExposedCountersGfx9,
        TCC11ExposedCountersGfx9,
        TCC12ExposedCountersGfx9,
        TCC13ExposedCountersGfx9,
        TCC14ExposedCountersGfx9,
        TCC15ExposedCountersGfx9,
        TCP0ExposedCountersGfx9,
        TCP1ExposedCountersGfx9,
        TCP2ExposedCountersGfx9,
        TCP3ExposedCountersGfx9,
        TCP4ExposedCountersGfx9,
        TCP5ExposedCountersGfx9,
        TCP6ExposedCountersGfx9,
        TCP7ExposedCountersGfx9,
        TCP8ExposedCountersGfx9,
        TCP9ExposedCountersGfx9,
        TCP10ExposedCountersGfx9,
        TCP11ExposedCountersGfx9,
        TCP12ExposedCountersGfx9,
        TCP13ExposedCountersGfx9,
        TCP14ExposedCountersGfx9,
        TCP15ExposedCountersGfx9,
        GCEA0ExposedCountersGfx9,
        GCEA1ExposedCountersGfx9,
        GCEA2ExposedCountersGfx9,
        GCEA3ExposedCountersGfx9,
        GCEA4ExposedCountersGfx9,
        GCEA5ExposedCountersGfx9,
        GCEA6ExposedCountersGfx9,
        GCEA7ExposedCountersGfx9,
        GCEA8ExposedCountersGfx9,
        GCEA9ExposedCountersGfx9,
        GCEA10ExposedCountersGfx9,
        GCEA11ExposedCountersGfx9,
        GCEA12ExposedCountersGfx9,
        GCEA13ExposedCountersGfx9,
        GCEA14ExposedCountersGfx9,
        GCEA15ExposedCountersGfx9,
    };

    GPA_CounterGroupDesc HWHSAGroupsGfx9[] = {
        {0, "CPC", 0, 35, 2, 4},
        {1, "CPF", 0, 32, 2, 4},
        {2, "GDS", 0, 121, 4, 4},
        {3, "GRBM", 0, 38, 2, 0},
        {4, "GRBMSE", 0, 16, 4, 0},
        {5, "SPI", 0, 196, 6, 16},
        {6, "SQ", 0, 374, 16, 16},
        {7, "SQ_CS", 0, 374, 16, 16},
        {8, "SX", 0, 208, 4, 8},
        {9, "TA0", 0, 119, 2, 4},
        {10, "TA1", 1, 119, 2, 4},
        {11, "TA2", 2, 119, 2, 4},
        {12, "TA3", 3, 119, 2, 4},
        {13, "TA4", 4, 119, 2, 4},
        {14, "TA5", 5, 119, 2, 4},
        {15, "TA6", 6, 119, 2, 4},
        {16, "TA7", 7, 119, 2, 4},
        {17, "TA8", 8, 119, 2, 4},
        {18, "TA9", 9, 119, 2, 4},
        {19, "TA10", 10, 119, 2, 4},
        {20, "TA11", 11, 119, 2, 4},
        {21, "TA12", 12, 119, 2, 4},
        {22, "TA13", 13, 119, 2, 4},
        {23, "TA14", 14, 119, 2, 4},
        {24, "TA15", 15, 119, 2, 4},
        {25, "TCA0", 0, 35, 4, 8},
        {26, "TCA1", 1, 35, 4, 8},
        {27, "TCC0", 0, 282, 4, 8},
        {28, "TCC1", 1, 282, 4, 8},
        {29, "TCC2", 2, 282, 4, 8},
        {30, "TCC3", 3, 282, 4, 8},
        {31, "TCC4", 4, 282, 4, 8},
        {32, "TCC5", 5, 282, 4, 8},
        {33, "TCC6", 6, 282, 4, 8},
        {34, "TCC7", 7, 282, 4, 8},
        {35, "TCC8", 8, 282, 4, 8},
        {36, "TCC9", 9, 282, 4, 8},
        {37, "TCC10", 10, 282, 4, 8},
        {38, "TCC11", 11, 282, 4, 8},
        {39, "TCC12", 12, 282, 4, 8},
        {40, "TCC13", 13, 282, 4, 8},
        {41, "TCC14", 14, 282, 4, 8},
        {42, "TCC15", 15, 282, 4, 8},
        {43, "TCP0", 0, 85, 4, 6},
        {44, "TCP1", 1, 85, 4, 6},
        {45, "TCP2", 2, 85, 4, 6},
        {46, "TCP3", 3, 85, 4, 6},
        {47, "TCP4", 4, 85, 4, 6},
        {48, "TCP5", 5, 85, 4, 6},
        {49, "TCP6", 6, 85, 4, 6},
        {50, "TCP7", 7, 85, 4, 6},
        {51, "TCP8", 8, 85, 4, 6},
        {52, "TCP9", 9, 85, 4, 6},
        {53, "TCP10", 10, 85, 4, 6},
        {54, "TCP11", 11, 85, 4, 6},
        {55, "TCP12", 12, 85, 4, 6},
        {56, "TCP13", 13, 85, 4, 6},
        {57, "TCP14", 14, 85, 4, 6},
        {58, "TCP15", 15, 85, 4, 6},
        {59, "TD0", 0, 57, 2, 4},
        {60, "TD1", 1, 57, 2, 4},
        {61, "TD2", 2, 57, 2, 4},
        {62, "TD3", 3, 57, 2, 4},
        {63, "TD4", 4, 57, 2, 4},
        {64, "TD5", 5, 57, 2, 4},
        {65, "TD6", 6, 57, 2, 4},
        {66, "TD7", 7, 57, 2, 4},
        {67, "TD8", 8, 57, 2, 4},
        {68, "TD9", 9, 57, 2, 4},
        {69, "TD10", 10, 57, 2, 4},
        {70, "TD11", 11, 57, 2, 4},
        {71, "TD12", 12, 57, 2, 4},
        {72, "TD13", 13, 57, 2, 4},
        {73, "TD14", 14, 57, 2, 4},
        {74, "TD15", 15, 57, 2, 4},
        {75, "MCVML2", 0, 21, 8, 0},
        {76, "ATC", 0, 24, 4, 0},
        {77, "ATCL2", 0, 8, 2, 0},
        {78, "GCEA0", 0, 83, 2, 0},
        {79, "GCEA1", 1, 83, 2, 0},
        {80, "GCEA2", 2, 83, 2, 0},
        {81, "GCEA3", 3, 83, 2, 0},
        {82, "GCEA4", 4, 83, 2, 0},
        {83, "GCEA5", 5, 83, 2, 0},
        {84, "GCEA6", 6, 83, 2, 0},
        {85, "GCEA7", 7, 83, 2, 0},
        {86, "GCEA8", 8, 83, 2, 0},
        {87, "GCEA9", 9, 83, 2, 0},
        {88, "GCEA10", 10, 83, 2, 0},
        {89, "GCEA11", 11, 83, 2, 0},
        {90, "GCEA12", 12, 83, 2, 0},
        {91, "GCEA13", 13, 83, 2, 0},
        {92, "GCEA14", 14, 83, 2, 0},
        {93, "GCEA15", 15, 83, 2, 0},
        {94, "RPB", 0, 95, 4, 0},
    };

    GPA_CounterGroupExposedCounterDesc HWHSAExposedCountersByGroupGfx9[] = {
        {1, 35, {0, 23}},
        {3, 188, {0, 2}},
        {5, 242, {1, 10, 20, 23, 32, 38, 42, 43, 46, 48, 49, 52, 54, 59}},
        {6, 438, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {7, 812, {4, 14, 26, 27, 28, 30, 31, 32, 33, 34, 35, 63, 71, 84, 85, 93}},
        {8, 1186, {12, 14, 17, 19, 22, 24, 27, 29}},
        {9, 1394, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {10, 1513, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {11, 1632, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {12, 1751, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {13, 1870, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {14, 1989, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {15, 2108, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {16, 2227, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {17, 2346, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {18, 2465, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {19, 2584, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {20, 2703, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {21, 2822, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {22, 2941, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {23, 3060, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {24, 3179, {15, 68, 69, 70, 71, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102}},
        {27, 3368, {20, 22, 29, 30, 33, 41, 42}},
        {28, 3650, {20, 22, 29, 30, 33, 41, 42}},
        {29, 3932, {20, 22, 29, 30, 33, 41, 42}},
        {30, 4214, {20, 22, 29, 30, 33, 41, 42}},
        {31, 4496, {20, 22, 29, 30, 33, 41, 42}},
        {32, 4778, {20, 22, 29, 30, 33, 41, 42}},
        {33, 5060, {20, 22, 29, 30, 33, 41, 42}},
        {34, 5342, {20, 22, 29, 30, 33, 41, 42}},
        {35, 5624, {20, 22, 29, 30, 33, 41, 42}},
        {36, 5906, {20, 22, 29, 30, 33, 41, 42}},
        {37, 6188, {20, 22, 29, 30, 33, 41, 42}},
        {38, 6470, {20, 22, 29, 30, 33, 41, 42}},
        {39, 6752, {20, 22, 29, 30, 33, 41, 42}},
        {40, 7034, {20, 22, 29, 30, 33, 41, 42}},
        {41, 7316, {20, 22, 29, 30, 33, 41, 42}},
        {42, 7598, {20, 22, 29, 30, 33, 41, 42}},
        {43, 7880, {6, 60, 69, 70, 71, 72}},
        {44, 7965, {6, 60, 69, 70, 71, 72}},
        {45, 8050, {6, 60, 69, 70, 71, 72}},
        {46, 8135, {6, 60, 69, 70, 71, 72}},
        {47, 8220, {6, 60, 69, 70, 71, 72}},
        {48, 8305, {6, 60, 69, 70, 71, 72}},
        {49, 8390, {6, 60, 69, 70, 71, 72}},
        {50, 8475, {6, 60, 69, 70, 71, 72}},
        {51, 8560, {6, 60, 69, 70, 71, 72}},
        {52, 8645, {6, 60, 69, 70, 71, 72}},
        {53, 8730, {6, 60, 69, 70, 71, 72}},
        {54, 8815, {6, 60, 69, 70, 71, 72}},
        {55, 8900, {6, 60, 69, 70, 71, 72}},
        {56, 8985, {6, 60, 69, 70, 71, 72}},
        {57, 9070, {6, 60, 69, 70, 71, 72}},
        {58, 9155, {6, 60, 69, 70, 71, 72}},
        {78, 10205, {55, 57}},
        {79, 10288, {55, 57}},
        {80, 10371, {55, 57}},
        {81, 10454, {55, 57}},
        {82, 10537, {55, 57}},
        {83, 10620, {55, 57}},
        {84, 10703, {55, 57}},
        {85, 10786, {55, 57}},
        {86, 10869, {55, 57}},
        {87, 10952, {55, 57}},
        {88, 11035, {55, 57}},
        {89, 11118, {55, 57}},
        {90, 11201, {55, 57}},
        {91, 11284, {55, 57}},
        {92, 11367, {55, 57}},
        {93, 11450, {55, 57}},
    };

    GPA_PaddedCounterDesc HSAPaddedCounterByGroupGfx9[] = {
        {27, 3368, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {28, 3650, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {29, 3932, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {30, 4214, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {31, 4496, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {32, 4778, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {33, 5060, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {34, 5342, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {35, 5624, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {36, 5906, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {37, 6188, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {38, 6470, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {39, 6752, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {40, 7034, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {41, 7316, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {42, 7598, {256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281}},
        {78, 10205, {77, 78, 79, 80, 81, 82}},
        {79, 10288, {77, 78, 79, 80, 81, 82}},
        {80, 10371, {77, 78, 79, 80, 81, 82}},
        {81, 10454, {77, 78, 79, 80, 81, 82}},
        {82, 10537, {77, 78, 79, 80, 81, 82}},
        {83, 10620, {77, 78, 79, 80, 81, 82}},
        {84, 10703, {77, 78, 79, 80, 81, 82}},
        {85, 10786, {77, 78, 79, 80, 81, 82}},
        {86, 10869, {77, 78, 79, 80, 81, 82}},
        {87, 10952, {77, 78, 79, 80, 81, 82}},
        {88, 11035, {77, 78, 79, 80, 81, 82}},
        {89, 11118, {77, 78, 79, 80, 81, 82}},
        {90, 11201, {77, 78, 79, 80, 81, 82}},
        {91, 11284, {77, 78, 79, 80, 81, 82}},
        {92, 11367, {77, 78, 79, 80, 81, 82}},
        {93, 11450, {77, 78, 79, 80, 81, 82}},
        {94, 11533, {63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94}},
    };

    GPA_SQCounterGroupDesc HWHSASQGroupsGfx9[] = {
        {6, 0, SQ_ALL},
        {7, 0, SQ_CS},
    };


    unsigned int HWHSASQIsolatedGroupsGfx9[] = {
        9, // Ta
        10, // Ta
        11, // Ta
        12, // Ta
        13, // Ta
        14, // Ta
        15, // Ta
        16, // Ta
        17, // Ta
        18, // Ta
        19, // Ta
        20, // Ta
        21, // Ta
        22, // Ta
        23, // Ta
        24, // Ta
        25, // Tca
        26, // Tca
        27, // Tcc
        28, // Tcc
        29, // Tcc
        30, // Tcc
        31, // Tcc
        32, // Tcc
        33, // Tcc
        34, // Tcc
        35, // Tcc
        36, // Tcc
        37, // Tcc
        38, // Tcc
        39, // Tcc
        40, // Tcc
        41, // Tcc
        42, // Tcc
        43, // Tcp
        44, // Tcp
        45, // Tcp
        46, // Tcp
        47, // Tcp
        48, // Tcp
        49, // Tcp
        50, // Tcp
        51, // Tcp
        52, // Tcp
        53, // Tcp
        54, // Tcp
        55, // Tcp
        56, // Tcp
        57, // Tcp
        58, // Tcp
        59, // Td
        60, // Td
        61, // Td
        62, // Td
        63, // Td
        64, // Td
        65, // Td
        66, // Td
        67, // Td
        68, // Td
        69, // Td
        70, // Td
        71, // Td
        72, // Td
        73, // Td
        74, // Td
    };

    const std::set<unsigned int> HWHSATimestampBlockIdsGfx9 =       {}; ///< Timestamp block id's for HSA for Gfx9 family
    const std::set<unsigned int> HWHSATimeCounterIndicesGfx9 =      {}; ///< Timestamp counter indices for HSA for Gfx9 family
    const unsigned int           HWHSAGroupCountGfx9                = sizeof(HWHSAGroupsGfx9) / sizeof(GPA_CounterGroupDesc);
    const unsigned int           HWHSAExposedCountersGroupCountGfx9 = 70;
    const unsigned int           HSAPaddedCounterGroupCountGfx9 = 33;
    const unsigned int           HWHSASQGroupCountGfx9              = sizeof(HWHSASQGroupsGfx9) / sizeof(GPA_SQCounterGroupDesc);
    const unsigned int           HWHSASQIsolatedGroupCountGfx9      = sizeof(HWHSASQIsolatedGroupsGfx9) / sizeof(unsigned int);
}; // namespace
