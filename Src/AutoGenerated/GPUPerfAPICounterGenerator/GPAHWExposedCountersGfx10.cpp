//==============================================================================
// Copyright (c) 2019 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  GPA hardware exposed counter info for GFX10
//==============================================================================

// This file is autogenerated by the ConvertHWEnums project

#include "GPACounter.h"
#include "GPUPerfAPITypes.h"

namespace CounterGfx10
{

    GPA_HardwareCounterDesc CPFExposedCountersGfx10[] = {
    {0, "CPF_PERF_SEL_ALWAYS_COUNT", "CPF", "Always Count.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "CPF_PERF_SEL_CPF_STAT_BUSY", "CPF", "CPF Busy.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GRBMExposedCountersGfx10[] = {
    {0, "GRBM_PERF_SEL_COUNT", "GRBM", "Tie High - Count Number of Clocks", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {2, "GRBM_PERF_SEL_GUI_ACTIVE", "GRBM", "The GUI is Active", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GEExposedCountersGfx10[] = {
    {211, "GE_SPI_ESVERT_VALID", "GE", "number of valid ES verts", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {221, "GE_SPI_GSPRIM_VALID", "GE", "number of valid GS prims", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {227, "GE_SPI_HSVERT_VALID", "GE", "HS Vert is valid. Sensitive to PERF_SEID_IGNORE_MASK", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {233, "GE_SPI_LSVERT_VALID", "GE", "LS Vert is valid. Sensitive to PERF_SEID_IGNORE_MASK", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {275, "GE_SPI_VSVERT_VALID", "GE", "number of valid VS verts", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU0ExposedCountersGfx10[] = {
    {8, "PA_SU0_PERF_PAPC_PA_INPUT_PRIM", "PA_SU0", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU0_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU0", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU0_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU0", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU0_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU0", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU0_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU0", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU0_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU0", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU0_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU0", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU0_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU0", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU0_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU0", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU0_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU0", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU0_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU0", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU0_PERF_PAPC_CLIP_BUSY", "PA_SU0", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU0_PERF_PAPC_SU_STALLED_SC", "PA_SU0", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU1ExposedCountersGfx10[] = {
    {8, "PA_SU1_PERF_PAPC_PA_INPUT_PRIM", "PA_SU1", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU1_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU1", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU1_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU1", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU1_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU1", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU1_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU1", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU1_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU1", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU1_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU1", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU1_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU1", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU1_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU1", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU1_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU1", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU1_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU1", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU1_PERF_PAPC_CLIP_BUSY", "PA_SU1", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU1_PERF_PAPC_SU_STALLED_SC", "PA_SU1", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU2ExposedCountersGfx10[] = {
    {8, "PA_SU2_PERF_PAPC_PA_INPUT_PRIM", "PA_SU2", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU2_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU2", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU2_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU2", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU2_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU2", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU2_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU2", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU2_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU2", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU2_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU2", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU2_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU2", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU2_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU2", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU2_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU2", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU2_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU2", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU2_PERF_PAPC_CLIP_BUSY", "PA_SU2", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU2_PERF_PAPC_SU_STALLED_SC", "PA_SU2", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU3ExposedCountersGfx10[] = {
    {8, "PA_SU3_PERF_PAPC_PA_INPUT_PRIM", "PA_SU3", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU3_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU3", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU3_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU3", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU3_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU3", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU3_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU3", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU3_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU3", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU3_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU3", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU3_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU3", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU3_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU3", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU3_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU3", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU3_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU3", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU3_PERF_PAPC_CLIP_BUSY", "PA_SU3", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU3_PERF_PAPC_SU_STALLED_SC", "PA_SU3", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU4ExposedCountersGfx10[] = {
    {8, "PA_SU4_PERF_PAPC_PA_INPUT_PRIM", "PA_SU4", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU4_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU4", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU4_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU4", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU4_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU4", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU4_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU4", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU4_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU4", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU4_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU4", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU4_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU4", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU4_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU4", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU4_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU4", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU4_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU4", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU4_PERF_PAPC_CLIP_BUSY", "PA_SU4", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU4_PERF_PAPC_SU_STALLED_SC", "PA_SU4", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU5ExposedCountersGfx10[] = {
    {8, "PA_SU5_PERF_PAPC_PA_INPUT_PRIM", "PA_SU5", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU5_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU5", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU5_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU5", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU5_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU5", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU5_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU5", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU5_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU5", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU5_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU5", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU5_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU5", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU5_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU5", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU5_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU5", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU5_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU5", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU5_PERF_PAPC_CLIP_BUSY", "PA_SU5", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU5_PERF_PAPC_SU_STALLED_SC", "PA_SU5", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU6ExposedCountersGfx10[] = {
    {8, "PA_SU6_PERF_PAPC_PA_INPUT_PRIM", "PA_SU6", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU6_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU6", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU6_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU6", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU6_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU6", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU6_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU6", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU6_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU6", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU6_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU6", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU6_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU6", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU6_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU6", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU6_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU6", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU6_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU6", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU6_PERF_PAPC_CLIP_BUSY", "PA_SU6", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU6_PERF_PAPC_SU_STALLED_SC", "PA_SU6", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SU7ExposedCountersGfx10[] = {
    {8, "PA_SU7_PERF_PAPC_PA_INPUT_PRIM", "PA_SU7", "PERF_PAPC_PA_INPUT_PRIM Number of Primitives input to PA; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "PA_SU7_PERF_PAPC_CLPR_CULL_PRIM", "PA_SU7", "PERF_PAPC_CLPR_CULL_PRIM Number of Prims Culled by Clipper for VV, UCP, VTX_KILL, VTX_NAN; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; combined with _CLPR_VVUCP_CULL_PRIM , _CLPR_VV_CULL_PRIM, _VV_CULL_PRIM ,_UCP_CULL_PRIM, _VTX_KILL_CULL_PRIM, _VTX_NAN_CULL_PRIM", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "PA_SU7_PERF_PAPC_CLPR_VVUCP_CLIP_PRIM", "PA_SU7", "PERF_PAPC_CLPR_VVUCP_CLIP_PRIM Number of Prims Clipped by Clipper for VV and/or UCP; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {54, "PA_SU7_PERF_PAPC_SU_ZERO_AREA_CULL_PRIM", "PA_SU7", "PERF_PAPC_SU_ZERO_AREA_CULL_PRIM Number of primitives culled due to zero area; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "PA_SU7_PERF_PAPC_SU_BACK_FACE_CULL_PRIM", "PA_SU7", "PERF_PAPC_SU_BACK_FACE_CULL_PRIM Number of back-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {56, "PA_SU7_PERF_PAPC_SU_FRONT_FACE_CULL_PRIM", "PA_SU7", "PERF_PAPC_SU_FRONT_FACE_CULL_PRIM Number of front-face primitives culled due to facedness; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "PA_SU7_PERF_PAPC_SU_POLYMODE_FACE_CULL", "PA_SU7", "PERF_PAPC_SU_POLYMODE_FACE_CULL Number of polymode cull-determination primitives culled; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "PA_SU7_PERF_PAPC_SU_OUTPUT_PRIM", "PA_SU7", "PERF_PAPC_SU_OUTPUT_PRIM Number of primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "PA_SU7_PERF_PAPC_SU_OUTPUT_CLIP_PRIM", "PA_SU7", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM Number of clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {73, "PA_SU7_PERF_PAPC_SU_OUTPUT_PRIM_DUAL", "PA_SU7", "PERF_PAPC_SU_OUTPUT_PRIM_DUAL Number of dual gradient primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {74, "PA_SU7_PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL", "PA_SU7", "PERF_PAPC_SU_OUTPUT_CLIP_PRIM_DUAL Number of dual gradient clipped primitives output from the Setup block; increment rate-one per clock ; range-1/clk;it does not indicate bad performance; no bottleneck detection;all instances report the same result; no combinations", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {105, "PA_SU7_PERF_PAPC_CLIP_BUSY", "PA_SU7", "PERF_PAPC_CLIP_BUSY Number of clocks Clip is Busy; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result; can be used to detect bottlenecks in combination with other signals", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {109, "PA_SU7_PERF_PAPC_SU_STALLED_SC", "PA_SU7", "PERF_PAPC_SU_STALLED_SC Number of clocks Setup is stalled by SC; range-1/clk;it can potentially be used to detect bad performance;all instances report the same result", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC0ExposedCountersGfx10[] = {
    {159, "PA_SC0_QZ0_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC0_QZ1_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC0_QZ2_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC0_QZ3_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC0_P0_HIZ_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC0_P1_HIZ_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC0_P2_HIZ_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC0_P3_HIZ_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC0_EARLYZ_QUAD_COUNT", "PA_SC0", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC1ExposedCountersGfx10[] = {
    {159, "PA_SC1_QZ0_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC1_QZ1_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC1_QZ2_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC1_QZ3_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC1_P0_HIZ_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC1_P1_HIZ_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC1_P2_HIZ_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC1_P3_HIZ_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC1_EARLYZ_QUAD_COUNT", "PA_SC1", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC2ExposedCountersGfx10[] = {
    {159, "PA_SC2_QZ0_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC2_QZ1_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC2_QZ2_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC2_QZ3_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC2_P0_HIZ_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC2_P1_HIZ_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC2_P2_HIZ_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC2_P3_HIZ_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC2_EARLYZ_QUAD_COUNT", "PA_SC2", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC3ExposedCountersGfx10[] = {
    {159, "PA_SC3_QZ0_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC3_QZ1_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC3_QZ2_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC3_QZ3_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC3_P0_HIZ_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC3_P1_HIZ_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC3_P2_HIZ_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC3_P3_HIZ_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC3_EARLYZ_QUAD_COUNT", "PA_SC3", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC4ExposedCountersGfx10[] = {
    {159, "PA_SC4_QZ0_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC4_QZ1_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC4_QZ2_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC4_QZ3_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC4_P0_HIZ_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC4_P1_HIZ_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC4_P2_HIZ_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC4_P3_HIZ_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC4_EARLYZ_QUAD_COUNT", "PA_SC4", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC5ExposedCountersGfx10[] = {
    {159, "PA_SC5_QZ0_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC5_QZ1_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC5_QZ2_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC5_QZ3_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC5_P0_HIZ_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC5_P1_HIZ_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC5_P2_HIZ_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC5_P3_HIZ_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC5_EARLYZ_QUAD_COUNT", "PA_SC5", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC6ExposedCountersGfx10[] = {
    {159, "PA_SC6_QZ0_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC6_QZ1_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC6_QZ2_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC6_QZ3_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC6_P0_HIZ_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC6_P1_HIZ_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC6_P2_HIZ_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC6_P3_HIZ_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC6_EARLYZ_QUAD_COUNT", "PA_SC6", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC7ExposedCountersGfx10[] = {
    {159, "PA_SC7_QZ0_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC7_QZ1_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC7_QZ2_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC7_QZ3_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC7_P0_HIZ_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC7_P1_HIZ_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC7_P2_HIZ_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC7_P3_HIZ_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC7_EARLYZ_QUAD_COUNT", "PA_SC7", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC8ExposedCountersGfx10[] = {
    {159, "PA_SC8_QZ0_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC8_QZ1_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC8_QZ2_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC8_QZ3_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC8_P0_HIZ_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC8_P1_HIZ_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC8_P2_HIZ_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC8_P3_HIZ_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC8_EARLYZ_QUAD_COUNT", "PA_SC8", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC9ExposedCountersGfx10[] = {
    {159, "PA_SC9_QZ0_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC9_QZ1_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC9_QZ2_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC9_QZ3_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC9_P0_HIZ_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC9_P1_HIZ_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC9_P2_HIZ_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC9_P3_HIZ_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC9_EARLYZ_QUAD_COUNT", "PA_SC9", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC10ExposedCountersGfx10[] = {
    {159, "PA_SC10_QZ0_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC10_QZ1_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC10_QZ2_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC10_QZ3_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC10_P0_HIZ_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC10_P1_HIZ_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC10_P2_HIZ_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC10_P3_HIZ_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC10_EARLYZ_QUAD_COUNT", "PA_SC10", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC11ExposedCountersGfx10[] = {
    {159, "PA_SC11_QZ0_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC11_QZ1_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC11_QZ2_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC11_QZ3_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC11_P0_HIZ_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC11_P1_HIZ_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC11_P2_HIZ_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC11_P3_HIZ_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC11_EARLYZ_QUAD_COUNT", "PA_SC11", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC12ExposedCountersGfx10[] = {
    {159, "PA_SC12_QZ0_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC12_QZ1_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC12_QZ2_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC12_QZ3_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC12_P0_HIZ_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC12_P1_HIZ_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC12_P2_HIZ_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC12_P3_HIZ_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC12_EARLYZ_QUAD_COUNT", "PA_SC12", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC13ExposedCountersGfx10[] = {
    {159, "PA_SC13_QZ0_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC13_QZ1_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC13_QZ2_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC13_QZ3_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC13_P0_HIZ_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC13_P1_HIZ_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC13_P2_HIZ_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC13_P3_HIZ_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC13_EARLYZ_QUAD_COUNT", "PA_SC13", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC14ExposedCountersGfx10[] = {
    {159, "PA_SC14_QZ0_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC14_QZ1_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC14_QZ2_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC14_QZ3_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC14_P0_HIZ_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC14_P1_HIZ_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC14_P2_HIZ_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC14_P3_HIZ_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC14_EARLYZ_QUAD_COUNT", "PA_SC14", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc PA_SC15ExposedCountersGfx10[] = {
    {159, "PA_SC15_QZ0_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_QZ0_QUAD_COUNT quad count; quad-z pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {160, "PA_SC15_QZ1_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_QZ1_QUAD_COUNT quad count; quad-z pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {161, "PA_SC15_QZ2_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_QZ2_QUAD_COUNT quad count; quad-z pipe 2 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "PA_SC15_QZ3_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_QZ3_QUAD_COUNT quad count; quad-z pipe 3 DEPRECATED (NUM_DB_PER_PACKER=4 variants only)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {235, "PA_SC15_P0_HIZ_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_P0_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 0 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {236, "PA_SC15_P1_HIZ_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_P1_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 1 ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {237, "PA_SC15_P2_HIZ_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_P2_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 2 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {238, "PA_SC15_P3_HIZ_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_P3_HIZ_QUAD_COUNT total quads surviving hi-z; db pipe 3 (DEPRECATED only valid for NUM_DB_PER_PACKER=4)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "PA_SC15_EARLYZ_QUAD_COUNT", "PA_SC15", "SC_PERF_SEL_EARLYZ_QUAD_COUNT total quads surviving early-z ;", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SPI0ExposedCountersGfx10[] = {
    {1, "SPI0_PERF_VS_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {9, "SPI0_PERF_VS_WAVE", "SPI0", "Number of waves", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "SPI0_PERF_GS_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "SPI0_PERF_GS_WAVE", "SPI0", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {34, "SPI0_PERF_HS_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {41, "SPI0_PERF_HS_WAVE", "SPI0", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {45, "SPI0_PERF_CSGN_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "SPI0_PERF_CSGN_NUM_THREADGROUPS", "SPI0", "Number of threadgroups launched,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {49, "SPI0_PERF_CSGN_WAVE", "SPI0", "Number of waves,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {51, "SPI0_PERF_CSN_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {52, "SPI0_PERF_CSN_NUM_THREADGROUPS", "SPI0", "Number of threadgroups launched.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SPI0_PERF_CSN_WAVE", "SPI0", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SPI0_PERF_PS0_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH) , PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SPI0_PERF_PS1_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH) , PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "SPI0_PERF_PS2_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH) , PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "SPI0_PERF_PS3_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH) , PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {80, "SPI0_PERF_PS0_WAVE", "SPI0", "Number of waves ,PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {81, "SPI0_PERF_PS1_WAVE", "SPI0", "Number of waves ,PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SPI0_PERF_PS2_WAVE", "SPI0", "Number of waves ,PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {83, "SPI0_PERF_PS3_WAVE", "SPI0", "Number of waves ,PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {308, "SPI0_PERF_ES_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {314, "SPI0_PERF_ES_WAVE", "SPI0", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {320, "SPI0_PERF_LS_BUSY", "SPI0", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {326, "SPI0_PERF_LS_WAVE", "SPI0", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SPI1ExposedCountersGfx10[] = {
    {1, "SPI1_PERF_VS_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {9, "SPI1_PERF_VS_WAVE", "SPI1", "Number of waves", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "SPI1_PERF_GS_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "SPI1_PERF_GS_WAVE", "SPI1", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {34, "SPI1_PERF_HS_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {41, "SPI1_PERF_HS_WAVE", "SPI1", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {45, "SPI1_PERF_CSGN_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "SPI1_PERF_CSGN_NUM_THREADGROUPS", "SPI1", "Number of threadgroups launched,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {49, "SPI1_PERF_CSGN_WAVE", "SPI1", "Number of waves,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {51, "SPI1_PERF_CSN_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {52, "SPI1_PERF_CSN_NUM_THREADGROUPS", "SPI1", "Number of threadgroups launched.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SPI1_PERF_CSN_WAVE", "SPI1", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SPI1_PERF_PS0_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH) , PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SPI1_PERF_PS1_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH) , PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "SPI1_PERF_PS2_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH) , PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "SPI1_PERF_PS3_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH) , PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {80, "SPI1_PERF_PS0_WAVE", "SPI1", "Number of waves ,PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {81, "SPI1_PERF_PS1_WAVE", "SPI1", "Number of waves ,PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SPI1_PERF_PS2_WAVE", "SPI1", "Number of waves ,PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {83, "SPI1_PERF_PS3_WAVE", "SPI1", "Number of waves ,PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {308, "SPI1_PERF_ES_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {314, "SPI1_PERF_ES_WAVE", "SPI1", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {320, "SPI1_PERF_LS_BUSY", "SPI1", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {326, "SPI1_PERF_LS_WAVE", "SPI1", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SPI2ExposedCountersGfx10[] = {
    {1, "SPI2_PERF_VS_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {9, "SPI2_PERF_VS_WAVE", "SPI2", "Number of waves", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "SPI2_PERF_GS_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "SPI2_PERF_GS_WAVE", "SPI2", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {34, "SPI2_PERF_HS_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {41, "SPI2_PERF_HS_WAVE", "SPI2", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {45, "SPI2_PERF_CSGN_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "SPI2_PERF_CSGN_NUM_THREADGROUPS", "SPI2", "Number of threadgroups launched,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {49, "SPI2_PERF_CSGN_WAVE", "SPI2", "Number of waves,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {51, "SPI2_PERF_CSN_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {52, "SPI2_PERF_CSN_NUM_THREADGROUPS", "SPI2", "Number of threadgroups launched.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SPI2_PERF_CSN_WAVE", "SPI2", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SPI2_PERF_PS0_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH) , PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SPI2_PERF_PS1_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH) , PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "SPI2_PERF_PS2_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH) , PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "SPI2_PERF_PS3_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH) , PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {80, "SPI2_PERF_PS0_WAVE", "SPI2", "Number of waves ,PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {81, "SPI2_PERF_PS1_WAVE", "SPI2", "Number of waves ,PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SPI2_PERF_PS2_WAVE", "SPI2", "Number of waves ,PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {83, "SPI2_PERF_PS3_WAVE", "SPI2", "Number of waves ,PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {308, "SPI2_PERF_ES_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {314, "SPI2_PERF_ES_WAVE", "SPI2", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {320, "SPI2_PERF_LS_BUSY", "SPI2", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {326, "SPI2_PERF_LS_WAVE", "SPI2", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SPI3ExposedCountersGfx10[] = {
    {1, "SPI3_PERF_VS_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {9, "SPI3_PERF_VS_WAVE", "SPI3", "Number of waves", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "SPI3_PERF_GS_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {21, "SPI3_PERF_GS_WAVE", "SPI3", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {34, "SPI3_PERF_HS_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {41, "SPI3_PERF_HS_WAVE", "SPI3", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {45, "SPI3_PERF_CSGN_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "SPI3_PERF_CSGN_NUM_THREADGROUPS", "SPI3", "Number of threadgroups launched,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {49, "SPI3_PERF_CSGN_WAVE", "SPI3", "Number of waves,", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {51, "SPI3_PERF_CSN_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {52, "SPI3_PERF_CSN_NUM_THREADGROUPS", "SPI3", "Number of threadgroups launched.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SPI3_PERF_CSN_WAVE", "SPI3", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SPI3_PERF_PS0_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH) , PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SPI3_PERF_PS1_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH) , PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {62, "SPI3_PERF_PS2_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH) , PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "SPI3_PERF_PS3_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH) , PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {80, "SPI3_PERF_PS0_WAVE", "SPI3", "Number of waves ,PACKER0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {81, "SPI3_PERF_PS1_WAVE", "SPI3", "Number of waves ,PACKER1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SPI3_PERF_PS2_WAVE", "SPI3", "Number of waves ,PACKER2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {83, "SPI3_PERF_PS3_WAVE", "SPI3", "Number of waves ,PACKER3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {308, "SPI3_PERF_ES_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {314, "SPI3_PERF_ES_WAVE", "SPI3", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {320, "SPI3_PERF_LS_BUSY", "SPI3", "Number of clocks with outstanding waves (SPI or SH).", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {326, "SPI3_PERF_LS_WAVE", "SPI3", "Number of waves.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ0ExposedCountersGfx10[] = {
    {4, "SQ0_PERF_SEL_WAVES", "SQ0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ0_PERF_SEL_WAVES_32", "SQ0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ0_PERF_SEL_ITEMS", "SQ0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ0_PERF_SEL_WAIT_INST_LDS", "SQ0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ0_PERF_SEL_INSTS_GDS", "SQ0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ0_PERF_SEL_INSTS_FLAT", "SQ0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ0_PERF_SEL_INSTS_LDS", "SQ0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ0_PERF_SEL_INSTS_SALU", "SQ0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ0_PERF_SEL_INSTS_SMEM", "SQ0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ0_PERF_SEL_INSTS_VALU", "SQ0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ0_PERF_SEL_INSTS_TEX_LOAD", "SQ0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ0_PERF_SEL_INSTS_TEX_STORE", "SQ0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ0_PERF_SEL_ITEM_CYCLES_VALU", "SQ0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ0_PERF_SEL_INST_CYCLES_VALU", "SQ0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ1ExposedCountersGfx10[] = {
    {4, "SQ1_PERF_SEL_WAVES", "SQ1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ1_PERF_SEL_WAVES_32", "SQ1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ1_PERF_SEL_ITEMS", "SQ1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ1_PERF_SEL_WAIT_INST_LDS", "SQ1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ1_PERF_SEL_INSTS_GDS", "SQ1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ1_PERF_SEL_INSTS_FLAT", "SQ1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ1_PERF_SEL_INSTS_LDS", "SQ1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ1_PERF_SEL_INSTS_SALU", "SQ1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ1_PERF_SEL_INSTS_SMEM", "SQ1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ1_PERF_SEL_INSTS_VALU", "SQ1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ1_PERF_SEL_INSTS_TEX_LOAD", "SQ1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ1_PERF_SEL_INSTS_TEX_STORE", "SQ1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ1_PERF_SEL_ITEM_CYCLES_VALU", "SQ1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ1_PERF_SEL_INST_CYCLES_VALU", "SQ1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ2ExposedCountersGfx10[] = {
    {4, "SQ2_PERF_SEL_WAVES", "SQ2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ2_PERF_SEL_WAVES_32", "SQ2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ2_PERF_SEL_ITEMS", "SQ2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ2_PERF_SEL_WAIT_INST_LDS", "SQ2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ2_PERF_SEL_INSTS_GDS", "SQ2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ2_PERF_SEL_INSTS_FLAT", "SQ2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ2_PERF_SEL_INSTS_LDS", "SQ2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ2_PERF_SEL_INSTS_SALU", "SQ2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ2_PERF_SEL_INSTS_SMEM", "SQ2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ2_PERF_SEL_INSTS_VALU", "SQ2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ2_PERF_SEL_INSTS_TEX_LOAD", "SQ2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ2_PERF_SEL_INSTS_TEX_STORE", "SQ2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ2_PERF_SEL_ITEM_CYCLES_VALU", "SQ2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ2_PERF_SEL_INST_CYCLES_VALU", "SQ2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ3ExposedCountersGfx10[] = {
    {4, "SQ3_PERF_SEL_WAVES", "SQ3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ3_PERF_SEL_WAVES_32", "SQ3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ3_PERF_SEL_ITEMS", "SQ3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ3_PERF_SEL_WAIT_INST_LDS", "SQ3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ3_PERF_SEL_INSTS_GDS", "SQ3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ3_PERF_SEL_INSTS_FLAT", "SQ3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ3_PERF_SEL_INSTS_LDS", "SQ3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ3_PERF_SEL_INSTS_SALU", "SQ3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ3_PERF_SEL_INSTS_SMEM", "SQ3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ3_PERF_SEL_INSTS_VALU", "SQ3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ3_PERF_SEL_INSTS_TEX_LOAD", "SQ3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ3_PERF_SEL_INSTS_TEX_STORE", "SQ3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ3_PERF_SEL_ITEM_CYCLES_VALU", "SQ3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ3_PERF_SEL_INST_CYCLES_VALU", "SQ3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_ES0ExposedCountersGfx10[] = {
    {4, "SQ_ES0_PERF_SEL_WAVES", "SQ_ES0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_ES0_PERF_SEL_WAVES_32", "SQ_ES0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_ES0_PERF_SEL_ITEMS", "SQ_ES0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_ES0_PERF_SEL_WAIT_INST_LDS", "SQ_ES0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_ES0_PERF_SEL_INSTS_GDS", "SQ_ES0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_ES0_PERF_SEL_INSTS_FLAT", "SQ_ES0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_ES0_PERF_SEL_INSTS_LDS", "SQ_ES0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_ES0_PERF_SEL_INSTS_SALU", "SQ_ES0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_ES0_PERF_SEL_INSTS_SMEM", "SQ_ES0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_ES0_PERF_SEL_INSTS_VALU", "SQ_ES0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_ES0_PERF_SEL_INSTS_TEX_LOAD", "SQ_ES0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_ES0_PERF_SEL_INSTS_TEX_STORE", "SQ_ES0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_ES0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_ES0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_ES0_PERF_SEL_INST_CYCLES_VALU", "SQ_ES0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_ES0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_ES0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_ES1ExposedCountersGfx10[] = {
    {4, "SQ_ES1_PERF_SEL_WAVES", "SQ_ES1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_ES1_PERF_SEL_WAVES_32", "SQ_ES1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_ES1_PERF_SEL_ITEMS", "SQ_ES1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_ES1_PERF_SEL_WAIT_INST_LDS", "SQ_ES1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_ES1_PERF_SEL_INSTS_GDS", "SQ_ES1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_ES1_PERF_SEL_INSTS_FLAT", "SQ_ES1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_ES1_PERF_SEL_INSTS_LDS", "SQ_ES1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_ES1_PERF_SEL_INSTS_SALU", "SQ_ES1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_ES1_PERF_SEL_INSTS_SMEM", "SQ_ES1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_ES1_PERF_SEL_INSTS_VALU", "SQ_ES1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_ES1_PERF_SEL_INSTS_TEX_LOAD", "SQ_ES1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_ES1_PERF_SEL_INSTS_TEX_STORE", "SQ_ES1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_ES1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_ES1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_ES1_PERF_SEL_INST_CYCLES_VALU", "SQ_ES1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_ES1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_ES1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_ES2ExposedCountersGfx10[] = {
    {4, "SQ_ES2_PERF_SEL_WAVES", "SQ_ES2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_ES2_PERF_SEL_WAVES_32", "SQ_ES2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_ES2_PERF_SEL_ITEMS", "SQ_ES2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_ES2_PERF_SEL_WAIT_INST_LDS", "SQ_ES2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_ES2_PERF_SEL_INSTS_GDS", "SQ_ES2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_ES2_PERF_SEL_INSTS_FLAT", "SQ_ES2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_ES2_PERF_SEL_INSTS_LDS", "SQ_ES2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_ES2_PERF_SEL_INSTS_SALU", "SQ_ES2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_ES2_PERF_SEL_INSTS_SMEM", "SQ_ES2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_ES2_PERF_SEL_INSTS_VALU", "SQ_ES2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_ES2_PERF_SEL_INSTS_TEX_LOAD", "SQ_ES2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_ES2_PERF_SEL_INSTS_TEX_STORE", "SQ_ES2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_ES2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_ES2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_ES2_PERF_SEL_INST_CYCLES_VALU", "SQ_ES2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_ES2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_ES2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_ES3ExposedCountersGfx10[] = {
    {4, "SQ_ES3_PERF_SEL_WAVES", "SQ_ES3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_ES3_PERF_SEL_WAVES_32", "SQ_ES3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_ES3_PERF_SEL_ITEMS", "SQ_ES3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_ES3_PERF_SEL_WAIT_INST_LDS", "SQ_ES3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_ES3_PERF_SEL_INSTS_GDS", "SQ_ES3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_ES3_PERF_SEL_INSTS_FLAT", "SQ_ES3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_ES3_PERF_SEL_INSTS_LDS", "SQ_ES3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_ES3_PERF_SEL_INSTS_SALU", "SQ_ES3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_ES3_PERF_SEL_INSTS_SMEM", "SQ_ES3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_ES3_PERF_SEL_INSTS_VALU", "SQ_ES3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_ES3_PERF_SEL_INSTS_TEX_LOAD", "SQ_ES3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_ES3_PERF_SEL_INSTS_TEX_STORE", "SQ_ES3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_ES3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_ES3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_ES3_PERF_SEL_INST_CYCLES_VALU", "SQ_ES3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_ES3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_ES3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_GS0ExposedCountersGfx10[] = {
    {4, "SQ_GS0_PERF_SEL_WAVES", "SQ_GS0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_GS0_PERF_SEL_WAVES_32", "SQ_GS0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_GS0_PERF_SEL_ITEMS", "SQ_GS0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_GS0_PERF_SEL_WAIT_INST_LDS", "SQ_GS0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_GS0_PERF_SEL_INSTS_GDS", "SQ_GS0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_GS0_PERF_SEL_INSTS_FLAT", "SQ_GS0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_GS0_PERF_SEL_INSTS_LDS", "SQ_GS0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_GS0_PERF_SEL_INSTS_SALU", "SQ_GS0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_GS0_PERF_SEL_INSTS_SMEM", "SQ_GS0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_GS0_PERF_SEL_INSTS_VALU", "SQ_GS0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_GS0_PERF_SEL_INSTS_TEX_LOAD", "SQ_GS0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_GS0_PERF_SEL_INSTS_TEX_STORE", "SQ_GS0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_GS0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_GS0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_GS0_PERF_SEL_INST_CYCLES_VALU", "SQ_GS0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_GS0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_GS0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_GS1ExposedCountersGfx10[] = {
    {4, "SQ_GS1_PERF_SEL_WAVES", "SQ_GS1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_GS1_PERF_SEL_WAVES_32", "SQ_GS1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_GS1_PERF_SEL_ITEMS", "SQ_GS1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_GS1_PERF_SEL_WAIT_INST_LDS", "SQ_GS1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_GS1_PERF_SEL_INSTS_GDS", "SQ_GS1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_GS1_PERF_SEL_INSTS_FLAT", "SQ_GS1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_GS1_PERF_SEL_INSTS_LDS", "SQ_GS1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_GS1_PERF_SEL_INSTS_SALU", "SQ_GS1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_GS1_PERF_SEL_INSTS_SMEM", "SQ_GS1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_GS1_PERF_SEL_INSTS_VALU", "SQ_GS1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_GS1_PERF_SEL_INSTS_TEX_LOAD", "SQ_GS1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_GS1_PERF_SEL_INSTS_TEX_STORE", "SQ_GS1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_GS1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_GS1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_GS1_PERF_SEL_INST_CYCLES_VALU", "SQ_GS1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_GS1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_GS1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_GS2ExposedCountersGfx10[] = {
    {4, "SQ_GS2_PERF_SEL_WAVES", "SQ_GS2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_GS2_PERF_SEL_WAVES_32", "SQ_GS2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_GS2_PERF_SEL_ITEMS", "SQ_GS2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_GS2_PERF_SEL_WAIT_INST_LDS", "SQ_GS2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_GS2_PERF_SEL_INSTS_GDS", "SQ_GS2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_GS2_PERF_SEL_INSTS_FLAT", "SQ_GS2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_GS2_PERF_SEL_INSTS_LDS", "SQ_GS2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_GS2_PERF_SEL_INSTS_SALU", "SQ_GS2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_GS2_PERF_SEL_INSTS_SMEM", "SQ_GS2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_GS2_PERF_SEL_INSTS_VALU", "SQ_GS2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_GS2_PERF_SEL_INSTS_TEX_LOAD", "SQ_GS2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_GS2_PERF_SEL_INSTS_TEX_STORE", "SQ_GS2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_GS2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_GS2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_GS2_PERF_SEL_INST_CYCLES_VALU", "SQ_GS2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_GS2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_GS2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_GS3ExposedCountersGfx10[] = {
    {4, "SQ_GS3_PERF_SEL_WAVES", "SQ_GS3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_GS3_PERF_SEL_WAVES_32", "SQ_GS3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_GS3_PERF_SEL_ITEMS", "SQ_GS3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_GS3_PERF_SEL_WAIT_INST_LDS", "SQ_GS3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_GS3_PERF_SEL_INSTS_GDS", "SQ_GS3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_GS3_PERF_SEL_INSTS_FLAT", "SQ_GS3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_GS3_PERF_SEL_INSTS_LDS", "SQ_GS3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_GS3_PERF_SEL_INSTS_SALU", "SQ_GS3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_GS3_PERF_SEL_INSTS_SMEM", "SQ_GS3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_GS3_PERF_SEL_INSTS_VALU", "SQ_GS3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_GS3_PERF_SEL_INSTS_TEX_LOAD", "SQ_GS3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_GS3_PERF_SEL_INSTS_TEX_STORE", "SQ_GS3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_GS3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_GS3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_GS3_PERF_SEL_INST_CYCLES_VALU", "SQ_GS3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_GS3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_GS3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_VS0ExposedCountersGfx10[] = {
    {4, "SQ_VS0_PERF_SEL_WAVES", "SQ_VS0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_VS0_PERF_SEL_WAVES_32", "SQ_VS0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_VS0_PERF_SEL_ITEMS", "SQ_VS0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_VS0_PERF_SEL_WAIT_INST_LDS", "SQ_VS0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_VS0_PERF_SEL_INSTS_GDS", "SQ_VS0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_VS0_PERF_SEL_INSTS_FLAT", "SQ_VS0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_VS0_PERF_SEL_INSTS_LDS", "SQ_VS0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_VS0_PERF_SEL_INSTS_SALU", "SQ_VS0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_VS0_PERF_SEL_INSTS_SMEM", "SQ_VS0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_VS0_PERF_SEL_INSTS_VALU", "SQ_VS0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_VS0_PERF_SEL_INSTS_TEX_LOAD", "SQ_VS0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_VS0_PERF_SEL_INSTS_TEX_STORE", "SQ_VS0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_VS0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_VS0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_VS0_PERF_SEL_INST_CYCLES_VALU", "SQ_VS0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_VS0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_VS0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_VS1ExposedCountersGfx10[] = {
    {4, "SQ_VS1_PERF_SEL_WAVES", "SQ_VS1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_VS1_PERF_SEL_WAVES_32", "SQ_VS1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_VS1_PERF_SEL_ITEMS", "SQ_VS1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_VS1_PERF_SEL_WAIT_INST_LDS", "SQ_VS1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_VS1_PERF_SEL_INSTS_GDS", "SQ_VS1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_VS1_PERF_SEL_INSTS_FLAT", "SQ_VS1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_VS1_PERF_SEL_INSTS_LDS", "SQ_VS1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_VS1_PERF_SEL_INSTS_SALU", "SQ_VS1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_VS1_PERF_SEL_INSTS_SMEM", "SQ_VS1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_VS1_PERF_SEL_INSTS_VALU", "SQ_VS1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_VS1_PERF_SEL_INSTS_TEX_LOAD", "SQ_VS1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_VS1_PERF_SEL_INSTS_TEX_STORE", "SQ_VS1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_VS1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_VS1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_VS1_PERF_SEL_INST_CYCLES_VALU", "SQ_VS1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_VS1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_VS1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_VS2ExposedCountersGfx10[] = {
    {4, "SQ_VS2_PERF_SEL_WAVES", "SQ_VS2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_VS2_PERF_SEL_WAVES_32", "SQ_VS2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_VS2_PERF_SEL_ITEMS", "SQ_VS2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_VS2_PERF_SEL_WAIT_INST_LDS", "SQ_VS2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_VS2_PERF_SEL_INSTS_GDS", "SQ_VS2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_VS2_PERF_SEL_INSTS_FLAT", "SQ_VS2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_VS2_PERF_SEL_INSTS_LDS", "SQ_VS2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_VS2_PERF_SEL_INSTS_SALU", "SQ_VS2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_VS2_PERF_SEL_INSTS_SMEM", "SQ_VS2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_VS2_PERF_SEL_INSTS_VALU", "SQ_VS2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_VS2_PERF_SEL_INSTS_TEX_LOAD", "SQ_VS2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_VS2_PERF_SEL_INSTS_TEX_STORE", "SQ_VS2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_VS2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_VS2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_VS2_PERF_SEL_INST_CYCLES_VALU", "SQ_VS2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_VS2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_VS2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_VS3ExposedCountersGfx10[] = {
    {4, "SQ_VS3_PERF_SEL_WAVES", "SQ_VS3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_VS3_PERF_SEL_WAVES_32", "SQ_VS3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_VS3_PERF_SEL_ITEMS", "SQ_VS3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_VS3_PERF_SEL_WAIT_INST_LDS", "SQ_VS3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_VS3_PERF_SEL_INSTS_GDS", "SQ_VS3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_VS3_PERF_SEL_INSTS_FLAT", "SQ_VS3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_VS3_PERF_SEL_INSTS_LDS", "SQ_VS3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_VS3_PERF_SEL_INSTS_SALU", "SQ_VS3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_VS3_PERF_SEL_INSTS_SMEM", "SQ_VS3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_VS3_PERF_SEL_INSTS_VALU", "SQ_VS3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_VS3_PERF_SEL_INSTS_TEX_LOAD", "SQ_VS3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_VS3_PERF_SEL_INSTS_TEX_STORE", "SQ_VS3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_VS3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_VS3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_VS3_PERF_SEL_INST_CYCLES_VALU", "SQ_VS3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_VS3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_VS3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_PS0ExposedCountersGfx10[] = {
    {4, "SQ_PS0_PERF_SEL_WAVES", "SQ_PS0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_PS0_PERF_SEL_WAVES_32", "SQ_PS0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_PS0_PERF_SEL_ITEMS", "SQ_PS0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_PS0_PERF_SEL_WAIT_INST_LDS", "SQ_PS0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_PS0_PERF_SEL_INSTS_GDS", "SQ_PS0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_PS0_PERF_SEL_INSTS_FLAT", "SQ_PS0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_PS0_PERF_SEL_INSTS_LDS", "SQ_PS0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_PS0_PERF_SEL_INSTS_SALU", "SQ_PS0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_PS0_PERF_SEL_INSTS_SMEM", "SQ_PS0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_PS0_PERF_SEL_INSTS_VALU", "SQ_PS0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_PS0_PERF_SEL_INSTS_TEX_LOAD", "SQ_PS0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_PS0_PERF_SEL_INSTS_TEX_STORE", "SQ_PS0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_PS0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_PS0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_PS0_PERF_SEL_INST_CYCLES_VALU", "SQ_PS0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_PS0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_PS0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_PS1ExposedCountersGfx10[] = {
    {4, "SQ_PS1_PERF_SEL_WAVES", "SQ_PS1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_PS1_PERF_SEL_WAVES_32", "SQ_PS1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_PS1_PERF_SEL_ITEMS", "SQ_PS1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_PS1_PERF_SEL_WAIT_INST_LDS", "SQ_PS1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_PS1_PERF_SEL_INSTS_GDS", "SQ_PS1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_PS1_PERF_SEL_INSTS_FLAT", "SQ_PS1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_PS1_PERF_SEL_INSTS_LDS", "SQ_PS1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_PS1_PERF_SEL_INSTS_SALU", "SQ_PS1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_PS1_PERF_SEL_INSTS_SMEM", "SQ_PS1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_PS1_PERF_SEL_INSTS_VALU", "SQ_PS1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_PS1_PERF_SEL_INSTS_TEX_LOAD", "SQ_PS1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_PS1_PERF_SEL_INSTS_TEX_STORE", "SQ_PS1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_PS1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_PS1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_PS1_PERF_SEL_INST_CYCLES_VALU", "SQ_PS1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_PS1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_PS1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_PS2ExposedCountersGfx10[] = {
    {4, "SQ_PS2_PERF_SEL_WAVES", "SQ_PS2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_PS2_PERF_SEL_WAVES_32", "SQ_PS2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_PS2_PERF_SEL_ITEMS", "SQ_PS2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_PS2_PERF_SEL_WAIT_INST_LDS", "SQ_PS2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_PS2_PERF_SEL_INSTS_GDS", "SQ_PS2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_PS2_PERF_SEL_INSTS_FLAT", "SQ_PS2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_PS2_PERF_SEL_INSTS_LDS", "SQ_PS2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_PS2_PERF_SEL_INSTS_SALU", "SQ_PS2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_PS2_PERF_SEL_INSTS_SMEM", "SQ_PS2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_PS2_PERF_SEL_INSTS_VALU", "SQ_PS2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_PS2_PERF_SEL_INSTS_TEX_LOAD", "SQ_PS2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_PS2_PERF_SEL_INSTS_TEX_STORE", "SQ_PS2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_PS2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_PS2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_PS2_PERF_SEL_INST_CYCLES_VALU", "SQ_PS2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_PS2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_PS2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_PS3ExposedCountersGfx10[] = {
    {4, "SQ_PS3_PERF_SEL_WAVES", "SQ_PS3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_PS3_PERF_SEL_WAVES_32", "SQ_PS3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_PS3_PERF_SEL_ITEMS", "SQ_PS3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_PS3_PERF_SEL_WAIT_INST_LDS", "SQ_PS3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_PS3_PERF_SEL_INSTS_GDS", "SQ_PS3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_PS3_PERF_SEL_INSTS_FLAT", "SQ_PS3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_PS3_PERF_SEL_INSTS_LDS", "SQ_PS3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_PS3_PERF_SEL_INSTS_SALU", "SQ_PS3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_PS3_PERF_SEL_INSTS_SMEM", "SQ_PS3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_PS3_PERF_SEL_INSTS_VALU", "SQ_PS3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_PS3_PERF_SEL_INSTS_TEX_LOAD", "SQ_PS3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_PS3_PERF_SEL_INSTS_TEX_STORE", "SQ_PS3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_PS3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_PS3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_PS3_PERF_SEL_INST_CYCLES_VALU", "SQ_PS3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_PS3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_PS3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_LS0ExposedCountersGfx10[] = {
    {4, "SQ_LS0_PERF_SEL_WAVES", "SQ_LS0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_LS0_PERF_SEL_WAVES_32", "SQ_LS0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_LS0_PERF_SEL_ITEMS", "SQ_LS0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_LS0_PERF_SEL_WAIT_INST_LDS", "SQ_LS0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_LS0_PERF_SEL_INSTS_GDS", "SQ_LS0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_LS0_PERF_SEL_INSTS_FLAT", "SQ_LS0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_LS0_PERF_SEL_INSTS_LDS", "SQ_LS0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_LS0_PERF_SEL_INSTS_SALU", "SQ_LS0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_LS0_PERF_SEL_INSTS_SMEM", "SQ_LS0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_LS0_PERF_SEL_INSTS_VALU", "SQ_LS0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_LS0_PERF_SEL_INSTS_TEX_LOAD", "SQ_LS0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_LS0_PERF_SEL_INSTS_TEX_STORE", "SQ_LS0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_LS0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_LS0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_LS0_PERF_SEL_INST_CYCLES_VALU", "SQ_LS0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_LS0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_LS0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_LS1ExposedCountersGfx10[] = {
    {4, "SQ_LS1_PERF_SEL_WAVES", "SQ_LS1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_LS1_PERF_SEL_WAVES_32", "SQ_LS1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_LS1_PERF_SEL_ITEMS", "SQ_LS1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_LS1_PERF_SEL_WAIT_INST_LDS", "SQ_LS1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_LS1_PERF_SEL_INSTS_GDS", "SQ_LS1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_LS1_PERF_SEL_INSTS_FLAT", "SQ_LS1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_LS1_PERF_SEL_INSTS_LDS", "SQ_LS1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_LS1_PERF_SEL_INSTS_SALU", "SQ_LS1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_LS1_PERF_SEL_INSTS_SMEM", "SQ_LS1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_LS1_PERF_SEL_INSTS_VALU", "SQ_LS1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_LS1_PERF_SEL_INSTS_TEX_LOAD", "SQ_LS1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_LS1_PERF_SEL_INSTS_TEX_STORE", "SQ_LS1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_LS1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_LS1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_LS1_PERF_SEL_INST_CYCLES_VALU", "SQ_LS1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_LS1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_LS1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_LS2ExposedCountersGfx10[] = {
    {4, "SQ_LS2_PERF_SEL_WAVES", "SQ_LS2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_LS2_PERF_SEL_WAVES_32", "SQ_LS2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_LS2_PERF_SEL_ITEMS", "SQ_LS2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_LS2_PERF_SEL_WAIT_INST_LDS", "SQ_LS2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_LS2_PERF_SEL_INSTS_GDS", "SQ_LS2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_LS2_PERF_SEL_INSTS_FLAT", "SQ_LS2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_LS2_PERF_SEL_INSTS_LDS", "SQ_LS2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_LS2_PERF_SEL_INSTS_SALU", "SQ_LS2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_LS2_PERF_SEL_INSTS_SMEM", "SQ_LS2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_LS2_PERF_SEL_INSTS_VALU", "SQ_LS2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_LS2_PERF_SEL_INSTS_TEX_LOAD", "SQ_LS2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_LS2_PERF_SEL_INSTS_TEX_STORE", "SQ_LS2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_LS2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_LS2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_LS2_PERF_SEL_INST_CYCLES_VALU", "SQ_LS2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_LS2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_LS2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_LS3ExposedCountersGfx10[] = {
    {4, "SQ_LS3_PERF_SEL_WAVES", "SQ_LS3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_LS3_PERF_SEL_WAVES_32", "SQ_LS3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_LS3_PERF_SEL_ITEMS", "SQ_LS3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_LS3_PERF_SEL_WAIT_INST_LDS", "SQ_LS3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_LS3_PERF_SEL_INSTS_GDS", "SQ_LS3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_LS3_PERF_SEL_INSTS_FLAT", "SQ_LS3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_LS3_PERF_SEL_INSTS_LDS", "SQ_LS3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_LS3_PERF_SEL_INSTS_SALU", "SQ_LS3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_LS3_PERF_SEL_INSTS_SMEM", "SQ_LS3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_LS3_PERF_SEL_INSTS_VALU", "SQ_LS3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_LS3_PERF_SEL_INSTS_TEX_LOAD", "SQ_LS3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_LS3_PERF_SEL_INSTS_TEX_STORE", "SQ_LS3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_LS3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_LS3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_LS3_PERF_SEL_INST_CYCLES_VALU", "SQ_LS3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_LS3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_LS3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_HS0ExposedCountersGfx10[] = {
    {4, "SQ_HS0_PERF_SEL_WAVES", "SQ_HS0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_HS0_PERF_SEL_WAVES_32", "SQ_HS0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_HS0_PERF_SEL_ITEMS", "SQ_HS0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_HS0_PERF_SEL_WAIT_INST_LDS", "SQ_HS0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_HS0_PERF_SEL_INSTS_GDS", "SQ_HS0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_HS0_PERF_SEL_INSTS_FLAT", "SQ_HS0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_HS0_PERF_SEL_INSTS_LDS", "SQ_HS0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_HS0_PERF_SEL_INSTS_SALU", "SQ_HS0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_HS0_PERF_SEL_INSTS_SMEM", "SQ_HS0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_HS0_PERF_SEL_INSTS_VALU", "SQ_HS0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_HS0_PERF_SEL_INSTS_TEX_LOAD", "SQ_HS0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_HS0_PERF_SEL_INSTS_TEX_STORE", "SQ_HS0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_HS0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_HS0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_HS0_PERF_SEL_INST_CYCLES_VALU", "SQ_HS0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_HS0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_HS0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_HS1ExposedCountersGfx10[] = {
    {4, "SQ_HS1_PERF_SEL_WAVES", "SQ_HS1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_HS1_PERF_SEL_WAVES_32", "SQ_HS1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_HS1_PERF_SEL_ITEMS", "SQ_HS1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_HS1_PERF_SEL_WAIT_INST_LDS", "SQ_HS1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_HS1_PERF_SEL_INSTS_GDS", "SQ_HS1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_HS1_PERF_SEL_INSTS_FLAT", "SQ_HS1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_HS1_PERF_SEL_INSTS_LDS", "SQ_HS1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_HS1_PERF_SEL_INSTS_SALU", "SQ_HS1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_HS1_PERF_SEL_INSTS_SMEM", "SQ_HS1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_HS1_PERF_SEL_INSTS_VALU", "SQ_HS1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_HS1_PERF_SEL_INSTS_TEX_LOAD", "SQ_HS1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_HS1_PERF_SEL_INSTS_TEX_STORE", "SQ_HS1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_HS1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_HS1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_HS1_PERF_SEL_INST_CYCLES_VALU", "SQ_HS1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_HS1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_HS1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_HS2ExposedCountersGfx10[] = {
    {4, "SQ_HS2_PERF_SEL_WAVES", "SQ_HS2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_HS2_PERF_SEL_WAVES_32", "SQ_HS2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_HS2_PERF_SEL_ITEMS", "SQ_HS2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_HS2_PERF_SEL_WAIT_INST_LDS", "SQ_HS2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_HS2_PERF_SEL_INSTS_GDS", "SQ_HS2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_HS2_PERF_SEL_INSTS_FLAT", "SQ_HS2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_HS2_PERF_SEL_INSTS_LDS", "SQ_HS2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_HS2_PERF_SEL_INSTS_SALU", "SQ_HS2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_HS2_PERF_SEL_INSTS_SMEM", "SQ_HS2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_HS2_PERF_SEL_INSTS_VALU", "SQ_HS2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_HS2_PERF_SEL_INSTS_TEX_LOAD", "SQ_HS2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_HS2_PERF_SEL_INSTS_TEX_STORE", "SQ_HS2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_HS2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_HS2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_HS2_PERF_SEL_INST_CYCLES_VALU", "SQ_HS2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_HS2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_HS2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_HS3ExposedCountersGfx10[] = {
    {4, "SQ_HS3_PERF_SEL_WAVES", "SQ_HS3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_HS3_PERF_SEL_WAVES_32", "SQ_HS3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_HS3_PERF_SEL_ITEMS", "SQ_HS3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_HS3_PERF_SEL_WAIT_INST_LDS", "SQ_HS3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_HS3_PERF_SEL_INSTS_GDS", "SQ_HS3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_HS3_PERF_SEL_INSTS_FLAT", "SQ_HS3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_HS3_PERF_SEL_INSTS_LDS", "SQ_HS3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_HS3_PERF_SEL_INSTS_SALU", "SQ_HS3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_HS3_PERF_SEL_INSTS_SMEM", "SQ_HS3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_HS3_PERF_SEL_INSTS_VALU", "SQ_HS3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_HS3_PERF_SEL_INSTS_TEX_LOAD", "SQ_HS3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_HS3_PERF_SEL_INSTS_TEX_STORE", "SQ_HS3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_HS3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_HS3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_HS3_PERF_SEL_INST_CYCLES_VALU", "SQ_HS3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_HS3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_HS3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_CS0ExposedCountersGfx10[] = {
    {4, "SQ_CS0_PERF_SEL_WAVES", "SQ_CS0", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_CS0_PERF_SEL_WAVES_32", "SQ_CS0", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_CS0_PERF_SEL_ITEMS", "SQ_CS0", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_CS0_PERF_SEL_WAIT_INST_LDS", "SQ_CS0", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_CS0_PERF_SEL_INSTS_GDS", "SQ_CS0", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_CS0_PERF_SEL_INSTS_FLAT", "SQ_CS0", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_CS0_PERF_SEL_INSTS_LDS", "SQ_CS0", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_CS0_PERF_SEL_INSTS_SALU", "SQ_CS0", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_CS0_PERF_SEL_INSTS_SMEM", "SQ_CS0", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_CS0_PERF_SEL_INSTS_VALU", "SQ_CS0", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_CS0_PERF_SEL_INSTS_TEX_LOAD", "SQ_CS0", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_CS0_PERF_SEL_INSTS_TEX_STORE", "SQ_CS0", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_CS0_PERF_SEL_ITEM_CYCLES_VALU", "SQ_CS0", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_CS0_PERF_SEL_INST_CYCLES_VALU", "SQ_CS0", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_CS0_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_CS0", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_CS1ExposedCountersGfx10[] = {
    {4, "SQ_CS1_PERF_SEL_WAVES", "SQ_CS1", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_CS1_PERF_SEL_WAVES_32", "SQ_CS1", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_CS1_PERF_SEL_ITEMS", "SQ_CS1", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_CS1_PERF_SEL_WAIT_INST_LDS", "SQ_CS1", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_CS1_PERF_SEL_INSTS_GDS", "SQ_CS1", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_CS1_PERF_SEL_INSTS_FLAT", "SQ_CS1", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_CS1_PERF_SEL_INSTS_LDS", "SQ_CS1", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_CS1_PERF_SEL_INSTS_SALU", "SQ_CS1", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_CS1_PERF_SEL_INSTS_SMEM", "SQ_CS1", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_CS1_PERF_SEL_INSTS_VALU", "SQ_CS1", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_CS1_PERF_SEL_INSTS_TEX_LOAD", "SQ_CS1", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_CS1_PERF_SEL_INSTS_TEX_STORE", "SQ_CS1", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_CS1_PERF_SEL_ITEM_CYCLES_VALU", "SQ_CS1", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_CS1_PERF_SEL_INST_CYCLES_VALU", "SQ_CS1", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_CS1_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_CS1", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_CS2ExposedCountersGfx10[] = {
    {4, "SQ_CS2_PERF_SEL_WAVES", "SQ_CS2", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_CS2_PERF_SEL_WAVES_32", "SQ_CS2", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_CS2_PERF_SEL_ITEMS", "SQ_CS2", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_CS2_PERF_SEL_WAIT_INST_LDS", "SQ_CS2", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_CS2_PERF_SEL_INSTS_GDS", "SQ_CS2", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_CS2_PERF_SEL_INSTS_FLAT", "SQ_CS2", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_CS2_PERF_SEL_INSTS_LDS", "SQ_CS2", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_CS2_PERF_SEL_INSTS_SALU", "SQ_CS2", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_CS2_PERF_SEL_INSTS_SMEM", "SQ_CS2", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_CS2_PERF_SEL_INSTS_VALU", "SQ_CS2", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_CS2_PERF_SEL_INSTS_TEX_LOAD", "SQ_CS2", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_CS2_PERF_SEL_INSTS_TEX_STORE", "SQ_CS2", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_CS2_PERF_SEL_ITEM_CYCLES_VALU", "SQ_CS2", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_CS2_PERF_SEL_INST_CYCLES_VALU", "SQ_CS2", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_CS2_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_CS2", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SQ_CS3ExposedCountersGfx10[] = {
    {4, "SQ_CS3_PERF_SEL_WAVES", "SQ_CS3", "Count number of waves sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "SQ_CS3_PERF_SEL_WAVES_32", "SQ_CS3", "Count number of wave32s sent to SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {8, "SQ_CS3_PERF_SEL_ITEMS", "SQ_CS3", "Number of valid work items in SQs. {emulated, global, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {31, "SQ_CS3_PERF_SEL_WAIT_INST_LDS", "SQ_CS3", "Number of clock cycles spent waiting for LDS (indexed) instruction issue. In units of cycles. {nondeterministic, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "SQ_CS3_PERF_SEL_INSTS_GDS", "SQ_CS3", "Number of GDS instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "SQ_CS3_PERF_SEL_INSTS_FLAT", "SQ_CS3", "Number of FLAT instructions issued. {emulated, C2}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {59, "SQ_CS3_PERF_SEL_INSTS_LDS", "SQ_CS3", "Number of LDS indexed instructions issued (including FLAT). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "SQ_CS3_PERF_SEL_INSTS_SALU", "SQ_CS3", "Number of SALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {61, "SQ_CS3_PERF_SEL_INSTS_SMEM", "SQ_CS3", "Number of SMEM instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {64, "SQ_CS3_PERF_SEL_INSTS_VALU", "SQ_CS3", "Number of VALU instructions issued. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "SQ_CS3_PERF_SEL_INSTS_TEX_LOAD", "SQ_CS3", "Number of buffer load, image load or sample instructions issued. In GEN0/1, counts both loads and stores. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "SQ_CS3_PERF_SEL_INSTS_TEX_STORE", "SQ_CS3", "Number of buffer or image store or atomic (with and without return) instructions issued. In GEN0/1, is unused (zero). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {82, "SQ_CS3_PERF_SEL_ITEM_CYCLES_VALU", "SQ_CS3", "Number of item-cycles used to execute VALU operations (similar to INST_CYCLES_VALU but multiplied by number of active workitems). {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "SQ_CS3_PERF_SEL_INST_CYCLES_VALU", "SQ_CS3", "Number of cycles needed to execute VALU operations (SIMD cycles), where there is overlapping V_OP32_1 and V_OP32_T instruction, count them seperately. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {285, "SQ_CS3_SQC_PERF_SEL_LDS_BANK_CONFLICT", "SQ_CS3", "Number of cycles LDS is stalled by bank conflicts. {emulated, C1}", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX0ExposedCountersGfx10[] = {
    {12, "SX0_PERF_SEL_DB0_PIXELS", "SX0", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX0_PERF_SEL_DB0_PIXEL_STALL", "SX0", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX0_PERF_SEL_DB1_PIXELS", "SX0", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX0_PERF_SEL_DB1_PIXEL_STALL", "SX0", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX0_PERF_SEL_DB2_PIXELS", "SX0", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX0_PERF_SEL_DB2_PIXEL_STALL", "SX0", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX0_PERF_SEL_DB3_PIXELS", "SX0", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX0_PERF_SEL_DB3_PIXEL_STALL", "SX0", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX1ExposedCountersGfx10[] = {
    {12, "SX1_PERF_SEL_DB0_PIXELS", "SX1", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX1_PERF_SEL_DB0_PIXEL_STALL", "SX1", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX1_PERF_SEL_DB1_PIXELS", "SX1", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX1_PERF_SEL_DB1_PIXEL_STALL", "SX1", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX1_PERF_SEL_DB2_PIXELS", "SX1", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX1_PERF_SEL_DB2_PIXEL_STALL", "SX1", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX1_PERF_SEL_DB3_PIXELS", "SX1", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX1_PERF_SEL_DB3_PIXEL_STALL", "SX1", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX2ExposedCountersGfx10[] = {
    {12, "SX2_PERF_SEL_DB0_PIXELS", "SX2", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX2_PERF_SEL_DB0_PIXEL_STALL", "SX2", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX2_PERF_SEL_DB1_PIXELS", "SX2", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX2_PERF_SEL_DB1_PIXEL_STALL", "SX2", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX2_PERF_SEL_DB2_PIXELS", "SX2", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX2_PERF_SEL_DB2_PIXEL_STALL", "SX2", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX2_PERF_SEL_DB3_PIXELS", "SX2", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX2_PERF_SEL_DB3_PIXEL_STALL", "SX2", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX3ExposedCountersGfx10[] = {
    {12, "SX3_PERF_SEL_DB0_PIXELS", "SX3", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX3_PERF_SEL_DB0_PIXEL_STALL", "SX3", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX3_PERF_SEL_DB1_PIXELS", "SX3", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX3_PERF_SEL_DB1_PIXEL_STALL", "SX3", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX3_PERF_SEL_DB2_PIXELS", "SX3", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX3_PERF_SEL_DB2_PIXEL_STALL", "SX3", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX3_PERF_SEL_DB3_PIXELS", "SX3", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX3_PERF_SEL_DB3_PIXEL_STALL", "SX3", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX4ExposedCountersGfx10[] = {
    {12, "SX4_PERF_SEL_DB0_PIXELS", "SX4", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX4_PERF_SEL_DB0_PIXEL_STALL", "SX4", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX4_PERF_SEL_DB1_PIXELS", "SX4", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX4_PERF_SEL_DB1_PIXEL_STALL", "SX4", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX4_PERF_SEL_DB2_PIXELS", "SX4", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX4_PERF_SEL_DB2_PIXEL_STALL", "SX4", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX4_PERF_SEL_DB3_PIXELS", "SX4", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX4_PERF_SEL_DB3_PIXEL_STALL", "SX4", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX5ExposedCountersGfx10[] = {
    {12, "SX5_PERF_SEL_DB0_PIXELS", "SX5", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX5_PERF_SEL_DB0_PIXEL_STALL", "SX5", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX5_PERF_SEL_DB1_PIXELS", "SX5", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX5_PERF_SEL_DB1_PIXEL_STALL", "SX5", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX5_PERF_SEL_DB2_PIXELS", "SX5", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX5_PERF_SEL_DB2_PIXEL_STALL", "SX5", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX5_PERF_SEL_DB3_PIXELS", "SX5", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX5_PERF_SEL_DB3_PIXEL_STALL", "SX5", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX6ExposedCountersGfx10[] = {
    {12, "SX6_PERF_SEL_DB0_PIXELS", "SX6", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX6_PERF_SEL_DB0_PIXEL_STALL", "SX6", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX6_PERF_SEL_DB1_PIXELS", "SX6", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX6_PERF_SEL_DB1_PIXEL_STALL", "SX6", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX6_PERF_SEL_DB2_PIXELS", "SX6", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX6_PERF_SEL_DB2_PIXEL_STALL", "SX6", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX6_PERF_SEL_DB3_PIXELS", "SX6", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX6_PERF_SEL_DB3_PIXEL_STALL", "SX6", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc SX7ExposedCountersGfx10[] = {
    {12, "SX7_PERF_SEL_DB0_PIXELS", "SX7", "Number of pixels sent to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {14, "SX7_PERF_SEL_DB0_PIXEL_STALL", "SX7", "Number of cycles where pixel traffic is stalled due to the DB0", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {17, "SX7_PERF_SEL_DB1_PIXELS", "SX7", "Number of pixels sent to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {19, "SX7_PERF_SEL_DB1_PIXEL_STALL", "SX7", "Number of cycles where pixel traffic is stalled due to the DB1", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {22, "SX7_PERF_SEL_DB2_PIXELS", "SX7", "Number of pixels sent to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {24, "SX7_PERF_SEL_DB2_PIXEL_STALL", "SX7", "Number of cycles where pixel traffic is stalled due to the DB2", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {27, "SX7_PERF_SEL_DB3_PIXELS", "SX7", "Number of pixels sent to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {29, "SX7_PERF_SEL_DB3_PIXEL_STALL", "SX7", "Number of cycles where pixel traffic is stalled due to the DB3", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA0ExposedCountersGfx10[] = {
    {15, "TA0_PERF_SEL_TA_BUSY", "TA0", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA0_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA0", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA0_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA0", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA0_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA0", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA0_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA0", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA0_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA0", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA0_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA0", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA0_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA0", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA0_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA0", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA0_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA0", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA0_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA0", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA0_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA0", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA0_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA0", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA0_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA0", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA0_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA0", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA0_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA0", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA1ExposedCountersGfx10[] = {
    {15, "TA1_PERF_SEL_TA_BUSY", "TA1", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA1_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA1", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA1_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA1", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA1_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA1", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA1_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA1", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA1_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA1", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA1_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA1", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA1_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA1", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA1_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA1", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA1_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA1", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA1_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA1", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA1_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA1", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA1_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA1", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA1_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA1", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA1_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA1", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA1_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA1", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA2ExposedCountersGfx10[] = {
    {15, "TA2_PERF_SEL_TA_BUSY", "TA2", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA2_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA2", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA2_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA2", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA2_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA2", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA2_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA2", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA2_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA2", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA2_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA2", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA2_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA2", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA2_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA2", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA2_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA2", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA2_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA2", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA2_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA2", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA2_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA2", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA2_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA2", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA2_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA2", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA2_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA2", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA3ExposedCountersGfx10[] = {
    {15, "TA3_PERF_SEL_TA_BUSY", "TA3", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA3_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA3", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA3_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA3", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA3_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA3", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA3_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA3", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA3_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA3", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA3_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA3", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA3_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA3", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA3_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA3", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA3_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA3", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA3_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA3", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA3_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA3", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA3_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA3", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA3_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA3", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA3_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA3", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA3_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA3", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA4ExposedCountersGfx10[] = {
    {15, "TA4_PERF_SEL_TA_BUSY", "TA4", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA4_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA4", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA4_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA4", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA4_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA4", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA4_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA4", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA4_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA4", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA4_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA4", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA4_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA4", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA4_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA4", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA4_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA4", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA4_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA4", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA4_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA4", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA4_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA4", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA4_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA4", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA4_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA4", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA4_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA4", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA5ExposedCountersGfx10[] = {
    {15, "TA5_PERF_SEL_TA_BUSY", "TA5", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA5_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA5", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA5_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA5", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA5_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA5", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA5_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA5", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA5_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA5", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA5_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA5", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA5_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA5", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA5_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA5", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA5_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA5", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA5_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA5", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA5_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA5", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA5_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA5", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA5_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA5", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA5_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA5", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA5_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA5", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA6ExposedCountersGfx10[] = {
    {15, "TA6_PERF_SEL_TA_BUSY", "TA6", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA6_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA6", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA6_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA6", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA6_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA6", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA6_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA6", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA6_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA6", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA6_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA6", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA6_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA6", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA6_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA6", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA6_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA6", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA6_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA6", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA6_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA6", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA6_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA6", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA6_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA6", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA6_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA6", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA6_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA6", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA7ExposedCountersGfx10[] = {
    {15, "TA7_PERF_SEL_TA_BUSY", "TA7", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA7_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA7", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA7_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA7", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA7_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA7", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA7_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA7", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA7_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA7", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA7_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA7", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA7_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA7", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA7_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA7", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA7_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA7", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA7_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA7", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA7_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA7", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA7_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA7", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA7_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA7", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA7_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA7", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA7_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA7", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA8ExposedCountersGfx10[] = {
    {15, "TA8_PERF_SEL_TA_BUSY", "TA8", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA8_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA8", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA8_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA8", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA8_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA8", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA8_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA8", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA8_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA8", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA8_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA8", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA8_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA8", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA8_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA8", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA8_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA8", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA8_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA8", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA8_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA8", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA8_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA8", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA8_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA8", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA8_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA8", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA8_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA8", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA9ExposedCountersGfx10[] = {
    {15, "TA9_PERF_SEL_TA_BUSY", "TA9", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA9_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA9", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA9_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA9", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA9_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA9", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA9_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA9", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA9_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA9", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA9_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA9", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA9_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA9", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA9_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA9", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA9_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA9", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA9_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA9", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA9_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA9", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA9_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA9", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA9_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA9", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA9_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA9", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA9_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA9", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA10ExposedCountersGfx10[] = {
    {15, "TA10_PERF_SEL_TA_BUSY", "TA10", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA10_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA10", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA10_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA10", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA10_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA10", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA10_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA10", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA10_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA10", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA10_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA10", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA10_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA10", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA10_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA10", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA10_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA10", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA10_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA10", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA10_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA10", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA10_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA10", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA10_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA10", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA10_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA10", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA10_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA10", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA11ExposedCountersGfx10[] = {
    {15, "TA11_PERF_SEL_TA_BUSY", "TA11", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA11_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA11", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA11_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA11", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA11_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA11", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA11_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA11", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA11_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA11", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA11_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA11", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA11_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA11", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA11_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA11", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA11_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA11", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA11_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA11", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA11_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA11", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA11_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA11", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA11_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA11", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA11_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA11", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA11_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA11", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA12ExposedCountersGfx10[] = {
    {15, "TA12_PERF_SEL_TA_BUSY", "TA12", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA12_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA12", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA12_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA12", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA12_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA12", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA12_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA12", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA12_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA12", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA12_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA12", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA12_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA12", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA12_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA12", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA12_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA12", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA12_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA12", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA12_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA12", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA12_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA12", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA12_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA12", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA12_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA12", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA12_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA12", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA13ExposedCountersGfx10[] = {
    {15, "TA13_PERF_SEL_TA_BUSY", "TA13", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA13_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA13", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA13_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA13", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA13_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA13", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA13_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA13", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA13_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA13", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA13_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA13", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA13_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA13", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA13_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA13", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA13_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA13", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA13_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA13", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA13_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA13", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA13_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA13", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA13_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA13", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA13_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA13", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA13_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA13", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA14ExposedCountersGfx10[] = {
    {15, "TA14_PERF_SEL_TA_BUSY", "TA14", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA14_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA14", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA14_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA14", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA14_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA14", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA14_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA14", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA14_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA14", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA14_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA14", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA14_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA14", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA14_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA14", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA14_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA14", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA14_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA14", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA14_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA14", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA14_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA14", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA14_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA14", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA14_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA14", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA14_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA14", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA15ExposedCountersGfx10[] = {
    {15, "TA15_PERF_SEL_TA_BUSY", "TA15", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA15_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA15", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA15_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA15", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA15_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA15", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA15_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA15", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA15_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA15", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA15_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA15", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA15_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA15", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA15_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA15", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA15_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA15", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA15_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA15", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA15_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA15", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA15_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA15", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA15_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA15", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA15_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA15", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA15_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA15", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA16ExposedCountersGfx10[] = {
    {15, "TA16_PERF_SEL_TA_BUSY", "TA16", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA16_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA16", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA16_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA16", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA16_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA16", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA16_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA16", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA16_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA16", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA16_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA16", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA16_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA16", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA16_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA16", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA16_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA16", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA16_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA16", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA16_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA16", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA16_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA16", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA16_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA16", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA16_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA16", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA16_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA16", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA17ExposedCountersGfx10[] = {
    {15, "TA17_PERF_SEL_TA_BUSY", "TA17", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA17_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA17", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA17_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA17", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA17_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA17", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA17_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA17", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA17_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA17", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA17_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA17", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA17_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA17", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA17_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA17", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA17_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA17", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA17_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA17", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA17_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA17", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA17_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA17", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA17_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA17", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA17_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA17", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA17_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA17", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA18ExposedCountersGfx10[] = {
    {15, "TA18_PERF_SEL_TA_BUSY", "TA18", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA18_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA18", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA18_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA18", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA18_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA18", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA18_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA18", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA18_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA18", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA18_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA18", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA18_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA18", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA18_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA18", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA18_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA18", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA18_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA18", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA18_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA18", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA18_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA18", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA18_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA18", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA18_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA18", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA18_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA18", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA19ExposedCountersGfx10[] = {
    {15, "TA19_PERF_SEL_TA_BUSY", "TA19", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA19_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA19", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA19_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA19", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA19_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA19", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA19_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA19", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA19_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA19", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA19_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA19", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA19_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA19", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA19_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA19", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA19_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA19", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA19_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA19", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA19_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA19", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA19_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA19", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA19_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA19", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA19_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA19", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA19_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA19", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA20ExposedCountersGfx10[] = {
    {15, "TA20_PERF_SEL_TA_BUSY", "TA20", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA20_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA20", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA20_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA20", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA20_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA20", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA20_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA20", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA20_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA20", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA20_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA20", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA20_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA20", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA20_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA20", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA20_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA20", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA20_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA20", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA20_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA20", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA20_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA20", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA20_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA20", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA20_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA20", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA20_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA20", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA21ExposedCountersGfx10[] = {
    {15, "TA21_PERF_SEL_TA_BUSY", "TA21", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA21_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA21", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA21_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA21", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA21_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA21", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA21_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA21", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA21_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA21", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA21_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA21", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA21_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA21", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA21_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA21", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA21_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA21", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA21_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA21", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA21_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA21", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA21_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA21", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA21_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA21", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA21_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA21", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA21_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA21", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA22ExposedCountersGfx10[] = {
    {15, "TA22_PERF_SEL_TA_BUSY", "TA22", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA22_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA22", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA22_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA22", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA22_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA22", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA22_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA22", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA22_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA22", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA22_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA22", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA22_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA22", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA22_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA22", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA22_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA22", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA22_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA22", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA22_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA22", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA22_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA22", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA22_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA22", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA22_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA22", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA22_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA22", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA23ExposedCountersGfx10[] = {
    {15, "TA23_PERF_SEL_TA_BUSY", "TA23", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA23_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA23", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA23_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA23", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA23_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA23", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA23_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA23", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA23_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA23", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA23_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA23", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA23_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA23", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA23_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA23", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA23_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA23", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA23_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA23", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA23_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA23", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA23_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA23", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA23_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA23", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA23_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA23", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA23_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA23", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA24ExposedCountersGfx10[] = {
    {15, "TA24_PERF_SEL_TA_BUSY", "TA24", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA24_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA24", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA24_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA24", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA24_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA24", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA24_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA24", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA24_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA24", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA24_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA24", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA24_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA24", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA24_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA24", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA24_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA24", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA24_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA24", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA24_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA24", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA24_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA24", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA24_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA24", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA24_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA24", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA24_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA24", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA25ExposedCountersGfx10[] = {
    {15, "TA25_PERF_SEL_TA_BUSY", "TA25", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA25_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA25", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA25_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA25", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA25_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA25", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA25_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA25", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA25_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA25", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA25_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA25", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA25_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA25", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA25_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA25", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA25_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA25", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA25_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA25", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA25_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA25", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA25_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA25", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA25_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA25", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA25_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA25", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA25_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA25", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA26ExposedCountersGfx10[] = {
    {15, "TA26_PERF_SEL_TA_BUSY", "TA26", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA26_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA26", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA26_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA26", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA26_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA26", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA26_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA26", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA26_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA26", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA26_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA26", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA26_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA26", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA26_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA26", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA26_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA26", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA26_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA26", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA26_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA26", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA26_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA26", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA26_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA26", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA26_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA26", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA26_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA26", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA27ExposedCountersGfx10[] = {
    {15, "TA27_PERF_SEL_TA_BUSY", "TA27", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA27_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA27", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA27_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA27", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA27_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA27", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA27_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA27", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA27_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA27", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA27_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA27", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA27_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA27", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA27_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA27", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA27_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA27", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA27_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA27", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA27_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA27", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA27_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA27", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA27_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA27", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA27_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA27", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA27_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA27", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA28ExposedCountersGfx10[] = {
    {15, "TA28_PERF_SEL_TA_BUSY", "TA28", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA28_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA28", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA28_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA28", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA28_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA28", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA28_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA28", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA28_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA28", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA28_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA28", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA28_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA28", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA28_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA28", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA28_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA28", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA28_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA28", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA28_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA28", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA28_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA28", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA28_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA28", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA28_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA28", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA28_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA28", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA29ExposedCountersGfx10[] = {
    {15, "TA29_PERF_SEL_TA_BUSY", "TA29", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA29_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA29", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA29_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA29", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA29_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA29", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA29_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA29", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA29_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA29", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA29_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA29", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA29_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA29", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA29_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA29", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA29_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA29", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA29_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA29", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA29_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA29", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA29_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA29", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA29_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA29", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA29_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA29", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA29_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA29", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA30ExposedCountersGfx10[] = {
    {15, "TA30_PERF_SEL_TA_BUSY", "TA30", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA30_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA30", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA30_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA30", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA30_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA30", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA30_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA30", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA30_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA30", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA30_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA30", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA30_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA30", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA30_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA30", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA30_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA30", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA30_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA30", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA30_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA30", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA30_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA30", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA30_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA30", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA30_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA30", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA30_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA30", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA31ExposedCountersGfx10[] = {
    {15, "TA31_PERF_SEL_TA_BUSY", "TA31", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA31_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA31", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA31_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA31", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA31_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA31", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA31_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA31", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA31_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA31", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA31_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA31", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA31_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA31", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA31_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA31", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA31_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA31", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA31_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA31", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA31_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA31", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA31_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA31", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA31_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA31", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA31_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA31", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA31_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA31", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA32ExposedCountersGfx10[] = {
    {15, "TA32_PERF_SEL_TA_BUSY", "TA32", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA32_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA32", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA32_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA32", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA32_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA32", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA32_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA32", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA32_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA32", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA32_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA32", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA32_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA32", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA32_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA32", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA32_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA32", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA32_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA32", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA32_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA32", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA32_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA32", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA32_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA32", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA32_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA32", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA32_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA32", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA33ExposedCountersGfx10[] = {
    {15, "TA33_PERF_SEL_TA_BUSY", "TA33", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA33_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA33", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA33_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA33", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA33_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA33", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA33_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA33", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA33_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA33", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA33_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA33", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA33_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA33", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA33_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA33", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA33_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA33", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA33_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA33", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA33_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA33", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA33_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA33", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA33_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA33", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA33_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA33", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA33_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA33", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA34ExposedCountersGfx10[] = {
    {15, "TA34_PERF_SEL_TA_BUSY", "TA34", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA34_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA34", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA34_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA34", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA34_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA34", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA34_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA34", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA34_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA34", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA34_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA34", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA34_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA34", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA34_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA34", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA34_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA34", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA34_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA34", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA34_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA34", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA34_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA34", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA34_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA34", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA34_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA34", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA34_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA34", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA35ExposedCountersGfx10[] = {
    {15, "TA35_PERF_SEL_TA_BUSY", "TA35", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA35_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA35", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA35_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA35", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA35_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA35", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA35_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA35", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA35_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA35", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA35_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA35", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA35_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA35", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA35_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA35", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA35_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA35", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA35_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA35", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA35_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA35", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA35_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA35", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA35_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA35", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA35_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA35", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA35_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA35", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA36ExposedCountersGfx10[] = {
    {15, "TA36_PERF_SEL_TA_BUSY", "TA36", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA36_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA36", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA36_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA36", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA36_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA36", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA36_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA36", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA36_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA36", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA36_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA36", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA36_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA36", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA36_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA36", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA36_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA36", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA36_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA36", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA36_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA36", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA36_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA36", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA36_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA36", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA36_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA36", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA36_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA36", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA37ExposedCountersGfx10[] = {
    {15, "TA37_PERF_SEL_TA_BUSY", "TA37", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA37_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA37", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA37_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA37", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA37_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA37", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA37_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA37", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA37_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA37", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA37_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA37", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA37_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA37", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA37_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA37", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA37_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA37", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA37_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA37", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA37_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA37", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA37_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA37", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA37_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA37", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA37_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA37", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA37_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA37", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA38ExposedCountersGfx10[] = {
    {15, "TA38_PERF_SEL_TA_BUSY", "TA38", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA38_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA38", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA38_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA38", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA38_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA38", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA38_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA38", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA38_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA38", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA38_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA38", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA38_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA38", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA38_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA38", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA38_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA38", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA38_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA38", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA38_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA38", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA38_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA38", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA38_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA38", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA38_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA38", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA38_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA38", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA39ExposedCountersGfx10[] = {
    {15, "TA39_PERF_SEL_TA_BUSY", "TA39", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA39_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA39", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA39_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA39", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA39_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA39", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA39_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA39", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA39_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA39", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA39_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA39", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA39_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA39", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA39_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA39", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA39_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA39", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA39_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA39", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA39_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA39", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA39_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA39", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA39_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA39", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA39_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA39", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA39_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA39", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA40ExposedCountersGfx10[] = {
    {15, "TA40_PERF_SEL_TA_BUSY", "TA40", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA40_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA40", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA40_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA40", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA40_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA40", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA40_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA40", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA40_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA40", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA40_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA40", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA40_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA40", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA40_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA40", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA40_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA40", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA40_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA40", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA40_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA40", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA40_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA40", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA40_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA40", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA40_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA40", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA40_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA40", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA41ExposedCountersGfx10[] = {
    {15, "TA41_PERF_SEL_TA_BUSY", "TA41", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA41_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA41", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA41_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA41", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA41_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA41", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA41_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA41", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA41_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA41", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA41_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA41", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA41_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA41", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA41_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA41", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA41_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA41", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA41_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA41", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA41_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA41", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA41_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA41", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA41_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA41", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA41_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA41", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA41_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA41", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA42ExposedCountersGfx10[] = {
    {15, "TA42_PERF_SEL_TA_BUSY", "TA42", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA42_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA42", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA42_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA42", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA42_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA42", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA42_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA42", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA42_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA42", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA42_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA42", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA42_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA42", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA42_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA42", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA42_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA42", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA42_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA42", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA42_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA42", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA42_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA42", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA42_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA42", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA42_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA42", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA42_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA42", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA43ExposedCountersGfx10[] = {
    {15, "TA43_PERF_SEL_TA_BUSY", "TA43", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA43_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA43", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA43_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA43", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA43_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA43", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA43_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA43", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA43_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA43", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA43_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA43", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA43_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA43", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA43_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA43", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA43_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA43", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA43_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA43", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA43_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA43", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA43_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA43", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA43_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA43", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA43_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA43", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA43_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA43", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA44ExposedCountersGfx10[] = {
    {15, "TA44_PERF_SEL_TA_BUSY", "TA44", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA44_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA44", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA44_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA44", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA44_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA44", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA44_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA44", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA44_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA44", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA44_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA44", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA44_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA44", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA44_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA44", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA44_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA44", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA44_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA44", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA44_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA44", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA44_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA44", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA44_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA44", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA44_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA44", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA44_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA44", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA45ExposedCountersGfx10[] = {
    {15, "TA45_PERF_SEL_TA_BUSY", "TA45", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA45_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA45", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA45_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA45", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA45_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA45", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA45_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA45", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA45_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA45", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA45_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA45", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA45_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA45", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA45_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA45", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA45_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA45", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA45_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA45", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA45_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA45", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA45_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA45", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA45_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA45", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA45_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA45", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA45_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA45", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA46ExposedCountersGfx10[] = {
    {15, "TA46_PERF_SEL_TA_BUSY", "TA46", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA46_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA46", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA46_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA46", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA46_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA46", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA46_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA46", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA46_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA46", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA46_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA46", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA46_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA46", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA46_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA46", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA46_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA46", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA46_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA46", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA46_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA46", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA46_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA46", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA46_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA46", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA46_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA46", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA46_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA46", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA47ExposedCountersGfx10[] = {
    {15, "TA47_PERF_SEL_TA_BUSY", "TA47", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA47_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA47", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA47_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA47", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA47_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA47", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA47_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA47", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA47_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA47", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA47_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA47", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA47_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA47", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA47_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA47", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA47_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA47", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA47_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA47", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA47_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA47", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA47_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA47", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA47_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA47", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA47_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA47", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA47_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA47", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA48ExposedCountersGfx10[] = {
    {15, "TA48_PERF_SEL_TA_BUSY", "TA48", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA48_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA48", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA48_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA48", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA48_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA48", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA48_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA48", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA48_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA48", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA48_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA48", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA48_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA48", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA48_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA48", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA48_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA48", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA48_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA48", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA48_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA48", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA48_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA48", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA48_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA48", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA48_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA48", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA48_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA48", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA49ExposedCountersGfx10[] = {
    {15, "TA49_PERF_SEL_TA_BUSY", "TA49", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA49_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA49", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA49_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA49", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA49_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA49", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA49_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA49", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA49_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA49", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA49_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA49", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA49_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA49", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA49_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA49", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA49_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA49", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA49_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA49", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA49_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA49", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA49_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA49", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA49_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA49", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA49_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA49", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA49_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA49", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA50ExposedCountersGfx10[] = {
    {15, "TA50_PERF_SEL_TA_BUSY", "TA50", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA50_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA50", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA50_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA50", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA50_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA50", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA50_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA50", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA50_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA50", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA50_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA50", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA50_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA50", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA50_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA50", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA50_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA50", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA50_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA50", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA50_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA50", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA50_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA50", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA50_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA50", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA50_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA50", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA50_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA50", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA51ExposedCountersGfx10[] = {
    {15, "TA51_PERF_SEL_TA_BUSY", "TA51", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA51_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA51", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA51_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA51", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA51_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA51", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA51_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA51", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA51_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA51", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA51_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA51", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA51_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA51", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA51_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA51", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA51_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA51", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA51_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA51", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA51_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA51", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA51_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA51", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA51_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA51", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA51_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA51", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA51_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA51", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA52ExposedCountersGfx10[] = {
    {15, "TA52_PERF_SEL_TA_BUSY", "TA52", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA52_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA52", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA52_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA52", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA52_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA52", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA52_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA52", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA52_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA52", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA52_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA52", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA52_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA52", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA52_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA52", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA52_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA52", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA52_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA52", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA52_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA52", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA52_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA52", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA52_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA52", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA52_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA52", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA52_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA52", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA53ExposedCountersGfx10[] = {
    {15, "TA53_PERF_SEL_TA_BUSY", "TA53", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA53_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA53", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA53_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA53", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA53_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA53", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA53_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA53", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA53_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA53", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA53_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA53", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA53_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA53", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA53_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA53", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA53_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA53", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA53_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA53", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA53_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA53", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA53_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA53", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA53_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA53", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA53_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA53", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA53_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA53", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA54ExposedCountersGfx10[] = {
    {15, "TA54_PERF_SEL_TA_BUSY", "TA54", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA54_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA54", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA54_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA54", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA54_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA54", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA54_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA54", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA54_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA54", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA54_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA54", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA54_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA54", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA54_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA54", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA54_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA54", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA54_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA54", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA54_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA54", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA54_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA54", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA54_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA54", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA54_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA54", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA54_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA54", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA55ExposedCountersGfx10[] = {
    {15, "TA55_PERF_SEL_TA_BUSY", "TA55", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA55_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA55", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA55_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA55", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA55_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA55", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA55_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA55", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA55_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA55", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA55_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA55", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA55_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA55", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA55_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA55", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA55_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA55", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA55_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA55", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA55_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA55", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA55_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA55", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA55_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA55", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA55_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA55", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA55_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA55", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA56ExposedCountersGfx10[] = {
    {15, "TA56_PERF_SEL_TA_BUSY", "TA56", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA56_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA56", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA56_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA56", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA56_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA56", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA56_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA56", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA56_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA56", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA56_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA56", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA56_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA56", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA56_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA56", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA56_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA56", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA56_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA56", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA56_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA56", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA56_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA56", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA56_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA56", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA56_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA56", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA56_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA56", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA57ExposedCountersGfx10[] = {
    {15, "TA57_PERF_SEL_TA_BUSY", "TA57", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA57_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA57", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA57_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA57", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA57_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA57", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA57_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA57", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA57_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA57", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA57_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA57", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA57_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA57", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA57_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA57", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA57_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA57", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA57_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA57", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA57_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA57", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA57_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA57", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA57_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA57", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA57_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA57", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA57_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA57", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA58ExposedCountersGfx10[] = {
    {15, "TA58_PERF_SEL_TA_BUSY", "TA58", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA58_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA58", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA58_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA58", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA58_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA58", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA58_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA58", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA58_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA58", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA58_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA58", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA58_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA58", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA58_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA58", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA58_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA58", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA58_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA58", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA58_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA58", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA58_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA58", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA58_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA58", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA58_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA58", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA58_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA58", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA59ExposedCountersGfx10[] = {
    {15, "TA59_PERF_SEL_TA_BUSY", "TA59", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA59_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA59", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA59_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA59", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA59_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA59", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA59_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA59", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA59_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA59", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA59_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA59", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA59_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA59", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA59_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA59", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA59_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA59", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA59_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA59", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA59_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA59", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA59_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA59", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA59_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA59", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA59_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA59", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA59_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA59", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA60ExposedCountersGfx10[] = {
    {15, "TA60_PERF_SEL_TA_BUSY", "TA60", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA60_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA60", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA60_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA60", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA60_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA60", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA60_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA60", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA60_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA60", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA60_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA60", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA60_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA60", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA60_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA60", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA60_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA60", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA60_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA60", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA60_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA60", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA60_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA60", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA60_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA60", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA60_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA60", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA60_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA60", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA61ExposedCountersGfx10[] = {
    {15, "TA61_PERF_SEL_TA_BUSY", "TA61", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA61_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA61", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA61_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA61", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA61_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA61", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA61_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA61", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA61_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA61", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA61_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA61", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA61_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA61", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA61_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA61", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA61_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA61", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA61_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA61", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA61_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA61", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA61_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA61", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA61_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA61", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA61_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA61", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA61_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA61", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA62ExposedCountersGfx10[] = {
    {15, "TA62_PERF_SEL_TA_BUSY", "TA62", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA62_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA62", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA62_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA62", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA62_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA62", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA62_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA62", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA62_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA62", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA62_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA62", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA62_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA62", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA62_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA62", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA62_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA62", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA62_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA62", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA62_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA62", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA62_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA62", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA62_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA62", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA62_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA62", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA62_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA62", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA63ExposedCountersGfx10[] = {
    {15, "TA63_PERF_SEL_TA_BUSY", "TA63", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA63_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA63", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA63_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA63", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA63_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA63", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA63_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA63", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA63_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA63", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA63_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA63", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA63_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA63", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA63_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA63", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA63_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA63", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA63_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA63", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA63_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA63", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA63_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA63", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA63_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA63", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA63_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA63", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA63_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA63", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA64ExposedCountersGfx10[] = {
    {15, "TA64_PERF_SEL_TA_BUSY", "TA64", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA64_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA64", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA64_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA64", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA64_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA64", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA64_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA64", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA64_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA64", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA64_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA64", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA64_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA64", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA64_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA64", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA64_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA64", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA64_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA64", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA64_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA64", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA64_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA64", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA64_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA64", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA64_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA64", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA64_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA64", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA65ExposedCountersGfx10[] = {
    {15, "TA65_PERF_SEL_TA_BUSY", "TA65", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA65_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA65", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA65_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA65", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA65_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA65", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA65_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA65", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA65_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA65", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA65_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA65", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA65_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA65", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA65_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA65", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA65_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA65", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA65_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA65", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA65_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA65", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA65_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA65", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA65_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA65", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA65_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA65", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA65_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA65", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA66ExposedCountersGfx10[] = {
    {15, "TA66_PERF_SEL_TA_BUSY", "TA66", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA66_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA66", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA66_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA66", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA66_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA66", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA66_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA66", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA66_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA66", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA66_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA66", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA66_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA66", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA66_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA66", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA66_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA66", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA66_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA66", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA66_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA66", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA66_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA66", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA66_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA66", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA66_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA66", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA66_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA66", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA67ExposedCountersGfx10[] = {
    {15, "TA67_PERF_SEL_TA_BUSY", "TA67", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA67_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA67", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA67_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA67", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA67_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA67", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA67_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA67", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA67_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA67", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA67_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA67", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA67_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA67", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA67_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA67", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA67_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA67", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA67_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA67", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA67_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA67", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA67_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA67", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA67_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA67", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA67_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA67", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA67_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA67", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA68ExposedCountersGfx10[] = {
    {15, "TA68_PERF_SEL_TA_BUSY", "TA68", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA68_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA68", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA68_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA68", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA68_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA68", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA68_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA68", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA68_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA68", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA68_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA68", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA68_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA68", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA68_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA68", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA68_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA68", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA68_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA68", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA68_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA68", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA68_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA68", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA68_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA68", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA68_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA68", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA68_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA68", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA69ExposedCountersGfx10[] = {
    {15, "TA69_PERF_SEL_TA_BUSY", "TA69", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA69_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA69", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA69_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA69", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA69_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA69", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA69_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA69", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA69_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA69", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA69_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA69", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA69_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA69", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA69_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA69", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA69_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA69", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA69_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA69", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA69_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA69", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA69_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA69", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA69_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA69", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA69_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA69", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA69_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA69", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA70ExposedCountersGfx10[] = {
    {15, "TA70_PERF_SEL_TA_BUSY", "TA70", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA70_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA70", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA70_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA70", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA70_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA70", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA70_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA70", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA70_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA70", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA70_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA70", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA70_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA70", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA70_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA70", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA70_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA70", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA70_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA70", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA70_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA70", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA70_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA70", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA70_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA70", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA70_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA70", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA70_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA70", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA71ExposedCountersGfx10[] = {
    {15, "TA71_PERF_SEL_TA_BUSY", "TA71", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA71_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA71", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA71_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA71", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA71_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA71", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA71_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA71", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA71_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA71", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA71_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA71", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA71_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA71", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA71_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA71", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA71_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA71", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA71_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA71", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA71_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA71", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA71_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA71", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA71_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA71", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA71_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA71", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA71_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA71", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA72ExposedCountersGfx10[] = {
    {15, "TA72_PERF_SEL_TA_BUSY", "TA72", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA72_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA72", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA72_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA72", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA72_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA72", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA72_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA72", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA72_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA72", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA72_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA72", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA72_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA72", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA72_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA72", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA72_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA72", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA72_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA72", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA72_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA72", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA72_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA72", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA72_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA72", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA72_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA72", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA72_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA72", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA73ExposedCountersGfx10[] = {
    {15, "TA73_PERF_SEL_TA_BUSY", "TA73", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA73_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA73", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA73_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA73", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA73_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA73", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA73_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA73", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA73_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA73", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA73_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA73", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA73_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA73", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA73_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA73", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA73_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA73", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA73_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA73", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA73_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA73", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA73_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA73", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA73_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA73", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA73_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA73", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA73_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA73", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA74ExposedCountersGfx10[] = {
    {15, "TA74_PERF_SEL_TA_BUSY", "TA74", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA74_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA74", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA74_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA74", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA74_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA74", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA74_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA74", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA74_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA74", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA74_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA74", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA74_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA74", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA74_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA74", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA74_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA74", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA74_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA74", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA74_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA74", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA74_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA74", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA74_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA74", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA74_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA74", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA74_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA74", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA75ExposedCountersGfx10[] = {
    {15, "TA75_PERF_SEL_TA_BUSY", "TA75", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA75_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA75", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA75_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA75", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA75_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA75", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA75_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA75", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA75_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA75", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA75_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA75", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA75_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA75", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA75_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA75", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA75_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA75", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA75_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA75", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA75_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA75", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA75_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA75", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA75_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA75", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA75_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA75", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA75_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA75", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA76ExposedCountersGfx10[] = {
    {15, "TA76_PERF_SEL_TA_BUSY", "TA76", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA76_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA76", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA76_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA76", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA76_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA76", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA76_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA76", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA76_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA76", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA76_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA76", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA76_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA76", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA76_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA76", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA76_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA76", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA76_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA76", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA76_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA76", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA76_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA76", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA76_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA76", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA76_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA76", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA76_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA76", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA77ExposedCountersGfx10[] = {
    {15, "TA77_PERF_SEL_TA_BUSY", "TA77", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA77_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA77", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA77_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA77", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA77_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA77", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA77_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA77", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA77_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA77", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA77_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA77", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA77_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA77", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA77_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA77", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA77_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA77", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA77_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA77", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA77_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA77", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA77_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA77", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA77_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA77", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA77_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA77", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA77_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA77", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA78ExposedCountersGfx10[] = {
    {15, "TA78_PERF_SEL_TA_BUSY", "TA78", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA78_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA78", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA78_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA78", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA78_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA78", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA78_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA78", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA78_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA78", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA78_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA78", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA78_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA78", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA78_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA78", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA78_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA78", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA78_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA78", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA78_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA78", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA78_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA78", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA78_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA78", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA78_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA78", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA78_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA78", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TA79ExposedCountersGfx10[] = {
    {15, "TA79_PERF_SEL_TA_BUSY", "TA79", "TA block is busy. Perf_Windowing not supported for this counter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {68, "TA79_PERF_SEL_MIP_1_CYCLE_PIXELS", "TA79", "Number of pixels requiring sampler state machine to take 1 cycle due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {69, "TA79_PERF_SEL_MIP_2_CYCLE_PIXELS", "TA79", "Number of pixels requiring sampler state machine to take 2 cycles due to mip filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {70, "TA79_PERF_SEL_VOL_1_CYCLE_PIXELS", "TA79", "Number of pixels requiring sampler state machine to take 1 cycle due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {71, "TA79_PERF_SEL_VOL_2_CYCLE_PIXELS", "TA79", "Number of pixels requiring sampler state machine to take 2 cycles due to z filter.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "TA79_PERF_SEL_ANISO_1_CYCLE_QUADS", "TA79", "Number of quads requiring 1 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "TA79_PERF_SEL_ANISO_2_CYCLE_QUADS", "TA79", "Number of quads requiring 2 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "TA79_PERF_SEL_ANISO_4_CYCLE_QUADS", "TA79", "Number of quads requiring 4 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "TA79_PERF_SEL_ANISO_6_CYCLE_QUADS", "TA79", "Number of quads requiring 6 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {93, "TA79_PERF_SEL_ANISO_8_CYCLE_QUADS", "TA79", "Number of quads requiring 8 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {94, "TA79_PERF_SEL_ANISO_10_CYCLE_QUADS", "TA79", "Number of quads requiring 10 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {95, "TA79_PERF_SEL_ANISO_12_CYCLE_QUADS", "TA79", "Number of quads requiring 12 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {96, "TA79_PERF_SEL_ANISO_14_CYCLE_QUADS", "TA79", "Number of quads requiring 14 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {97, "TA79_PERF_SEL_ANISO_16_CYCLE_QUADS", "TA79", "Number of quads requiring 16 aniso sample.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {101, "TA79_PERF_SEL_FLAT_READ_WAVEFRONTS", "TA79", "Number of flat opcode read vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {102, "TA79_PERF_SEL_FLAT_WRITE_WAVEFRONTS", "TA79", "Number of flat opcode write vec32 packets processed by the TA.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP0ExposedCountersGfx10[] = {
    {9, "TCP0_PERF_SEL_REQ", "TCP0", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP0_PERF_SEL_REQ_MISS", "TCP0", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP0_PERF_SEL_TCP_TA_REQ_STALL", "TCP0", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP1ExposedCountersGfx10[] = {
    {9, "TCP1_PERF_SEL_REQ", "TCP1", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP1_PERF_SEL_REQ_MISS", "TCP1", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP1_PERF_SEL_TCP_TA_REQ_STALL", "TCP1", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP2ExposedCountersGfx10[] = {
    {9, "TCP2_PERF_SEL_REQ", "TCP2", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP2_PERF_SEL_REQ_MISS", "TCP2", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP2_PERF_SEL_TCP_TA_REQ_STALL", "TCP2", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP3ExposedCountersGfx10[] = {
    {9, "TCP3_PERF_SEL_REQ", "TCP3", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP3_PERF_SEL_REQ_MISS", "TCP3", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP3_PERF_SEL_TCP_TA_REQ_STALL", "TCP3", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP4ExposedCountersGfx10[] = {
    {9, "TCP4_PERF_SEL_REQ", "TCP4", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP4_PERF_SEL_REQ_MISS", "TCP4", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP4_PERF_SEL_TCP_TA_REQ_STALL", "TCP4", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP5ExposedCountersGfx10[] = {
    {9, "TCP5_PERF_SEL_REQ", "TCP5", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP5_PERF_SEL_REQ_MISS", "TCP5", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP5_PERF_SEL_TCP_TA_REQ_STALL", "TCP5", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP6ExposedCountersGfx10[] = {
    {9, "TCP6_PERF_SEL_REQ", "TCP6", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP6_PERF_SEL_REQ_MISS", "TCP6", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP6_PERF_SEL_TCP_TA_REQ_STALL", "TCP6", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP7ExposedCountersGfx10[] = {
    {9, "TCP7_PERF_SEL_REQ", "TCP7", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP7_PERF_SEL_REQ_MISS", "TCP7", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP7_PERF_SEL_TCP_TA_REQ_STALL", "TCP7", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP8ExposedCountersGfx10[] = {
    {9, "TCP8_PERF_SEL_REQ", "TCP8", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP8_PERF_SEL_REQ_MISS", "TCP8", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP8_PERF_SEL_TCP_TA_REQ_STALL", "TCP8", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP9ExposedCountersGfx10[] = {
    {9, "TCP9_PERF_SEL_REQ", "TCP9", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP9_PERF_SEL_REQ_MISS", "TCP9", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP9_PERF_SEL_TCP_TA_REQ_STALL", "TCP9", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP10ExposedCountersGfx10[] = {
    {9, "TCP10_PERF_SEL_REQ", "TCP10", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP10_PERF_SEL_REQ_MISS", "TCP10", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP10_PERF_SEL_TCP_TA_REQ_STALL", "TCP10", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP11ExposedCountersGfx10[] = {
    {9, "TCP11_PERF_SEL_REQ", "TCP11", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP11_PERF_SEL_REQ_MISS", "TCP11", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP11_PERF_SEL_TCP_TA_REQ_STALL", "TCP11", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP12ExposedCountersGfx10[] = {
    {9, "TCP12_PERF_SEL_REQ", "TCP12", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP12_PERF_SEL_REQ_MISS", "TCP12", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP12_PERF_SEL_TCP_TA_REQ_STALL", "TCP12", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP13ExposedCountersGfx10[] = {
    {9, "TCP13_PERF_SEL_REQ", "TCP13", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP13_PERF_SEL_REQ_MISS", "TCP13", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP13_PERF_SEL_TCP_TA_REQ_STALL", "TCP13", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP14ExposedCountersGfx10[] = {
    {9, "TCP14_PERF_SEL_REQ", "TCP14", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP14_PERF_SEL_REQ_MISS", "TCP14", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP14_PERF_SEL_TCP_TA_REQ_STALL", "TCP14", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP15ExposedCountersGfx10[] = {
    {9, "TCP15_PERF_SEL_REQ", "TCP15", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP15_PERF_SEL_REQ_MISS", "TCP15", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP15_PERF_SEL_TCP_TA_REQ_STALL", "TCP15", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP16ExposedCountersGfx10[] = {
    {9, "TCP16_PERF_SEL_REQ", "TCP16", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP16_PERF_SEL_REQ_MISS", "TCP16", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP16_PERF_SEL_TCP_TA_REQ_STALL", "TCP16", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP17ExposedCountersGfx10[] = {
    {9, "TCP17_PERF_SEL_REQ", "TCP17", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP17_PERF_SEL_REQ_MISS", "TCP17", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP17_PERF_SEL_TCP_TA_REQ_STALL", "TCP17", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP18ExposedCountersGfx10[] = {
    {9, "TCP18_PERF_SEL_REQ", "TCP18", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP18_PERF_SEL_REQ_MISS", "TCP18", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP18_PERF_SEL_TCP_TA_REQ_STALL", "TCP18", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP19ExposedCountersGfx10[] = {
    {9, "TCP19_PERF_SEL_REQ", "TCP19", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP19_PERF_SEL_REQ_MISS", "TCP19", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP19_PERF_SEL_TCP_TA_REQ_STALL", "TCP19", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP20ExposedCountersGfx10[] = {
    {9, "TCP20_PERF_SEL_REQ", "TCP20", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP20_PERF_SEL_REQ_MISS", "TCP20", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP20_PERF_SEL_TCP_TA_REQ_STALL", "TCP20", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP21ExposedCountersGfx10[] = {
    {9, "TCP21_PERF_SEL_REQ", "TCP21", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP21_PERF_SEL_REQ_MISS", "TCP21", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP21_PERF_SEL_TCP_TA_REQ_STALL", "TCP21", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP22ExposedCountersGfx10[] = {
    {9, "TCP22_PERF_SEL_REQ", "TCP22", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP22_PERF_SEL_REQ_MISS", "TCP22", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP22_PERF_SEL_TCP_TA_REQ_STALL", "TCP22", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP23ExposedCountersGfx10[] = {
    {9, "TCP23_PERF_SEL_REQ", "TCP23", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP23_PERF_SEL_REQ_MISS", "TCP23", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP23_PERF_SEL_TCP_TA_REQ_STALL", "TCP23", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP24ExposedCountersGfx10[] = {
    {9, "TCP24_PERF_SEL_REQ", "TCP24", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP24_PERF_SEL_REQ_MISS", "TCP24", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP24_PERF_SEL_TCP_TA_REQ_STALL", "TCP24", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP25ExposedCountersGfx10[] = {
    {9, "TCP25_PERF_SEL_REQ", "TCP25", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP25_PERF_SEL_REQ_MISS", "TCP25", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP25_PERF_SEL_TCP_TA_REQ_STALL", "TCP25", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP26ExposedCountersGfx10[] = {
    {9, "TCP26_PERF_SEL_REQ", "TCP26", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP26_PERF_SEL_REQ_MISS", "TCP26", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP26_PERF_SEL_TCP_TA_REQ_STALL", "TCP26", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP27ExposedCountersGfx10[] = {
    {9, "TCP27_PERF_SEL_REQ", "TCP27", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP27_PERF_SEL_REQ_MISS", "TCP27", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP27_PERF_SEL_TCP_TA_REQ_STALL", "TCP27", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP28ExposedCountersGfx10[] = {
    {9, "TCP28_PERF_SEL_REQ", "TCP28", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP28_PERF_SEL_REQ_MISS", "TCP28", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP28_PERF_SEL_TCP_TA_REQ_STALL", "TCP28", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP29ExposedCountersGfx10[] = {
    {9, "TCP29_PERF_SEL_REQ", "TCP29", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP29_PERF_SEL_REQ_MISS", "TCP29", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP29_PERF_SEL_TCP_TA_REQ_STALL", "TCP29", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP30ExposedCountersGfx10[] = {
    {9, "TCP30_PERF_SEL_REQ", "TCP30", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP30_PERF_SEL_REQ_MISS", "TCP30", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP30_PERF_SEL_TCP_TA_REQ_STALL", "TCP30", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP31ExposedCountersGfx10[] = {
    {9, "TCP31_PERF_SEL_REQ", "TCP31", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP31_PERF_SEL_REQ_MISS", "TCP31", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP31_PERF_SEL_TCP_TA_REQ_STALL", "TCP31", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP32ExposedCountersGfx10[] = {
    {9, "TCP32_PERF_SEL_REQ", "TCP32", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP32_PERF_SEL_REQ_MISS", "TCP32", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP32_PERF_SEL_TCP_TA_REQ_STALL", "TCP32", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP33ExposedCountersGfx10[] = {
    {9, "TCP33_PERF_SEL_REQ", "TCP33", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP33_PERF_SEL_REQ_MISS", "TCP33", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP33_PERF_SEL_TCP_TA_REQ_STALL", "TCP33", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP34ExposedCountersGfx10[] = {
    {9, "TCP34_PERF_SEL_REQ", "TCP34", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP34_PERF_SEL_REQ_MISS", "TCP34", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP34_PERF_SEL_TCP_TA_REQ_STALL", "TCP34", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP35ExposedCountersGfx10[] = {
    {9, "TCP35_PERF_SEL_REQ", "TCP35", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP35_PERF_SEL_REQ_MISS", "TCP35", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP35_PERF_SEL_TCP_TA_REQ_STALL", "TCP35", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP36ExposedCountersGfx10[] = {
    {9, "TCP36_PERF_SEL_REQ", "TCP36", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP36_PERF_SEL_REQ_MISS", "TCP36", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP36_PERF_SEL_TCP_TA_REQ_STALL", "TCP36", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP37ExposedCountersGfx10[] = {
    {9, "TCP37_PERF_SEL_REQ", "TCP37", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP37_PERF_SEL_REQ_MISS", "TCP37", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP37_PERF_SEL_TCP_TA_REQ_STALL", "TCP37", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP38ExposedCountersGfx10[] = {
    {9, "TCP38_PERF_SEL_REQ", "TCP38", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP38_PERF_SEL_REQ_MISS", "TCP38", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP38_PERF_SEL_TCP_TA_REQ_STALL", "TCP38", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP39ExposedCountersGfx10[] = {
    {9, "TCP39_PERF_SEL_REQ", "TCP39", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP39_PERF_SEL_REQ_MISS", "TCP39", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP39_PERF_SEL_TCP_TA_REQ_STALL", "TCP39", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP40ExposedCountersGfx10[] = {
    {9, "TCP40_PERF_SEL_REQ", "TCP40", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP40_PERF_SEL_REQ_MISS", "TCP40", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP40_PERF_SEL_TCP_TA_REQ_STALL", "TCP40", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP41ExposedCountersGfx10[] = {
    {9, "TCP41_PERF_SEL_REQ", "TCP41", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP41_PERF_SEL_REQ_MISS", "TCP41", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP41_PERF_SEL_TCP_TA_REQ_STALL", "TCP41", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP42ExposedCountersGfx10[] = {
    {9, "TCP42_PERF_SEL_REQ", "TCP42", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP42_PERF_SEL_REQ_MISS", "TCP42", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP42_PERF_SEL_TCP_TA_REQ_STALL", "TCP42", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP43ExposedCountersGfx10[] = {
    {9, "TCP43_PERF_SEL_REQ", "TCP43", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP43_PERF_SEL_REQ_MISS", "TCP43", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP43_PERF_SEL_TCP_TA_REQ_STALL", "TCP43", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP44ExposedCountersGfx10[] = {
    {9, "TCP44_PERF_SEL_REQ", "TCP44", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP44_PERF_SEL_REQ_MISS", "TCP44", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP44_PERF_SEL_TCP_TA_REQ_STALL", "TCP44", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP45ExposedCountersGfx10[] = {
    {9, "TCP45_PERF_SEL_REQ", "TCP45", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP45_PERF_SEL_REQ_MISS", "TCP45", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP45_PERF_SEL_TCP_TA_REQ_STALL", "TCP45", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP46ExposedCountersGfx10[] = {
    {9, "TCP46_PERF_SEL_REQ", "TCP46", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP46_PERF_SEL_REQ_MISS", "TCP46", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP46_PERF_SEL_TCP_TA_REQ_STALL", "TCP46", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP47ExposedCountersGfx10[] = {
    {9, "TCP47_PERF_SEL_REQ", "TCP47", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP47_PERF_SEL_REQ_MISS", "TCP47", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP47_PERF_SEL_TCP_TA_REQ_STALL", "TCP47", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP48ExposedCountersGfx10[] = {
    {9, "TCP48_PERF_SEL_REQ", "TCP48", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP48_PERF_SEL_REQ_MISS", "TCP48", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP48_PERF_SEL_TCP_TA_REQ_STALL", "TCP48", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP49ExposedCountersGfx10[] = {
    {9, "TCP49_PERF_SEL_REQ", "TCP49", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP49_PERF_SEL_REQ_MISS", "TCP49", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP49_PERF_SEL_TCP_TA_REQ_STALL", "TCP49", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP50ExposedCountersGfx10[] = {
    {9, "TCP50_PERF_SEL_REQ", "TCP50", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP50_PERF_SEL_REQ_MISS", "TCP50", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP50_PERF_SEL_TCP_TA_REQ_STALL", "TCP50", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP51ExposedCountersGfx10[] = {
    {9, "TCP51_PERF_SEL_REQ", "TCP51", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP51_PERF_SEL_REQ_MISS", "TCP51", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP51_PERF_SEL_TCP_TA_REQ_STALL", "TCP51", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP52ExposedCountersGfx10[] = {
    {9, "TCP52_PERF_SEL_REQ", "TCP52", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP52_PERF_SEL_REQ_MISS", "TCP52", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP52_PERF_SEL_TCP_TA_REQ_STALL", "TCP52", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP53ExposedCountersGfx10[] = {
    {9, "TCP53_PERF_SEL_REQ", "TCP53", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP53_PERF_SEL_REQ_MISS", "TCP53", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP53_PERF_SEL_TCP_TA_REQ_STALL", "TCP53", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP54ExposedCountersGfx10[] = {
    {9, "TCP54_PERF_SEL_REQ", "TCP54", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP54_PERF_SEL_REQ_MISS", "TCP54", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP54_PERF_SEL_TCP_TA_REQ_STALL", "TCP54", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP55ExposedCountersGfx10[] = {
    {9, "TCP55_PERF_SEL_REQ", "TCP55", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP55_PERF_SEL_REQ_MISS", "TCP55", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP55_PERF_SEL_TCP_TA_REQ_STALL", "TCP55", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP56ExposedCountersGfx10[] = {
    {9, "TCP56_PERF_SEL_REQ", "TCP56", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP56_PERF_SEL_REQ_MISS", "TCP56", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP56_PERF_SEL_TCP_TA_REQ_STALL", "TCP56", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP57ExposedCountersGfx10[] = {
    {9, "TCP57_PERF_SEL_REQ", "TCP57", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP57_PERF_SEL_REQ_MISS", "TCP57", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP57_PERF_SEL_TCP_TA_REQ_STALL", "TCP57", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP58ExposedCountersGfx10[] = {
    {9, "TCP58_PERF_SEL_REQ", "TCP58", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP58_PERF_SEL_REQ_MISS", "TCP58", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP58_PERF_SEL_TCP_TA_REQ_STALL", "TCP58", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP59ExposedCountersGfx10[] = {
    {9, "TCP59_PERF_SEL_REQ", "TCP59", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP59_PERF_SEL_REQ_MISS", "TCP59", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP59_PERF_SEL_TCP_TA_REQ_STALL", "TCP59", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP60ExposedCountersGfx10[] = {
    {9, "TCP60_PERF_SEL_REQ", "TCP60", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP60_PERF_SEL_REQ_MISS", "TCP60", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP60_PERF_SEL_TCP_TA_REQ_STALL", "TCP60", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP61ExposedCountersGfx10[] = {
    {9, "TCP61_PERF_SEL_REQ", "TCP61", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP61_PERF_SEL_REQ_MISS", "TCP61", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP61_PERF_SEL_TCP_TA_REQ_STALL", "TCP61", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP62ExposedCountersGfx10[] = {
    {9, "TCP62_PERF_SEL_REQ", "TCP62", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP62_PERF_SEL_REQ_MISS", "TCP62", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP62_PERF_SEL_TCP_TA_REQ_STALL", "TCP62", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP63ExposedCountersGfx10[] = {
    {9, "TCP63_PERF_SEL_REQ", "TCP63", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP63_PERF_SEL_REQ_MISS", "TCP63", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP63_PERF_SEL_TCP_TA_REQ_STALL", "TCP63", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP64ExposedCountersGfx10[] = {
    {9, "TCP64_PERF_SEL_REQ", "TCP64", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP64_PERF_SEL_REQ_MISS", "TCP64", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP64_PERF_SEL_TCP_TA_REQ_STALL", "TCP64", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP65ExposedCountersGfx10[] = {
    {9, "TCP65_PERF_SEL_REQ", "TCP65", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP65_PERF_SEL_REQ_MISS", "TCP65", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP65_PERF_SEL_TCP_TA_REQ_STALL", "TCP65", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP66ExposedCountersGfx10[] = {
    {9, "TCP66_PERF_SEL_REQ", "TCP66", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP66_PERF_SEL_REQ_MISS", "TCP66", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP66_PERF_SEL_TCP_TA_REQ_STALL", "TCP66", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP67ExposedCountersGfx10[] = {
    {9, "TCP67_PERF_SEL_REQ", "TCP67", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP67_PERF_SEL_REQ_MISS", "TCP67", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP67_PERF_SEL_TCP_TA_REQ_STALL", "TCP67", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP68ExposedCountersGfx10[] = {
    {9, "TCP68_PERF_SEL_REQ", "TCP68", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP68_PERF_SEL_REQ_MISS", "TCP68", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP68_PERF_SEL_TCP_TA_REQ_STALL", "TCP68", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP69ExposedCountersGfx10[] = {
    {9, "TCP69_PERF_SEL_REQ", "TCP69", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP69_PERF_SEL_REQ_MISS", "TCP69", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP69_PERF_SEL_TCP_TA_REQ_STALL", "TCP69", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP70ExposedCountersGfx10[] = {
    {9, "TCP70_PERF_SEL_REQ", "TCP70", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP70_PERF_SEL_REQ_MISS", "TCP70", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP70_PERF_SEL_TCP_TA_REQ_STALL", "TCP70", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP71ExposedCountersGfx10[] = {
    {9, "TCP71_PERF_SEL_REQ", "TCP71", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP71_PERF_SEL_REQ_MISS", "TCP71", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP71_PERF_SEL_TCP_TA_REQ_STALL", "TCP71", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP72ExposedCountersGfx10[] = {
    {9, "TCP72_PERF_SEL_REQ", "TCP72", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP72_PERF_SEL_REQ_MISS", "TCP72", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP72_PERF_SEL_TCP_TA_REQ_STALL", "TCP72", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP73ExposedCountersGfx10[] = {
    {9, "TCP73_PERF_SEL_REQ", "TCP73", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP73_PERF_SEL_REQ_MISS", "TCP73", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP73_PERF_SEL_TCP_TA_REQ_STALL", "TCP73", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP74ExposedCountersGfx10[] = {
    {9, "TCP74_PERF_SEL_REQ", "TCP74", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP74_PERF_SEL_REQ_MISS", "TCP74", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP74_PERF_SEL_TCP_TA_REQ_STALL", "TCP74", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP75ExposedCountersGfx10[] = {
    {9, "TCP75_PERF_SEL_REQ", "TCP75", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP75_PERF_SEL_REQ_MISS", "TCP75", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP75_PERF_SEL_TCP_TA_REQ_STALL", "TCP75", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP76ExposedCountersGfx10[] = {
    {9, "TCP76_PERF_SEL_REQ", "TCP76", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP76_PERF_SEL_REQ_MISS", "TCP76", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP76_PERF_SEL_TCP_TA_REQ_STALL", "TCP76", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP77ExposedCountersGfx10[] = {
    {9, "TCP77_PERF_SEL_REQ", "TCP77", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP77_PERF_SEL_REQ_MISS", "TCP77", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP77_PERF_SEL_TCP_TA_REQ_STALL", "TCP77", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP78ExposedCountersGfx10[] = {
    {9, "TCP78_PERF_SEL_REQ", "TCP78", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP78_PERF_SEL_REQ_MISS", "TCP78", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP78_PERF_SEL_TCP_TA_REQ_STALL", "TCP78", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc TCP79ExposedCountersGfx10[] = {
    {9, "TCP79_PERF_SEL_REQ", "TCP79", "Total cache line accesses", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "TCP79_PERF_SEL_REQ_MISS", "TCP79", "Total cache requests that missed", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {36, "TCP79_PERF_SEL_TCP_TA_REQ_STALL", "TCP79", "TCP stalls TA req interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C0ExposedCountersGfx10[] = {
    {3, "GL2C0_PERF_SEL_REQ", "GL2C0", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C0_PERF_SEL_MISS", "GL2C0", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C0_PERF_SEL_MC_WRREQ", "GL2C0", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C0_PERF_SEL_EA_WRREQ_64B", "GL2C0", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C0_PERF_SEL_MC_WRREQ_STALL", "GL2C0", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C0_PERF_SEL_EA_RDREQ_32B", "GL2C0", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C0_PERF_SEL_EA_RDREQ_64B", "GL2C0", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C0_PERF_SEL_EA_RDREQ_96B", "GL2C0", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C0_PERF_SEL_EA_RDREQ_128B", "GL2C0", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C1ExposedCountersGfx10[] = {
    {3, "GL2C1_PERF_SEL_REQ", "GL2C1", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C1_PERF_SEL_MISS", "GL2C1", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C1_PERF_SEL_MC_WRREQ", "GL2C1", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C1_PERF_SEL_EA_WRREQ_64B", "GL2C1", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C1_PERF_SEL_MC_WRREQ_STALL", "GL2C1", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C1_PERF_SEL_EA_RDREQ_32B", "GL2C1", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C1_PERF_SEL_EA_RDREQ_64B", "GL2C1", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C1_PERF_SEL_EA_RDREQ_96B", "GL2C1", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C1_PERF_SEL_EA_RDREQ_128B", "GL2C1", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C2ExposedCountersGfx10[] = {
    {3, "GL2C2_PERF_SEL_REQ", "GL2C2", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C2_PERF_SEL_MISS", "GL2C2", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C2_PERF_SEL_MC_WRREQ", "GL2C2", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C2_PERF_SEL_EA_WRREQ_64B", "GL2C2", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C2_PERF_SEL_MC_WRREQ_STALL", "GL2C2", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C2_PERF_SEL_EA_RDREQ_32B", "GL2C2", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C2_PERF_SEL_EA_RDREQ_64B", "GL2C2", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C2_PERF_SEL_EA_RDREQ_96B", "GL2C2", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C2_PERF_SEL_EA_RDREQ_128B", "GL2C2", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C3ExposedCountersGfx10[] = {
    {3, "GL2C3_PERF_SEL_REQ", "GL2C3", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C3_PERF_SEL_MISS", "GL2C3", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C3_PERF_SEL_MC_WRREQ", "GL2C3", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C3_PERF_SEL_EA_WRREQ_64B", "GL2C3", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C3_PERF_SEL_MC_WRREQ_STALL", "GL2C3", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C3_PERF_SEL_EA_RDREQ_32B", "GL2C3", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C3_PERF_SEL_EA_RDREQ_64B", "GL2C3", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C3_PERF_SEL_EA_RDREQ_96B", "GL2C3", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C3_PERF_SEL_EA_RDREQ_128B", "GL2C3", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C4ExposedCountersGfx10[] = {
    {3, "GL2C4_PERF_SEL_REQ", "GL2C4", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C4_PERF_SEL_MISS", "GL2C4", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C4_PERF_SEL_MC_WRREQ", "GL2C4", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C4_PERF_SEL_EA_WRREQ_64B", "GL2C4", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C4_PERF_SEL_MC_WRREQ_STALL", "GL2C4", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C4_PERF_SEL_EA_RDREQ_32B", "GL2C4", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C4_PERF_SEL_EA_RDREQ_64B", "GL2C4", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C4_PERF_SEL_EA_RDREQ_96B", "GL2C4", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C4_PERF_SEL_EA_RDREQ_128B", "GL2C4", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C5ExposedCountersGfx10[] = {
    {3, "GL2C5_PERF_SEL_REQ", "GL2C5", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C5_PERF_SEL_MISS", "GL2C5", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C5_PERF_SEL_MC_WRREQ", "GL2C5", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C5_PERF_SEL_EA_WRREQ_64B", "GL2C5", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C5_PERF_SEL_MC_WRREQ_STALL", "GL2C5", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C5_PERF_SEL_EA_RDREQ_32B", "GL2C5", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C5_PERF_SEL_EA_RDREQ_64B", "GL2C5", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C5_PERF_SEL_EA_RDREQ_96B", "GL2C5", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C5_PERF_SEL_EA_RDREQ_128B", "GL2C5", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C6ExposedCountersGfx10[] = {
    {3, "GL2C6_PERF_SEL_REQ", "GL2C6", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C6_PERF_SEL_MISS", "GL2C6", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C6_PERF_SEL_MC_WRREQ", "GL2C6", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C6_PERF_SEL_EA_WRREQ_64B", "GL2C6", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C6_PERF_SEL_MC_WRREQ_STALL", "GL2C6", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C6_PERF_SEL_EA_RDREQ_32B", "GL2C6", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C6_PERF_SEL_EA_RDREQ_64B", "GL2C6", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C6_PERF_SEL_EA_RDREQ_96B", "GL2C6", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C6_PERF_SEL_EA_RDREQ_128B", "GL2C6", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C7ExposedCountersGfx10[] = {
    {3, "GL2C7_PERF_SEL_REQ", "GL2C7", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C7_PERF_SEL_MISS", "GL2C7", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C7_PERF_SEL_MC_WRREQ", "GL2C7", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C7_PERF_SEL_EA_WRREQ_64B", "GL2C7", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C7_PERF_SEL_MC_WRREQ_STALL", "GL2C7", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C7_PERF_SEL_EA_RDREQ_32B", "GL2C7", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C7_PERF_SEL_EA_RDREQ_64B", "GL2C7", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C7_PERF_SEL_EA_RDREQ_96B", "GL2C7", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C7_PERF_SEL_EA_RDREQ_128B", "GL2C7", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C8ExposedCountersGfx10[] = {
    {3, "GL2C8_PERF_SEL_REQ", "GL2C8", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C8_PERF_SEL_MISS", "GL2C8", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C8_PERF_SEL_MC_WRREQ", "GL2C8", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C8_PERF_SEL_EA_WRREQ_64B", "GL2C8", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C8_PERF_SEL_MC_WRREQ_STALL", "GL2C8", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C8_PERF_SEL_EA_RDREQ_32B", "GL2C8", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C8_PERF_SEL_EA_RDREQ_64B", "GL2C8", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C8_PERF_SEL_EA_RDREQ_96B", "GL2C8", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C8_PERF_SEL_EA_RDREQ_128B", "GL2C8", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C9ExposedCountersGfx10[] = {
    {3, "GL2C9_PERF_SEL_REQ", "GL2C9", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C9_PERF_SEL_MISS", "GL2C9", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C9_PERF_SEL_MC_WRREQ", "GL2C9", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C9_PERF_SEL_EA_WRREQ_64B", "GL2C9", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C9_PERF_SEL_MC_WRREQ_STALL", "GL2C9", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C9_PERF_SEL_EA_RDREQ_32B", "GL2C9", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C9_PERF_SEL_EA_RDREQ_64B", "GL2C9", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C9_PERF_SEL_EA_RDREQ_96B", "GL2C9", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C9_PERF_SEL_EA_RDREQ_128B", "GL2C9", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C10ExposedCountersGfx10[] = {
    {3, "GL2C10_PERF_SEL_REQ", "GL2C10", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C10_PERF_SEL_MISS", "GL2C10", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C10_PERF_SEL_MC_WRREQ", "GL2C10", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C10_PERF_SEL_EA_WRREQ_64B", "GL2C10", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C10_PERF_SEL_MC_WRREQ_STALL", "GL2C10", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C10_PERF_SEL_EA_RDREQ_32B", "GL2C10", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C10_PERF_SEL_EA_RDREQ_64B", "GL2C10", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C10_PERF_SEL_EA_RDREQ_96B", "GL2C10", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C10_PERF_SEL_EA_RDREQ_128B", "GL2C10", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C11ExposedCountersGfx10[] = {
    {3, "GL2C11_PERF_SEL_REQ", "GL2C11", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C11_PERF_SEL_MISS", "GL2C11", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C11_PERF_SEL_MC_WRREQ", "GL2C11", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C11_PERF_SEL_EA_WRREQ_64B", "GL2C11", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C11_PERF_SEL_MC_WRREQ_STALL", "GL2C11", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C11_PERF_SEL_EA_RDREQ_32B", "GL2C11", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C11_PERF_SEL_EA_RDREQ_64B", "GL2C11", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C11_PERF_SEL_EA_RDREQ_96B", "GL2C11", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C11_PERF_SEL_EA_RDREQ_128B", "GL2C11", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C12ExposedCountersGfx10[] = {
    {3, "GL2C12_PERF_SEL_REQ", "GL2C12", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C12_PERF_SEL_MISS", "GL2C12", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C12_PERF_SEL_MC_WRREQ", "GL2C12", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C12_PERF_SEL_EA_WRREQ_64B", "GL2C12", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C12_PERF_SEL_MC_WRREQ_STALL", "GL2C12", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C12_PERF_SEL_EA_RDREQ_32B", "GL2C12", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C12_PERF_SEL_EA_RDREQ_64B", "GL2C12", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C12_PERF_SEL_EA_RDREQ_96B", "GL2C12", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C12_PERF_SEL_EA_RDREQ_128B", "GL2C12", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C13ExposedCountersGfx10[] = {
    {3, "GL2C13_PERF_SEL_REQ", "GL2C13", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C13_PERF_SEL_MISS", "GL2C13", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C13_PERF_SEL_MC_WRREQ", "GL2C13", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C13_PERF_SEL_EA_WRREQ_64B", "GL2C13", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C13_PERF_SEL_MC_WRREQ_STALL", "GL2C13", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C13_PERF_SEL_EA_RDREQ_32B", "GL2C13", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C13_PERF_SEL_EA_RDREQ_64B", "GL2C13", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C13_PERF_SEL_EA_RDREQ_96B", "GL2C13", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C13_PERF_SEL_EA_RDREQ_128B", "GL2C13", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C14ExposedCountersGfx10[] = {
    {3, "GL2C14_PERF_SEL_REQ", "GL2C14", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C14_PERF_SEL_MISS", "GL2C14", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C14_PERF_SEL_MC_WRREQ", "GL2C14", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C14_PERF_SEL_EA_WRREQ_64B", "GL2C14", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C14_PERF_SEL_MC_WRREQ_STALL", "GL2C14", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C14_PERF_SEL_EA_RDREQ_32B", "GL2C14", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C14_PERF_SEL_EA_RDREQ_64B", "GL2C14", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C14_PERF_SEL_EA_RDREQ_96B", "GL2C14", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C14_PERF_SEL_EA_RDREQ_128B", "GL2C14", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C15ExposedCountersGfx10[] = {
    {3, "GL2C15_PERF_SEL_REQ", "GL2C15", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C15_PERF_SEL_MISS", "GL2C15", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C15_PERF_SEL_MC_WRREQ", "GL2C15", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C15_PERF_SEL_EA_WRREQ_64B", "GL2C15", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C15_PERF_SEL_MC_WRREQ_STALL", "GL2C15", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C15_PERF_SEL_EA_RDREQ_32B", "GL2C15", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C15_PERF_SEL_EA_RDREQ_64B", "GL2C15", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C15_PERF_SEL_EA_RDREQ_96B", "GL2C15", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C15_PERF_SEL_EA_RDREQ_128B", "GL2C15", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C16ExposedCountersGfx10[] = {
    {3, "GL2C16_PERF_SEL_REQ", "GL2C16", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C16_PERF_SEL_MISS", "GL2C16", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C16_PERF_SEL_MC_WRREQ", "GL2C16", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C16_PERF_SEL_EA_WRREQ_64B", "GL2C16", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C16_PERF_SEL_MC_WRREQ_STALL", "GL2C16", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C16_PERF_SEL_EA_RDREQ_32B", "GL2C16", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C16_PERF_SEL_EA_RDREQ_64B", "GL2C16", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C16_PERF_SEL_EA_RDREQ_96B", "GL2C16", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C16_PERF_SEL_EA_RDREQ_128B", "GL2C16", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C17ExposedCountersGfx10[] = {
    {3, "GL2C17_PERF_SEL_REQ", "GL2C17", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C17_PERF_SEL_MISS", "GL2C17", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C17_PERF_SEL_MC_WRREQ", "GL2C17", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C17_PERF_SEL_EA_WRREQ_64B", "GL2C17", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C17_PERF_SEL_MC_WRREQ_STALL", "GL2C17", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C17_PERF_SEL_EA_RDREQ_32B", "GL2C17", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C17_PERF_SEL_EA_RDREQ_64B", "GL2C17", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C17_PERF_SEL_EA_RDREQ_96B", "GL2C17", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C17_PERF_SEL_EA_RDREQ_128B", "GL2C17", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C18ExposedCountersGfx10[] = {
    {3, "GL2C18_PERF_SEL_REQ", "GL2C18", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C18_PERF_SEL_MISS", "GL2C18", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C18_PERF_SEL_MC_WRREQ", "GL2C18", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C18_PERF_SEL_EA_WRREQ_64B", "GL2C18", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C18_PERF_SEL_MC_WRREQ_STALL", "GL2C18", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C18_PERF_SEL_EA_RDREQ_32B", "GL2C18", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C18_PERF_SEL_EA_RDREQ_64B", "GL2C18", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C18_PERF_SEL_EA_RDREQ_96B", "GL2C18", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C18_PERF_SEL_EA_RDREQ_128B", "GL2C18", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C19ExposedCountersGfx10[] = {
    {3, "GL2C19_PERF_SEL_REQ", "GL2C19", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C19_PERF_SEL_MISS", "GL2C19", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C19_PERF_SEL_MC_WRREQ", "GL2C19", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C19_PERF_SEL_EA_WRREQ_64B", "GL2C19", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C19_PERF_SEL_MC_WRREQ_STALL", "GL2C19", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C19_PERF_SEL_EA_RDREQ_32B", "GL2C19", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C19_PERF_SEL_EA_RDREQ_64B", "GL2C19", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C19_PERF_SEL_EA_RDREQ_96B", "GL2C19", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C19_PERF_SEL_EA_RDREQ_128B", "GL2C19", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C20ExposedCountersGfx10[] = {
    {3, "GL2C20_PERF_SEL_REQ", "GL2C20", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C20_PERF_SEL_MISS", "GL2C20", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C20_PERF_SEL_MC_WRREQ", "GL2C20", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C20_PERF_SEL_EA_WRREQ_64B", "GL2C20", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C20_PERF_SEL_MC_WRREQ_STALL", "GL2C20", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C20_PERF_SEL_EA_RDREQ_32B", "GL2C20", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C20_PERF_SEL_EA_RDREQ_64B", "GL2C20", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C20_PERF_SEL_EA_RDREQ_96B", "GL2C20", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C20_PERF_SEL_EA_RDREQ_128B", "GL2C20", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C21ExposedCountersGfx10[] = {
    {3, "GL2C21_PERF_SEL_REQ", "GL2C21", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C21_PERF_SEL_MISS", "GL2C21", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C21_PERF_SEL_MC_WRREQ", "GL2C21", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C21_PERF_SEL_EA_WRREQ_64B", "GL2C21", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C21_PERF_SEL_MC_WRREQ_STALL", "GL2C21", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C21_PERF_SEL_EA_RDREQ_32B", "GL2C21", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C21_PERF_SEL_EA_RDREQ_64B", "GL2C21", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C21_PERF_SEL_EA_RDREQ_96B", "GL2C21", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C21_PERF_SEL_EA_RDREQ_128B", "GL2C21", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C22ExposedCountersGfx10[] = {
    {3, "GL2C22_PERF_SEL_REQ", "GL2C22", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C22_PERF_SEL_MISS", "GL2C22", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C22_PERF_SEL_MC_WRREQ", "GL2C22", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C22_PERF_SEL_EA_WRREQ_64B", "GL2C22", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C22_PERF_SEL_MC_WRREQ_STALL", "GL2C22", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C22_PERF_SEL_EA_RDREQ_32B", "GL2C22", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C22_PERF_SEL_EA_RDREQ_64B", "GL2C22", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C22_PERF_SEL_EA_RDREQ_96B", "GL2C22", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C22_PERF_SEL_EA_RDREQ_128B", "GL2C22", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL2C23ExposedCountersGfx10[] = {
    {3, "GL2C23_PERF_SEL_REQ", "GL2C23", "Number of requests of all types. This is measured at the tag block. This may be more than the number of requests arriving at the GL2C, but it is a good indication of the total amount of work that needs to be performed.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {35, "GL2C23_PERF_SEL_MISS", "GL2C23", "Number of cache misses. UC reads count as misses.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {75, "GL2C23_PERF_SEL_MC_WRREQ", "GL2C23", "Number of transactions (either 32-byte or 64-byte) going over the TC_EA_wrreq interface. Atomics may travel over the same interface and are generally classified as write requests. This does not include probe commands.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {76, "GL2C23_PERF_SEL_EA_WRREQ_64B", "GL2C23", "Number of 64-byte transactions going (64-byte write or CMPSWAP) over the TC_EA_wrreq interface.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {79, "GL2C23_PERF_SEL_MC_WRREQ_STALL", "GL2C23", "Number of cycles a write request was stalled.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {89, "GL2C23_PERF_SEL_EA_RDREQ_32B", "GL2C23", "Number of 32-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {90, "GL2C23_PERF_SEL_EA_RDREQ_64B", "GL2C23", "Number of 64-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {91, "GL2C23_PERF_SEL_EA_RDREQ_96B", "GL2C23", "Number of 96-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {92, "GL2C23_PERF_SEL_EA_RDREQ_128B", "GL2C23", "Number of 128-byte GL2C/EA read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C0ExposedCountersGfx10[] = {
    {14, "GL1C0_PERF_SEL_REQ", "GL1C0", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C0_PERF_SEL_REQ_MISS", "GL1C0", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C1ExposedCountersGfx10[] = {
    {14, "GL1C1_PERF_SEL_REQ", "GL1C1", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C1_PERF_SEL_REQ_MISS", "GL1C1", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C2ExposedCountersGfx10[] = {
    {14, "GL1C2_PERF_SEL_REQ", "GL1C2", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C2_PERF_SEL_REQ_MISS", "GL1C2", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C3ExposedCountersGfx10[] = {
    {14, "GL1C3_PERF_SEL_REQ", "GL1C3", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C3_PERF_SEL_REQ_MISS", "GL1C3", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C4ExposedCountersGfx10[] = {
    {14, "GL1C4_PERF_SEL_REQ", "GL1C4", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C4_PERF_SEL_REQ_MISS", "GL1C4", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C5ExposedCountersGfx10[] = {
    {14, "GL1C5_PERF_SEL_REQ", "GL1C5", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C5_PERF_SEL_REQ_MISS", "GL1C5", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C6ExposedCountersGfx10[] = {
    {14, "GL1C6_PERF_SEL_REQ", "GL1C6", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C6_PERF_SEL_REQ_MISS", "GL1C6", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GL1C7ExposedCountersGfx10[] = {
    {14, "GL1C7_PERF_SEL_REQ", "GL1C7", "Read, writes, atomics, nop. Invalids are not counted as requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {18, "GL1C7_PERF_SEL_REQ_MISS", "GL1C7", "Count of requests that miss in the cache. Writes and atomics always miss. Partial miss counts as miss.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB0ExposedCountersGfx10[] = {
    {7, "CB0_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB0", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB0_PERF_SEL_CM_MC_WRITE_REQUEST", "CB0", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB0_PERF_SEL_FC_MC_WRITE_REQUEST", "CB0", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB0_PERF_SEL_CC_MC_WRITE_REQUEST", "CB0", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB0_PERF_SEL_CM_MC_READ_REQUEST", "CB0", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB0_PERF_SEL_FC_MC_READ_REQUEST", "CB0", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB0_PERF_SEL_CC_MC_READ_REQUEST", "CB0", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB0_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB0", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB0_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB0", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB0_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB0", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB1ExposedCountersGfx10[] = {
    {7, "CB1_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB1", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB1_PERF_SEL_CM_MC_WRITE_REQUEST", "CB1", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB1_PERF_SEL_FC_MC_WRITE_REQUEST", "CB1", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB1_PERF_SEL_CC_MC_WRITE_REQUEST", "CB1", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB1_PERF_SEL_CM_MC_READ_REQUEST", "CB1", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB1_PERF_SEL_FC_MC_READ_REQUEST", "CB1", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB1_PERF_SEL_CC_MC_READ_REQUEST", "CB1", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB1_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB1", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB1_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB1", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB1_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB1", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB2ExposedCountersGfx10[] = {
    {7, "CB2_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB2", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB2_PERF_SEL_CM_MC_WRITE_REQUEST", "CB2", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB2_PERF_SEL_FC_MC_WRITE_REQUEST", "CB2", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB2_PERF_SEL_CC_MC_WRITE_REQUEST", "CB2", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB2_PERF_SEL_CM_MC_READ_REQUEST", "CB2", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB2_PERF_SEL_FC_MC_READ_REQUEST", "CB2", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB2_PERF_SEL_CC_MC_READ_REQUEST", "CB2", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB2_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB2", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB2_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB2", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB2_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB2", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB3ExposedCountersGfx10[] = {
    {7, "CB3_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB3", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB3_PERF_SEL_CM_MC_WRITE_REQUEST", "CB3", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB3_PERF_SEL_FC_MC_WRITE_REQUEST", "CB3", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB3_PERF_SEL_CC_MC_WRITE_REQUEST", "CB3", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB3_PERF_SEL_CM_MC_READ_REQUEST", "CB3", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB3_PERF_SEL_FC_MC_READ_REQUEST", "CB3", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB3_PERF_SEL_CC_MC_READ_REQUEST", "CB3", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB3_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB3", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB3_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB3", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB3_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB3", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB4ExposedCountersGfx10[] = {
    {7, "CB4_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB4", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB4_PERF_SEL_CM_MC_WRITE_REQUEST", "CB4", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB4_PERF_SEL_FC_MC_WRITE_REQUEST", "CB4", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB4_PERF_SEL_CC_MC_WRITE_REQUEST", "CB4", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB4_PERF_SEL_CM_MC_READ_REQUEST", "CB4", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB4_PERF_SEL_FC_MC_READ_REQUEST", "CB4", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB4_PERF_SEL_CC_MC_READ_REQUEST", "CB4", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB4_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB4", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB4_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB4", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB4_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB4", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB5ExposedCountersGfx10[] = {
    {7, "CB5_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB5", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB5_PERF_SEL_CM_MC_WRITE_REQUEST", "CB5", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB5_PERF_SEL_FC_MC_WRITE_REQUEST", "CB5", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB5_PERF_SEL_CC_MC_WRITE_REQUEST", "CB5", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB5_PERF_SEL_CM_MC_READ_REQUEST", "CB5", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB5_PERF_SEL_FC_MC_READ_REQUEST", "CB5", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB5_PERF_SEL_CC_MC_READ_REQUEST", "CB5", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB5_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB5", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB5_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB5", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB5_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB5", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB6ExposedCountersGfx10[] = {
    {7, "CB6_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB6", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB6_PERF_SEL_CM_MC_WRITE_REQUEST", "CB6", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB6_PERF_SEL_FC_MC_WRITE_REQUEST", "CB6", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB6_PERF_SEL_CC_MC_WRITE_REQUEST", "CB6", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB6_PERF_SEL_CM_MC_READ_REQUEST", "CB6", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB6_PERF_SEL_FC_MC_READ_REQUEST", "CB6", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB6_PERF_SEL_CC_MC_READ_REQUEST", "CB6", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB6_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB6", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB6_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB6", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB6_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB6", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB7ExposedCountersGfx10[] = {
    {7, "CB7_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB7", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB7_PERF_SEL_CM_MC_WRITE_REQUEST", "CB7", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB7_PERF_SEL_FC_MC_WRITE_REQUEST", "CB7", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB7_PERF_SEL_CC_MC_WRITE_REQUEST", "CB7", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB7_PERF_SEL_CM_MC_READ_REQUEST", "CB7", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB7_PERF_SEL_FC_MC_READ_REQUEST", "CB7", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB7_PERF_SEL_CC_MC_READ_REQUEST", "CB7", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB7_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB7", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB7_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB7", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB7_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB7", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB8ExposedCountersGfx10[] = {
    {7, "CB8_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB8", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB8_PERF_SEL_CM_MC_WRITE_REQUEST", "CB8", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB8_PERF_SEL_FC_MC_WRITE_REQUEST", "CB8", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB8_PERF_SEL_CC_MC_WRITE_REQUEST", "CB8", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB8_PERF_SEL_CM_MC_READ_REQUEST", "CB8", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB8_PERF_SEL_FC_MC_READ_REQUEST", "CB8", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB8_PERF_SEL_CC_MC_READ_REQUEST", "CB8", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB8_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB8", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB8_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB8", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB8_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB8", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB9ExposedCountersGfx10[] = {
    {7, "CB9_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB9", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB9_PERF_SEL_CM_MC_WRITE_REQUEST", "CB9", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB9_PERF_SEL_FC_MC_WRITE_REQUEST", "CB9", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB9_PERF_SEL_CC_MC_WRITE_REQUEST", "CB9", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB9_PERF_SEL_CM_MC_READ_REQUEST", "CB9", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB9_PERF_SEL_FC_MC_READ_REQUEST", "CB9", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB9_PERF_SEL_CC_MC_READ_REQUEST", "CB9", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB9_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB9", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB9_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB9", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB9_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB9", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB10ExposedCountersGfx10[] = {
    {7, "CB10_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB10", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB10_PERF_SEL_CM_MC_WRITE_REQUEST", "CB10", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB10_PERF_SEL_FC_MC_WRITE_REQUEST", "CB10", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB10_PERF_SEL_CC_MC_WRITE_REQUEST", "CB10", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB10_PERF_SEL_CM_MC_READ_REQUEST", "CB10", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB10_PERF_SEL_FC_MC_READ_REQUEST", "CB10", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB10_PERF_SEL_CC_MC_READ_REQUEST", "CB10", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB10_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB10", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB10_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB10", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB10_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB10", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB11ExposedCountersGfx10[] = {
    {7, "CB11_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB11", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB11_PERF_SEL_CM_MC_WRITE_REQUEST", "CB11", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB11_PERF_SEL_FC_MC_WRITE_REQUEST", "CB11", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB11_PERF_SEL_CC_MC_WRITE_REQUEST", "CB11", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB11_PERF_SEL_CM_MC_READ_REQUEST", "CB11", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB11_PERF_SEL_FC_MC_READ_REQUEST", "CB11", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB11_PERF_SEL_CC_MC_READ_REQUEST", "CB11", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB11_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB11", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB11_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB11", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB11_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB11", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB12ExposedCountersGfx10[] = {
    {7, "CB12_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB12", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB12_PERF_SEL_CM_MC_WRITE_REQUEST", "CB12", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB12_PERF_SEL_FC_MC_WRITE_REQUEST", "CB12", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB12_PERF_SEL_CC_MC_WRITE_REQUEST", "CB12", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB12_PERF_SEL_CM_MC_READ_REQUEST", "CB12", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB12_PERF_SEL_FC_MC_READ_REQUEST", "CB12", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB12_PERF_SEL_CC_MC_READ_REQUEST", "CB12", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB12_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB12", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB12_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB12", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB12_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB12", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB13ExposedCountersGfx10[] = {
    {7, "CB13_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB13", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB13_PERF_SEL_CM_MC_WRITE_REQUEST", "CB13", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB13_PERF_SEL_FC_MC_WRITE_REQUEST", "CB13", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB13_PERF_SEL_CC_MC_WRITE_REQUEST", "CB13", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB13_PERF_SEL_CM_MC_READ_REQUEST", "CB13", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB13_PERF_SEL_FC_MC_READ_REQUEST", "CB13", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB13_PERF_SEL_CC_MC_READ_REQUEST", "CB13", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB13_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB13", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB13_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB13", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB13_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB13", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB14ExposedCountersGfx10[] = {
    {7, "CB14_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB14", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB14_PERF_SEL_CM_MC_WRITE_REQUEST", "CB14", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB14_PERF_SEL_FC_MC_WRITE_REQUEST", "CB14", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB14_PERF_SEL_CC_MC_WRITE_REQUEST", "CB14", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB14_PERF_SEL_CM_MC_READ_REQUEST", "CB14", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB14_PERF_SEL_FC_MC_READ_REQUEST", "CB14", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB14_PERF_SEL_CC_MC_READ_REQUEST", "CB14", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB14_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB14", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB14_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB14", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB14_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB14", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB15ExposedCountersGfx10[] = {
    {7, "CB15_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB15", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB15_PERF_SEL_CM_MC_WRITE_REQUEST", "CB15", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB15_PERF_SEL_FC_MC_WRITE_REQUEST", "CB15", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB15_PERF_SEL_CC_MC_WRITE_REQUEST", "CB15", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB15_PERF_SEL_CM_MC_READ_REQUEST", "CB15", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB15_PERF_SEL_FC_MC_READ_REQUEST", "CB15", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB15_PERF_SEL_CC_MC_READ_REQUEST", "CB15", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB15_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB15", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB15_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB15", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB15_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB15", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB16ExposedCountersGfx10[] = {
    {7, "CB16_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB16", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB16_PERF_SEL_CM_MC_WRITE_REQUEST", "CB16", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB16_PERF_SEL_FC_MC_WRITE_REQUEST", "CB16", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB16_PERF_SEL_CC_MC_WRITE_REQUEST", "CB16", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB16_PERF_SEL_CM_MC_READ_REQUEST", "CB16", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB16_PERF_SEL_FC_MC_READ_REQUEST", "CB16", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB16_PERF_SEL_CC_MC_READ_REQUEST", "CB16", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB16_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB16", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB16_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB16", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB16_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB16", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB17ExposedCountersGfx10[] = {
    {7, "CB17_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB17", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB17_PERF_SEL_CM_MC_WRITE_REQUEST", "CB17", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB17_PERF_SEL_FC_MC_WRITE_REQUEST", "CB17", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB17_PERF_SEL_CC_MC_WRITE_REQUEST", "CB17", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB17_PERF_SEL_CM_MC_READ_REQUEST", "CB17", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB17_PERF_SEL_FC_MC_READ_REQUEST", "CB17", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB17_PERF_SEL_CC_MC_READ_REQUEST", "CB17", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB17_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB17", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB17_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB17", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB17_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB17", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB18ExposedCountersGfx10[] = {
    {7, "CB18_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB18", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB18_PERF_SEL_CM_MC_WRITE_REQUEST", "CB18", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB18_PERF_SEL_FC_MC_WRITE_REQUEST", "CB18", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB18_PERF_SEL_CC_MC_WRITE_REQUEST", "CB18", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB18_PERF_SEL_CM_MC_READ_REQUEST", "CB18", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB18_PERF_SEL_FC_MC_READ_REQUEST", "CB18", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB18_PERF_SEL_CC_MC_READ_REQUEST", "CB18", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB18_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB18", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB18_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB18", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB18_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB18", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB19ExposedCountersGfx10[] = {
    {7, "CB19_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB19", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB19_PERF_SEL_CM_MC_WRITE_REQUEST", "CB19", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB19_PERF_SEL_FC_MC_WRITE_REQUEST", "CB19", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB19_PERF_SEL_CC_MC_WRITE_REQUEST", "CB19", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB19_PERF_SEL_CM_MC_READ_REQUEST", "CB19", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB19_PERF_SEL_FC_MC_READ_REQUEST", "CB19", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB19_PERF_SEL_CC_MC_READ_REQUEST", "CB19", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB19_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB19", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB19_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB19", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB19_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB19", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB20ExposedCountersGfx10[] = {
    {7, "CB20_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB20", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB20_PERF_SEL_CM_MC_WRITE_REQUEST", "CB20", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB20_PERF_SEL_FC_MC_WRITE_REQUEST", "CB20", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB20_PERF_SEL_CC_MC_WRITE_REQUEST", "CB20", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB20_PERF_SEL_CM_MC_READ_REQUEST", "CB20", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB20_PERF_SEL_FC_MC_READ_REQUEST", "CB20", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB20_PERF_SEL_CC_MC_READ_REQUEST", "CB20", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB20_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB20", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB20_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB20", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB20_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB20", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB21ExposedCountersGfx10[] = {
    {7, "CB21_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB21", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB21_PERF_SEL_CM_MC_WRITE_REQUEST", "CB21", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB21_PERF_SEL_FC_MC_WRITE_REQUEST", "CB21", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB21_PERF_SEL_CC_MC_WRITE_REQUEST", "CB21", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB21_PERF_SEL_CM_MC_READ_REQUEST", "CB21", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB21_PERF_SEL_FC_MC_READ_REQUEST", "CB21", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB21_PERF_SEL_CC_MC_READ_REQUEST", "CB21", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB21_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB21", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB21_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB21", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB21_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB21", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB22ExposedCountersGfx10[] = {
    {7, "CB22_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB22", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB22_PERF_SEL_CM_MC_WRITE_REQUEST", "CB22", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB22_PERF_SEL_FC_MC_WRITE_REQUEST", "CB22", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB22_PERF_SEL_CC_MC_WRITE_REQUEST", "CB22", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB22_PERF_SEL_CM_MC_READ_REQUEST", "CB22", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB22_PERF_SEL_FC_MC_READ_REQUEST", "CB22", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB22_PERF_SEL_CC_MC_READ_REQUEST", "CB22", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB22_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB22", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB22_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB22", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB22_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB22", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB23ExposedCountersGfx10[] = {
    {7, "CB23_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB23", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB23_PERF_SEL_CM_MC_WRITE_REQUEST", "CB23", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB23_PERF_SEL_FC_MC_WRITE_REQUEST", "CB23", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB23_PERF_SEL_CC_MC_WRITE_REQUEST", "CB23", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB23_PERF_SEL_CM_MC_READ_REQUEST", "CB23", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB23_PERF_SEL_FC_MC_READ_REQUEST", "CB23", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB23_PERF_SEL_CC_MC_READ_REQUEST", "CB23", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB23_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB23", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB23_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB23", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB23_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB23", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB24ExposedCountersGfx10[] = {
    {7, "CB24_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB24", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB24_PERF_SEL_CM_MC_WRITE_REQUEST", "CB24", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB24_PERF_SEL_FC_MC_WRITE_REQUEST", "CB24", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB24_PERF_SEL_CC_MC_WRITE_REQUEST", "CB24", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB24_PERF_SEL_CM_MC_READ_REQUEST", "CB24", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB24_PERF_SEL_FC_MC_READ_REQUEST", "CB24", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB24_PERF_SEL_CC_MC_READ_REQUEST", "CB24", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB24_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB24", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB24_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB24", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB24_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB24", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB25ExposedCountersGfx10[] = {
    {7, "CB25_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB25", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB25_PERF_SEL_CM_MC_WRITE_REQUEST", "CB25", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB25_PERF_SEL_FC_MC_WRITE_REQUEST", "CB25", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB25_PERF_SEL_CC_MC_WRITE_REQUEST", "CB25", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB25_PERF_SEL_CM_MC_READ_REQUEST", "CB25", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB25_PERF_SEL_FC_MC_READ_REQUEST", "CB25", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB25_PERF_SEL_CC_MC_READ_REQUEST", "CB25", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB25_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB25", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB25_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB25", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB25_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB25", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB26ExposedCountersGfx10[] = {
    {7, "CB26_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB26", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB26_PERF_SEL_CM_MC_WRITE_REQUEST", "CB26", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB26_PERF_SEL_FC_MC_WRITE_REQUEST", "CB26", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB26_PERF_SEL_CC_MC_WRITE_REQUEST", "CB26", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB26_PERF_SEL_CM_MC_READ_REQUEST", "CB26", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB26_PERF_SEL_FC_MC_READ_REQUEST", "CB26", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB26_PERF_SEL_CC_MC_READ_REQUEST", "CB26", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB26_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB26", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB26_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB26", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB26_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB26", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB27ExposedCountersGfx10[] = {
    {7, "CB27_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB27", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB27_PERF_SEL_CM_MC_WRITE_REQUEST", "CB27", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB27_PERF_SEL_FC_MC_WRITE_REQUEST", "CB27", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB27_PERF_SEL_CC_MC_WRITE_REQUEST", "CB27", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB27_PERF_SEL_CM_MC_READ_REQUEST", "CB27", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB27_PERF_SEL_FC_MC_READ_REQUEST", "CB27", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB27_PERF_SEL_CC_MC_READ_REQUEST", "CB27", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB27_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB27", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB27_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB27", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB27_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB27", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB28ExposedCountersGfx10[] = {
    {7, "CB28_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB28", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB28_PERF_SEL_CM_MC_WRITE_REQUEST", "CB28", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB28_PERF_SEL_FC_MC_WRITE_REQUEST", "CB28", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB28_PERF_SEL_CC_MC_WRITE_REQUEST", "CB28", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB28_PERF_SEL_CM_MC_READ_REQUEST", "CB28", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB28_PERF_SEL_FC_MC_READ_REQUEST", "CB28", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB28_PERF_SEL_CC_MC_READ_REQUEST", "CB28", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB28_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB28", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB28_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB28", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB28_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB28", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB29ExposedCountersGfx10[] = {
    {7, "CB29_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB29", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB29_PERF_SEL_CM_MC_WRITE_REQUEST", "CB29", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB29_PERF_SEL_FC_MC_WRITE_REQUEST", "CB29", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB29_PERF_SEL_CC_MC_WRITE_REQUEST", "CB29", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB29_PERF_SEL_CM_MC_READ_REQUEST", "CB29", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB29_PERF_SEL_FC_MC_READ_REQUEST", "CB29", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB29_PERF_SEL_CC_MC_READ_REQUEST", "CB29", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB29_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB29", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB29_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB29", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB29_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB29", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB30ExposedCountersGfx10[] = {
    {7, "CB30_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB30", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB30_PERF_SEL_CM_MC_WRITE_REQUEST", "CB30", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB30_PERF_SEL_FC_MC_WRITE_REQUEST", "CB30", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB30_PERF_SEL_CC_MC_WRITE_REQUEST", "CB30", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB30_PERF_SEL_CM_MC_READ_REQUEST", "CB30", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB30_PERF_SEL_FC_MC_READ_REQUEST", "CB30", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB30_PERF_SEL_CC_MC_READ_REQUEST", "CB30", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB30_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB30", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB30_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB30", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB30_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB30", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc CB31ExposedCountersGfx10[] = {
    {7, "CB31_PERF_SEL_DRAWN_QUAD_FRAGMENT", "CB31", "This is the number of drawn quad fragments. Use CB_PERF_SEL_DRAWN_BUSY as denominator to get per clock rates. Filtering using CB_PERFCOUNTER_FILTER fields has an effect in this mode.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {116, "CB31_PERF_SEL_CM_MC_WRITE_REQUEST", "CB31", "Number of 32-byte cmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {117, "CB31_PERF_SEL_FC_MC_WRITE_REQUEST", "CB31", "Number of 32-byte fmask mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {118, "CB31_PERF_SEL_CC_MC_WRITE_REQUEST", "CB31", "Number of 32-byte color mc write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {126, "CB31_PERF_SEL_CM_MC_READ_REQUEST", "CB31", "Number of 32-byte cmask mc read requests. Cmask does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {127, "CB31_PERF_SEL_FC_MC_READ_REQUEST", "CB31", "Number of 32-byte fmask mc read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {128, "CB31_PERF_SEL_CC_MC_READ_REQUEST", "CB31", "Number of 32-byte color mc read requests. Color does not make 32-byte requests, so the counter will report the equivalent number of 32-byte requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {162, "CB31_PERF_SEL_EXPORT_32_ABGR_QUAD_FRAGMENT", "CB31", "Number of EXPORT_32_ABGR quad fragments. It takes two clocks to send the src color data for these.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {257, "CB31_PERF_SEL_FC_MC_DCC_WRITE_REQUEST", "CB31", "Number of 32-byte fmask mc DCC write requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {259, "CB31_PERF_SEL_FC_MC_DCC_READ_REQUEST", "CB31", "Number of 32-byte fmask mc DCC read requests.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB0ExposedCountersGfx10[] = {
    {4, "DB0_PERF_SEL_SC_DB_TILE_TILES", "DB0", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB0_PERF_SEL_DB_SC_TILE_CULLED", "DB0", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB0_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB0", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB0_PERF_SEL_DB_CB_LQUAD_STALLS", "DB0", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB0_PERF_SEL_TILE_RD_SENDS", "DB0", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB0_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB0", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB0_PERF_SEL_TILE_WR_SENDS", "DB0", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB0_PERF_SEL_QUAD_WR_SENDS", "DB0", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB0_PERF_SEL_OP_PIPE_BUSY", "DB0", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB0_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB0", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB0_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB0", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB0_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB0", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB0_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB0", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB0_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB0", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB0_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB0", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB1ExposedCountersGfx10[] = {
    {4, "DB1_PERF_SEL_SC_DB_TILE_TILES", "DB1", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB1_PERF_SEL_DB_SC_TILE_CULLED", "DB1", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB1_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB1", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB1_PERF_SEL_DB_CB_LQUAD_STALLS", "DB1", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB1_PERF_SEL_TILE_RD_SENDS", "DB1", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB1_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB1", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB1_PERF_SEL_TILE_WR_SENDS", "DB1", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB1_PERF_SEL_QUAD_WR_SENDS", "DB1", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB1_PERF_SEL_OP_PIPE_BUSY", "DB1", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB1_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB1", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB1_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB1", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB1_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB1", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB1_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB1", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB1_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB1", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB1_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB1", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB2ExposedCountersGfx10[] = {
    {4, "DB2_PERF_SEL_SC_DB_TILE_TILES", "DB2", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB2_PERF_SEL_DB_SC_TILE_CULLED", "DB2", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB2_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB2", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB2_PERF_SEL_DB_CB_LQUAD_STALLS", "DB2", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB2_PERF_SEL_TILE_RD_SENDS", "DB2", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB2_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB2", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB2_PERF_SEL_TILE_WR_SENDS", "DB2", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB2_PERF_SEL_QUAD_WR_SENDS", "DB2", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB2_PERF_SEL_OP_PIPE_BUSY", "DB2", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB2_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB2", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB2_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB2", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB2_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB2", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB2_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB2", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB2_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB2", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB2_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB2", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB3ExposedCountersGfx10[] = {
    {4, "DB3_PERF_SEL_SC_DB_TILE_TILES", "DB3", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB3_PERF_SEL_DB_SC_TILE_CULLED", "DB3", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB3_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB3", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB3_PERF_SEL_DB_CB_LQUAD_STALLS", "DB3", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB3_PERF_SEL_TILE_RD_SENDS", "DB3", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB3_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB3", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB3_PERF_SEL_TILE_WR_SENDS", "DB3", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB3_PERF_SEL_QUAD_WR_SENDS", "DB3", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB3_PERF_SEL_OP_PIPE_BUSY", "DB3", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB3_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB3", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB3_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB3", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB3_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB3", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB3_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB3", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB3_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB3", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB3_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB3", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB4ExposedCountersGfx10[] = {
    {4, "DB4_PERF_SEL_SC_DB_TILE_TILES", "DB4", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB4_PERF_SEL_DB_SC_TILE_CULLED", "DB4", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB4_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB4", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB4_PERF_SEL_DB_CB_LQUAD_STALLS", "DB4", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB4_PERF_SEL_TILE_RD_SENDS", "DB4", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB4_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB4", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB4_PERF_SEL_TILE_WR_SENDS", "DB4", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB4_PERF_SEL_QUAD_WR_SENDS", "DB4", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB4_PERF_SEL_OP_PIPE_BUSY", "DB4", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB4_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB4", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB4_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB4", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB4_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB4", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB4_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB4", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB4_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB4", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB4_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB4", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB5ExposedCountersGfx10[] = {
    {4, "DB5_PERF_SEL_SC_DB_TILE_TILES", "DB5", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB5_PERF_SEL_DB_SC_TILE_CULLED", "DB5", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB5_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB5", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB5_PERF_SEL_DB_CB_LQUAD_STALLS", "DB5", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB5_PERF_SEL_TILE_RD_SENDS", "DB5", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB5_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB5", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB5_PERF_SEL_TILE_WR_SENDS", "DB5", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB5_PERF_SEL_QUAD_WR_SENDS", "DB5", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB5_PERF_SEL_OP_PIPE_BUSY", "DB5", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB5_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB5", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB5_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB5", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB5_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB5", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB5_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB5", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB5_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB5", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB5_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB5", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB6ExposedCountersGfx10[] = {
    {4, "DB6_PERF_SEL_SC_DB_TILE_TILES", "DB6", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB6_PERF_SEL_DB_SC_TILE_CULLED", "DB6", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB6_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB6", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB6_PERF_SEL_DB_CB_LQUAD_STALLS", "DB6", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB6_PERF_SEL_TILE_RD_SENDS", "DB6", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB6_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB6", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB6_PERF_SEL_TILE_WR_SENDS", "DB6", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB6_PERF_SEL_QUAD_WR_SENDS", "DB6", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB6_PERF_SEL_OP_PIPE_BUSY", "DB6", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB6_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB6", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB6_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB6", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB6_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB6", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB6_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB6", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB6_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB6", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB6_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB6", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB7ExposedCountersGfx10[] = {
    {4, "DB7_PERF_SEL_SC_DB_TILE_TILES", "DB7", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB7_PERF_SEL_DB_SC_TILE_CULLED", "DB7", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB7_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB7", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB7_PERF_SEL_DB_CB_LQUAD_STALLS", "DB7", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB7_PERF_SEL_TILE_RD_SENDS", "DB7", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB7_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB7", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB7_PERF_SEL_TILE_WR_SENDS", "DB7", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB7_PERF_SEL_QUAD_WR_SENDS", "DB7", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB7_PERF_SEL_OP_PIPE_BUSY", "DB7", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB7_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB7", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB7_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB7", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB7_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB7", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB7_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB7", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB7_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB7", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB7_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB7", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB8ExposedCountersGfx10[] = {
    {4, "DB8_PERF_SEL_SC_DB_TILE_TILES", "DB8", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB8_PERF_SEL_DB_SC_TILE_CULLED", "DB8", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB8_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB8", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB8_PERF_SEL_DB_CB_LQUAD_STALLS", "DB8", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB8_PERF_SEL_TILE_RD_SENDS", "DB8", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB8_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB8", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB8_PERF_SEL_TILE_WR_SENDS", "DB8", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB8_PERF_SEL_QUAD_WR_SENDS", "DB8", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB8_PERF_SEL_OP_PIPE_BUSY", "DB8", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB8_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB8", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB8_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB8", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB8_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB8", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB8_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB8", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB8_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB8", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB8_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB8", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB9ExposedCountersGfx10[] = {
    {4, "DB9_PERF_SEL_SC_DB_TILE_TILES", "DB9", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB9_PERF_SEL_DB_SC_TILE_CULLED", "DB9", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB9_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB9", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB9_PERF_SEL_DB_CB_LQUAD_STALLS", "DB9", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB9_PERF_SEL_TILE_RD_SENDS", "DB9", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB9_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB9", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB9_PERF_SEL_TILE_WR_SENDS", "DB9", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB9_PERF_SEL_QUAD_WR_SENDS", "DB9", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB9_PERF_SEL_OP_PIPE_BUSY", "DB9", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB9_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB9", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB9_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB9", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB9_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB9", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB9_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB9", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB9_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB9", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB9_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB9", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB10ExposedCountersGfx10[] = {
    {4, "DB10_PERF_SEL_SC_DB_TILE_TILES", "DB10", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB10_PERF_SEL_DB_SC_TILE_CULLED", "DB10", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB10_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB10", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB10_PERF_SEL_DB_CB_LQUAD_STALLS", "DB10", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB10_PERF_SEL_TILE_RD_SENDS", "DB10", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB10_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB10", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB10_PERF_SEL_TILE_WR_SENDS", "DB10", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB10_PERF_SEL_QUAD_WR_SENDS", "DB10", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB10_PERF_SEL_OP_PIPE_BUSY", "DB10", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB10_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB10", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB10_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB10", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB10_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB10", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB10_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB10", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB10_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB10", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB10_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB10", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB11ExposedCountersGfx10[] = {
    {4, "DB11_PERF_SEL_SC_DB_TILE_TILES", "DB11", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB11_PERF_SEL_DB_SC_TILE_CULLED", "DB11", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB11_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB11", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB11_PERF_SEL_DB_CB_LQUAD_STALLS", "DB11", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB11_PERF_SEL_TILE_RD_SENDS", "DB11", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB11_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB11", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB11_PERF_SEL_TILE_WR_SENDS", "DB11", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB11_PERF_SEL_QUAD_WR_SENDS", "DB11", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB11_PERF_SEL_OP_PIPE_BUSY", "DB11", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB11_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB11", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB11_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB11", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB11_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB11", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB11_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB11", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB11_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB11", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB11_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB11", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB12ExposedCountersGfx10[] = {
    {4, "DB12_PERF_SEL_SC_DB_TILE_TILES", "DB12", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB12_PERF_SEL_DB_SC_TILE_CULLED", "DB12", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB12_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB12", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB12_PERF_SEL_DB_CB_LQUAD_STALLS", "DB12", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB12_PERF_SEL_TILE_RD_SENDS", "DB12", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB12_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB12", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB12_PERF_SEL_TILE_WR_SENDS", "DB12", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB12_PERF_SEL_QUAD_WR_SENDS", "DB12", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB12_PERF_SEL_OP_PIPE_BUSY", "DB12", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB12_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB12", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB12_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB12", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB12_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB12", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB12_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB12", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB12_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB12", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB12_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB12", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB13ExposedCountersGfx10[] = {
    {4, "DB13_PERF_SEL_SC_DB_TILE_TILES", "DB13", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB13_PERF_SEL_DB_SC_TILE_CULLED", "DB13", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB13_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB13", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB13_PERF_SEL_DB_CB_LQUAD_STALLS", "DB13", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB13_PERF_SEL_TILE_RD_SENDS", "DB13", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB13_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB13", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB13_PERF_SEL_TILE_WR_SENDS", "DB13", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB13_PERF_SEL_QUAD_WR_SENDS", "DB13", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB13_PERF_SEL_OP_PIPE_BUSY", "DB13", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB13_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB13", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB13_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB13", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB13_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB13", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB13_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB13", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB13_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB13", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB13_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB13", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB14ExposedCountersGfx10[] = {
    {4, "DB14_PERF_SEL_SC_DB_TILE_TILES", "DB14", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB14_PERF_SEL_DB_SC_TILE_CULLED", "DB14", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB14_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB14", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB14_PERF_SEL_DB_CB_LQUAD_STALLS", "DB14", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB14_PERF_SEL_TILE_RD_SENDS", "DB14", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB14_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB14", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB14_PERF_SEL_TILE_WR_SENDS", "DB14", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB14_PERF_SEL_QUAD_WR_SENDS", "DB14", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB14_PERF_SEL_OP_PIPE_BUSY", "DB14", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB14_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB14", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB14_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB14", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB14_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB14", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB14_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB14", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB14_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB14", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB14_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB14", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB15ExposedCountersGfx10[] = {
    {4, "DB15_PERF_SEL_SC_DB_TILE_TILES", "DB15", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB15_PERF_SEL_DB_SC_TILE_CULLED", "DB15", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB15_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB15", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB15_PERF_SEL_DB_CB_LQUAD_STALLS", "DB15", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB15_PERF_SEL_TILE_RD_SENDS", "DB15", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB15_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB15", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB15_PERF_SEL_TILE_WR_SENDS", "DB15", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB15_PERF_SEL_QUAD_WR_SENDS", "DB15", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB15_PERF_SEL_OP_PIPE_BUSY", "DB15", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB15_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB15", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB15_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB15", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB15_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB15", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB15_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB15", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB15_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB15", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB15_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB15", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB16ExposedCountersGfx10[] = {
    {4, "DB16_PERF_SEL_SC_DB_TILE_TILES", "DB16", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB16_PERF_SEL_DB_SC_TILE_CULLED", "DB16", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB16_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB16", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB16_PERF_SEL_DB_CB_LQUAD_STALLS", "DB16", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB16_PERF_SEL_TILE_RD_SENDS", "DB16", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB16_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB16", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB16_PERF_SEL_TILE_WR_SENDS", "DB16", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB16_PERF_SEL_QUAD_WR_SENDS", "DB16", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB16_PERF_SEL_OP_PIPE_BUSY", "DB16", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB16_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB16", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB16_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB16", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB16_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB16", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB16_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB16", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB16_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB16", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB16_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB16", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB17ExposedCountersGfx10[] = {
    {4, "DB17_PERF_SEL_SC_DB_TILE_TILES", "DB17", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB17_PERF_SEL_DB_SC_TILE_CULLED", "DB17", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB17_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB17", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB17_PERF_SEL_DB_CB_LQUAD_STALLS", "DB17", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB17_PERF_SEL_TILE_RD_SENDS", "DB17", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB17_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB17", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB17_PERF_SEL_TILE_WR_SENDS", "DB17", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB17_PERF_SEL_QUAD_WR_SENDS", "DB17", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB17_PERF_SEL_OP_PIPE_BUSY", "DB17", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB17_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB17", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB17_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB17", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB17_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB17", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB17_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB17", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB17_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB17", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB17_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB17", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB18ExposedCountersGfx10[] = {
    {4, "DB18_PERF_SEL_SC_DB_TILE_TILES", "DB18", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB18_PERF_SEL_DB_SC_TILE_CULLED", "DB18", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB18_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB18", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB18_PERF_SEL_DB_CB_LQUAD_STALLS", "DB18", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB18_PERF_SEL_TILE_RD_SENDS", "DB18", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB18_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB18", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB18_PERF_SEL_TILE_WR_SENDS", "DB18", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB18_PERF_SEL_QUAD_WR_SENDS", "DB18", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB18_PERF_SEL_OP_PIPE_BUSY", "DB18", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB18_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB18", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB18_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB18", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB18_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB18", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB18_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB18", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB18_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB18", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB18_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB18", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB19ExposedCountersGfx10[] = {
    {4, "DB19_PERF_SEL_SC_DB_TILE_TILES", "DB19", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB19_PERF_SEL_DB_SC_TILE_CULLED", "DB19", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB19_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB19", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB19_PERF_SEL_DB_CB_LQUAD_STALLS", "DB19", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB19_PERF_SEL_TILE_RD_SENDS", "DB19", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB19_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB19", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB19_PERF_SEL_TILE_WR_SENDS", "DB19", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB19_PERF_SEL_QUAD_WR_SENDS", "DB19", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB19_PERF_SEL_OP_PIPE_BUSY", "DB19", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB19_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB19", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB19_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB19", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB19_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB19", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB19_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB19", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB19_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB19", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB19_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB19", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB20ExposedCountersGfx10[] = {
    {4, "DB20_PERF_SEL_SC_DB_TILE_TILES", "DB20", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB20_PERF_SEL_DB_SC_TILE_CULLED", "DB20", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB20_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB20", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB20_PERF_SEL_DB_CB_LQUAD_STALLS", "DB20", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB20_PERF_SEL_TILE_RD_SENDS", "DB20", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB20_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB20", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB20_PERF_SEL_TILE_WR_SENDS", "DB20", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB20_PERF_SEL_QUAD_WR_SENDS", "DB20", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB20_PERF_SEL_OP_PIPE_BUSY", "DB20", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB20_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB20", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB20_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB20", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB20_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB20", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB20_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB20", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB20_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB20", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB20_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB20", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB21ExposedCountersGfx10[] = {
    {4, "DB21_PERF_SEL_SC_DB_TILE_TILES", "DB21", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB21_PERF_SEL_DB_SC_TILE_CULLED", "DB21", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB21_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB21", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB21_PERF_SEL_DB_CB_LQUAD_STALLS", "DB21", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB21_PERF_SEL_TILE_RD_SENDS", "DB21", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB21_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB21", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB21_PERF_SEL_TILE_WR_SENDS", "DB21", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB21_PERF_SEL_QUAD_WR_SENDS", "DB21", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB21_PERF_SEL_OP_PIPE_BUSY", "DB21", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB21_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB21", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB21_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB21", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB21_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB21", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB21_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB21", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB21_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB21", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB21_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB21", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB22ExposedCountersGfx10[] = {
    {4, "DB22_PERF_SEL_SC_DB_TILE_TILES", "DB22", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB22_PERF_SEL_DB_SC_TILE_CULLED", "DB22", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB22_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB22", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB22_PERF_SEL_DB_CB_LQUAD_STALLS", "DB22", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB22_PERF_SEL_TILE_RD_SENDS", "DB22", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB22_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB22", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB22_PERF_SEL_TILE_WR_SENDS", "DB22", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB22_PERF_SEL_QUAD_WR_SENDS", "DB22", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB22_PERF_SEL_OP_PIPE_BUSY", "DB22", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB22_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB22", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB22_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB22", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB22_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB22", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB22_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB22", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB22_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB22", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB22_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB22", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB23ExposedCountersGfx10[] = {
    {4, "DB23_PERF_SEL_SC_DB_TILE_TILES", "DB23", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB23_PERF_SEL_DB_SC_TILE_CULLED", "DB23", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB23_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB23", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB23_PERF_SEL_DB_CB_LQUAD_STALLS", "DB23", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB23_PERF_SEL_TILE_RD_SENDS", "DB23", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB23_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB23", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB23_PERF_SEL_TILE_WR_SENDS", "DB23", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB23_PERF_SEL_QUAD_WR_SENDS", "DB23", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB23_PERF_SEL_OP_PIPE_BUSY", "DB23", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB23_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB23", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB23_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB23", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB23_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB23", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB23_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB23", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB23_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB23", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB23_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB23", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB24ExposedCountersGfx10[] = {
    {4, "DB24_PERF_SEL_SC_DB_TILE_TILES", "DB24", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB24_PERF_SEL_DB_SC_TILE_CULLED", "DB24", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB24_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB24", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB24_PERF_SEL_DB_CB_LQUAD_STALLS", "DB24", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB24_PERF_SEL_TILE_RD_SENDS", "DB24", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB24_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB24", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB24_PERF_SEL_TILE_WR_SENDS", "DB24", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB24_PERF_SEL_QUAD_WR_SENDS", "DB24", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB24_PERF_SEL_OP_PIPE_BUSY", "DB24", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB24_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB24", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB24_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB24", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB24_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB24", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB24_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB24", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB24_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB24", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB24_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB24", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB25ExposedCountersGfx10[] = {
    {4, "DB25_PERF_SEL_SC_DB_TILE_TILES", "DB25", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB25_PERF_SEL_DB_SC_TILE_CULLED", "DB25", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB25_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB25", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB25_PERF_SEL_DB_CB_LQUAD_STALLS", "DB25", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB25_PERF_SEL_TILE_RD_SENDS", "DB25", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB25_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB25", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB25_PERF_SEL_TILE_WR_SENDS", "DB25", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB25_PERF_SEL_QUAD_WR_SENDS", "DB25", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB25_PERF_SEL_OP_PIPE_BUSY", "DB25", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB25_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB25", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB25_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB25", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB25_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB25", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB25_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB25", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB25_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB25", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB25_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB25", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB26ExposedCountersGfx10[] = {
    {4, "DB26_PERF_SEL_SC_DB_TILE_TILES", "DB26", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB26_PERF_SEL_DB_SC_TILE_CULLED", "DB26", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB26_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB26", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB26_PERF_SEL_DB_CB_LQUAD_STALLS", "DB26", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB26_PERF_SEL_TILE_RD_SENDS", "DB26", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB26_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB26", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB26_PERF_SEL_TILE_WR_SENDS", "DB26", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB26_PERF_SEL_QUAD_WR_SENDS", "DB26", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB26_PERF_SEL_OP_PIPE_BUSY", "DB26", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB26_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB26", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB26_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB26", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB26_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB26", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB26_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB26", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB26_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB26", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB26_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB26", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB27ExposedCountersGfx10[] = {
    {4, "DB27_PERF_SEL_SC_DB_TILE_TILES", "DB27", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB27_PERF_SEL_DB_SC_TILE_CULLED", "DB27", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB27_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB27", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB27_PERF_SEL_DB_CB_LQUAD_STALLS", "DB27", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB27_PERF_SEL_TILE_RD_SENDS", "DB27", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB27_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB27", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB27_PERF_SEL_TILE_WR_SENDS", "DB27", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB27_PERF_SEL_QUAD_WR_SENDS", "DB27", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB27_PERF_SEL_OP_PIPE_BUSY", "DB27", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB27_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB27", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB27_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB27", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB27_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB27", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB27_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB27", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB27_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB27", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB27_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB27", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB28ExposedCountersGfx10[] = {
    {4, "DB28_PERF_SEL_SC_DB_TILE_TILES", "DB28", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB28_PERF_SEL_DB_SC_TILE_CULLED", "DB28", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB28_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB28", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB28_PERF_SEL_DB_CB_LQUAD_STALLS", "DB28", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB28_PERF_SEL_TILE_RD_SENDS", "DB28", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB28_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB28", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB28_PERF_SEL_TILE_WR_SENDS", "DB28", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB28_PERF_SEL_QUAD_WR_SENDS", "DB28", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB28_PERF_SEL_OP_PIPE_BUSY", "DB28", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB28_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB28", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB28_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB28", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB28_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB28", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB28_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB28", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB28_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB28", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB28_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB28", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB29ExposedCountersGfx10[] = {
    {4, "DB29_PERF_SEL_SC_DB_TILE_TILES", "DB29", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB29_PERF_SEL_DB_SC_TILE_CULLED", "DB29", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB29_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB29", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB29_PERF_SEL_DB_CB_LQUAD_STALLS", "DB29", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB29_PERF_SEL_TILE_RD_SENDS", "DB29", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB29_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB29", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB29_PERF_SEL_TILE_WR_SENDS", "DB29", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB29_PERF_SEL_QUAD_WR_SENDS", "DB29", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB29_PERF_SEL_OP_PIPE_BUSY", "DB29", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB29_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB29", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB29_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB29", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB29_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB29", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB29_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB29", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB29_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB29", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB29_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB29", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB30ExposedCountersGfx10[] = {
    {4, "DB30_PERF_SEL_SC_DB_TILE_TILES", "DB30", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB30_PERF_SEL_DB_SC_TILE_CULLED", "DB30", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB30_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB30", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB30_PERF_SEL_DB_CB_LQUAD_STALLS", "DB30", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB30_PERF_SEL_TILE_RD_SENDS", "DB30", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB30_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB30", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB30_PERF_SEL_TILE_WR_SENDS", "DB30", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB30_PERF_SEL_QUAD_WR_SENDS", "DB30", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB30_PERF_SEL_OP_PIPE_BUSY", "DB30", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB30_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB30", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB30_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB30", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB30_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB30", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB30_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB30", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB30_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB30", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB30_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB30", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc DB31ExposedCountersGfx10[] = {
    {4, "DB31_PERF_SEL_SC_DB_TILE_TILES", "DB31", "Tiles sent over interface", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {15, "DB31_PERF_SEL_DB_SC_TILE_CULLED", "DB31", "Tiles culled in total", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {28, "DB31_PERF_SEL_SC_DB_QUAD_KILLED_TILES", "DB31", "Number of detail killed tiles", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {46, "DB31_PERF_SEL_DB_CB_LQUAD_STALLS", "DB31", "Cycles Interface is stalled", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {48, "DB31_PERF_SEL_TILE_RD_SENDS", "DB31", "HTile reads. Each is 256B", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {55, "DB31_PERF_SEL_QUAD_RD_32BYTE_REQS", "DB31", "Number of 32 Byte quad read requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {60, "DB31_PERF_SEL_TILE_WR_SENDS", "DB31", "32 Byte HTile writes", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {63, "DB31_PERF_SEL_QUAD_WR_SENDS", "DB31", "Cycles quad is sending write requests to the memory interface block of the DB", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {144, "DB31_PERF_SEL_OP_PIPE_BUSY", "DB31", "Cycles the quad OP pipe of the DB is busy (including memory fetches, but not initial startup)", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {174, "DB31_PERF_SEL_POSTZ_SAMPLES_PASSING_Z", "DB31", "Samples passing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {175, "DB31_PERF_SEL_POSTZ_SAMPLES_FAILING_Z", "DB31", "Samples failing Z test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {176, "DB31_PERF_SEL_POSTZ_SAMPLES_FAILING_S", "DB31", "Samples failing Stencil test during a PostZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {177, "DB31_PERF_SEL_PREZ_SAMPLES_PASSING_Z", "DB31", "Samples passing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {178, "DB31_PERF_SEL_PREZ_SAMPLES_FAILING_Z", "DB31", "Samples failing Z test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {179, "DB31_PERF_SEL_PREZ_SAMPLES_FAILING_S", "DB31", "Samples failing Stencil test during a PreZ pass", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA0ExposedCountersGfx10[] = {
    {55, "GCEA0_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA0", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA0_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA0", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA1ExposedCountersGfx10[] = {
    {55, "GCEA1_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA1", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA1_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA1", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA2ExposedCountersGfx10[] = {
    {55, "GCEA2_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA2", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA2_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA2", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA3ExposedCountersGfx10[] = {
    {55, "GCEA3_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA3", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA3_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA3", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA4ExposedCountersGfx10[] = {
    {55, "GCEA4_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA4", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA4_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA4", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA5ExposedCountersGfx10[] = {
    {55, "GCEA5_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA5", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA5_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA5", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA6ExposedCountersGfx10[] = {
    {55, "GCEA6_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA6", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA6_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA6", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA7ExposedCountersGfx10[] = {
    {55, "GCEA7_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA7", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA7_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA7", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA8ExposedCountersGfx10[] = {
    {55, "GCEA8_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA8", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA8_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA8", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA9ExposedCountersGfx10[] = {
    {55, "GCEA9_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA9", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA9_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA9", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA10ExposedCountersGfx10[] = {
    {55, "GCEA10_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA10", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA10_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA10", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA11ExposedCountersGfx10[] = {
    {55, "GCEA11_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA11", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA11_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA11", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA12ExposedCountersGfx10[] = {
    {55, "GCEA12_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA12", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA12_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA12", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA13ExposedCountersGfx10[] = {
    {55, "GCEA13_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA13", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA13_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA13", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA14ExposedCountersGfx10[] = {
    {55, "GCEA14_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA14", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA14_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA14", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GCEA15ExposedCountersGfx10[] = {
    {55, "GCEA15_PERF_SEL_SARB_DRAM_SIZED_REQUESTS", "GCEA15", "DRAM sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {57, "GCEA15_PERF_SEL_SARB_IO_SIZED_REQUESTS", "GCEA15", "I/O sized (in 32 byte increments) requests", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};

    GPA_HardwareCounterDesc GPUTimeExposedCountersGfx10[] = {
    {0, "GPUTime_BOTTOM_TO_BOTTOM_DURATION", "GPUTime", "delta between the previous command reaching bottom of pipe and the current command reaching bottom of pipe, will not include latency of first data to travel through pipeline, best for large data sets.", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {1, "GPUTime_BOTTOM_TO_BOTTOM_START", "GPUTime", "time of the previous command reaching bottom of pipe", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {2, "GPUTime_BOTTOM_TO_BOTTOM_END", "GPUTime", "time of the current command reaching bottom of pipe", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {3, "GPUTime_TOP_TO_BOTTOM_DURATION", "GPUTime", "execution duration of the current command from top of pipe to bottom of pipe, may include overhead of time in queue", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {4, "GPUTime_TOP_TO_BOTTOM_START", "GPUTime", "time that the current command reaches the top of pipe", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
    {5, "GPUTime_TOP_TO_BOTTOM_END", "GPUTime", "time that the current command reaches the bottom of pipe", GPA_DATA_TYPE_UINT64, 0, GPA_UINT64_MAX},
};
} // CounterGfx10
