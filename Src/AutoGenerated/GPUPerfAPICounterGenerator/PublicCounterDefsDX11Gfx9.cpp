//==============================================================================
// Copyright (c) 2010-2019 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief PublicCounterDefinitions for DX11GFX9
//==============================================================================

#include "GPACounter.h"
#include "PublicCounterDefsDX11Gfx9.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDX11Gfx9(GPA_DerivedCounters& c)
{
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55102);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23);
        internalCounters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50949);
        internalCounters.push_back(51097);
        internalCounters.push_back(51245);
        internalCounters.push_back(51393);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("TessellatorBusy", "Timing", "The percentage of time the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50949);
        internalCounters.push_back(51097);
        internalCounters.push_back(51245);
        internalCounters.push_back(51393);

        c.DefineDerivedCounter("TessellatorBusyCycles", "Timing", "Number of GPU cycles that the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16602);
        internalCounters.push_back(16798);
        internalCounters.push_back(16994);
        internalCounters.push_back(17190);
        internalCounters.push_back(16611);
        internalCounters.push_back(16807);
        internalCounters.push_back(17003);
        internalCounters.push_back(17199);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16602);
        internalCounters.push_back(16798);
        internalCounters.push_back(16994);
        internalCounters.push_back(17190);
        internalCounters.push_back(16611);
        internalCounters.push_back(16807);
        internalCounters.push_back(17003);
        internalCounters.push_back(17199);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55102);
        internalCounters.push_back(16602);
        internalCounters.push_back(16798);
        internalCounters.push_back(16994);
        internalCounters.push_back(17190);
        internalCounters.push_back(16611);
        internalCounters.push_back(16807);
        internalCounters.push_back(17003);
        internalCounters.push_back(17199);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16633);
        internalCounters.push_back(16829);
        internalCounters.push_back(17025);
        internalCounters.push_back(17221);
        internalCounters.push_back(16639);
        internalCounters.push_back(16835);
        internalCounters.push_back(17031);
        internalCounters.push_back(17227);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16633);
        internalCounters.push_back(16829);
        internalCounters.push_back(17025);
        internalCounters.push_back(17221);
        internalCounters.push_back(16639);
        internalCounters.push_back(16835);
        internalCounters.push_back(17031);
        internalCounters.push_back(17227);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55102);
        internalCounters.push_back(16633);
        internalCounters.push_back(16829);
        internalCounters.push_back(17025);
        internalCounters.push_back(17221);
        internalCounters.push_back(16639);
        internalCounters.push_back(16835);
        internalCounters.push_back(17031);
        internalCounters.push_back(17227);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16621);
        internalCounters.push_back(16817);
        internalCounters.push_back(17013);
        internalCounters.push_back(17209);
        internalCounters.push_back(16624);
        internalCounters.push_back(16820);
        internalCounters.push_back(17016);
        internalCounters.push_back(17212);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSBusy", "Timing", "The percentage of time the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "876f36d8-d046-833f-7832-673cbffd0a45");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16621);
        internalCounters.push_back(16817);
        internalCounters.push_back(17013);
        internalCounters.push_back(17209);
        internalCounters.push_back(16624);
        internalCounters.push_back(16820);
        internalCounters.push_back(17016);
        internalCounters.push_back(17212);

        c.DefineDerivedCounter("GSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "48203b6b-8983-c067-d63e-05da8be5111b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55102);
        internalCounters.push_back(16621);
        internalCounters.push_back(16817);
        internalCounters.push_back(17013);
        internalCounters.push_back(17209);
        internalCounters.push_back(16624);
        internalCounters.push_back(16820);
        internalCounters.push_back(17016);
        internalCounters.push_back(17212);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSTime", "Timing", "Time geometry shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "c73e715f-59af-76e8-9e22-097b94c066c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16655);
        internalCounters.push_back(16851);
        internalCounters.push_back(17047);
        internalCounters.push_back(17243);
        internalCounters.push_back(16660);
        internalCounters.push_back(16856);
        internalCounters.push_back(17052);
        internalCounters.push_back(17248);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16655);
        internalCounters.push_back(16851);
        internalCounters.push_back(17047);
        internalCounters.push_back(17243);
        internalCounters.push_back(16660);
        internalCounters.push_back(16856);
        internalCounters.push_back(17052);
        internalCounters.push_back(17248);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55102);
        internalCounters.push_back(16655);
        internalCounters.push_back(16851);
        internalCounters.push_back(17047);
        internalCounters.push_back(17243);
        internalCounters.push_back(16660);
        internalCounters.push_back(16856);
        internalCounters.push_back(17052);
        internalCounters.push_back(17248);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16643);
        internalCounters.push_back(16839);
        internalCounters.push_back(17035);
        internalCounters.push_back(17231);
        internalCounters.push_back(16647);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(16649);
        internalCounters.push_back(16845);
        internalCounters.push_back(17041);
        internalCounters.push_back(17237);
        internalCounters.push_back(16653);
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16643);
        internalCounters.push_back(16839);
        internalCounters.push_back(17035);
        internalCounters.push_back(17231);
        internalCounters.push_back(16647);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(16649);
        internalCounters.push_back(16845);
        internalCounters.push_back(17041);
        internalCounters.push_back(17237);
        internalCounters.push_back(16653);
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55102);
        internalCounters.push_back(16643);
        internalCounters.push_back(16839);
        internalCounters.push_back(17035);
        internalCounters.push_back(17231);
        internalCounters.push_back(16647);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(16649);
        internalCounters.push_back(16845);
        internalCounters.push_back(17041);
        internalCounters.push_back(17237);
        internalCounters.push_back(16653);
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50844);
        internalCounters.push_back(50992);
        internalCounters.push_back(51140);
        internalCounters.push_back(51288);
        internalCounters.push_back(50825);
        internalCounters.push_back(50973);
        internalCounters.push_back(51121);
        internalCounters.push_back(51269);
        internalCounters.push_back(50920);
        internalCounters.push_back(51068);
        internalCounters.push_back(51216);
        internalCounters.push_back(51364);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21899);
        internalCounters.push_back(22273);
        internalCounters.push_back(22647);
        internalCounters.push_back(23021);
        internalCounters.push_back(21877);
        internalCounters.push_back(22251);
        internalCounters.push_back(22625);
        internalCounters.push_back(22999);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21903);
        internalCounters.push_back(22277);
        internalCounters.push_back(22651);
        internalCounters.push_back(23025);
        internalCounters.push_back(21877);
        internalCounters.push_back(22251);
        internalCounters.push_back(22625);
        internalCounters.push_back(22999);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21944);
        internalCounters.push_back(22318);
        internalCounters.push_back(22692);
        internalCounters.push_back(23066);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21944);
        internalCounters.push_back(22318);
        internalCounters.push_back(22692);
        internalCounters.push_back(23066);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21957);
        internalCounters.push_back(22331);
        internalCounters.push_back(22705);
        internalCounters.push_back(23079);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21957);
        internalCounters.push_back(22331);
        internalCounters.push_back(22705);
        internalCounters.push_back(23079);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50929);
        internalCounters.push_back(51077);
        internalCounters.push_back(51225);
        internalCounters.push_back(51373);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26387);
        internalCounters.push_back(26761);
        internalCounters.push_back(27135);
        internalCounters.push_back(27509);
        internalCounters.push_back(26365);
        internalCounters.push_back(26739);
        internalCounters.push_back(27113);
        internalCounters.push_back(27487);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26391);
        internalCounters.push_back(26765);
        internalCounters.push_back(27139);
        internalCounters.push_back(27513);
        internalCounters.push_back(26365);
        internalCounters.push_back(26739);
        internalCounters.push_back(27113);
        internalCounters.push_back(27487);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26432);
        internalCounters.push_back(26806);
        internalCounters.push_back(27180);
        internalCounters.push_back(27554);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26432);
        internalCounters.push_back(26806);
        internalCounters.push_back(27180);
        internalCounters.push_back(27554);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26445);
        internalCounters.push_back(26819);
        internalCounters.push_back(27193);
        internalCounters.push_back(27567);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26445);
        internalCounters.push_back(26819);
        internalCounters.push_back(27193);
        internalCounters.push_back(27567);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50833);
        internalCounters.push_back(50981);
        internalCounters.push_back(51129);
        internalCounters.push_back(51277);

        c.DefineDerivedCounter("GSPrimsIn", "GeometryShader", "The number of primitives passed into the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "20c29866-509a-aaab-2697-6b2c38f79953");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50844);
        internalCounters.push_back(50992);
        internalCounters.push_back(51140);
        internalCounters.push_back(51288);
        internalCounters.push_back(50825);
        internalCounters.push_back(50973);
        internalCounters.push_back(51121);
        internalCounters.push_back(51269);

        c.DefineDerivedCounter("GSVerticesOut", "GeometryShader", "The number of vertices output by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero", "775b9736-319a-bd8a-48c9-68db9c91d978");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20403);
        internalCounters.push_back(20777);
        internalCounters.push_back(21151);
        internalCounters.push_back(21525);
        internalCounters.push_back(20381);
        internalCounters.push_back(20755);
        internalCounters.push_back(21129);
        internalCounters.push_back(21503);

        c.DefineDerivedCounter("GSVALUInstCount", "GeometryShader", "Average number of vector ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "21b12bfa-b8cd-2e71-a2d5-f9e9f1d65d61");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20407);
        internalCounters.push_back(20781);
        internalCounters.push_back(21155);
        internalCounters.push_back(21529);
        internalCounters.push_back(20381);
        internalCounters.push_back(20755);
        internalCounters.push_back(21129);
        internalCounters.push_back(21503);

        c.DefineDerivedCounter("GSSALUInstCount", "GeometryShader", "Average number of scalar ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "a8562594-d335-ca43-61bf-03b72d2b98a5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20448);
        internalCounters.push_back(20822);
        internalCounters.push_back(21196);
        internalCounters.push_back(21570);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSVALUBusy", "GeometryShader", "The percentage of GPUTime vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "228a4818-1e56-cebb-0720-3b2cdc057a6f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20448);
        internalCounters.push_back(20822);
        internalCounters.push_back(21196);
        internalCounters.push_back(21570);

        c.DefineDerivedCounter("GSVALUBusyCycles", "GeometryShader", "Number of GPU cycles where vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "be217edd-226f-bd97-9a48-46e2809b1933");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20461);
        internalCounters.push_back(20835);
        internalCounters.push_back(21209);
        internalCounters.push_back(21583);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSSALUBusy", "GeometryShader", "The percentage of GPUTime scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "f28ce300-800e-9822-39e4-f48528bdb935");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20461);
        internalCounters.push_back(20835);
        internalCounters.push_back(21209);
        internalCounters.push_back(21583);

        c.DefineDerivedCounter("GSSALUBusyCycles", "GeometryShader", "Number of GPU cycles where scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "b3eace7c-3bc4-0107-887f-923851dc8ea7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12502);
        internalCounters.push_back(12853);
        internalCounters.push_back(13204);
        internalCounters.push_back(13555);
        internalCounters.push_back(12506);
        internalCounters.push_back(12857);
        internalCounters.push_back(13208);
        internalCounters.push_back(13559);
        internalCounters.push_back(12458);
        internalCounters.push_back(12809);
        internalCounters.push_back(13160);
        internalCounters.push_back(13511);
        internalCounters.push_back(12470);
        internalCounters.push_back(12821);
        internalCounters.push_back(13172);
        internalCounters.push_back(13523);
        internalCounters.push_back(12459);
        internalCounters.push_back(12810);
        internalCounters.push_back(13161);
        internalCounters.push_back(13512);
        internalCounters.push_back(12471);
        internalCounters.push_back(12822);
        internalCounters.push_back(13173);
        internalCounters.push_back(13524);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12502);
        internalCounters.push_back(12853);
        internalCounters.push_back(13204);
        internalCounters.push_back(13555);
        internalCounters.push_back(12506);
        internalCounters.push_back(12857);
        internalCounters.push_back(13208);
        internalCounters.push_back(13559);
        internalCounters.push_back(12458);
        internalCounters.push_back(12809);
        internalCounters.push_back(13160);
        internalCounters.push_back(13511);
        internalCounters.push_back(12470);
        internalCounters.push_back(12821);
        internalCounters.push_back(13172);
        internalCounters.push_back(13523);
        internalCounters.push_back(12459);
        internalCounters.push_back(12810);
        internalCounters.push_back(13161);
        internalCounters.push_back(13512);
        internalCounters.push_back(12471);
        internalCounters.push_back(12822);
        internalCounters.push_back(13173);
        internalCounters.push_back(13524);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12405);
        internalCounters.push_back(12756);
        internalCounters.push_back(13107);
        internalCounters.push_back(13458);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12411);
        internalCounters.push_back(12762);
        internalCounters.push_back(13113);
        internalCounters.push_back(13464);
        internalCounters.push_back(12451);
        internalCounters.push_back(12802);
        internalCounters.push_back(13153);
        internalCounters.push_back(13504);
        internalCounters.push_back(12452);
        internalCounters.push_back(12803);
        internalCounters.push_back(13154);
        internalCounters.push_back(13505);
        internalCounters.push_back(12453);
        internalCounters.push_back(12804);
        internalCounters.push_back(13155);
        internalCounters.push_back(13506);
        internalCounters.push_back(12454);
        internalCounters.push_back(12805);
        internalCounters.push_back(13156);
        internalCounters.push_back(13507);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,+,2,+,3,+,4,+,5,+,6,+,7,+,8,+,9,+,10,+,11,+,12,+,13,+,14,+,15,+,16,+,17,+,18,+,19,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12418);
        internalCounters.push_back(12769);
        internalCounters.push_back(13120);
        internalCounters.push_back(13471);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12506);
        internalCounters.push_back(12857);
        internalCounters.push_back(13208);
        internalCounters.push_back(13559);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12506);
        internalCounters.push_back(12857);
        internalCounters.push_back(13208);
        internalCounters.push_back(13559);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15781);
        internalCounters.push_back(15989);
        internalCounters.push_back(16197);
        internalCounters.push_back(16405);
        internalCounters.push_back(15786);
        internalCounters.push_back(15994);
        internalCounters.push_back(16202);
        internalCounters.push_back(16410);
        internalCounters.push_back(15791);
        internalCounters.push_back(15999);
        internalCounters.push_back(16207);
        internalCounters.push_back(16415);
        internalCounters.push_back(15796);
        internalCounters.push_back(16004);
        internalCounters.push_back(16212);
        internalCounters.push_back(16420);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,8,9,10,11,sum4,12,13,14,15,sum4,sum4", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15783);
        internalCounters.push_back(15991);
        internalCounters.push_back(16199);
        internalCounters.push_back(16407);
        internalCounters.push_back(15788);
        internalCounters.push_back(15996);
        internalCounters.push_back(16204);
        internalCounters.push_back(16412);
        internalCounters.push_back(15793);
        internalCounters.push_back(16001);
        internalCounters.push_back(16209);
        internalCounters.push_back(16417);
        internalCounters.push_back(15798);
        internalCounters.push_back(16006);
        internalCounters.push_back(16214);
        internalCounters.push_back(16422);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max,16,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15783);
        internalCounters.push_back(15991);
        internalCounters.push_back(16199);
        internalCounters.push_back(16407);
        internalCounters.push_back(15788);
        internalCounters.push_back(15996);
        internalCounters.push_back(16204);
        internalCounters.push_back(16412);
        internalCounters.push_back(15793);
        internalCounters.push_back(16001);
        internalCounters.push_back(16209);
        internalCounters.push_back(16417);
        internalCounters.push_back(15798);
        internalCounters.push_back(16006);
        internalCounters.push_back(16214);
        internalCounters.push_back(16422);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23395);
        internalCounters.push_back(23769);
        internalCounters.push_back(24143);
        internalCounters.push_back(24517);
        internalCounters.push_back(23373);
        internalCounters.push_back(23747);
        internalCounters.push_back(24121);
        internalCounters.push_back(24495);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23399);
        internalCounters.push_back(23773);
        internalCounters.push_back(24147);
        internalCounters.push_back(24521);
        internalCounters.push_back(23373);
        internalCounters.push_back(23747);
        internalCounters.push_back(24121);
        internalCounters.push_back(24495);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23440);
        internalCounters.push_back(23814);
        internalCounters.push_back(24188);
        internalCounters.push_back(24562);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23440);
        internalCounters.push_back(23814);
        internalCounters.push_back(24188);
        internalCounters.push_back(24562);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23453);
        internalCounters.push_back(23827);
        internalCounters.push_back(24201);
        internalCounters.push_back(24575);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23453);
        internalCounters.push_back(23827);
        internalCounters.push_back(24201);
        internalCounters.push_back(24575);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16647);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(16653);
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);
        internalCounters.push_back(27871);
        internalCounters.push_back(28245);
        internalCounters.push_back(28619);
        internalCounters.push_back(28993);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27883);
        internalCounters.push_back(28257);
        internalCounters.push_back(28631);
        internalCounters.push_back(29005);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27942);
        internalCounters.push_back(28316);
        internalCounters.push_back(28690);
        internalCounters.push_back(29064);
        internalCounters.push_back(27928);
        internalCounters.push_back(28302);
        internalCounters.push_back(28676);
        internalCounters.push_back(29050);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of 64. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),*,/,(100),*,8,9,10,11,12,13,14,15,sum8,ifnotzero,(100),min", "4476879e-cdc0-d602-b24e-9b4a8d38438f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27887);
        internalCounters.push_back(28261);
        internalCounters.push_back(28635);
        internalCounters.push_back(29009);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27885);
        internalCounters.push_back(28259);
        internalCounters.push_back(28633);
        internalCounters.push_back(29007);
        internalCounters.push_back(29454);
        internalCounters.push_back(29573);
        internalCounters.push_back(29692);
        internalCounters.push_back(29811);
        internalCounters.push_back(29930);
        internalCounters.push_back(30049);
        internalCounters.push_back(30168);
        internalCounters.push_back(30287);
        internalCounters.push_back(30406);
        internalCounters.push_back(30525);
        internalCounters.push_back(30644);
        internalCounters.push_back(30763);
        internalCounters.push_back(30882);
        internalCounters.push_back(31001);
        internalCounters.push_back(31120);
        internalCounters.push_back(31239);
        internalCounters.push_back(31358);
        internalCounters.push_back(31477);
        internalCounters.push_back(31596);
        internalCounters.push_back(31715);
        internalCounters.push_back(31834);
        internalCounters.push_back(31953);
        internalCounters.push_back(32072);
        internalCounters.push_back(32191);
        internalCounters.push_back(32310);
        internalCounters.push_back(32429);
        internalCounters.push_back(32548);
        internalCounters.push_back(32667);
        internalCounters.push_back(32786);
        internalCounters.push_back(32905);
        internalCounters.push_back(33024);
        internalCounters.push_back(33143);
        internalCounters.push_back(33262);
        internalCounters.push_back(33381);
        internalCounters.push_back(33500);
        internalCounters.push_back(33619);
        internalCounters.push_back(33738);
        internalCounters.push_back(33857);
        internalCounters.push_back(33976);
        internalCounters.push_back(34095);
        internalCounters.push_back(34214);
        internalCounters.push_back(34333);
        internalCounters.push_back(34452);
        internalCounters.push_back(34571);
        internalCounters.push_back(34690);
        internalCounters.push_back(34809);
        internalCounters.push_back(34928);
        internalCounters.push_back(35047);
        internalCounters.push_back(35166);
        internalCounters.push_back(35285);
        internalCounters.push_back(35404);
        internalCounters.push_back(35523);
        internalCounters.push_back(35642);
        internalCounters.push_back(35761);
        internalCounters.push_back(35880);
        internalCounters.push_back(35999);
        internalCounters.push_back(36118);
        internalCounters.push_back(36237);
        internalCounters.push_back(36356);
        internalCounters.push_back(36475);
        internalCounters.push_back(36594);
        internalCounters.push_back(36713);
        internalCounters.push_back(36832);
        internalCounters.push_back(36951);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27888);
        internalCounters.push_back(28262);
        internalCounters.push_back(28636);
        internalCounters.push_back(29010);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27884);
        internalCounters.push_back(28258);
        internalCounters.push_back(28632);
        internalCounters.push_back(29006);
        internalCounters.push_back(29455);
        internalCounters.push_back(29574);
        internalCounters.push_back(29693);
        internalCounters.push_back(29812);
        internalCounters.push_back(29931);
        internalCounters.push_back(30050);
        internalCounters.push_back(30169);
        internalCounters.push_back(30288);
        internalCounters.push_back(30407);
        internalCounters.push_back(30526);
        internalCounters.push_back(30645);
        internalCounters.push_back(30764);
        internalCounters.push_back(30883);
        internalCounters.push_back(31002);
        internalCounters.push_back(31121);
        internalCounters.push_back(31240);
        internalCounters.push_back(31359);
        internalCounters.push_back(31478);
        internalCounters.push_back(31597);
        internalCounters.push_back(31716);
        internalCounters.push_back(31835);
        internalCounters.push_back(31954);
        internalCounters.push_back(32073);
        internalCounters.push_back(32192);
        internalCounters.push_back(32311);
        internalCounters.push_back(32430);
        internalCounters.push_back(32549);
        internalCounters.push_back(32668);
        internalCounters.push_back(32787);
        internalCounters.push_back(32906);
        internalCounters.push_back(33025);
        internalCounters.push_back(33144);
        internalCounters.push_back(33263);
        internalCounters.push_back(33382);
        internalCounters.push_back(33501);
        internalCounters.push_back(33620);
        internalCounters.push_back(33739);
        internalCounters.push_back(33858);
        internalCounters.push_back(33977);
        internalCounters.push_back(34096);
        internalCounters.push_back(34215);
        internalCounters.push_back(34334);
        internalCounters.push_back(34453);
        internalCounters.push_back(34572);
        internalCounters.push_back(34691);
        internalCounters.push_back(34810);
        internalCounters.push_back(34929);
        internalCounters.push_back(35048);
        internalCounters.push_back(35167);
        internalCounters.push_back(35286);
        internalCounters.push_back(35405);
        internalCounters.push_back(35524);
        internalCounters.push_back(35643);
        internalCounters.push_back(35762);
        internalCounters.push_back(35881);
        internalCounters.push_back(36000);
        internalCounters.push_back(36119);
        internalCounters.push_back(36238);
        internalCounters.push_back(36357);
        internalCounters.push_back(36476);
        internalCounters.push_back(36595);
        internalCounters.push_back(36714);
        internalCounters.push_back(36833);
        internalCounters.push_back(36952);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27889);
        internalCounters.push_back(28263);
        internalCounters.push_back(28637);
        internalCounters.push_back(29011);
        internalCounters.push_back(27890);
        internalCounters.push_back(28264);
        internalCounters.push_back(28638);
        internalCounters.push_back(29012);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSFlatVMemInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to the video memory executed per work item (affected by flow control). Includes FLAT instructions that read from or write to scratch.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "2570b477-13e3-f5b6-e6ff-7159373bc74d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27928);
        internalCounters.push_back(28302);
        internalCounters.push_back(28676);
        internalCounters.push_back(29050);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27928);
        internalCounters.push_back(28302);
        internalCounters.push_back(28676);
        internalCounters.push_back(29050);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27941);
        internalCounters.push_back(28315);
        internalCounters.push_back(28689);
        internalCounters.push_back(29063);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27941);
        internalCounters.push_back(28315);
        internalCounters.push_back(28689);
        internalCounters.push_back(29063);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29368);
        internalCounters.push_back(29487);
        internalCounters.push_back(29606);
        internalCounters.push_back(29725);
        internalCounters.push_back(29844);
        internalCounters.push_back(29963);
        internalCounters.push_back(30082);
        internalCounters.push_back(30201);
        internalCounters.push_back(30320);
        internalCounters.push_back(30439);
        internalCounters.push_back(30558);
        internalCounters.push_back(30677);
        internalCounters.push_back(30796);
        internalCounters.push_back(30915);
        internalCounters.push_back(31034);
        internalCounters.push_back(31153);
        internalCounters.push_back(31272);
        internalCounters.push_back(31391);
        internalCounters.push_back(31510);
        internalCounters.push_back(31629);
        internalCounters.push_back(31748);
        internalCounters.push_back(31867);
        internalCounters.push_back(31986);
        internalCounters.push_back(32105);
        internalCounters.push_back(32224);
        internalCounters.push_back(32343);
        internalCounters.push_back(32462);
        internalCounters.push_back(32581);
        internalCounters.push_back(32700);
        internalCounters.push_back(32819);
        internalCounters.push_back(32938);
        internalCounters.push_back(33057);
        internalCounters.push_back(33176);
        internalCounters.push_back(33295);
        internalCounters.push_back(33414);
        internalCounters.push_back(33533);
        internalCounters.push_back(33652);
        internalCounters.push_back(33771);
        internalCounters.push_back(33890);
        internalCounters.push_back(34009);
        internalCounters.push_back(34128);
        internalCounters.push_back(34247);
        internalCounters.push_back(34366);
        internalCounters.push_back(34485);
        internalCounters.push_back(34604);
        internalCounters.push_back(34723);
        internalCounters.push_back(34842);
        internalCounters.push_back(34961);
        internalCounters.push_back(35080);
        internalCounters.push_back(35199);
        internalCounters.push_back(35318);
        internalCounters.push_back(35437);
        internalCounters.push_back(35556);
        internalCounters.push_back(35675);
        internalCounters.push_back(35794);
        internalCounters.push_back(35913);
        internalCounters.push_back(36032);
        internalCounters.push_back(36151);
        internalCounters.push_back(36270);
        internalCounters.push_back(36389);
        internalCounters.push_back(36508);
        internalCounters.push_back(36627);
        internalCounters.push_back(36746);
        internalCounters.push_back(36865);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29368);
        internalCounters.push_back(29487);
        internalCounters.push_back(29606);
        internalCounters.push_back(29725);
        internalCounters.push_back(29844);
        internalCounters.push_back(29963);
        internalCounters.push_back(30082);
        internalCounters.push_back(30201);
        internalCounters.push_back(30320);
        internalCounters.push_back(30439);
        internalCounters.push_back(30558);
        internalCounters.push_back(30677);
        internalCounters.push_back(30796);
        internalCounters.push_back(30915);
        internalCounters.push_back(31034);
        internalCounters.push_back(31153);
        internalCounters.push_back(31272);
        internalCounters.push_back(31391);
        internalCounters.push_back(31510);
        internalCounters.push_back(31629);
        internalCounters.push_back(31748);
        internalCounters.push_back(31867);
        internalCounters.push_back(31986);
        internalCounters.push_back(32105);
        internalCounters.push_back(32224);
        internalCounters.push_back(32343);
        internalCounters.push_back(32462);
        internalCounters.push_back(32581);
        internalCounters.push_back(32700);
        internalCounters.push_back(32819);
        internalCounters.push_back(32938);
        internalCounters.push_back(33057);
        internalCounters.push_back(33176);
        internalCounters.push_back(33295);
        internalCounters.push_back(33414);
        internalCounters.push_back(33533);
        internalCounters.push_back(33652);
        internalCounters.push_back(33771);
        internalCounters.push_back(33890);
        internalCounters.push_back(34009);
        internalCounters.push_back(34128);
        internalCounters.push_back(34247);
        internalCounters.push_back(34366);
        internalCounters.push_back(34485);
        internalCounters.push_back(34604);
        internalCounters.push_back(34723);
        internalCounters.push_back(34842);
        internalCounters.push_back(34961);
        internalCounters.push_back(35080);
        internalCounters.push_back(35199);
        internalCounters.push_back(35318);
        internalCounters.push_back(35437);
        internalCounters.push_back(35556);
        internalCounters.push_back(35675);
        internalCounters.push_back(35794);
        internalCounters.push_back(35913);
        internalCounters.push_back(36032);
        internalCounters.push_back(36151);
        internalCounters.push_back(36270);
        internalCounters.push_back(36389);
        internalCounters.push_back(36508);
        internalCounters.push_back(36627);
        internalCounters.push_back(36746);
        internalCounters.push_back(36865);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,65,66,67,68,69,70,71,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40623);
        internalCounters.push_back(40708);
        internalCounters.push_back(40793);
        internalCounters.push_back(40878);
        internalCounters.push_back(40963);
        internalCounters.push_back(41048);
        internalCounters.push_back(41133);
        internalCounters.push_back(41218);
        internalCounters.push_back(41303);
        internalCounters.push_back(41388);
        internalCounters.push_back(41473);
        internalCounters.push_back(41558);
        internalCounters.push_back(41643);
        internalCounters.push_back(41728);
        internalCounters.push_back(41813);
        internalCounters.push_back(41898);
        internalCounters.push_back(41983);
        internalCounters.push_back(42068);
        internalCounters.push_back(42153);
        internalCounters.push_back(42238);
        internalCounters.push_back(42323);
        internalCounters.push_back(42408);
        internalCounters.push_back(42493);
        internalCounters.push_back(42578);
        internalCounters.push_back(42663);
        internalCounters.push_back(42748);
        internalCounters.push_back(42833);
        internalCounters.push_back(42918);
        internalCounters.push_back(43003);
        internalCounters.push_back(43088);
        internalCounters.push_back(43173);
        internalCounters.push_back(43258);
        internalCounters.push_back(43343);
        internalCounters.push_back(43428);
        internalCounters.push_back(43513);
        internalCounters.push_back(43598);
        internalCounters.push_back(43683);
        internalCounters.push_back(43768);
        internalCounters.push_back(43853);
        internalCounters.push_back(43938);
        internalCounters.push_back(44023);
        internalCounters.push_back(44108);
        internalCounters.push_back(44193);
        internalCounters.push_back(44278);
        internalCounters.push_back(44363);
        internalCounters.push_back(44448);
        internalCounters.push_back(44533);
        internalCounters.push_back(44618);
        internalCounters.push_back(44703);
        internalCounters.push_back(44788);
        internalCounters.push_back(44873);
        internalCounters.push_back(44958);
        internalCounters.push_back(45043);
        internalCounters.push_back(45128);
        internalCounters.push_back(45213);
        internalCounters.push_back(45298);
        internalCounters.push_back(45383);
        internalCounters.push_back(45468);
        internalCounters.push_back(45553);
        internalCounters.push_back(45638);
        internalCounters.push_back(45723);
        internalCounters.push_back(45808);
        internalCounters.push_back(45893);
        internalCounters.push_back(45978);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40623);
        internalCounters.push_back(40708);
        internalCounters.push_back(40793);
        internalCounters.push_back(40878);
        internalCounters.push_back(40963);
        internalCounters.push_back(41048);
        internalCounters.push_back(41133);
        internalCounters.push_back(41218);
        internalCounters.push_back(41303);
        internalCounters.push_back(41388);
        internalCounters.push_back(41473);
        internalCounters.push_back(41558);
        internalCounters.push_back(41643);
        internalCounters.push_back(41728);
        internalCounters.push_back(41813);
        internalCounters.push_back(41898);
        internalCounters.push_back(41983);
        internalCounters.push_back(42068);
        internalCounters.push_back(42153);
        internalCounters.push_back(42238);
        internalCounters.push_back(42323);
        internalCounters.push_back(42408);
        internalCounters.push_back(42493);
        internalCounters.push_back(42578);
        internalCounters.push_back(42663);
        internalCounters.push_back(42748);
        internalCounters.push_back(42833);
        internalCounters.push_back(42918);
        internalCounters.push_back(43003);
        internalCounters.push_back(43088);
        internalCounters.push_back(43173);
        internalCounters.push_back(43258);
        internalCounters.push_back(43343);
        internalCounters.push_back(43428);
        internalCounters.push_back(43513);
        internalCounters.push_back(43598);
        internalCounters.push_back(43683);
        internalCounters.push_back(43768);
        internalCounters.push_back(43853);
        internalCounters.push_back(43938);
        internalCounters.push_back(44023);
        internalCounters.push_back(44108);
        internalCounters.push_back(44193);
        internalCounters.push_back(44278);
        internalCounters.push_back(44363);
        internalCounters.push_back(44448);
        internalCounters.push_back(44533);
        internalCounters.push_back(44618);
        internalCounters.push_back(44703);
        internalCounters.push_back(44788);
        internalCounters.push_back(44873);
        internalCounters.push_back(44958);
        internalCounters.push_back(45043);
        internalCounters.push_back(45128);
        internalCounters.push_back(45213);
        internalCounters.push_back(45298);
        internalCounters.push_back(45383);
        internalCounters.push_back(45468);
        internalCounters.push_back(45553);
        internalCounters.push_back(45638);
        internalCounters.push_back(45723);
        internalCounters.push_back(45808);
        internalCounters.push_back(45893);
        internalCounters.push_back(45978);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,65,66,67,68,69,70,71,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46090);
        internalCounters.push_back(46372);
        internalCounters.push_back(46654);
        internalCounters.push_back(46936);
        internalCounters.push_back(47218);
        internalCounters.push_back(47500);
        internalCounters.push_back(47782);
        internalCounters.push_back(48064);
        internalCounters.push_back(48346);
        internalCounters.push_back(48628);
        internalCounters.push_back(48910);
        internalCounters.push_back(49192);
        internalCounters.push_back(49474);
        internalCounters.push_back(49756);
        internalCounters.push_back(50038);
        internalCounters.push_back(50320);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*,17,18,19,20,21,22,23,24,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46090);
        internalCounters.push_back(46372);
        internalCounters.push_back(46654);
        internalCounters.push_back(46936);
        internalCounters.push_back(47218);
        internalCounters.push_back(47500);
        internalCounters.push_back(47782);
        internalCounters.push_back(48064);
        internalCounters.push_back(48346);
        internalCounters.push_back(48628);
        internalCounters.push_back(48910);
        internalCounters.push_back(49192);
        internalCounters.push_back(49474);
        internalCounters.push_back(49756);
        internalCounters.push_back(50038);
        internalCounters.push_back(50320);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,17,18,19,20,21,22,23,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27892);
        internalCounters.push_back(28266);
        internalCounters.push_back(28640);
        internalCounters.push_back(29014);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27891);
        internalCounters.push_back(28265);
        internalCounters.push_back(28639);
        internalCounters.push_back(29013);
        internalCounters.push_back(27890);
        internalCounters.push_back(28264);
        internalCounters.push_back(28638);
        internalCounters.push_back(29012);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27890);
        internalCounters.push_back(28264);
        internalCounters.push_back(28638);
        internalCounters.push_back(29012);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSFlatLDSInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to LDS executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "99672cda-de2b-014c-482e-cf73b90068d5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27920);
        internalCounters.push_back(28294);
        internalCounters.push_back(28668);
        internalCounters.push_back(29042);
        internalCounters.push_back(27861);
        internalCounters.push_back(28235);
        internalCounters.push_back(28609);
        internalCounters.push_back(28983);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27920);
        internalCounters.push_back(28294);
        internalCounters.push_back(28668);
        internalCounters.push_back(29042);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27950);
        internalCounters.push_back(28324);
        internalCounters.push_back(28698);
        internalCounters.push_back(29072);
        internalCounters.push_back(23);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27950);
        internalCounters.push_back(28324);
        internalCounters.push_back(28698);
        internalCounters.push_back(29072);
        internalCounters.push_back(16644);
        internalCounters.push_back(16840);
        internalCounters.push_back(17036);
        internalCounters.push_back(17232);
        internalCounters.push_back(16650);
        internalCounters.push_back(16846);
        internalCounters.push_back(17042);
        internalCounters.push_back(17238);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29368);
        internalCounters.push_back(29487);
        internalCounters.push_back(29606);
        internalCounters.push_back(29725);
        internalCounters.push_back(29844);
        internalCounters.push_back(29963);
        internalCounters.push_back(30082);
        internalCounters.push_back(30201);
        internalCounters.push_back(30320);
        internalCounters.push_back(30439);
        internalCounters.push_back(30558);
        internalCounters.push_back(30677);
        internalCounters.push_back(30796);
        internalCounters.push_back(30915);
        internalCounters.push_back(31034);
        internalCounters.push_back(31153);
        internalCounters.push_back(31272);
        internalCounters.push_back(31391);
        internalCounters.push_back(31510);
        internalCounters.push_back(31629);
        internalCounters.push_back(31748);
        internalCounters.push_back(31867);
        internalCounters.push_back(31986);
        internalCounters.push_back(32105);
        internalCounters.push_back(32224);
        internalCounters.push_back(32343);
        internalCounters.push_back(32462);
        internalCounters.push_back(32581);
        internalCounters.push_back(32700);
        internalCounters.push_back(32819);
        internalCounters.push_back(32938);
        internalCounters.push_back(33057);
        internalCounters.push_back(33176);
        internalCounters.push_back(33295);
        internalCounters.push_back(33414);
        internalCounters.push_back(33533);
        internalCounters.push_back(33652);
        internalCounters.push_back(33771);
        internalCounters.push_back(33890);
        internalCounters.push_back(34009);
        internalCounters.push_back(34128);
        internalCounters.push_back(34247);
        internalCounters.push_back(34366);
        internalCounters.push_back(34485);
        internalCounters.push_back(34604);
        internalCounters.push_back(34723);
        internalCounters.push_back(34842);
        internalCounters.push_back(34961);
        internalCounters.push_back(35080);
        internalCounters.push_back(35199);
        internalCounters.push_back(35318);
        internalCounters.push_back(35437);
        internalCounters.push_back(35556);
        internalCounters.push_back(35675);
        internalCounters.push_back(35794);
        internalCounters.push_back(35913);
        internalCounters.push_back(36032);
        internalCounters.push_back(36151);
        internalCounters.push_back(36270);
        internalCounters.push_back(36389);
        internalCounters.push_back(36508);
        internalCounters.push_back(36627);
        internalCounters.push_back(36746);
        internalCounters.push_back(36865);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29368);
        internalCounters.push_back(29487);
        internalCounters.push_back(29606);
        internalCounters.push_back(29725);
        internalCounters.push_back(29844);
        internalCounters.push_back(29963);
        internalCounters.push_back(30082);
        internalCounters.push_back(30201);
        internalCounters.push_back(30320);
        internalCounters.push_back(30439);
        internalCounters.push_back(30558);
        internalCounters.push_back(30677);
        internalCounters.push_back(30796);
        internalCounters.push_back(30915);
        internalCounters.push_back(31034);
        internalCounters.push_back(31153);
        internalCounters.push_back(31272);
        internalCounters.push_back(31391);
        internalCounters.push_back(31510);
        internalCounters.push_back(31629);
        internalCounters.push_back(31748);
        internalCounters.push_back(31867);
        internalCounters.push_back(31986);
        internalCounters.push_back(32105);
        internalCounters.push_back(32224);
        internalCounters.push_back(32343);
        internalCounters.push_back(32462);
        internalCounters.push_back(32581);
        internalCounters.push_back(32700);
        internalCounters.push_back(32819);
        internalCounters.push_back(32938);
        internalCounters.push_back(33057);
        internalCounters.push_back(33176);
        internalCounters.push_back(33295);
        internalCounters.push_back(33414);
        internalCounters.push_back(33533);
        internalCounters.push_back(33652);
        internalCounters.push_back(33771);
        internalCounters.push_back(33890);
        internalCounters.push_back(34009);
        internalCounters.push_back(34128);
        internalCounters.push_back(34247);
        internalCounters.push_back(34366);
        internalCounters.push_back(34485);
        internalCounters.push_back(34604);
        internalCounters.push_back(34723);
        internalCounters.push_back(34842);
        internalCounters.push_back(34961);
        internalCounters.push_back(35080);
        internalCounters.push_back(35199);
        internalCounters.push_back(35318);
        internalCounters.push_back(35437);
        internalCounters.push_back(35556);
        internalCounters.push_back(35675);
        internalCounters.push_back(35794);
        internalCounters.push_back(35913);
        internalCounters.push_back(36032);
        internalCounters.push_back(36151);
        internalCounters.push_back(36270);
        internalCounters.push_back(36389);
        internalCounters.push_back(36508);
        internalCounters.push_back(36627);
        internalCounters.push_back(36746);
        internalCounters.push_back(36865);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29422);
        internalCounters.push_back(29541);
        internalCounters.push_back(29660);
        internalCounters.push_back(29779);
        internalCounters.push_back(29898);
        internalCounters.push_back(30017);
        internalCounters.push_back(30136);
        internalCounters.push_back(30255);
        internalCounters.push_back(30374);
        internalCounters.push_back(30493);
        internalCounters.push_back(30612);
        internalCounters.push_back(30731);
        internalCounters.push_back(30850);
        internalCounters.push_back(30969);
        internalCounters.push_back(31088);
        internalCounters.push_back(31207);
        internalCounters.push_back(31326);
        internalCounters.push_back(31445);
        internalCounters.push_back(31564);
        internalCounters.push_back(31683);
        internalCounters.push_back(31802);
        internalCounters.push_back(31921);
        internalCounters.push_back(32040);
        internalCounters.push_back(32159);
        internalCounters.push_back(32278);
        internalCounters.push_back(32397);
        internalCounters.push_back(32516);
        internalCounters.push_back(32635);
        internalCounters.push_back(32754);
        internalCounters.push_back(32873);
        internalCounters.push_back(32992);
        internalCounters.push_back(33111);
        internalCounters.push_back(33230);
        internalCounters.push_back(33349);
        internalCounters.push_back(33468);
        internalCounters.push_back(33587);
        internalCounters.push_back(33706);
        internalCounters.push_back(33825);
        internalCounters.push_back(33944);
        internalCounters.push_back(34063);
        internalCounters.push_back(34182);
        internalCounters.push_back(34301);
        internalCounters.push_back(34420);
        internalCounters.push_back(34539);
        internalCounters.push_back(34658);
        internalCounters.push_back(34777);
        internalCounters.push_back(34896);
        internalCounters.push_back(35015);
        internalCounters.push_back(35134);
        internalCounters.push_back(35253);
        internalCounters.push_back(35372);
        internalCounters.push_back(35491);
        internalCounters.push_back(35610);
        internalCounters.push_back(35729);
        internalCounters.push_back(35848);
        internalCounters.push_back(35967);
        internalCounters.push_back(36086);
        internalCounters.push_back(36205);
        internalCounters.push_back(36324);
        internalCounters.push_back(36443);
        internalCounters.push_back(36562);
        internalCounters.push_back(36681);
        internalCounters.push_back(36800);
        internalCounters.push_back(36919);
        internalCounters.push_back(29421);
        internalCounters.push_back(29540);
        internalCounters.push_back(29659);
        internalCounters.push_back(29778);
        internalCounters.push_back(29897);
        internalCounters.push_back(30016);
        internalCounters.push_back(30135);
        internalCounters.push_back(30254);
        internalCounters.push_back(30373);
        internalCounters.push_back(30492);
        internalCounters.push_back(30611);
        internalCounters.push_back(30730);
        internalCounters.push_back(30849);
        internalCounters.push_back(30968);
        internalCounters.push_back(31087);
        internalCounters.push_back(31206);
        internalCounters.push_back(31325);
        internalCounters.push_back(31444);
        internalCounters.push_back(31563);
        internalCounters.push_back(31682);
        internalCounters.push_back(31801);
        internalCounters.push_back(31920);
        internalCounters.push_back(32039);
        internalCounters.push_back(32158);
        internalCounters.push_back(32277);
        internalCounters.push_back(32396);
        internalCounters.push_back(32515);
        internalCounters.push_back(32634);
        internalCounters.push_back(32753);
        internalCounters.push_back(32872);
        internalCounters.push_back(32991);
        internalCounters.push_back(33110);
        internalCounters.push_back(33229);
        internalCounters.push_back(33348);
        internalCounters.push_back(33467);
        internalCounters.push_back(33586);
        internalCounters.push_back(33705);
        internalCounters.push_back(33824);
        internalCounters.push_back(33943);
        internalCounters.push_back(34062);
        internalCounters.push_back(34181);
        internalCounters.push_back(34300);
        internalCounters.push_back(34419);
        internalCounters.push_back(34538);
        internalCounters.push_back(34657);
        internalCounters.push_back(34776);
        internalCounters.push_back(34895);
        internalCounters.push_back(35014);
        internalCounters.push_back(35133);
        internalCounters.push_back(35252);
        internalCounters.push_back(35371);
        internalCounters.push_back(35490);
        internalCounters.push_back(35609);
        internalCounters.push_back(35728);
        internalCounters.push_back(35847);
        internalCounters.push_back(35966);
        internalCounters.push_back(36085);
        internalCounters.push_back(36204);
        internalCounters.push_back(36323);
        internalCounters.push_back(36442);
        internalCounters.push_back(36561);
        internalCounters.push_back(36680);
        internalCounters.push_back(36799);
        internalCounters.push_back(36918);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29422);
        internalCounters.push_back(29541);
        internalCounters.push_back(29660);
        internalCounters.push_back(29779);
        internalCounters.push_back(29898);
        internalCounters.push_back(30017);
        internalCounters.push_back(30136);
        internalCounters.push_back(30255);
        internalCounters.push_back(30374);
        internalCounters.push_back(30493);
        internalCounters.push_back(30612);
        internalCounters.push_back(30731);
        internalCounters.push_back(30850);
        internalCounters.push_back(30969);
        internalCounters.push_back(31088);
        internalCounters.push_back(31207);
        internalCounters.push_back(31326);
        internalCounters.push_back(31445);
        internalCounters.push_back(31564);
        internalCounters.push_back(31683);
        internalCounters.push_back(31802);
        internalCounters.push_back(31921);
        internalCounters.push_back(32040);
        internalCounters.push_back(32159);
        internalCounters.push_back(32278);
        internalCounters.push_back(32397);
        internalCounters.push_back(32516);
        internalCounters.push_back(32635);
        internalCounters.push_back(32754);
        internalCounters.push_back(32873);
        internalCounters.push_back(32992);
        internalCounters.push_back(33111);
        internalCounters.push_back(33230);
        internalCounters.push_back(33349);
        internalCounters.push_back(33468);
        internalCounters.push_back(33587);
        internalCounters.push_back(33706);
        internalCounters.push_back(33825);
        internalCounters.push_back(33944);
        internalCounters.push_back(34063);
        internalCounters.push_back(34182);
        internalCounters.push_back(34301);
        internalCounters.push_back(34420);
        internalCounters.push_back(34539);
        internalCounters.push_back(34658);
        internalCounters.push_back(34777);
        internalCounters.push_back(34896);
        internalCounters.push_back(35015);
        internalCounters.push_back(35134);
        internalCounters.push_back(35253);
        internalCounters.push_back(35372);
        internalCounters.push_back(35491);
        internalCounters.push_back(35610);
        internalCounters.push_back(35729);
        internalCounters.push_back(35848);
        internalCounters.push_back(35967);
        internalCounters.push_back(36086);
        internalCounters.push_back(36205);
        internalCounters.push_back(36324);
        internalCounters.push_back(36443);
        internalCounters.push_back(36562);
        internalCounters.push_back(36681);
        internalCounters.push_back(36800);
        internalCounters.push_back(36919);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29421);
        internalCounters.push_back(29540);
        internalCounters.push_back(29659);
        internalCounters.push_back(29778);
        internalCounters.push_back(29897);
        internalCounters.push_back(30016);
        internalCounters.push_back(30135);
        internalCounters.push_back(30254);
        internalCounters.push_back(30373);
        internalCounters.push_back(30492);
        internalCounters.push_back(30611);
        internalCounters.push_back(30730);
        internalCounters.push_back(30849);
        internalCounters.push_back(30968);
        internalCounters.push_back(31087);
        internalCounters.push_back(31206);
        internalCounters.push_back(31325);
        internalCounters.push_back(31444);
        internalCounters.push_back(31563);
        internalCounters.push_back(31682);
        internalCounters.push_back(31801);
        internalCounters.push_back(31920);
        internalCounters.push_back(32039);
        internalCounters.push_back(32158);
        internalCounters.push_back(32277);
        internalCounters.push_back(32396);
        internalCounters.push_back(32515);
        internalCounters.push_back(32634);
        internalCounters.push_back(32753);
        internalCounters.push_back(32872);
        internalCounters.push_back(32991);
        internalCounters.push_back(33110);
        internalCounters.push_back(33229);
        internalCounters.push_back(33348);
        internalCounters.push_back(33467);
        internalCounters.push_back(33586);
        internalCounters.push_back(33705);
        internalCounters.push_back(33824);
        internalCounters.push_back(33943);
        internalCounters.push_back(34062);
        internalCounters.push_back(34181);
        internalCounters.push_back(34300);
        internalCounters.push_back(34419);
        internalCounters.push_back(34538);
        internalCounters.push_back(34657);
        internalCounters.push_back(34776);
        internalCounters.push_back(34895);
        internalCounters.push_back(35014);
        internalCounters.push_back(35133);
        internalCounters.push_back(35252);
        internalCounters.push_back(35371);
        internalCounters.push_back(35490);
        internalCounters.push_back(35609);
        internalCounters.push_back(35728);
        internalCounters.push_back(35847);
        internalCounters.push_back(35966);
        internalCounters.push_back(36085);
        internalCounters.push_back(36204);
        internalCounters.push_back(36323);
        internalCounters.push_back(36442);
        internalCounters.push_back(36561);
        internalCounters.push_back(36680);
        internalCounters.push_back(36799);
        internalCounters.push_back(36918);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29424);
        internalCounters.push_back(29543);
        internalCounters.push_back(29662);
        internalCounters.push_back(29781);
        internalCounters.push_back(29900);
        internalCounters.push_back(30019);
        internalCounters.push_back(30138);
        internalCounters.push_back(30257);
        internalCounters.push_back(30376);
        internalCounters.push_back(30495);
        internalCounters.push_back(30614);
        internalCounters.push_back(30733);
        internalCounters.push_back(30852);
        internalCounters.push_back(30971);
        internalCounters.push_back(31090);
        internalCounters.push_back(31209);
        internalCounters.push_back(31328);
        internalCounters.push_back(31447);
        internalCounters.push_back(31566);
        internalCounters.push_back(31685);
        internalCounters.push_back(31804);
        internalCounters.push_back(31923);
        internalCounters.push_back(32042);
        internalCounters.push_back(32161);
        internalCounters.push_back(32280);
        internalCounters.push_back(32399);
        internalCounters.push_back(32518);
        internalCounters.push_back(32637);
        internalCounters.push_back(32756);
        internalCounters.push_back(32875);
        internalCounters.push_back(32994);
        internalCounters.push_back(33113);
        internalCounters.push_back(33232);
        internalCounters.push_back(33351);
        internalCounters.push_back(33470);
        internalCounters.push_back(33589);
        internalCounters.push_back(33708);
        internalCounters.push_back(33827);
        internalCounters.push_back(33946);
        internalCounters.push_back(34065);
        internalCounters.push_back(34184);
        internalCounters.push_back(34303);
        internalCounters.push_back(34422);
        internalCounters.push_back(34541);
        internalCounters.push_back(34660);
        internalCounters.push_back(34779);
        internalCounters.push_back(34898);
        internalCounters.push_back(35017);
        internalCounters.push_back(35136);
        internalCounters.push_back(35255);
        internalCounters.push_back(35374);
        internalCounters.push_back(35493);
        internalCounters.push_back(35612);
        internalCounters.push_back(35731);
        internalCounters.push_back(35850);
        internalCounters.push_back(35969);
        internalCounters.push_back(36088);
        internalCounters.push_back(36207);
        internalCounters.push_back(36326);
        internalCounters.push_back(36445);
        internalCounters.push_back(36564);
        internalCounters.push_back(36683);
        internalCounters.push_back(36802);
        internalCounters.push_back(36921);
        internalCounters.push_back(29423);
        internalCounters.push_back(29542);
        internalCounters.push_back(29661);
        internalCounters.push_back(29780);
        internalCounters.push_back(29899);
        internalCounters.push_back(30018);
        internalCounters.push_back(30137);
        internalCounters.push_back(30256);
        internalCounters.push_back(30375);
        internalCounters.push_back(30494);
        internalCounters.push_back(30613);
        internalCounters.push_back(30732);
        internalCounters.push_back(30851);
        internalCounters.push_back(30970);
        internalCounters.push_back(31089);
        internalCounters.push_back(31208);
        internalCounters.push_back(31327);
        internalCounters.push_back(31446);
        internalCounters.push_back(31565);
        internalCounters.push_back(31684);
        internalCounters.push_back(31803);
        internalCounters.push_back(31922);
        internalCounters.push_back(32041);
        internalCounters.push_back(32160);
        internalCounters.push_back(32279);
        internalCounters.push_back(32398);
        internalCounters.push_back(32517);
        internalCounters.push_back(32636);
        internalCounters.push_back(32755);
        internalCounters.push_back(32874);
        internalCounters.push_back(32993);
        internalCounters.push_back(33112);
        internalCounters.push_back(33231);
        internalCounters.push_back(33350);
        internalCounters.push_back(33469);
        internalCounters.push_back(33588);
        internalCounters.push_back(33707);
        internalCounters.push_back(33826);
        internalCounters.push_back(33945);
        internalCounters.push_back(34064);
        internalCounters.push_back(34183);
        internalCounters.push_back(34302);
        internalCounters.push_back(34421);
        internalCounters.push_back(34540);
        internalCounters.push_back(34659);
        internalCounters.push_back(34778);
        internalCounters.push_back(34897);
        internalCounters.push_back(35016);
        internalCounters.push_back(35135);
        internalCounters.push_back(35254);
        internalCounters.push_back(35373);
        internalCounters.push_back(35492);
        internalCounters.push_back(35611);
        internalCounters.push_back(35730);
        internalCounters.push_back(35849);
        internalCounters.push_back(35968);
        internalCounters.push_back(36087);
        internalCounters.push_back(36206);
        internalCounters.push_back(36325);
        internalCounters.push_back(36444);
        internalCounters.push_back(36563);
        internalCounters.push_back(36682);
        internalCounters.push_back(36801);
        internalCounters.push_back(36920);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29424);
        internalCounters.push_back(29543);
        internalCounters.push_back(29662);
        internalCounters.push_back(29781);
        internalCounters.push_back(29900);
        internalCounters.push_back(30019);
        internalCounters.push_back(30138);
        internalCounters.push_back(30257);
        internalCounters.push_back(30376);
        internalCounters.push_back(30495);
        internalCounters.push_back(30614);
        internalCounters.push_back(30733);
        internalCounters.push_back(30852);
        internalCounters.push_back(30971);
        internalCounters.push_back(31090);
        internalCounters.push_back(31209);
        internalCounters.push_back(31328);
        internalCounters.push_back(31447);
        internalCounters.push_back(31566);
        internalCounters.push_back(31685);
        internalCounters.push_back(31804);
        internalCounters.push_back(31923);
        internalCounters.push_back(32042);
        internalCounters.push_back(32161);
        internalCounters.push_back(32280);
        internalCounters.push_back(32399);
        internalCounters.push_back(32518);
        internalCounters.push_back(32637);
        internalCounters.push_back(32756);
        internalCounters.push_back(32875);
        internalCounters.push_back(32994);
        internalCounters.push_back(33113);
        internalCounters.push_back(33232);
        internalCounters.push_back(33351);
        internalCounters.push_back(33470);
        internalCounters.push_back(33589);
        internalCounters.push_back(33708);
        internalCounters.push_back(33827);
        internalCounters.push_back(33946);
        internalCounters.push_back(34065);
        internalCounters.push_back(34184);
        internalCounters.push_back(34303);
        internalCounters.push_back(34422);
        internalCounters.push_back(34541);
        internalCounters.push_back(34660);
        internalCounters.push_back(34779);
        internalCounters.push_back(34898);
        internalCounters.push_back(35017);
        internalCounters.push_back(35136);
        internalCounters.push_back(35255);
        internalCounters.push_back(35374);
        internalCounters.push_back(35493);
        internalCounters.push_back(35612);
        internalCounters.push_back(35731);
        internalCounters.push_back(35850);
        internalCounters.push_back(35969);
        internalCounters.push_back(36088);
        internalCounters.push_back(36207);
        internalCounters.push_back(36326);
        internalCounters.push_back(36445);
        internalCounters.push_back(36564);
        internalCounters.push_back(36683);
        internalCounters.push_back(36802);
        internalCounters.push_back(36921);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29423);
        internalCounters.push_back(29542);
        internalCounters.push_back(29661);
        internalCounters.push_back(29780);
        internalCounters.push_back(29899);
        internalCounters.push_back(30018);
        internalCounters.push_back(30137);
        internalCounters.push_back(30256);
        internalCounters.push_back(30375);
        internalCounters.push_back(30494);
        internalCounters.push_back(30613);
        internalCounters.push_back(30732);
        internalCounters.push_back(30851);
        internalCounters.push_back(30970);
        internalCounters.push_back(31089);
        internalCounters.push_back(31208);
        internalCounters.push_back(31327);
        internalCounters.push_back(31446);
        internalCounters.push_back(31565);
        internalCounters.push_back(31684);
        internalCounters.push_back(31803);
        internalCounters.push_back(31922);
        internalCounters.push_back(32041);
        internalCounters.push_back(32160);
        internalCounters.push_back(32279);
        internalCounters.push_back(32398);
        internalCounters.push_back(32517);
        internalCounters.push_back(32636);
        internalCounters.push_back(32755);
        internalCounters.push_back(32874);
        internalCounters.push_back(32993);
        internalCounters.push_back(33112);
        internalCounters.push_back(33231);
        internalCounters.push_back(33350);
        internalCounters.push_back(33469);
        internalCounters.push_back(33588);
        internalCounters.push_back(33707);
        internalCounters.push_back(33826);
        internalCounters.push_back(33945);
        internalCounters.push_back(34064);
        internalCounters.push_back(34183);
        internalCounters.push_back(34302);
        internalCounters.push_back(34421);
        internalCounters.push_back(34540);
        internalCounters.push_back(34659);
        internalCounters.push_back(34778);
        internalCounters.push_back(34897);
        internalCounters.push_back(35016);
        internalCounters.push_back(35135);
        internalCounters.push_back(35254);
        internalCounters.push_back(35373);
        internalCounters.push_back(35492);
        internalCounters.push_back(35611);
        internalCounters.push_back(35730);
        internalCounters.push_back(35849);
        internalCounters.push_back(35968);
        internalCounters.push_back(36087);
        internalCounters.push_back(36206);
        internalCounters.push_back(36325);
        internalCounters.push_back(36444);
        internalCounters.push_back(36563);
        internalCounters.push_back(36682);
        internalCounters.push_back(36801);
        internalCounters.push_back(36920);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29442);
        internalCounters.push_back(29561);
        internalCounters.push_back(29680);
        internalCounters.push_back(29799);
        internalCounters.push_back(29918);
        internalCounters.push_back(30037);
        internalCounters.push_back(30156);
        internalCounters.push_back(30275);
        internalCounters.push_back(30394);
        internalCounters.push_back(30513);
        internalCounters.push_back(30632);
        internalCounters.push_back(30751);
        internalCounters.push_back(30870);
        internalCounters.push_back(30989);
        internalCounters.push_back(31108);
        internalCounters.push_back(31227);
        internalCounters.push_back(31346);
        internalCounters.push_back(31465);
        internalCounters.push_back(31584);
        internalCounters.push_back(31703);
        internalCounters.push_back(31822);
        internalCounters.push_back(31941);
        internalCounters.push_back(32060);
        internalCounters.push_back(32179);
        internalCounters.push_back(32298);
        internalCounters.push_back(32417);
        internalCounters.push_back(32536);
        internalCounters.push_back(32655);
        internalCounters.push_back(32774);
        internalCounters.push_back(32893);
        internalCounters.push_back(33012);
        internalCounters.push_back(33131);
        internalCounters.push_back(33250);
        internalCounters.push_back(33369);
        internalCounters.push_back(33488);
        internalCounters.push_back(33607);
        internalCounters.push_back(33726);
        internalCounters.push_back(33845);
        internalCounters.push_back(33964);
        internalCounters.push_back(34083);
        internalCounters.push_back(34202);
        internalCounters.push_back(34321);
        internalCounters.push_back(34440);
        internalCounters.push_back(34559);
        internalCounters.push_back(34678);
        internalCounters.push_back(34797);
        internalCounters.push_back(34916);
        internalCounters.push_back(35035);
        internalCounters.push_back(35154);
        internalCounters.push_back(35273);
        internalCounters.push_back(35392);
        internalCounters.push_back(35511);
        internalCounters.push_back(35630);
        internalCounters.push_back(35749);
        internalCounters.push_back(35868);
        internalCounters.push_back(35987);
        internalCounters.push_back(36106);
        internalCounters.push_back(36225);
        internalCounters.push_back(36344);
        internalCounters.push_back(36463);
        internalCounters.push_back(36582);
        internalCounters.push_back(36701);
        internalCounters.push_back(36820);
        internalCounters.push_back(36939);
        internalCounters.push_back(29443);
        internalCounters.push_back(29562);
        internalCounters.push_back(29681);
        internalCounters.push_back(29800);
        internalCounters.push_back(29919);
        internalCounters.push_back(30038);
        internalCounters.push_back(30157);
        internalCounters.push_back(30276);
        internalCounters.push_back(30395);
        internalCounters.push_back(30514);
        internalCounters.push_back(30633);
        internalCounters.push_back(30752);
        internalCounters.push_back(30871);
        internalCounters.push_back(30990);
        internalCounters.push_back(31109);
        internalCounters.push_back(31228);
        internalCounters.push_back(31347);
        internalCounters.push_back(31466);
        internalCounters.push_back(31585);
        internalCounters.push_back(31704);
        internalCounters.push_back(31823);
        internalCounters.push_back(31942);
        internalCounters.push_back(32061);
        internalCounters.push_back(32180);
        internalCounters.push_back(32299);
        internalCounters.push_back(32418);
        internalCounters.push_back(32537);
        internalCounters.push_back(32656);
        internalCounters.push_back(32775);
        internalCounters.push_back(32894);
        internalCounters.push_back(33013);
        internalCounters.push_back(33132);
        internalCounters.push_back(33251);
        internalCounters.push_back(33370);
        internalCounters.push_back(33489);
        internalCounters.push_back(33608);
        internalCounters.push_back(33727);
        internalCounters.push_back(33846);
        internalCounters.push_back(33965);
        internalCounters.push_back(34084);
        internalCounters.push_back(34203);
        internalCounters.push_back(34322);
        internalCounters.push_back(34441);
        internalCounters.push_back(34560);
        internalCounters.push_back(34679);
        internalCounters.push_back(34798);
        internalCounters.push_back(34917);
        internalCounters.push_back(35036);
        internalCounters.push_back(35155);
        internalCounters.push_back(35274);
        internalCounters.push_back(35393);
        internalCounters.push_back(35512);
        internalCounters.push_back(35631);
        internalCounters.push_back(35750);
        internalCounters.push_back(35869);
        internalCounters.push_back(35988);
        internalCounters.push_back(36107);
        internalCounters.push_back(36226);
        internalCounters.push_back(36345);
        internalCounters.push_back(36464);
        internalCounters.push_back(36583);
        internalCounters.push_back(36702);
        internalCounters.push_back(36821);
        internalCounters.push_back(36940);
        internalCounters.push_back(29444);
        internalCounters.push_back(29563);
        internalCounters.push_back(29682);
        internalCounters.push_back(29801);
        internalCounters.push_back(29920);
        internalCounters.push_back(30039);
        internalCounters.push_back(30158);
        internalCounters.push_back(30277);
        internalCounters.push_back(30396);
        internalCounters.push_back(30515);
        internalCounters.push_back(30634);
        internalCounters.push_back(30753);
        internalCounters.push_back(30872);
        internalCounters.push_back(30991);
        internalCounters.push_back(31110);
        internalCounters.push_back(31229);
        internalCounters.push_back(31348);
        internalCounters.push_back(31467);
        internalCounters.push_back(31586);
        internalCounters.push_back(31705);
        internalCounters.push_back(31824);
        internalCounters.push_back(31943);
        internalCounters.push_back(32062);
        internalCounters.push_back(32181);
        internalCounters.push_back(32300);
        internalCounters.push_back(32419);
        internalCounters.push_back(32538);
        internalCounters.push_back(32657);
        internalCounters.push_back(32776);
        internalCounters.push_back(32895);
        internalCounters.push_back(33014);
        internalCounters.push_back(33133);
        internalCounters.push_back(33252);
        internalCounters.push_back(33371);
        internalCounters.push_back(33490);
        internalCounters.push_back(33609);
        internalCounters.push_back(33728);
        internalCounters.push_back(33847);
        internalCounters.push_back(33966);
        internalCounters.push_back(34085);
        internalCounters.push_back(34204);
        internalCounters.push_back(34323);
        internalCounters.push_back(34442);
        internalCounters.push_back(34561);
        internalCounters.push_back(34680);
        internalCounters.push_back(34799);
        internalCounters.push_back(34918);
        internalCounters.push_back(35037);
        internalCounters.push_back(35156);
        internalCounters.push_back(35275);
        internalCounters.push_back(35394);
        internalCounters.push_back(35513);
        internalCounters.push_back(35632);
        internalCounters.push_back(35751);
        internalCounters.push_back(35870);
        internalCounters.push_back(35989);
        internalCounters.push_back(36108);
        internalCounters.push_back(36227);
        internalCounters.push_back(36346);
        internalCounters.push_back(36465);
        internalCounters.push_back(36584);
        internalCounters.push_back(36703);
        internalCounters.push_back(36822);
        internalCounters.push_back(36941);
        internalCounters.push_back(29445);
        internalCounters.push_back(29564);
        internalCounters.push_back(29683);
        internalCounters.push_back(29802);
        internalCounters.push_back(29921);
        internalCounters.push_back(30040);
        internalCounters.push_back(30159);
        internalCounters.push_back(30278);
        internalCounters.push_back(30397);
        internalCounters.push_back(30516);
        internalCounters.push_back(30635);
        internalCounters.push_back(30754);
        internalCounters.push_back(30873);
        internalCounters.push_back(30992);
        internalCounters.push_back(31111);
        internalCounters.push_back(31230);
        internalCounters.push_back(31349);
        internalCounters.push_back(31468);
        internalCounters.push_back(31587);
        internalCounters.push_back(31706);
        internalCounters.push_back(31825);
        internalCounters.push_back(31944);
        internalCounters.push_back(32063);
        internalCounters.push_back(32182);
        internalCounters.push_back(32301);
        internalCounters.push_back(32420);
        internalCounters.push_back(32539);
        internalCounters.push_back(32658);
        internalCounters.push_back(32777);
        internalCounters.push_back(32896);
        internalCounters.push_back(33015);
        internalCounters.push_back(33134);
        internalCounters.push_back(33253);
        internalCounters.push_back(33372);
        internalCounters.push_back(33491);
        internalCounters.push_back(33610);
        internalCounters.push_back(33729);
        internalCounters.push_back(33848);
        internalCounters.push_back(33967);
        internalCounters.push_back(34086);
        internalCounters.push_back(34205);
        internalCounters.push_back(34324);
        internalCounters.push_back(34443);
        internalCounters.push_back(34562);
        internalCounters.push_back(34681);
        internalCounters.push_back(34800);
        internalCounters.push_back(34919);
        internalCounters.push_back(35038);
        internalCounters.push_back(35157);
        internalCounters.push_back(35276);
        internalCounters.push_back(35395);
        internalCounters.push_back(35514);
        internalCounters.push_back(35633);
        internalCounters.push_back(35752);
        internalCounters.push_back(35871);
        internalCounters.push_back(35990);
        internalCounters.push_back(36109);
        internalCounters.push_back(36228);
        internalCounters.push_back(36347);
        internalCounters.push_back(36466);
        internalCounters.push_back(36585);
        internalCounters.push_back(36704);
        internalCounters.push_back(36823);
        internalCounters.push_back(36942);
        internalCounters.push_back(29446);
        internalCounters.push_back(29565);
        internalCounters.push_back(29684);
        internalCounters.push_back(29803);
        internalCounters.push_back(29922);
        internalCounters.push_back(30041);
        internalCounters.push_back(30160);
        internalCounters.push_back(30279);
        internalCounters.push_back(30398);
        internalCounters.push_back(30517);
        internalCounters.push_back(30636);
        internalCounters.push_back(30755);
        internalCounters.push_back(30874);
        internalCounters.push_back(30993);
        internalCounters.push_back(31112);
        internalCounters.push_back(31231);
        internalCounters.push_back(31350);
        internalCounters.push_back(31469);
        internalCounters.push_back(31588);
        internalCounters.push_back(31707);
        internalCounters.push_back(31826);
        internalCounters.push_back(31945);
        internalCounters.push_back(32064);
        internalCounters.push_back(32183);
        internalCounters.push_back(32302);
        internalCounters.push_back(32421);
        internalCounters.push_back(32540);
        internalCounters.push_back(32659);
        internalCounters.push_back(32778);
        internalCounters.push_back(32897);
        internalCounters.push_back(33016);
        internalCounters.push_back(33135);
        internalCounters.push_back(33254);
        internalCounters.push_back(33373);
        internalCounters.push_back(33492);
        internalCounters.push_back(33611);
        internalCounters.push_back(33730);
        internalCounters.push_back(33849);
        internalCounters.push_back(33968);
        internalCounters.push_back(34087);
        internalCounters.push_back(34206);
        internalCounters.push_back(34325);
        internalCounters.push_back(34444);
        internalCounters.push_back(34563);
        internalCounters.push_back(34682);
        internalCounters.push_back(34801);
        internalCounters.push_back(34920);
        internalCounters.push_back(35039);
        internalCounters.push_back(35158);
        internalCounters.push_back(35277);
        internalCounters.push_back(35396);
        internalCounters.push_back(35515);
        internalCounters.push_back(35634);
        internalCounters.push_back(35753);
        internalCounters.push_back(35872);
        internalCounters.push_back(35991);
        internalCounters.push_back(36110);
        internalCounters.push_back(36229);
        internalCounters.push_back(36348);
        internalCounters.push_back(36467);
        internalCounters.push_back(36586);
        internalCounters.push_back(36705);
        internalCounters.push_back(36824);
        internalCounters.push_back(36943);
        internalCounters.push_back(29447);
        internalCounters.push_back(29566);
        internalCounters.push_back(29685);
        internalCounters.push_back(29804);
        internalCounters.push_back(29923);
        internalCounters.push_back(30042);
        internalCounters.push_back(30161);
        internalCounters.push_back(30280);
        internalCounters.push_back(30399);
        internalCounters.push_back(30518);
        internalCounters.push_back(30637);
        internalCounters.push_back(30756);
        internalCounters.push_back(30875);
        internalCounters.push_back(30994);
        internalCounters.push_back(31113);
        internalCounters.push_back(31232);
        internalCounters.push_back(31351);
        internalCounters.push_back(31470);
        internalCounters.push_back(31589);
        internalCounters.push_back(31708);
        internalCounters.push_back(31827);
        internalCounters.push_back(31946);
        internalCounters.push_back(32065);
        internalCounters.push_back(32184);
        internalCounters.push_back(32303);
        internalCounters.push_back(32422);
        internalCounters.push_back(32541);
        internalCounters.push_back(32660);
        internalCounters.push_back(32779);
        internalCounters.push_back(32898);
        internalCounters.push_back(33017);
        internalCounters.push_back(33136);
        internalCounters.push_back(33255);
        internalCounters.push_back(33374);
        internalCounters.push_back(33493);
        internalCounters.push_back(33612);
        internalCounters.push_back(33731);
        internalCounters.push_back(33850);
        internalCounters.push_back(33969);
        internalCounters.push_back(34088);
        internalCounters.push_back(34207);
        internalCounters.push_back(34326);
        internalCounters.push_back(34445);
        internalCounters.push_back(34564);
        internalCounters.push_back(34683);
        internalCounters.push_back(34802);
        internalCounters.push_back(34921);
        internalCounters.push_back(35040);
        internalCounters.push_back(35159);
        internalCounters.push_back(35278);
        internalCounters.push_back(35397);
        internalCounters.push_back(35516);
        internalCounters.push_back(35635);
        internalCounters.push_back(35754);
        internalCounters.push_back(35873);
        internalCounters.push_back(35992);
        internalCounters.push_back(36111);
        internalCounters.push_back(36230);
        internalCounters.push_back(36349);
        internalCounters.push_back(36468);
        internalCounters.push_back(36587);
        internalCounters.push_back(36706);
        internalCounters.push_back(36825);
        internalCounters.push_back(36944);
        internalCounters.push_back(29448);
        internalCounters.push_back(29567);
        internalCounters.push_back(29686);
        internalCounters.push_back(29805);
        internalCounters.push_back(29924);
        internalCounters.push_back(30043);
        internalCounters.push_back(30162);
        internalCounters.push_back(30281);
        internalCounters.push_back(30400);
        internalCounters.push_back(30519);
        internalCounters.push_back(30638);
        internalCounters.push_back(30757);
        internalCounters.push_back(30876);
        internalCounters.push_back(30995);
        internalCounters.push_back(31114);
        internalCounters.push_back(31233);
        internalCounters.push_back(31352);
        internalCounters.push_back(31471);
        internalCounters.push_back(31590);
        internalCounters.push_back(31709);
        internalCounters.push_back(31828);
        internalCounters.push_back(31947);
        internalCounters.push_back(32066);
        internalCounters.push_back(32185);
        internalCounters.push_back(32304);
        internalCounters.push_back(32423);
        internalCounters.push_back(32542);
        internalCounters.push_back(32661);
        internalCounters.push_back(32780);
        internalCounters.push_back(32899);
        internalCounters.push_back(33018);
        internalCounters.push_back(33137);
        internalCounters.push_back(33256);
        internalCounters.push_back(33375);
        internalCounters.push_back(33494);
        internalCounters.push_back(33613);
        internalCounters.push_back(33732);
        internalCounters.push_back(33851);
        internalCounters.push_back(33970);
        internalCounters.push_back(34089);
        internalCounters.push_back(34208);
        internalCounters.push_back(34327);
        internalCounters.push_back(34446);
        internalCounters.push_back(34565);
        internalCounters.push_back(34684);
        internalCounters.push_back(34803);
        internalCounters.push_back(34922);
        internalCounters.push_back(35041);
        internalCounters.push_back(35160);
        internalCounters.push_back(35279);
        internalCounters.push_back(35398);
        internalCounters.push_back(35517);
        internalCounters.push_back(35636);
        internalCounters.push_back(35755);
        internalCounters.push_back(35874);
        internalCounters.push_back(35993);
        internalCounters.push_back(36112);
        internalCounters.push_back(36231);
        internalCounters.push_back(36350);
        internalCounters.push_back(36469);
        internalCounters.push_back(36588);
        internalCounters.push_back(36707);
        internalCounters.push_back(36826);
        internalCounters.push_back(36945);
        internalCounters.push_back(29449);
        internalCounters.push_back(29568);
        internalCounters.push_back(29687);
        internalCounters.push_back(29806);
        internalCounters.push_back(29925);
        internalCounters.push_back(30044);
        internalCounters.push_back(30163);
        internalCounters.push_back(30282);
        internalCounters.push_back(30401);
        internalCounters.push_back(30520);
        internalCounters.push_back(30639);
        internalCounters.push_back(30758);
        internalCounters.push_back(30877);
        internalCounters.push_back(30996);
        internalCounters.push_back(31115);
        internalCounters.push_back(31234);
        internalCounters.push_back(31353);
        internalCounters.push_back(31472);
        internalCounters.push_back(31591);
        internalCounters.push_back(31710);
        internalCounters.push_back(31829);
        internalCounters.push_back(31948);
        internalCounters.push_back(32067);
        internalCounters.push_back(32186);
        internalCounters.push_back(32305);
        internalCounters.push_back(32424);
        internalCounters.push_back(32543);
        internalCounters.push_back(32662);
        internalCounters.push_back(32781);
        internalCounters.push_back(32900);
        internalCounters.push_back(33019);
        internalCounters.push_back(33138);
        internalCounters.push_back(33257);
        internalCounters.push_back(33376);
        internalCounters.push_back(33495);
        internalCounters.push_back(33614);
        internalCounters.push_back(33733);
        internalCounters.push_back(33852);
        internalCounters.push_back(33971);
        internalCounters.push_back(34090);
        internalCounters.push_back(34209);
        internalCounters.push_back(34328);
        internalCounters.push_back(34447);
        internalCounters.push_back(34566);
        internalCounters.push_back(34685);
        internalCounters.push_back(34804);
        internalCounters.push_back(34923);
        internalCounters.push_back(35042);
        internalCounters.push_back(35161);
        internalCounters.push_back(35280);
        internalCounters.push_back(35399);
        internalCounters.push_back(35518);
        internalCounters.push_back(35637);
        internalCounters.push_back(35756);
        internalCounters.push_back(35875);
        internalCounters.push_back(35994);
        internalCounters.push_back(36113);
        internalCounters.push_back(36232);
        internalCounters.push_back(36351);
        internalCounters.push_back(36470);
        internalCounters.push_back(36589);
        internalCounters.push_back(36708);
        internalCounters.push_back(36827);
        internalCounters.push_back(36946);
        internalCounters.push_back(29450);
        internalCounters.push_back(29569);
        internalCounters.push_back(29688);
        internalCounters.push_back(29807);
        internalCounters.push_back(29926);
        internalCounters.push_back(30045);
        internalCounters.push_back(30164);
        internalCounters.push_back(30283);
        internalCounters.push_back(30402);
        internalCounters.push_back(30521);
        internalCounters.push_back(30640);
        internalCounters.push_back(30759);
        internalCounters.push_back(30878);
        internalCounters.push_back(30997);
        internalCounters.push_back(31116);
        internalCounters.push_back(31235);
        internalCounters.push_back(31354);
        internalCounters.push_back(31473);
        internalCounters.push_back(31592);
        internalCounters.push_back(31711);
        internalCounters.push_back(31830);
        internalCounters.push_back(31949);
        internalCounters.push_back(32068);
        internalCounters.push_back(32187);
        internalCounters.push_back(32306);
        internalCounters.push_back(32425);
        internalCounters.push_back(32544);
        internalCounters.push_back(32663);
        internalCounters.push_back(32782);
        internalCounters.push_back(32901);
        internalCounters.push_back(33020);
        internalCounters.push_back(33139);
        internalCounters.push_back(33258);
        internalCounters.push_back(33377);
        internalCounters.push_back(33496);
        internalCounters.push_back(33615);
        internalCounters.push_back(33734);
        internalCounters.push_back(33853);
        internalCounters.push_back(33972);
        internalCounters.push_back(34091);
        internalCounters.push_back(34210);
        internalCounters.push_back(34329);
        internalCounters.push_back(34448);
        internalCounters.push_back(34567);
        internalCounters.push_back(34686);
        internalCounters.push_back(34805);
        internalCounters.push_back(34924);
        internalCounters.push_back(35043);
        internalCounters.push_back(35162);
        internalCounters.push_back(35281);
        internalCounters.push_back(35400);
        internalCounters.push_back(35519);
        internalCounters.push_back(35638);
        internalCounters.push_back(35757);
        internalCounters.push_back(35876);
        internalCounters.push_back(35995);
        internalCounters.push_back(36114);
        internalCounters.push_back(36233);
        internalCounters.push_back(36352);
        internalCounters.push_back(36471);
        internalCounters.push_back(36590);
        internalCounters.push_back(36709);
        internalCounters.push_back(36828);
        internalCounters.push_back(36947);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(2),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,*,+,(4),128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,*,+,(6),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,*,+,(8),256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,*,+,(10),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,*,+,(12),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,*,+,(14),448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,*,+,(16),512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,+,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,+,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,+,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,+,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7184);
        internalCounters.push_back(7512);
        internalCounters.push_back(7840);
        internalCounters.push_back(8168);
        internalCounters.push_back(8496);
        internalCounters.push_back(8824);
        internalCounters.push_back(9152);
        internalCounters.push_back(9480);
        internalCounters.push_back(9808);
        internalCounters.push_back(10136);
        internalCounters.push_back(10464);
        internalCounters.push_back(10792);
        internalCounters.push_back(11120);
        internalCounters.push_back(11448);
        internalCounters.push_back(11776);
        internalCounters.push_back(12104);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7184);
        internalCounters.push_back(7512);
        internalCounters.push_back(7840);
        internalCounters.push_back(8168);
        internalCounters.push_back(8496);
        internalCounters.push_back(8824);
        internalCounters.push_back(9152);
        internalCounters.push_back(9480);
        internalCounters.push_back(9808);
        internalCounters.push_back(10136);
        internalCounters.push_back(10464);
        internalCounters.push_back(10792);
        internalCounters.push_back(11120);
        internalCounters.push_back(11448);
        internalCounters.push_back(11776);
        internalCounters.push_back(12104);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7055);
        internalCounters.push_back(7383);
        internalCounters.push_back(7711);
        internalCounters.push_back(8039);
        internalCounters.push_back(8367);
        internalCounters.push_back(8695);
        internalCounters.push_back(9023);
        internalCounters.push_back(9351);
        internalCounters.push_back(9679);
        internalCounters.push_back(10007);
        internalCounters.push_back(10335);
        internalCounters.push_back(10663);
        internalCounters.push_back(10991);
        internalCounters.push_back(11319);
        internalCounters.push_back(11647);
        internalCounters.push_back(11975);
        internalCounters.push_back(7044);
        internalCounters.push_back(7372);
        internalCounters.push_back(7700);
        internalCounters.push_back(8028);
        internalCounters.push_back(8356);
        internalCounters.push_back(8684);
        internalCounters.push_back(9012);
        internalCounters.push_back(9340);
        internalCounters.push_back(9668);
        internalCounters.push_back(9996);
        internalCounters.push_back(10324);
        internalCounters.push_back(10652);
        internalCounters.push_back(10980);
        internalCounters.push_back(11308);
        internalCounters.push_back(11636);
        internalCounters.push_back(11964);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7055);
        internalCounters.push_back(7383);
        internalCounters.push_back(7711);
        internalCounters.push_back(8039);
        internalCounters.push_back(8367);
        internalCounters.push_back(8695);
        internalCounters.push_back(9023);
        internalCounters.push_back(9351);
        internalCounters.push_back(9679);
        internalCounters.push_back(10007);
        internalCounters.push_back(10335);
        internalCounters.push_back(10663);
        internalCounters.push_back(10991);
        internalCounters.push_back(11319);
        internalCounters.push_back(11647);
        internalCounters.push_back(11975);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7044);
        internalCounters.push_back(7372);
        internalCounters.push_back(7700);
        internalCounters.push_back(8028);
        internalCounters.push_back(8356);
        internalCounters.push_back(8684);
        internalCounters.push_back(9012);
        internalCounters.push_back(9340);
        internalCounters.push_back(9668);
        internalCounters.push_back(9996);
        internalCounters.push_back(10324);
        internalCounters.push_back(10652);
        internalCounters.push_back(10980);
        internalCounters.push_back(11308);
        internalCounters.push_back(11636);
        internalCounters.push_back(11964);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7044);
        internalCounters.push_back(7372);
        internalCounters.push_back(7700);
        internalCounters.push_back(8028);
        internalCounters.push_back(8356);
        internalCounters.push_back(8684);
        internalCounters.push_back(9012);
        internalCounters.push_back(9340);
        internalCounters.push_back(9668);
        internalCounters.push_back(9996);
        internalCounters.push_back(10324);
        internalCounters.push_back(10652);
        internalCounters.push_back(10980);
        internalCounters.push_back(11308);
        internalCounters.push_back(11636);
        internalCounters.push_back(11964);
        internalCounters.push_back(7068);
        internalCounters.push_back(7396);
        internalCounters.push_back(7724);
        internalCounters.push_back(8052);
        internalCounters.push_back(8380);
        internalCounters.push_back(8708);
        internalCounters.push_back(9036);
        internalCounters.push_back(9364);
        internalCounters.push_back(9692);
        internalCounters.push_back(10020);
        internalCounters.push_back(10348);
        internalCounters.push_back(10676);
        internalCounters.push_back(11004);
        internalCounters.push_back(11332);
        internalCounters.push_back(11660);
        internalCounters.push_back(11988);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7068);
        internalCounters.push_back(7396);
        internalCounters.push_back(7724);
        internalCounters.push_back(8052);
        internalCounters.push_back(8380);
        internalCounters.push_back(8708);
        internalCounters.push_back(9036);
        internalCounters.push_back(9364);
        internalCounters.push_back(9692);
        internalCounters.push_back(10020);
        internalCounters.push_back(10348);
        internalCounters.push_back(10676);
        internalCounters.push_back(11004);
        internalCounters.push_back(11332);
        internalCounters.push_back(11660);
        internalCounters.push_back(11988);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7044);
        internalCounters.push_back(7372);
        internalCounters.push_back(7700);
        internalCounters.push_back(8028);
        internalCounters.push_back(8356);
        internalCounters.push_back(8684);
        internalCounters.push_back(9012);
        internalCounters.push_back(9340);
        internalCounters.push_back(9668);
        internalCounters.push_back(9996);
        internalCounters.push_back(10324);
        internalCounters.push_back(10652);
        internalCounters.push_back(10980);
        internalCounters.push_back(11308);
        internalCounters.push_back(11636);
        internalCounters.push_back(11964);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13960);
        internalCounters.push_back(14452);
        internalCounters.push_back(14944);
        internalCounters.push_back(15436);
        internalCounters.push_back(13961);
        internalCounters.push_back(14453);
        internalCounters.push_back(14945);
        internalCounters.push_back(15437);
        internalCounters.push_back(13962);
        internalCounters.push_back(14454);
        internalCounters.push_back(14946);
        internalCounters.push_back(15438);
        internalCounters.push_back(13963);
        internalCounters.push_back(14455);
        internalCounters.push_back(14947);
        internalCounters.push_back(15439);
        internalCounters.push_back(14036);
        internalCounters.push_back(14528);
        internalCounters.push_back(15020);
        internalCounters.push_back(15512);
        internalCounters.push_back(14037);
        internalCounters.push_back(14529);
        internalCounters.push_back(15021);
        internalCounters.push_back(15513);
        internalCounters.push_back(14038);
        internalCounters.push_back(14530);
        internalCounters.push_back(15022);
        internalCounters.push_back(15514);
        internalCounters.push_back(14039);
        internalCounters.push_back(14531);
        internalCounters.push_back(15023);
        internalCounters.push_back(15515);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13960);
        internalCounters.push_back(14452);
        internalCounters.push_back(14944);
        internalCounters.push_back(15436);
        internalCounters.push_back(13961);
        internalCounters.push_back(14453);
        internalCounters.push_back(14945);
        internalCounters.push_back(15437);
        internalCounters.push_back(13962);
        internalCounters.push_back(14454);
        internalCounters.push_back(14946);
        internalCounters.push_back(15438);
        internalCounters.push_back(13963);
        internalCounters.push_back(14455);
        internalCounters.push_back(14947);
        internalCounters.push_back(15439);
        internalCounters.push_back(14036);
        internalCounters.push_back(14528);
        internalCounters.push_back(15020);
        internalCounters.push_back(15512);
        internalCounters.push_back(14037);
        internalCounters.push_back(14529);
        internalCounters.push_back(15021);
        internalCounters.push_back(15513);
        internalCounters.push_back(14038);
        internalCounters.push_back(14530);
        internalCounters.push_back(15022);
        internalCounters.push_back(15514);
        internalCounters.push_back(14039);
        internalCounters.push_back(14531);
        internalCounters.push_back(15023);
        internalCounters.push_back(15515);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14036);
        internalCounters.push_back(14528);
        internalCounters.push_back(15020);
        internalCounters.push_back(15512);
        internalCounters.push_back(14037);
        internalCounters.push_back(14529);
        internalCounters.push_back(15021);
        internalCounters.push_back(15513);
        internalCounters.push_back(14038);
        internalCounters.push_back(14530);
        internalCounters.push_back(15022);
        internalCounters.push_back(15514);
        internalCounters.push_back(14039);
        internalCounters.push_back(14531);
        internalCounters.push_back(15023);
        internalCounters.push_back(15515);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13960);
        internalCounters.push_back(14452);
        internalCounters.push_back(14944);
        internalCounters.push_back(15436);
        internalCounters.push_back(13961);
        internalCounters.push_back(14453);
        internalCounters.push_back(14945);
        internalCounters.push_back(15437);
        internalCounters.push_back(13962);
        internalCounters.push_back(14454);
        internalCounters.push_back(14946);
        internalCounters.push_back(15438);
        internalCounters.push_back(13963);
        internalCounters.push_back(14455);
        internalCounters.push_back(14947);
        internalCounters.push_back(15439);
        internalCounters.push_back(14060);
        internalCounters.push_back(14552);
        internalCounters.push_back(15044);
        internalCounters.push_back(15536);
        internalCounters.push_back(14036);
        internalCounters.push_back(14528);
        internalCounters.push_back(15020);
        internalCounters.push_back(15512);
        internalCounters.push_back(14037);
        internalCounters.push_back(14529);
        internalCounters.push_back(15021);
        internalCounters.push_back(15513);
        internalCounters.push_back(14038);
        internalCounters.push_back(14530);
        internalCounters.push_back(15022);
        internalCounters.push_back(15514);
        internalCounters.push_back(14039);
        internalCounters.push_back(14531);
        internalCounters.push_back(15023);
        internalCounters.push_back(15515);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,16,17,18,19,sum4,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13960);
        internalCounters.push_back(14452);
        internalCounters.push_back(14944);
        internalCounters.push_back(15436);
        internalCounters.push_back(13961);
        internalCounters.push_back(14453);
        internalCounters.push_back(14945);
        internalCounters.push_back(15437);
        internalCounters.push_back(13962);
        internalCounters.push_back(14454);
        internalCounters.push_back(14946);
        internalCounters.push_back(15438);
        internalCounters.push_back(13963);
        internalCounters.push_back(14455);
        internalCounters.push_back(14947);
        internalCounters.push_back(15439);
        internalCounters.push_back(14060);
        internalCounters.push_back(14552);
        internalCounters.push_back(15044);
        internalCounters.push_back(15536);
        internalCounters.push_back(14036);
        internalCounters.push_back(14528);
        internalCounters.push_back(15020);
        internalCounters.push_back(15512);
        internalCounters.push_back(14037);
        internalCounters.push_back(14529);
        internalCounters.push_back(15021);
        internalCounters.push_back(15513);
        internalCounters.push_back(14038);
        internalCounters.push_back(14530);
        internalCounters.push_back(15022);
        internalCounters.push_back(15514);
        internalCounters.push_back(14039);
        internalCounters.push_back(14531);
        internalCounters.push_back(15023);
        internalCounters.push_back(15515);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,sum4,-,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14060);
        internalCounters.push_back(14552);
        internalCounters.push_back(15044);
        internalCounters.push_back(15536);
        internalCounters.push_back(14036);
        internalCounters.push_back(14528);
        internalCounters.push_back(15020);
        internalCounters.push_back(15512);
        internalCounters.push_back(14037);
        internalCounters.push_back(14529);
        internalCounters.push_back(15021);
        internalCounters.push_back(15513);
        internalCounters.push_back(14038);
        internalCounters.push_back(14530);
        internalCounters.push_back(15022);
        internalCounters.push_back(15514);
        internalCounters.push_back(14039);
        internalCounters.push_back(14531);
        internalCounters.push_back(15023);
        internalCounters.push_back(15515);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,0,1,2,3,sum4,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14060);
        internalCounters.push_back(14552);
        internalCounters.push_back(15044);
        internalCounters.push_back(15536);
        internalCounters.push_back(13960);
        internalCounters.push_back(14452);
        internalCounters.push_back(14944);
        internalCounters.push_back(15436);
        internalCounters.push_back(13961);
        internalCounters.push_back(14453);
        internalCounters.push_back(14945);
        internalCounters.push_back(15437);
        internalCounters.push_back(13962);
        internalCounters.push_back(14454);
        internalCounters.push_back(14946);
        internalCounters.push_back(15438);
        internalCounters.push_back(13963);
        internalCounters.push_back(14455);
        internalCounters.push_back(14947);
        internalCounters.push_back(15439);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14060);
        internalCounters.push_back(14552);
        internalCounters.push_back(15044);
        internalCounters.push_back(15536);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7217);
        internalCounters.push_back(7545);
        internalCounters.push_back(7873);
        internalCounters.push_back(8201);
        internalCounters.push_back(8529);
        internalCounters.push_back(8857);
        internalCounters.push_back(9185);
        internalCounters.push_back(9513);
        internalCounters.push_back(9841);
        internalCounters.push_back(10169);
        internalCounters.push_back(10497);
        internalCounters.push_back(10825);
        internalCounters.push_back(11153);
        internalCounters.push_back(11481);
        internalCounters.push_back(11809);
        internalCounters.push_back(12137);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7219);
        internalCounters.push_back(7547);
        internalCounters.push_back(7875);
        internalCounters.push_back(8203);
        internalCounters.push_back(8531);
        internalCounters.push_back(8859);
        internalCounters.push_back(9187);
        internalCounters.push_back(9515);
        internalCounters.push_back(9843);
        internalCounters.push_back(10171);
        internalCounters.push_back(10499);
        internalCounters.push_back(10827);
        internalCounters.push_back(11155);
        internalCounters.push_back(11483);
        internalCounters.push_back(11811);
        internalCounters.push_back(12139);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7218);
        internalCounters.push_back(7546);
        internalCounters.push_back(7874);
        internalCounters.push_back(8202);
        internalCounters.push_back(8530);
        internalCounters.push_back(8858);
        internalCounters.push_back(9186);
        internalCounters.push_back(9514);
        internalCounters.push_back(9842);
        internalCounters.push_back(10170);
        internalCounters.push_back(10498);
        internalCounters.push_back(10826);
        internalCounters.push_back(11154);
        internalCounters.push_back(11482);
        internalCounters.push_back(11810);
        internalCounters.push_back(12138);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7214);
        internalCounters.push_back(7542);
        internalCounters.push_back(7870);
        internalCounters.push_back(8198);
        internalCounters.push_back(8526);
        internalCounters.push_back(8854);
        internalCounters.push_back(9182);
        internalCounters.push_back(9510);
        internalCounters.push_back(9838);
        internalCounters.push_back(10166);
        internalCounters.push_back(10494);
        internalCounters.push_back(10822);
        internalCounters.push_back(11150);
        internalCounters.push_back(11478);
        internalCounters.push_back(11806);
        internalCounters.push_back(12134);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7216);
        internalCounters.push_back(7544);
        internalCounters.push_back(7872);
        internalCounters.push_back(8200);
        internalCounters.push_back(8528);
        internalCounters.push_back(8856);
        internalCounters.push_back(9184);
        internalCounters.push_back(9512);
        internalCounters.push_back(9840);
        internalCounters.push_back(10168);
        internalCounters.push_back(10496);
        internalCounters.push_back(10824);
        internalCounters.push_back(11152);
        internalCounters.push_back(11480);
        internalCounters.push_back(11808);
        internalCounters.push_back(12136);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7215);
        internalCounters.push_back(7543);
        internalCounters.push_back(7871);
        internalCounters.push_back(8199);
        internalCounters.push_back(8527);
        internalCounters.push_back(8855);
        internalCounters.push_back(9183);
        internalCounters.push_back(9511);
        internalCounters.push_back(9839);
        internalCounters.push_back(10167);
        internalCounters.push_back(10495);
        internalCounters.push_back(10823);
        internalCounters.push_back(11151);
        internalCounters.push_back(11479);
        internalCounters.push_back(11807);
        internalCounters.push_back(12135);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7086);
        internalCounters.push_back(7414);
        internalCounters.push_back(7742);
        internalCounters.push_back(8070);
        internalCounters.push_back(8398);
        internalCounters.push_back(8726);
        internalCounters.push_back(9054);
        internalCounters.push_back(9382);
        internalCounters.push_back(9710);
        internalCounters.push_back(10038);
        internalCounters.push_back(10366);
        internalCounters.push_back(10694);
        internalCounters.push_back(11022);
        internalCounters.push_back(11350);
        internalCounters.push_back(11678);
        internalCounters.push_back(12006);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7086);
        internalCounters.push_back(7414);
        internalCounters.push_back(7742);
        internalCounters.push_back(8070);
        internalCounters.push_back(8398);
        internalCounters.push_back(8726);
        internalCounters.push_back(9054);
        internalCounters.push_back(9382);
        internalCounters.push_back(9710);
        internalCounters.push_back(10038);
        internalCounters.push_back(10366);
        internalCounters.push_back(10694);
        internalCounters.push_back(11022);
        internalCounters.push_back(11350);
        internalCounters.push_back(11678);
        internalCounters.push_back(12006);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7088);
        internalCounters.push_back(7416);
        internalCounters.push_back(7744);
        internalCounters.push_back(8072);
        internalCounters.push_back(8400);
        internalCounters.push_back(8728);
        internalCounters.push_back(9056);
        internalCounters.push_back(9384);
        internalCounters.push_back(9712);
        internalCounters.push_back(10040);
        internalCounters.push_back(10368);
        internalCounters.push_back(10696);
        internalCounters.push_back(11024);
        internalCounters.push_back(11352);
        internalCounters.push_back(11680);
        internalCounters.push_back(12008);
        internalCounters.push_back(7095);
        internalCounters.push_back(7423);
        internalCounters.push_back(7751);
        internalCounters.push_back(8079);
        internalCounters.push_back(8407);
        internalCounters.push_back(8735);
        internalCounters.push_back(9063);
        internalCounters.push_back(9391);
        internalCounters.push_back(9719);
        internalCounters.push_back(10047);
        internalCounters.push_back(10375);
        internalCounters.push_back(10703);
        internalCounters.push_back(11031);
        internalCounters.push_back(11359);
        internalCounters.push_back(11687);
        internalCounters.push_back(12015);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7100);
        internalCounters.push_back(7428);
        internalCounters.push_back(7756);
        internalCounters.push_back(8084);
        internalCounters.push_back(8412);
        internalCounters.push_back(8740);
        internalCounters.push_back(9068);
        internalCounters.push_back(9396);
        internalCounters.push_back(9724);
        internalCounters.push_back(10052);
        internalCounters.push_back(10380);
        internalCounters.push_back(10708);
        internalCounters.push_back(11036);
        internalCounters.push_back(11364);
        internalCounters.push_back(11692);
        internalCounters.push_back(12020);
        internalCounters.push_back(7103);
        internalCounters.push_back(7431);
        internalCounters.push_back(7759);
        internalCounters.push_back(8087);
        internalCounters.push_back(8415);
        internalCounters.push_back(8743);
        internalCounters.push_back(9071);
        internalCounters.push_back(9399);
        internalCounters.push_back(9727);
        internalCounters.push_back(10055);
        internalCounters.push_back(10383);
        internalCounters.push_back(10711);
        internalCounters.push_back(11039);
        internalCounters.push_back(11367);
        internalCounters.push_back(11695);
        internalCounters.push_back(12023);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(160);
        internalCounters.push_back(598);
        internalCounters.push_back(1036);
        internalCounters.push_back(1474);
        internalCounters.push_back(1912);
        internalCounters.push_back(2350);
        internalCounters.push_back(2788);
        internalCounters.push_back(3226);
        internalCounters.push_back(3664);
        internalCounters.push_back(4102);
        internalCounters.push_back(4540);
        internalCounters.push_back(4978);
        internalCounters.push_back(5416);
        internalCounters.push_back(5854);
        internalCounters.push_back(6292);
        internalCounters.push_back(6730);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(291);
        internalCounters.push_back(729);
        internalCounters.push_back(1167);
        internalCounters.push_back(1605);
        internalCounters.push_back(2043);
        internalCounters.push_back(2481);
        internalCounters.push_back(2919);
        internalCounters.push_back(3357);
        internalCounters.push_back(3795);
        internalCounters.push_back(4233);
        internalCounters.push_back(4671);
        internalCounters.push_back(5109);
        internalCounters.push_back(5547);
        internalCounters.push_back(5985);
        internalCounters.push_back(6423);
        internalCounters.push_back(6861);
        internalCounters.push_back(158);
        internalCounters.push_back(596);
        internalCounters.push_back(1034);
        internalCounters.push_back(1472);
        internalCounters.push_back(1910);
        internalCounters.push_back(2348);
        internalCounters.push_back(2786);
        internalCounters.push_back(3224);
        internalCounters.push_back(3662);
        internalCounters.push_back(4100);
        internalCounters.push_back(4538);
        internalCounters.push_back(4976);
        internalCounters.push_back(5414);
        internalCounters.push_back(5852);
        internalCounters.push_back(6290);
        internalCounters.push_back(6728);
        internalCounters.push_back(159);
        internalCounters.push_back(597);
        internalCounters.push_back(1035);
        internalCounters.push_back(1473);
        internalCounters.push_back(1911);
        internalCounters.push_back(2349);
        internalCounters.push_back(2787);
        internalCounters.push_back(3225);
        internalCounters.push_back(3663);
        internalCounters.push_back(4101);
        internalCounters.push_back(4539);
        internalCounters.push_back(4977);
        internalCounters.push_back(5415);
        internalCounters.push_back(5853);
        internalCounters.push_back(6291);
        internalCounters.push_back(6729);
        internalCounters.push_back(160);
        internalCounters.push_back(598);
        internalCounters.push_back(1036);
        internalCounters.push_back(1474);
        internalCounters.push_back(1912);
        internalCounters.push_back(2350);
        internalCounters.push_back(2788);
        internalCounters.push_back(3226);
        internalCounters.push_back(3664);
        internalCounters.push_back(4102);
        internalCounters.push_back(4540);
        internalCounters.push_back(4978);
        internalCounters.push_back(5416);
        internalCounters.push_back(5854);
        internalCounters.push_back(6292);
        internalCounters.push_back(6730);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(150);
        internalCounters.push_back(588);
        internalCounters.push_back(1026);
        internalCounters.push_back(1464);
        internalCounters.push_back(1902);
        internalCounters.push_back(2340);
        internalCounters.push_back(2778);
        internalCounters.push_back(3216);
        internalCounters.push_back(3654);
        internalCounters.push_back(4092);
        internalCounters.push_back(4530);
        internalCounters.push_back(4968);
        internalCounters.push_back(5406);
        internalCounters.push_back(5844);
        internalCounters.push_back(6282);
        internalCounters.push_back(6720);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(289);
        internalCounters.push_back(727);
        internalCounters.push_back(1165);
        internalCounters.push_back(1603);
        internalCounters.push_back(2041);
        internalCounters.push_back(2479);
        internalCounters.push_back(2917);
        internalCounters.push_back(3355);
        internalCounters.push_back(3793);
        internalCounters.push_back(4231);
        internalCounters.push_back(4669);
        internalCounters.push_back(5107);
        internalCounters.push_back(5545);
        internalCounters.push_back(5983);
        internalCounters.push_back(6421);
        internalCounters.push_back(6859);
        internalCounters.push_back(148);
        internalCounters.push_back(586);
        internalCounters.push_back(1024);
        internalCounters.push_back(1462);
        internalCounters.push_back(1900);
        internalCounters.push_back(2338);
        internalCounters.push_back(2776);
        internalCounters.push_back(3214);
        internalCounters.push_back(3652);
        internalCounters.push_back(4090);
        internalCounters.push_back(4528);
        internalCounters.push_back(4966);
        internalCounters.push_back(5404);
        internalCounters.push_back(5842);
        internalCounters.push_back(6280);
        internalCounters.push_back(6718);
        internalCounters.push_back(149);
        internalCounters.push_back(587);
        internalCounters.push_back(1025);
        internalCounters.push_back(1463);
        internalCounters.push_back(1901);
        internalCounters.push_back(2339);
        internalCounters.push_back(2777);
        internalCounters.push_back(3215);
        internalCounters.push_back(3653);
        internalCounters.push_back(4091);
        internalCounters.push_back(4529);
        internalCounters.push_back(4967);
        internalCounters.push_back(5405);
        internalCounters.push_back(5843);
        internalCounters.push_back(6281);
        internalCounters.push_back(6719);
        internalCounters.push_back(150);
        internalCounters.push_back(588);
        internalCounters.push_back(1026);
        internalCounters.push_back(1464);
        internalCounters.push_back(1902);
        internalCounters.push_back(2340);
        internalCounters.push_back(2778);
        internalCounters.push_back(3216);
        internalCounters.push_back(3654);
        internalCounters.push_back(4092);
        internalCounters.push_back(4530);
        internalCounters.push_back(4968);
        internalCounters.push_back(5406);
        internalCounters.push_back(5844);
        internalCounters.push_back(6282);
        internalCounters.push_back(6720);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(194);
        internalCounters.push_back(632);
        internalCounters.push_back(1070);
        internalCounters.push_back(1508);
        internalCounters.push_back(1946);
        internalCounters.push_back(2384);
        internalCounters.push_back(2822);
        internalCounters.push_back(3260);
        internalCounters.push_back(3698);
        internalCounters.push_back(4136);
        internalCounters.push_back(4574);
        internalCounters.push_back(5012);
        internalCounters.push_back(5450);
        internalCounters.push_back(5888);
        internalCounters.push_back(6326);
        internalCounters.push_back(6764);
        internalCounters.push_back(39);
        internalCounters.push_back(477);
        internalCounters.push_back(915);
        internalCounters.push_back(1353);
        internalCounters.push_back(1791);
        internalCounters.push_back(2229);
        internalCounters.push_back(2667);
        internalCounters.push_back(3105);
        internalCounters.push_back(3543);
        internalCounters.push_back(3981);
        internalCounters.push_back(4419);
        internalCounters.push_back(4857);
        internalCounters.push_back(5295);
        internalCounters.push_back(5733);
        internalCounters.push_back(6171);
        internalCounters.push_back(6609);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(194);
        internalCounters.push_back(632);
        internalCounters.push_back(1070);
        internalCounters.push_back(1508);
        internalCounters.push_back(1946);
        internalCounters.push_back(2384);
        internalCounters.push_back(2822);
        internalCounters.push_back(3260);
        internalCounters.push_back(3698);
        internalCounters.push_back(4136);
        internalCounters.push_back(4574);
        internalCounters.push_back(5012);
        internalCounters.push_back(5450);
        internalCounters.push_back(5888);
        internalCounters.push_back(6326);
        internalCounters.push_back(6764);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46098);
        internalCounters.push_back(46380);
        internalCounters.push_back(46662);
        internalCounters.push_back(46944);
        internalCounters.push_back(47226);
        internalCounters.push_back(47508);
        internalCounters.push_back(47790);
        internalCounters.push_back(48072);
        internalCounters.push_back(48354);
        internalCounters.push_back(48636);
        internalCounters.push_back(48918);
        internalCounters.push_back(49200);
        internalCounters.push_back(49482);
        internalCounters.push_back(49764);
        internalCounters.push_back(50046);
        internalCounters.push_back(50328);
        internalCounters.push_back(46099);
        internalCounters.push_back(46381);
        internalCounters.push_back(46663);
        internalCounters.push_back(46945);
        internalCounters.push_back(47227);
        internalCounters.push_back(47509);
        internalCounters.push_back(47791);
        internalCounters.push_back(48073);
        internalCounters.push_back(48355);
        internalCounters.push_back(48637);
        internalCounters.push_back(48919);
        internalCounters.push_back(49201);
        internalCounters.push_back(49483);
        internalCounters.push_back(49765);
        internalCounters.push_back(50047);
        internalCounters.push_back(50329);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(64),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46086);
        internalCounters.push_back(46368);
        internalCounters.push_back(46650);
        internalCounters.push_back(46932);
        internalCounters.push_back(47214);
        internalCounters.push_back(47496);
        internalCounters.push_back(47778);
        internalCounters.push_back(48060);
        internalCounters.push_back(48342);
        internalCounters.push_back(48624);
        internalCounters.push_back(48906);
        internalCounters.push_back(49188);
        internalCounters.push_back(49470);
        internalCounters.push_back(49752);
        internalCounters.push_back(50034);
        internalCounters.push_back(50316);
        internalCounters.push_back(46087);
        internalCounters.push_back(46369);
        internalCounters.push_back(46651);
        internalCounters.push_back(46933);
        internalCounters.push_back(47215);
        internalCounters.push_back(47497);
        internalCounters.push_back(47779);
        internalCounters.push_back(48061);
        internalCounters.push_back(48343);
        internalCounters.push_back(48625);
        internalCounters.push_back(48907);
        internalCounters.push_back(49189);
        internalCounters.push_back(49471);
        internalCounters.push_back(49753);
        internalCounters.push_back(50035);
        internalCounters.push_back(50317);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40677);
        internalCounters.push_back(40762);
        internalCounters.push_back(40847);
        internalCounters.push_back(40932);
        internalCounters.push_back(41017);
        internalCounters.push_back(41102);
        internalCounters.push_back(41187);
        internalCounters.push_back(41272);
        internalCounters.push_back(41357);
        internalCounters.push_back(41442);
        internalCounters.push_back(41527);
        internalCounters.push_back(41612);
        internalCounters.push_back(41697);
        internalCounters.push_back(41782);
        internalCounters.push_back(41867);
        internalCounters.push_back(41952);
        internalCounters.push_back(42037);
        internalCounters.push_back(42122);
        internalCounters.push_back(42207);
        internalCounters.push_back(42292);
        internalCounters.push_back(42377);
        internalCounters.push_back(42462);
        internalCounters.push_back(42547);
        internalCounters.push_back(42632);
        internalCounters.push_back(42717);
        internalCounters.push_back(42802);
        internalCounters.push_back(42887);
        internalCounters.push_back(42972);
        internalCounters.push_back(43057);
        internalCounters.push_back(43142);
        internalCounters.push_back(43227);
        internalCounters.push_back(43312);
        internalCounters.push_back(43397);
        internalCounters.push_back(43482);
        internalCounters.push_back(43567);
        internalCounters.push_back(43652);
        internalCounters.push_back(43737);
        internalCounters.push_back(43822);
        internalCounters.push_back(43907);
        internalCounters.push_back(43992);
        internalCounters.push_back(44077);
        internalCounters.push_back(44162);
        internalCounters.push_back(44247);
        internalCounters.push_back(44332);
        internalCounters.push_back(44417);
        internalCounters.push_back(44502);
        internalCounters.push_back(44587);
        internalCounters.push_back(44672);
        internalCounters.push_back(44757);
        internalCounters.push_back(44842);
        internalCounters.push_back(44927);
        internalCounters.push_back(45012);
        internalCounters.push_back(45097);
        internalCounters.push_back(45182);
        internalCounters.push_back(45267);
        internalCounters.push_back(45352);
        internalCounters.push_back(45437);
        internalCounters.push_back(45522);
        internalCounters.push_back(45607);
        internalCounters.push_back(45692);
        internalCounters.push_back(45777);
        internalCounters.push_back(45862);
        internalCounters.push_back(45947);
        internalCounters.push_back(46032);
        internalCounters.push_back(40686);
        internalCounters.push_back(40771);
        internalCounters.push_back(40856);
        internalCounters.push_back(40941);
        internalCounters.push_back(41026);
        internalCounters.push_back(41111);
        internalCounters.push_back(41196);
        internalCounters.push_back(41281);
        internalCounters.push_back(41366);
        internalCounters.push_back(41451);
        internalCounters.push_back(41536);
        internalCounters.push_back(41621);
        internalCounters.push_back(41706);
        internalCounters.push_back(41791);
        internalCounters.push_back(41876);
        internalCounters.push_back(41961);
        internalCounters.push_back(42046);
        internalCounters.push_back(42131);
        internalCounters.push_back(42216);
        internalCounters.push_back(42301);
        internalCounters.push_back(42386);
        internalCounters.push_back(42471);
        internalCounters.push_back(42556);
        internalCounters.push_back(42641);
        internalCounters.push_back(42726);
        internalCounters.push_back(42811);
        internalCounters.push_back(42896);
        internalCounters.push_back(42981);
        internalCounters.push_back(43066);
        internalCounters.push_back(43151);
        internalCounters.push_back(43236);
        internalCounters.push_back(43321);
        internalCounters.push_back(43406);
        internalCounters.push_back(43491);
        internalCounters.push_back(43576);
        internalCounters.push_back(43661);
        internalCounters.push_back(43746);
        internalCounters.push_back(43831);
        internalCounters.push_back(43916);
        internalCounters.push_back(44001);
        internalCounters.push_back(44086);
        internalCounters.push_back(44171);
        internalCounters.push_back(44256);
        internalCounters.push_back(44341);
        internalCounters.push_back(44426);
        internalCounters.push_back(44511);
        internalCounters.push_back(44596);
        internalCounters.push_back(44681);
        internalCounters.push_back(44766);
        internalCounters.push_back(44851);
        internalCounters.push_back(44936);
        internalCounters.push_back(45021);
        internalCounters.push_back(45106);
        internalCounters.push_back(45191);
        internalCounters.push_back(45276);
        internalCounters.push_back(45361);
        internalCounters.push_back(45446);
        internalCounters.push_back(45531);
        internalCounters.push_back(45616);
        internalCounters.push_back(45701);
        internalCounters.push_back(45786);
        internalCounters.push_back(45871);
        internalCounters.push_back(45956);
        internalCounters.push_back(46041);
        internalCounters.push_back(40687);
        internalCounters.push_back(40772);
        internalCounters.push_back(40857);
        internalCounters.push_back(40942);
        internalCounters.push_back(41027);
        internalCounters.push_back(41112);
        internalCounters.push_back(41197);
        internalCounters.push_back(41282);
        internalCounters.push_back(41367);
        internalCounters.push_back(41452);
        internalCounters.push_back(41537);
        internalCounters.push_back(41622);
        internalCounters.push_back(41707);
        internalCounters.push_back(41792);
        internalCounters.push_back(41877);
        internalCounters.push_back(41962);
        internalCounters.push_back(42047);
        internalCounters.push_back(42132);
        internalCounters.push_back(42217);
        internalCounters.push_back(42302);
        internalCounters.push_back(42387);
        internalCounters.push_back(42472);
        internalCounters.push_back(42557);
        internalCounters.push_back(42642);
        internalCounters.push_back(42727);
        internalCounters.push_back(42812);
        internalCounters.push_back(42897);
        internalCounters.push_back(42982);
        internalCounters.push_back(43067);
        internalCounters.push_back(43152);
        internalCounters.push_back(43237);
        internalCounters.push_back(43322);
        internalCounters.push_back(43407);
        internalCounters.push_back(43492);
        internalCounters.push_back(43577);
        internalCounters.push_back(43662);
        internalCounters.push_back(43747);
        internalCounters.push_back(43832);
        internalCounters.push_back(43917);
        internalCounters.push_back(44002);
        internalCounters.push_back(44087);
        internalCounters.push_back(44172);
        internalCounters.push_back(44257);
        internalCounters.push_back(44342);
        internalCounters.push_back(44427);
        internalCounters.push_back(44512);
        internalCounters.push_back(44597);
        internalCounters.push_back(44682);
        internalCounters.push_back(44767);
        internalCounters.push_back(44852);
        internalCounters.push_back(44937);
        internalCounters.push_back(45022);
        internalCounters.push_back(45107);
        internalCounters.push_back(45192);
        internalCounters.push_back(45277);
        internalCounters.push_back(45362);
        internalCounters.push_back(45447);
        internalCounters.push_back(45532);
        internalCounters.push_back(45617);
        internalCounters.push_back(45702);
        internalCounters.push_back(45787);
        internalCounters.push_back(45872);
        internalCounters.push_back(45957);
        internalCounters.push_back(46042);
        internalCounters.push_back(40688);
        internalCounters.push_back(40773);
        internalCounters.push_back(40858);
        internalCounters.push_back(40943);
        internalCounters.push_back(41028);
        internalCounters.push_back(41113);
        internalCounters.push_back(41198);
        internalCounters.push_back(41283);
        internalCounters.push_back(41368);
        internalCounters.push_back(41453);
        internalCounters.push_back(41538);
        internalCounters.push_back(41623);
        internalCounters.push_back(41708);
        internalCounters.push_back(41793);
        internalCounters.push_back(41878);
        internalCounters.push_back(41963);
        internalCounters.push_back(42048);
        internalCounters.push_back(42133);
        internalCounters.push_back(42218);
        internalCounters.push_back(42303);
        internalCounters.push_back(42388);
        internalCounters.push_back(42473);
        internalCounters.push_back(42558);
        internalCounters.push_back(42643);
        internalCounters.push_back(42728);
        internalCounters.push_back(42813);
        internalCounters.push_back(42898);
        internalCounters.push_back(42983);
        internalCounters.push_back(43068);
        internalCounters.push_back(43153);
        internalCounters.push_back(43238);
        internalCounters.push_back(43323);
        internalCounters.push_back(43408);
        internalCounters.push_back(43493);
        internalCounters.push_back(43578);
        internalCounters.push_back(43663);
        internalCounters.push_back(43748);
        internalCounters.push_back(43833);
        internalCounters.push_back(43918);
        internalCounters.push_back(44003);
        internalCounters.push_back(44088);
        internalCounters.push_back(44173);
        internalCounters.push_back(44258);
        internalCounters.push_back(44343);
        internalCounters.push_back(44428);
        internalCounters.push_back(44513);
        internalCounters.push_back(44598);
        internalCounters.push_back(44683);
        internalCounters.push_back(44768);
        internalCounters.push_back(44853);
        internalCounters.push_back(44938);
        internalCounters.push_back(45023);
        internalCounters.push_back(45108);
        internalCounters.push_back(45193);
        internalCounters.push_back(45278);
        internalCounters.push_back(45363);
        internalCounters.push_back(45448);
        internalCounters.push_back(45533);
        internalCounters.push_back(45618);
        internalCounters.push_back(45703);
        internalCounters.push_back(45788);
        internalCounters.push_back(45873);
        internalCounters.push_back(45958);
        internalCounters.push_back(46043);
        internalCounters.push_back(40689);
        internalCounters.push_back(40774);
        internalCounters.push_back(40859);
        internalCounters.push_back(40944);
        internalCounters.push_back(41029);
        internalCounters.push_back(41114);
        internalCounters.push_back(41199);
        internalCounters.push_back(41284);
        internalCounters.push_back(41369);
        internalCounters.push_back(41454);
        internalCounters.push_back(41539);
        internalCounters.push_back(41624);
        internalCounters.push_back(41709);
        internalCounters.push_back(41794);
        internalCounters.push_back(41879);
        internalCounters.push_back(41964);
        internalCounters.push_back(42049);
        internalCounters.push_back(42134);
        internalCounters.push_back(42219);
        internalCounters.push_back(42304);
        internalCounters.push_back(42389);
        internalCounters.push_back(42474);
        internalCounters.push_back(42559);
        internalCounters.push_back(42644);
        internalCounters.push_back(42729);
        internalCounters.push_back(42814);
        internalCounters.push_back(42899);
        internalCounters.push_back(42984);
        internalCounters.push_back(43069);
        internalCounters.push_back(43154);
        internalCounters.push_back(43239);
        internalCounters.push_back(43324);
        internalCounters.push_back(43409);
        internalCounters.push_back(43494);
        internalCounters.push_back(43579);
        internalCounters.push_back(43664);
        internalCounters.push_back(43749);
        internalCounters.push_back(43834);
        internalCounters.push_back(43919);
        internalCounters.push_back(44004);
        internalCounters.push_back(44089);
        internalCounters.push_back(44174);
        internalCounters.push_back(44259);
        internalCounters.push_back(44344);
        internalCounters.push_back(44429);
        internalCounters.push_back(44514);
        internalCounters.push_back(44599);
        internalCounters.push_back(44684);
        internalCounters.push_back(44769);
        internalCounters.push_back(44854);
        internalCounters.push_back(44939);
        internalCounters.push_back(45024);
        internalCounters.push_back(45109);
        internalCounters.push_back(45194);
        internalCounters.push_back(45279);
        internalCounters.push_back(45364);
        internalCounters.push_back(45449);
        internalCounters.push_back(45534);
        internalCounters.push_back(45619);
        internalCounters.push_back(45704);
        internalCounters.push_back(45789);
        internalCounters.push_back(45874);
        internalCounters.push_back(45959);
        internalCounters.push_back(46044);

        c.DefineDerivedCounter("L1CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L1 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,ifnotzero", "6deaf002-3cac-2d2d-7b89-566c7a52b08e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40677);
        internalCounters.push_back(40762);
        internalCounters.push_back(40847);
        internalCounters.push_back(40932);
        internalCounters.push_back(41017);
        internalCounters.push_back(41102);
        internalCounters.push_back(41187);
        internalCounters.push_back(41272);
        internalCounters.push_back(41357);
        internalCounters.push_back(41442);
        internalCounters.push_back(41527);
        internalCounters.push_back(41612);
        internalCounters.push_back(41697);
        internalCounters.push_back(41782);
        internalCounters.push_back(41867);
        internalCounters.push_back(41952);
        internalCounters.push_back(42037);
        internalCounters.push_back(42122);
        internalCounters.push_back(42207);
        internalCounters.push_back(42292);
        internalCounters.push_back(42377);
        internalCounters.push_back(42462);
        internalCounters.push_back(42547);
        internalCounters.push_back(42632);
        internalCounters.push_back(42717);
        internalCounters.push_back(42802);
        internalCounters.push_back(42887);
        internalCounters.push_back(42972);
        internalCounters.push_back(43057);
        internalCounters.push_back(43142);
        internalCounters.push_back(43227);
        internalCounters.push_back(43312);
        internalCounters.push_back(43397);
        internalCounters.push_back(43482);
        internalCounters.push_back(43567);
        internalCounters.push_back(43652);
        internalCounters.push_back(43737);
        internalCounters.push_back(43822);
        internalCounters.push_back(43907);
        internalCounters.push_back(43992);
        internalCounters.push_back(44077);
        internalCounters.push_back(44162);
        internalCounters.push_back(44247);
        internalCounters.push_back(44332);
        internalCounters.push_back(44417);
        internalCounters.push_back(44502);
        internalCounters.push_back(44587);
        internalCounters.push_back(44672);
        internalCounters.push_back(44757);
        internalCounters.push_back(44842);
        internalCounters.push_back(44927);
        internalCounters.push_back(45012);
        internalCounters.push_back(45097);
        internalCounters.push_back(45182);
        internalCounters.push_back(45267);
        internalCounters.push_back(45352);
        internalCounters.push_back(45437);
        internalCounters.push_back(45522);
        internalCounters.push_back(45607);
        internalCounters.push_back(45692);
        internalCounters.push_back(45777);
        internalCounters.push_back(45862);
        internalCounters.push_back(45947);
        internalCounters.push_back(46032);
        internalCounters.push_back(40686);
        internalCounters.push_back(40771);
        internalCounters.push_back(40856);
        internalCounters.push_back(40941);
        internalCounters.push_back(41026);
        internalCounters.push_back(41111);
        internalCounters.push_back(41196);
        internalCounters.push_back(41281);
        internalCounters.push_back(41366);
        internalCounters.push_back(41451);
        internalCounters.push_back(41536);
        internalCounters.push_back(41621);
        internalCounters.push_back(41706);
        internalCounters.push_back(41791);
        internalCounters.push_back(41876);
        internalCounters.push_back(41961);
        internalCounters.push_back(42046);
        internalCounters.push_back(42131);
        internalCounters.push_back(42216);
        internalCounters.push_back(42301);
        internalCounters.push_back(42386);
        internalCounters.push_back(42471);
        internalCounters.push_back(42556);
        internalCounters.push_back(42641);
        internalCounters.push_back(42726);
        internalCounters.push_back(42811);
        internalCounters.push_back(42896);
        internalCounters.push_back(42981);
        internalCounters.push_back(43066);
        internalCounters.push_back(43151);
        internalCounters.push_back(43236);
        internalCounters.push_back(43321);
        internalCounters.push_back(43406);
        internalCounters.push_back(43491);
        internalCounters.push_back(43576);
        internalCounters.push_back(43661);
        internalCounters.push_back(43746);
        internalCounters.push_back(43831);
        internalCounters.push_back(43916);
        internalCounters.push_back(44001);
        internalCounters.push_back(44086);
        internalCounters.push_back(44171);
        internalCounters.push_back(44256);
        internalCounters.push_back(44341);
        internalCounters.push_back(44426);
        internalCounters.push_back(44511);
        internalCounters.push_back(44596);
        internalCounters.push_back(44681);
        internalCounters.push_back(44766);
        internalCounters.push_back(44851);
        internalCounters.push_back(44936);
        internalCounters.push_back(45021);
        internalCounters.push_back(45106);
        internalCounters.push_back(45191);
        internalCounters.push_back(45276);
        internalCounters.push_back(45361);
        internalCounters.push_back(45446);
        internalCounters.push_back(45531);
        internalCounters.push_back(45616);
        internalCounters.push_back(45701);
        internalCounters.push_back(45786);
        internalCounters.push_back(45871);
        internalCounters.push_back(45956);
        internalCounters.push_back(46041);
        internalCounters.push_back(40687);
        internalCounters.push_back(40772);
        internalCounters.push_back(40857);
        internalCounters.push_back(40942);
        internalCounters.push_back(41027);
        internalCounters.push_back(41112);
        internalCounters.push_back(41197);
        internalCounters.push_back(41282);
        internalCounters.push_back(41367);
        internalCounters.push_back(41452);
        internalCounters.push_back(41537);
        internalCounters.push_back(41622);
        internalCounters.push_back(41707);
        internalCounters.push_back(41792);
        internalCounters.push_back(41877);
        internalCounters.push_back(41962);
        internalCounters.push_back(42047);
        internalCounters.push_back(42132);
        internalCounters.push_back(42217);
        internalCounters.push_back(42302);
        internalCounters.push_back(42387);
        internalCounters.push_back(42472);
        internalCounters.push_back(42557);
        internalCounters.push_back(42642);
        internalCounters.push_back(42727);
        internalCounters.push_back(42812);
        internalCounters.push_back(42897);
        internalCounters.push_back(42982);
        internalCounters.push_back(43067);
        internalCounters.push_back(43152);
        internalCounters.push_back(43237);
        internalCounters.push_back(43322);
        internalCounters.push_back(43407);
        internalCounters.push_back(43492);
        internalCounters.push_back(43577);
        internalCounters.push_back(43662);
        internalCounters.push_back(43747);
        internalCounters.push_back(43832);
        internalCounters.push_back(43917);
        internalCounters.push_back(44002);
        internalCounters.push_back(44087);
        internalCounters.push_back(44172);
        internalCounters.push_back(44257);
        internalCounters.push_back(44342);
        internalCounters.push_back(44427);
        internalCounters.push_back(44512);
        internalCounters.push_back(44597);
        internalCounters.push_back(44682);
        internalCounters.push_back(44767);
        internalCounters.push_back(44852);
        internalCounters.push_back(44937);
        internalCounters.push_back(45022);
        internalCounters.push_back(45107);
        internalCounters.push_back(45192);
        internalCounters.push_back(45277);
        internalCounters.push_back(45362);
        internalCounters.push_back(45447);
        internalCounters.push_back(45532);
        internalCounters.push_back(45617);
        internalCounters.push_back(45702);
        internalCounters.push_back(45787);
        internalCounters.push_back(45872);
        internalCounters.push_back(45957);
        internalCounters.push_back(46042);
        internalCounters.push_back(40688);
        internalCounters.push_back(40773);
        internalCounters.push_back(40858);
        internalCounters.push_back(40943);
        internalCounters.push_back(41028);
        internalCounters.push_back(41113);
        internalCounters.push_back(41198);
        internalCounters.push_back(41283);
        internalCounters.push_back(41368);
        internalCounters.push_back(41453);
        internalCounters.push_back(41538);
        internalCounters.push_back(41623);
        internalCounters.push_back(41708);
        internalCounters.push_back(41793);
        internalCounters.push_back(41878);
        internalCounters.push_back(41963);
        internalCounters.push_back(42048);
        internalCounters.push_back(42133);
        internalCounters.push_back(42218);
        internalCounters.push_back(42303);
        internalCounters.push_back(42388);
        internalCounters.push_back(42473);
        internalCounters.push_back(42558);
        internalCounters.push_back(42643);
        internalCounters.push_back(42728);
        internalCounters.push_back(42813);
        internalCounters.push_back(42898);
        internalCounters.push_back(42983);
        internalCounters.push_back(43068);
        internalCounters.push_back(43153);
        internalCounters.push_back(43238);
        internalCounters.push_back(43323);
        internalCounters.push_back(43408);
        internalCounters.push_back(43493);
        internalCounters.push_back(43578);
        internalCounters.push_back(43663);
        internalCounters.push_back(43748);
        internalCounters.push_back(43833);
        internalCounters.push_back(43918);
        internalCounters.push_back(44003);
        internalCounters.push_back(44088);
        internalCounters.push_back(44173);
        internalCounters.push_back(44258);
        internalCounters.push_back(44343);
        internalCounters.push_back(44428);
        internalCounters.push_back(44513);
        internalCounters.push_back(44598);
        internalCounters.push_back(44683);
        internalCounters.push_back(44768);
        internalCounters.push_back(44853);
        internalCounters.push_back(44938);
        internalCounters.push_back(45023);
        internalCounters.push_back(45108);
        internalCounters.push_back(45193);
        internalCounters.push_back(45278);
        internalCounters.push_back(45363);
        internalCounters.push_back(45448);
        internalCounters.push_back(45533);
        internalCounters.push_back(45618);
        internalCounters.push_back(45703);
        internalCounters.push_back(45788);
        internalCounters.push_back(45873);
        internalCounters.push_back(45958);
        internalCounters.push_back(46043);
        internalCounters.push_back(40689);
        internalCounters.push_back(40774);
        internalCounters.push_back(40859);
        internalCounters.push_back(40944);
        internalCounters.push_back(41029);
        internalCounters.push_back(41114);
        internalCounters.push_back(41199);
        internalCounters.push_back(41284);
        internalCounters.push_back(41369);
        internalCounters.push_back(41454);
        internalCounters.push_back(41539);
        internalCounters.push_back(41624);
        internalCounters.push_back(41709);
        internalCounters.push_back(41794);
        internalCounters.push_back(41879);
        internalCounters.push_back(41964);
        internalCounters.push_back(42049);
        internalCounters.push_back(42134);
        internalCounters.push_back(42219);
        internalCounters.push_back(42304);
        internalCounters.push_back(42389);
        internalCounters.push_back(42474);
        internalCounters.push_back(42559);
        internalCounters.push_back(42644);
        internalCounters.push_back(42729);
        internalCounters.push_back(42814);
        internalCounters.push_back(42899);
        internalCounters.push_back(42984);
        internalCounters.push_back(43069);
        internalCounters.push_back(43154);
        internalCounters.push_back(43239);
        internalCounters.push_back(43324);
        internalCounters.push_back(43409);
        internalCounters.push_back(43494);
        internalCounters.push_back(43579);
        internalCounters.push_back(43664);
        internalCounters.push_back(43749);
        internalCounters.push_back(43834);
        internalCounters.push_back(43919);
        internalCounters.push_back(44004);
        internalCounters.push_back(44089);
        internalCounters.push_back(44174);
        internalCounters.push_back(44259);
        internalCounters.push_back(44344);
        internalCounters.push_back(44429);
        internalCounters.push_back(44514);
        internalCounters.push_back(44599);
        internalCounters.push_back(44684);
        internalCounters.push_back(44769);
        internalCounters.push_back(44854);
        internalCounters.push_back(44939);
        internalCounters.push_back(45024);
        internalCounters.push_back(45109);
        internalCounters.push_back(45194);
        internalCounters.push_back(45279);
        internalCounters.push_back(45364);
        internalCounters.push_back(45449);
        internalCounters.push_back(45534);
        internalCounters.push_back(45619);
        internalCounters.push_back(45704);
        internalCounters.push_back(45789);
        internalCounters.push_back(45874);
        internalCounters.push_back(45959);
        internalCounters.push_back(46044);

        c.DefineDerivedCounter("L1CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,-", "279c8bff-ec6a-f9bf-96d7-5e8000f77891");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40686);
        internalCounters.push_back(40771);
        internalCounters.push_back(40856);
        internalCounters.push_back(40941);
        internalCounters.push_back(41026);
        internalCounters.push_back(41111);
        internalCounters.push_back(41196);
        internalCounters.push_back(41281);
        internalCounters.push_back(41366);
        internalCounters.push_back(41451);
        internalCounters.push_back(41536);
        internalCounters.push_back(41621);
        internalCounters.push_back(41706);
        internalCounters.push_back(41791);
        internalCounters.push_back(41876);
        internalCounters.push_back(41961);
        internalCounters.push_back(42046);
        internalCounters.push_back(42131);
        internalCounters.push_back(42216);
        internalCounters.push_back(42301);
        internalCounters.push_back(42386);
        internalCounters.push_back(42471);
        internalCounters.push_back(42556);
        internalCounters.push_back(42641);
        internalCounters.push_back(42726);
        internalCounters.push_back(42811);
        internalCounters.push_back(42896);
        internalCounters.push_back(42981);
        internalCounters.push_back(43066);
        internalCounters.push_back(43151);
        internalCounters.push_back(43236);
        internalCounters.push_back(43321);
        internalCounters.push_back(43406);
        internalCounters.push_back(43491);
        internalCounters.push_back(43576);
        internalCounters.push_back(43661);
        internalCounters.push_back(43746);
        internalCounters.push_back(43831);
        internalCounters.push_back(43916);
        internalCounters.push_back(44001);
        internalCounters.push_back(44086);
        internalCounters.push_back(44171);
        internalCounters.push_back(44256);
        internalCounters.push_back(44341);
        internalCounters.push_back(44426);
        internalCounters.push_back(44511);
        internalCounters.push_back(44596);
        internalCounters.push_back(44681);
        internalCounters.push_back(44766);
        internalCounters.push_back(44851);
        internalCounters.push_back(44936);
        internalCounters.push_back(45021);
        internalCounters.push_back(45106);
        internalCounters.push_back(45191);
        internalCounters.push_back(45276);
        internalCounters.push_back(45361);
        internalCounters.push_back(45446);
        internalCounters.push_back(45531);
        internalCounters.push_back(45616);
        internalCounters.push_back(45701);
        internalCounters.push_back(45786);
        internalCounters.push_back(45871);
        internalCounters.push_back(45956);
        internalCounters.push_back(46041);
        internalCounters.push_back(40687);
        internalCounters.push_back(40772);
        internalCounters.push_back(40857);
        internalCounters.push_back(40942);
        internalCounters.push_back(41027);
        internalCounters.push_back(41112);
        internalCounters.push_back(41197);
        internalCounters.push_back(41282);
        internalCounters.push_back(41367);
        internalCounters.push_back(41452);
        internalCounters.push_back(41537);
        internalCounters.push_back(41622);
        internalCounters.push_back(41707);
        internalCounters.push_back(41792);
        internalCounters.push_back(41877);
        internalCounters.push_back(41962);
        internalCounters.push_back(42047);
        internalCounters.push_back(42132);
        internalCounters.push_back(42217);
        internalCounters.push_back(42302);
        internalCounters.push_back(42387);
        internalCounters.push_back(42472);
        internalCounters.push_back(42557);
        internalCounters.push_back(42642);
        internalCounters.push_back(42727);
        internalCounters.push_back(42812);
        internalCounters.push_back(42897);
        internalCounters.push_back(42982);
        internalCounters.push_back(43067);
        internalCounters.push_back(43152);
        internalCounters.push_back(43237);
        internalCounters.push_back(43322);
        internalCounters.push_back(43407);
        internalCounters.push_back(43492);
        internalCounters.push_back(43577);
        internalCounters.push_back(43662);
        internalCounters.push_back(43747);
        internalCounters.push_back(43832);
        internalCounters.push_back(43917);
        internalCounters.push_back(44002);
        internalCounters.push_back(44087);
        internalCounters.push_back(44172);
        internalCounters.push_back(44257);
        internalCounters.push_back(44342);
        internalCounters.push_back(44427);
        internalCounters.push_back(44512);
        internalCounters.push_back(44597);
        internalCounters.push_back(44682);
        internalCounters.push_back(44767);
        internalCounters.push_back(44852);
        internalCounters.push_back(44937);
        internalCounters.push_back(45022);
        internalCounters.push_back(45107);
        internalCounters.push_back(45192);
        internalCounters.push_back(45277);
        internalCounters.push_back(45362);
        internalCounters.push_back(45447);
        internalCounters.push_back(45532);
        internalCounters.push_back(45617);
        internalCounters.push_back(45702);
        internalCounters.push_back(45787);
        internalCounters.push_back(45872);
        internalCounters.push_back(45957);
        internalCounters.push_back(46042);
        internalCounters.push_back(40688);
        internalCounters.push_back(40773);
        internalCounters.push_back(40858);
        internalCounters.push_back(40943);
        internalCounters.push_back(41028);
        internalCounters.push_back(41113);
        internalCounters.push_back(41198);
        internalCounters.push_back(41283);
        internalCounters.push_back(41368);
        internalCounters.push_back(41453);
        internalCounters.push_back(41538);
        internalCounters.push_back(41623);
        internalCounters.push_back(41708);
        internalCounters.push_back(41793);
        internalCounters.push_back(41878);
        internalCounters.push_back(41963);
        internalCounters.push_back(42048);
        internalCounters.push_back(42133);
        internalCounters.push_back(42218);
        internalCounters.push_back(42303);
        internalCounters.push_back(42388);
        internalCounters.push_back(42473);
        internalCounters.push_back(42558);
        internalCounters.push_back(42643);
        internalCounters.push_back(42728);
        internalCounters.push_back(42813);
        internalCounters.push_back(42898);
        internalCounters.push_back(42983);
        internalCounters.push_back(43068);
        internalCounters.push_back(43153);
        internalCounters.push_back(43238);
        internalCounters.push_back(43323);
        internalCounters.push_back(43408);
        internalCounters.push_back(43493);
        internalCounters.push_back(43578);
        internalCounters.push_back(43663);
        internalCounters.push_back(43748);
        internalCounters.push_back(43833);
        internalCounters.push_back(43918);
        internalCounters.push_back(44003);
        internalCounters.push_back(44088);
        internalCounters.push_back(44173);
        internalCounters.push_back(44258);
        internalCounters.push_back(44343);
        internalCounters.push_back(44428);
        internalCounters.push_back(44513);
        internalCounters.push_back(44598);
        internalCounters.push_back(44683);
        internalCounters.push_back(44768);
        internalCounters.push_back(44853);
        internalCounters.push_back(44938);
        internalCounters.push_back(45023);
        internalCounters.push_back(45108);
        internalCounters.push_back(45193);
        internalCounters.push_back(45278);
        internalCounters.push_back(45363);
        internalCounters.push_back(45448);
        internalCounters.push_back(45533);
        internalCounters.push_back(45618);
        internalCounters.push_back(45703);
        internalCounters.push_back(45788);
        internalCounters.push_back(45873);
        internalCounters.push_back(45958);
        internalCounters.push_back(46043);
        internalCounters.push_back(40689);
        internalCounters.push_back(40774);
        internalCounters.push_back(40859);
        internalCounters.push_back(40944);
        internalCounters.push_back(41029);
        internalCounters.push_back(41114);
        internalCounters.push_back(41199);
        internalCounters.push_back(41284);
        internalCounters.push_back(41369);
        internalCounters.push_back(41454);
        internalCounters.push_back(41539);
        internalCounters.push_back(41624);
        internalCounters.push_back(41709);
        internalCounters.push_back(41794);
        internalCounters.push_back(41879);
        internalCounters.push_back(41964);
        internalCounters.push_back(42049);
        internalCounters.push_back(42134);
        internalCounters.push_back(42219);
        internalCounters.push_back(42304);
        internalCounters.push_back(42389);
        internalCounters.push_back(42474);
        internalCounters.push_back(42559);
        internalCounters.push_back(42644);
        internalCounters.push_back(42729);
        internalCounters.push_back(42814);
        internalCounters.push_back(42899);
        internalCounters.push_back(42984);
        internalCounters.push_back(43069);
        internalCounters.push_back(43154);
        internalCounters.push_back(43239);
        internalCounters.push_back(43324);
        internalCounters.push_back(43409);
        internalCounters.push_back(43494);
        internalCounters.push_back(43579);
        internalCounters.push_back(43664);
        internalCounters.push_back(43749);
        internalCounters.push_back(43834);
        internalCounters.push_back(43919);
        internalCounters.push_back(44004);
        internalCounters.push_back(44089);
        internalCounters.push_back(44174);
        internalCounters.push_back(44259);
        internalCounters.push_back(44344);
        internalCounters.push_back(44429);
        internalCounters.push_back(44514);
        internalCounters.push_back(44599);
        internalCounters.push_back(44684);
        internalCounters.push_back(44769);
        internalCounters.push_back(44854);
        internalCounters.push_back(44939);
        internalCounters.push_back(45024);
        internalCounters.push_back(45109);
        internalCounters.push_back(45194);
        internalCounters.push_back(45279);
        internalCounters.push_back(45364);
        internalCounters.push_back(45449);
        internalCounters.push_back(45534);
        internalCounters.push_back(45619);
        internalCounters.push_back(45704);
        internalCounters.push_back(45789);
        internalCounters.push_back(45874);
        internalCounters.push_back(45959);
        internalCounters.push_back(46044);

        c.DefineDerivedCounter("L1CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum256", "6e4ee364-41d7-476d-361d-f47b266c15db");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46077);
        internalCounters.push_back(46359);
        internalCounters.push_back(46641);
        internalCounters.push_back(46923);
        internalCounters.push_back(47205);
        internalCounters.push_back(47487);
        internalCounters.push_back(47769);
        internalCounters.push_back(48051);
        internalCounters.push_back(48333);
        internalCounters.push_back(48615);
        internalCounters.push_back(48897);
        internalCounters.push_back(49179);
        internalCounters.push_back(49461);
        internalCounters.push_back(49743);
        internalCounters.push_back(50025);
        internalCounters.push_back(50307);
        internalCounters.push_back(46079);
        internalCounters.push_back(46361);
        internalCounters.push_back(46643);
        internalCounters.push_back(46925);
        internalCounters.push_back(47207);
        internalCounters.push_back(47489);
        internalCounters.push_back(47771);
        internalCounters.push_back(48053);
        internalCounters.push_back(48335);
        internalCounters.push_back(48617);
        internalCounters.push_back(48899);
        internalCounters.push_back(49181);
        internalCounters.push_back(49463);
        internalCounters.push_back(49745);
        internalCounters.push_back(50027);
        internalCounters.push_back(50309);

        c.DefineDerivedCounter("L2CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the L2 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "d78fdf66-104f-8372-02c1-91d07d7dc62e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46077);
        internalCounters.push_back(46359);
        internalCounters.push_back(46641);
        internalCounters.push_back(46923);
        internalCounters.push_back(47205);
        internalCounters.push_back(47487);
        internalCounters.push_back(47769);
        internalCounters.push_back(48051);
        internalCounters.push_back(48333);
        internalCounters.push_back(48615);
        internalCounters.push_back(48897);
        internalCounters.push_back(49179);
        internalCounters.push_back(49461);
        internalCounters.push_back(49743);
        internalCounters.push_back(50025);
        internalCounters.push_back(50307);
        internalCounters.push_back(46079);
        internalCounters.push_back(46361);
        internalCounters.push_back(46643);
        internalCounters.push_back(46925);
        internalCounters.push_back(47207);
        internalCounters.push_back(47489);
        internalCounters.push_back(47771);
        internalCounters.push_back(48053);
        internalCounters.push_back(48335);
        internalCounters.push_back(48617);
        internalCounters.push_back(48899);
        internalCounters.push_back(49181);
        internalCounters.push_back(49463);
        internalCounters.push_back(49745);
        internalCounters.push_back(50027);
        internalCounters.push_back(50309);

        c.DefineDerivedCounter("L2CacheMiss", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that miss the L2 cache. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "4cd70885-41b3-25cd-92db-c76a0decc634");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46077);
        internalCounters.push_back(46359);
        internalCounters.push_back(46641);
        internalCounters.push_back(46923);
        internalCounters.push_back(47205);
        internalCounters.push_back(47487);
        internalCounters.push_back(47769);
        internalCounters.push_back(48051);
        internalCounters.push_back(48333);
        internalCounters.push_back(48615);
        internalCounters.push_back(48897);
        internalCounters.push_back(49179);
        internalCounters.push_back(49461);
        internalCounters.push_back(49743);
        internalCounters.push_back(50025);
        internalCounters.push_back(50307);

        c.DefineDerivedCounter("L2CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "d0bce171-560c-1895-66b3-bc56abccb077");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46079);
        internalCounters.push_back(46361);
        internalCounters.push_back(46643);
        internalCounters.push_back(46925);
        internalCounters.push_back(47207);
        internalCounters.push_back(47489);
        internalCounters.push_back(47771);
        internalCounters.push_back(48053);
        internalCounters.push_back(48335);
        internalCounters.push_back(48617);
        internalCounters.push_back(48899);
        internalCounters.push_back(49181);
        internalCounters.push_back(49463);
        internalCounters.push_back(49745);
        internalCounters.push_back(50027);
        internalCounters.push_back(50309);

        c.DefineDerivedCounter("L2CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f2ab3a1a-ead6-9893-961b-88ba2a758807");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29368);
        internalCounters.push_back(29487);
        internalCounters.push_back(29606);
        internalCounters.push_back(29725);
        internalCounters.push_back(29844);
        internalCounters.push_back(29963);
        internalCounters.push_back(30082);
        internalCounters.push_back(30201);
        internalCounters.push_back(30320);
        internalCounters.push_back(30439);
        internalCounters.push_back(30558);
        internalCounters.push_back(30677);
        internalCounters.push_back(30796);
        internalCounters.push_back(30915);
        internalCounters.push_back(31034);
        internalCounters.push_back(31153);
        internalCounters.push_back(31272);
        internalCounters.push_back(31391);
        internalCounters.push_back(31510);
        internalCounters.push_back(31629);
        internalCounters.push_back(31748);
        internalCounters.push_back(31867);
        internalCounters.push_back(31986);
        internalCounters.push_back(32105);
        internalCounters.push_back(32224);
        internalCounters.push_back(32343);
        internalCounters.push_back(32462);
        internalCounters.push_back(32581);
        internalCounters.push_back(32700);
        internalCounters.push_back(32819);
        internalCounters.push_back(32938);
        internalCounters.push_back(33057);
        internalCounters.push_back(33176);
        internalCounters.push_back(33295);
        internalCounters.push_back(33414);
        internalCounters.push_back(33533);
        internalCounters.push_back(33652);
        internalCounters.push_back(33771);
        internalCounters.push_back(33890);
        internalCounters.push_back(34009);
        internalCounters.push_back(34128);
        internalCounters.push_back(34247);
        internalCounters.push_back(34366);
        internalCounters.push_back(34485);
        internalCounters.push_back(34604);
        internalCounters.push_back(34723);
        internalCounters.push_back(34842);
        internalCounters.push_back(34961);
        internalCounters.push_back(35080);
        internalCounters.push_back(35199);
        internalCounters.push_back(35318);
        internalCounters.push_back(35437);
        internalCounters.push_back(35556);
        internalCounters.push_back(35675);
        internalCounters.push_back(35794);
        internalCounters.push_back(35913);
        internalCounters.push_back(36032);
        internalCounters.push_back(36151);
        internalCounters.push_back(36270);
        internalCounters.push_back(36389);
        internalCounters.push_back(36508);
        internalCounters.push_back(36627);
        internalCounters.push_back(36746);
        internalCounters.push_back(36865);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29368);
        internalCounters.push_back(29487);
        internalCounters.push_back(29606);
        internalCounters.push_back(29725);
        internalCounters.push_back(29844);
        internalCounters.push_back(29963);
        internalCounters.push_back(30082);
        internalCounters.push_back(30201);
        internalCounters.push_back(30320);
        internalCounters.push_back(30439);
        internalCounters.push_back(30558);
        internalCounters.push_back(30677);
        internalCounters.push_back(30796);
        internalCounters.push_back(30915);
        internalCounters.push_back(31034);
        internalCounters.push_back(31153);
        internalCounters.push_back(31272);
        internalCounters.push_back(31391);
        internalCounters.push_back(31510);
        internalCounters.push_back(31629);
        internalCounters.push_back(31748);
        internalCounters.push_back(31867);
        internalCounters.push_back(31986);
        internalCounters.push_back(32105);
        internalCounters.push_back(32224);
        internalCounters.push_back(32343);
        internalCounters.push_back(32462);
        internalCounters.push_back(32581);
        internalCounters.push_back(32700);
        internalCounters.push_back(32819);
        internalCounters.push_back(32938);
        internalCounters.push_back(33057);
        internalCounters.push_back(33176);
        internalCounters.push_back(33295);
        internalCounters.push_back(33414);
        internalCounters.push_back(33533);
        internalCounters.push_back(33652);
        internalCounters.push_back(33771);
        internalCounters.push_back(33890);
        internalCounters.push_back(34009);
        internalCounters.push_back(34128);
        internalCounters.push_back(34247);
        internalCounters.push_back(34366);
        internalCounters.push_back(34485);
        internalCounters.push_back(34604);
        internalCounters.push_back(34723);
        internalCounters.push_back(34842);
        internalCounters.push_back(34961);
        internalCounters.push_back(35080);
        internalCounters.push_back(35199);
        internalCounters.push_back(35318);
        internalCounters.push_back(35437);
        internalCounters.push_back(35556);
        internalCounters.push_back(35675);
        internalCounters.push_back(35794);
        internalCounters.push_back(35913);
        internalCounters.push_back(36032);
        internalCounters.push_back(36151);
        internalCounters.push_back(36270);
        internalCounters.push_back(36389);
        internalCounters.push_back(36508);
        internalCounters.push_back(36627);
        internalCounters.push_back(36746);
        internalCounters.push_back(36865);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40623);
        internalCounters.push_back(40708);
        internalCounters.push_back(40793);
        internalCounters.push_back(40878);
        internalCounters.push_back(40963);
        internalCounters.push_back(41048);
        internalCounters.push_back(41133);
        internalCounters.push_back(41218);
        internalCounters.push_back(41303);
        internalCounters.push_back(41388);
        internalCounters.push_back(41473);
        internalCounters.push_back(41558);
        internalCounters.push_back(41643);
        internalCounters.push_back(41728);
        internalCounters.push_back(41813);
        internalCounters.push_back(41898);
        internalCounters.push_back(41983);
        internalCounters.push_back(42068);
        internalCounters.push_back(42153);
        internalCounters.push_back(42238);
        internalCounters.push_back(42323);
        internalCounters.push_back(42408);
        internalCounters.push_back(42493);
        internalCounters.push_back(42578);
        internalCounters.push_back(42663);
        internalCounters.push_back(42748);
        internalCounters.push_back(42833);
        internalCounters.push_back(42918);
        internalCounters.push_back(43003);
        internalCounters.push_back(43088);
        internalCounters.push_back(43173);
        internalCounters.push_back(43258);
        internalCounters.push_back(43343);
        internalCounters.push_back(43428);
        internalCounters.push_back(43513);
        internalCounters.push_back(43598);
        internalCounters.push_back(43683);
        internalCounters.push_back(43768);
        internalCounters.push_back(43853);
        internalCounters.push_back(43938);
        internalCounters.push_back(44023);
        internalCounters.push_back(44108);
        internalCounters.push_back(44193);
        internalCounters.push_back(44278);
        internalCounters.push_back(44363);
        internalCounters.push_back(44448);
        internalCounters.push_back(44533);
        internalCounters.push_back(44618);
        internalCounters.push_back(44703);
        internalCounters.push_back(44788);
        internalCounters.push_back(44873);
        internalCounters.push_back(44958);
        internalCounters.push_back(45043);
        internalCounters.push_back(45128);
        internalCounters.push_back(45213);
        internalCounters.push_back(45298);
        internalCounters.push_back(45383);
        internalCounters.push_back(45468);
        internalCounters.push_back(45553);
        internalCounters.push_back(45638);
        internalCounters.push_back(45723);
        internalCounters.push_back(45808);
        internalCounters.push_back(45893);
        internalCounters.push_back(45978);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40623);
        internalCounters.push_back(40708);
        internalCounters.push_back(40793);
        internalCounters.push_back(40878);
        internalCounters.push_back(40963);
        internalCounters.push_back(41048);
        internalCounters.push_back(41133);
        internalCounters.push_back(41218);
        internalCounters.push_back(41303);
        internalCounters.push_back(41388);
        internalCounters.push_back(41473);
        internalCounters.push_back(41558);
        internalCounters.push_back(41643);
        internalCounters.push_back(41728);
        internalCounters.push_back(41813);
        internalCounters.push_back(41898);
        internalCounters.push_back(41983);
        internalCounters.push_back(42068);
        internalCounters.push_back(42153);
        internalCounters.push_back(42238);
        internalCounters.push_back(42323);
        internalCounters.push_back(42408);
        internalCounters.push_back(42493);
        internalCounters.push_back(42578);
        internalCounters.push_back(42663);
        internalCounters.push_back(42748);
        internalCounters.push_back(42833);
        internalCounters.push_back(42918);
        internalCounters.push_back(43003);
        internalCounters.push_back(43088);
        internalCounters.push_back(43173);
        internalCounters.push_back(43258);
        internalCounters.push_back(43343);
        internalCounters.push_back(43428);
        internalCounters.push_back(43513);
        internalCounters.push_back(43598);
        internalCounters.push_back(43683);
        internalCounters.push_back(43768);
        internalCounters.push_back(43853);
        internalCounters.push_back(43938);
        internalCounters.push_back(44023);
        internalCounters.push_back(44108);
        internalCounters.push_back(44193);
        internalCounters.push_back(44278);
        internalCounters.push_back(44363);
        internalCounters.push_back(44448);
        internalCounters.push_back(44533);
        internalCounters.push_back(44618);
        internalCounters.push_back(44703);
        internalCounters.push_back(44788);
        internalCounters.push_back(44873);
        internalCounters.push_back(44958);
        internalCounters.push_back(45043);
        internalCounters.push_back(45128);
        internalCounters.push_back(45213);
        internalCounters.push_back(45298);
        internalCounters.push_back(45383);
        internalCounters.push_back(45468);
        internalCounters.push_back(45553);
        internalCounters.push_back(45638);
        internalCounters.push_back(45723);
        internalCounters.push_back(45808);
        internalCounters.push_back(45893);
        internalCounters.push_back(45978);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46090);
        internalCounters.push_back(46372);
        internalCounters.push_back(46654);
        internalCounters.push_back(46936);
        internalCounters.push_back(47218);
        internalCounters.push_back(47500);
        internalCounters.push_back(47782);
        internalCounters.push_back(48064);
        internalCounters.push_back(48346);
        internalCounters.push_back(48628);
        internalCounters.push_back(48910);
        internalCounters.push_back(49192);
        internalCounters.push_back(49474);
        internalCounters.push_back(49756);
        internalCounters.push_back(50038);
        internalCounters.push_back(50320);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46090);
        internalCounters.push_back(46372);
        internalCounters.push_back(46654);
        internalCounters.push_back(46936);
        internalCounters.push_back(47218);
        internalCounters.push_back(47500);
        internalCounters.push_back(47782);
        internalCounters.push_back(48064);
        internalCounters.push_back(48346);
        internalCounters.push_back(48628);
        internalCounters.push_back(48910);
        internalCounters.push_back(49192);
        internalCounters.push_back(49474);
        internalCounters.push_back(49756);
        internalCounters.push_back(50038);
        internalCounters.push_back(50320);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

