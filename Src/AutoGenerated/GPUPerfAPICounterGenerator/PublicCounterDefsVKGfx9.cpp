//==============================================================================
// Copyright (c) 2010-2019 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief PublicCounterDefinitions for VKGFX9
//==============================================================================

#include "GPACounter.h"
#include "PublicCounterDefsVKGfx9.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersVKGfx9(GPA_DerivedCounters& c)
{
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56575);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56578);

        c.DefineDerivedCounter("ExecutionDuration", "Timing", "GPU command execution duration in nanoseconds, from the time the command enters the top of the pipeline (TOP) to the time the command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "b2f08d0d-af13-cd66-d3b4-b290ad448e69");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56579);

        c.DefineDerivedCounter("ExecutionStart", "Timing", "GPU command execution start time in nanoseconds. This is the time the command enters the top of the pipeline (TOP).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "a368f79d-fcfe-2158-71c4-2f0c4eef5aa4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56580);

        c.DefineDerivedCounter("ExecutionEnd", "Timing", "GPU command execution end time in nanoseconds. This is the time the command reaches the bottom of the pipeline (BOP).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "0bce206a-0976-06a2-bf20-03fb351035a8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23);
        internalCounters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(221);
        internalCounters.push_back(369);
        internalCounters.push_back(517);
        internalCounters.push_back(665);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("TessellatorBusy", "Timing", "The percentage of time the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(221);
        internalCounters.push_back(369);
        internalCounters.push_back(517);
        internalCounters.push_back(665);

        c.DefineDerivedCounter("TessellatorBusyCycles", "Timing", "Number of GPU cycles that the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4061);
        internalCounters.push_back(4257);
        internalCounters.push_back(4453);
        internalCounters.push_back(4649);
        internalCounters.push_back(4070);
        internalCounters.push_back(4266);
        internalCounters.push_back(4462);
        internalCounters.push_back(4658);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4061);
        internalCounters.push_back(4257);
        internalCounters.push_back(4453);
        internalCounters.push_back(4649);
        internalCounters.push_back(4070);
        internalCounters.push_back(4266);
        internalCounters.push_back(4462);
        internalCounters.push_back(4658);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56575);
        internalCounters.push_back(4061);
        internalCounters.push_back(4257);
        internalCounters.push_back(4453);
        internalCounters.push_back(4649);
        internalCounters.push_back(4070);
        internalCounters.push_back(4266);
        internalCounters.push_back(4462);
        internalCounters.push_back(4658);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4092);
        internalCounters.push_back(4288);
        internalCounters.push_back(4484);
        internalCounters.push_back(4680);
        internalCounters.push_back(4098);
        internalCounters.push_back(4294);
        internalCounters.push_back(4490);
        internalCounters.push_back(4686);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4092);
        internalCounters.push_back(4288);
        internalCounters.push_back(4484);
        internalCounters.push_back(4680);
        internalCounters.push_back(4098);
        internalCounters.push_back(4294);
        internalCounters.push_back(4490);
        internalCounters.push_back(4686);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56575);
        internalCounters.push_back(4092);
        internalCounters.push_back(4288);
        internalCounters.push_back(4484);
        internalCounters.push_back(4680);
        internalCounters.push_back(4098);
        internalCounters.push_back(4294);
        internalCounters.push_back(4490);
        internalCounters.push_back(4686);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4080);
        internalCounters.push_back(4276);
        internalCounters.push_back(4472);
        internalCounters.push_back(4668);
        internalCounters.push_back(4083);
        internalCounters.push_back(4279);
        internalCounters.push_back(4475);
        internalCounters.push_back(4671);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSBusy", "Timing", "The percentage of time the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "876f36d8-d046-833f-7832-673cbffd0a45");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4080);
        internalCounters.push_back(4276);
        internalCounters.push_back(4472);
        internalCounters.push_back(4668);
        internalCounters.push_back(4083);
        internalCounters.push_back(4279);
        internalCounters.push_back(4475);
        internalCounters.push_back(4671);

        c.DefineDerivedCounter("GSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "48203b6b-8983-c067-d63e-05da8be5111b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56575);
        internalCounters.push_back(4080);
        internalCounters.push_back(4276);
        internalCounters.push_back(4472);
        internalCounters.push_back(4668);
        internalCounters.push_back(4083);
        internalCounters.push_back(4279);
        internalCounters.push_back(4475);
        internalCounters.push_back(4671);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSTime", "Timing", "Time geometry shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "c73e715f-59af-76e8-9e22-097b94c066c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4114);
        internalCounters.push_back(4310);
        internalCounters.push_back(4506);
        internalCounters.push_back(4702);
        internalCounters.push_back(4119);
        internalCounters.push_back(4315);
        internalCounters.push_back(4511);
        internalCounters.push_back(4707);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4114);
        internalCounters.push_back(4310);
        internalCounters.push_back(4506);
        internalCounters.push_back(4702);
        internalCounters.push_back(4119);
        internalCounters.push_back(4315);
        internalCounters.push_back(4511);
        internalCounters.push_back(4707);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56575);
        internalCounters.push_back(4114);
        internalCounters.push_back(4310);
        internalCounters.push_back(4506);
        internalCounters.push_back(4702);
        internalCounters.push_back(4119);
        internalCounters.push_back(4315);
        internalCounters.push_back(4511);
        internalCounters.push_back(4707);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4102);
        internalCounters.push_back(4298);
        internalCounters.push_back(4494);
        internalCounters.push_back(4690);
        internalCounters.push_back(4106);
        internalCounters.push_back(4302);
        internalCounters.push_back(4498);
        internalCounters.push_back(4694);
        internalCounters.push_back(4108);
        internalCounters.push_back(4304);
        internalCounters.push_back(4500);
        internalCounters.push_back(4696);
        internalCounters.push_back(4112);
        internalCounters.push_back(4308);
        internalCounters.push_back(4504);
        internalCounters.push_back(4700);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4102);
        internalCounters.push_back(4298);
        internalCounters.push_back(4494);
        internalCounters.push_back(4690);
        internalCounters.push_back(4106);
        internalCounters.push_back(4302);
        internalCounters.push_back(4498);
        internalCounters.push_back(4694);
        internalCounters.push_back(4108);
        internalCounters.push_back(4304);
        internalCounters.push_back(4500);
        internalCounters.push_back(4696);
        internalCounters.push_back(4112);
        internalCounters.push_back(4308);
        internalCounters.push_back(4504);
        internalCounters.push_back(4700);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(56575);
        internalCounters.push_back(4102);
        internalCounters.push_back(4298);
        internalCounters.push_back(4494);
        internalCounters.push_back(4690);
        internalCounters.push_back(4106);
        internalCounters.push_back(4302);
        internalCounters.push_back(4498);
        internalCounters.push_back(4694);
        internalCounters.push_back(4108);
        internalCounters.push_back(4304);
        internalCounters.push_back(4500);
        internalCounters.push_back(4696);
        internalCounters.push_back(4112);
        internalCounters.push_back(4308);
        internalCounters.push_back(4504);
        internalCounters.push_back(4700);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(116);
        internalCounters.push_back(264);
        internalCounters.push_back(412);
        internalCounters.push_back(560);
        internalCounters.push_back(97);
        internalCounters.push_back(245);
        internalCounters.push_back(393);
        internalCounters.push_back(541);
        internalCounters.push_back(192);
        internalCounters.push_back(340);
        internalCounters.push_back(488);
        internalCounters.push_back(636);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(9358);
        internalCounters.push_back(9732);
        internalCounters.push_back(10106);
        internalCounters.push_back(10480);
        internalCounters.push_back(9336);
        internalCounters.push_back(9710);
        internalCounters.push_back(10084);
        internalCounters.push_back(10458);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(9362);
        internalCounters.push_back(9736);
        internalCounters.push_back(10110);
        internalCounters.push_back(10484);
        internalCounters.push_back(9336);
        internalCounters.push_back(9710);
        internalCounters.push_back(10084);
        internalCounters.push_back(10458);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(9403);
        internalCounters.push_back(9777);
        internalCounters.push_back(10151);
        internalCounters.push_back(10525);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(9403);
        internalCounters.push_back(9777);
        internalCounters.push_back(10151);
        internalCounters.push_back(10525);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(9416);
        internalCounters.push_back(9790);
        internalCounters.push_back(10164);
        internalCounters.push_back(10538);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(9416);
        internalCounters.push_back(9790);
        internalCounters.push_back(10164);
        internalCounters.push_back(10538);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(201);
        internalCounters.push_back(349);
        internalCounters.push_back(497);
        internalCounters.push_back(645);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13846);
        internalCounters.push_back(14220);
        internalCounters.push_back(14594);
        internalCounters.push_back(14968);
        internalCounters.push_back(13824);
        internalCounters.push_back(14198);
        internalCounters.push_back(14572);
        internalCounters.push_back(14946);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13850);
        internalCounters.push_back(14224);
        internalCounters.push_back(14598);
        internalCounters.push_back(14972);
        internalCounters.push_back(13824);
        internalCounters.push_back(14198);
        internalCounters.push_back(14572);
        internalCounters.push_back(14946);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13891);
        internalCounters.push_back(14265);
        internalCounters.push_back(14639);
        internalCounters.push_back(15013);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13891);
        internalCounters.push_back(14265);
        internalCounters.push_back(14639);
        internalCounters.push_back(15013);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13904);
        internalCounters.push_back(14278);
        internalCounters.push_back(14652);
        internalCounters.push_back(15026);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13904);
        internalCounters.push_back(14278);
        internalCounters.push_back(14652);
        internalCounters.push_back(15026);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105);
        internalCounters.push_back(253);
        internalCounters.push_back(401);
        internalCounters.push_back(549);

        c.DefineDerivedCounter("GSPrimsIn", "GeometryShader", "The number of primitives passed into the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "20c29866-509a-aaab-2697-6b2c38f79953");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(116);
        internalCounters.push_back(264);
        internalCounters.push_back(412);
        internalCounters.push_back(560);
        internalCounters.push_back(97);
        internalCounters.push_back(245);
        internalCounters.push_back(393);
        internalCounters.push_back(541);

        c.DefineDerivedCounter("GSVerticesOut", "GeometryShader", "The number of vertices output by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero", "775b9736-319a-bd8a-48c9-68db9c91d978");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7862);
        internalCounters.push_back(8236);
        internalCounters.push_back(8610);
        internalCounters.push_back(8984);
        internalCounters.push_back(7840);
        internalCounters.push_back(8214);
        internalCounters.push_back(8588);
        internalCounters.push_back(8962);

        c.DefineDerivedCounter("GSVALUInstCount", "GeometryShader", "Average number of vector ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "21b12bfa-b8cd-2e71-a2d5-f9e9f1d65d61");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7866);
        internalCounters.push_back(8240);
        internalCounters.push_back(8614);
        internalCounters.push_back(8988);
        internalCounters.push_back(7840);
        internalCounters.push_back(8214);
        internalCounters.push_back(8588);
        internalCounters.push_back(8962);

        c.DefineDerivedCounter("GSSALUInstCount", "GeometryShader", "Average number of scalar ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "a8562594-d335-ca43-61bf-03b72d2b98a5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7907);
        internalCounters.push_back(8281);
        internalCounters.push_back(8655);
        internalCounters.push_back(9029);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSVALUBusy", "GeometryShader", "The percentage of GPUTime vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "228a4818-1e56-cebb-0720-3b2cdc057a6f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7907);
        internalCounters.push_back(8281);
        internalCounters.push_back(8655);
        internalCounters.push_back(9029);

        c.DefineDerivedCounter("GSVALUBusyCycles", "GeometryShader", "Number of GPU cycles where vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "be217edd-226f-bd97-9a48-46e2809b1933");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7920);
        internalCounters.push_back(8294);
        internalCounters.push_back(8668);
        internalCounters.push_back(9042);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSSALUBusy", "GeometryShader", "The percentage of GPUTime scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "f28ce300-800e-9822-39e4-f48528bdb935");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7920);
        internalCounters.push_back(8294);
        internalCounters.push_back(8668);
        internalCounters.push_back(9042);

        c.DefineDerivedCounter("GSSALUBusyCycles", "GeometryShader", "Number of GPU cycles where scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "b3eace7c-3bc4-0107-887f-923851dc8ea7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(793);
        internalCounters.push_back(1144);
        internalCounters.push_back(1495);
        internalCounters.push_back(1846);
        internalCounters.push_back(797);
        internalCounters.push_back(1148);
        internalCounters.push_back(1499);
        internalCounters.push_back(1850);
        internalCounters.push_back(749);
        internalCounters.push_back(1100);
        internalCounters.push_back(1451);
        internalCounters.push_back(1802);
        internalCounters.push_back(761);
        internalCounters.push_back(1112);
        internalCounters.push_back(1463);
        internalCounters.push_back(1814);
        internalCounters.push_back(750);
        internalCounters.push_back(1101);
        internalCounters.push_back(1452);
        internalCounters.push_back(1803);
        internalCounters.push_back(762);
        internalCounters.push_back(1113);
        internalCounters.push_back(1464);
        internalCounters.push_back(1815);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(793);
        internalCounters.push_back(1144);
        internalCounters.push_back(1495);
        internalCounters.push_back(1846);
        internalCounters.push_back(797);
        internalCounters.push_back(1148);
        internalCounters.push_back(1499);
        internalCounters.push_back(1850);
        internalCounters.push_back(749);
        internalCounters.push_back(1100);
        internalCounters.push_back(1451);
        internalCounters.push_back(1802);
        internalCounters.push_back(761);
        internalCounters.push_back(1112);
        internalCounters.push_back(1463);
        internalCounters.push_back(1814);
        internalCounters.push_back(750);
        internalCounters.push_back(1101);
        internalCounters.push_back(1452);
        internalCounters.push_back(1803);
        internalCounters.push_back(762);
        internalCounters.push_back(1113);
        internalCounters.push_back(1464);
        internalCounters.push_back(1815);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(696);
        internalCounters.push_back(1047);
        internalCounters.push_back(1398);
        internalCounters.push_back(1749);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(702);
        internalCounters.push_back(1053);
        internalCounters.push_back(1404);
        internalCounters.push_back(1755);
        internalCounters.push_back(742);
        internalCounters.push_back(1093);
        internalCounters.push_back(1444);
        internalCounters.push_back(1795);
        internalCounters.push_back(743);
        internalCounters.push_back(1094);
        internalCounters.push_back(1445);
        internalCounters.push_back(1796);
        internalCounters.push_back(744);
        internalCounters.push_back(1095);
        internalCounters.push_back(1446);
        internalCounters.push_back(1797);
        internalCounters.push_back(745);
        internalCounters.push_back(1096);
        internalCounters.push_back(1447);
        internalCounters.push_back(1798);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,+,2,+,3,+,4,+,5,+,6,+,7,+,8,+,9,+,10,+,11,+,12,+,13,+,14,+,15,+,16,+,17,+,18,+,19,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(709);
        internalCounters.push_back(1060);
        internalCounters.push_back(1411);
        internalCounters.push_back(1762);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(797);
        internalCounters.push_back(1148);
        internalCounters.push_back(1499);
        internalCounters.push_back(1850);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(797);
        internalCounters.push_back(1148);
        internalCounters.push_back(1499);
        internalCounters.push_back(1850);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16824);
        internalCounters.push_back(17032);
        internalCounters.push_back(17240);
        internalCounters.push_back(17448);
        internalCounters.push_back(16829);
        internalCounters.push_back(17037);
        internalCounters.push_back(17245);
        internalCounters.push_back(17453);
        internalCounters.push_back(16834);
        internalCounters.push_back(17042);
        internalCounters.push_back(17250);
        internalCounters.push_back(17458);
        internalCounters.push_back(16839);
        internalCounters.push_back(17047);
        internalCounters.push_back(17255);
        internalCounters.push_back(17463);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,8,9,10,11,sum4,12,13,14,15,sum4,sum4", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16826);
        internalCounters.push_back(17034);
        internalCounters.push_back(17242);
        internalCounters.push_back(17450);
        internalCounters.push_back(16831);
        internalCounters.push_back(17039);
        internalCounters.push_back(17247);
        internalCounters.push_back(17455);
        internalCounters.push_back(16836);
        internalCounters.push_back(17044);
        internalCounters.push_back(17252);
        internalCounters.push_back(17460);
        internalCounters.push_back(16841);
        internalCounters.push_back(17049);
        internalCounters.push_back(17257);
        internalCounters.push_back(17465);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max,16,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16826);
        internalCounters.push_back(17034);
        internalCounters.push_back(17242);
        internalCounters.push_back(17450);
        internalCounters.push_back(16831);
        internalCounters.push_back(17039);
        internalCounters.push_back(17247);
        internalCounters.push_back(17455);
        internalCounters.push_back(16836);
        internalCounters.push_back(17044);
        internalCounters.push_back(17252);
        internalCounters.push_back(17460);
        internalCounters.push_back(16841);
        internalCounters.push_back(17049);
        internalCounters.push_back(17257);
        internalCounters.push_back(17465);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(10854);
        internalCounters.push_back(11228);
        internalCounters.push_back(11602);
        internalCounters.push_back(11976);
        internalCounters.push_back(10832);
        internalCounters.push_back(11206);
        internalCounters.push_back(11580);
        internalCounters.push_back(11954);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(10858);
        internalCounters.push_back(11232);
        internalCounters.push_back(11606);
        internalCounters.push_back(11980);
        internalCounters.push_back(10832);
        internalCounters.push_back(11206);
        internalCounters.push_back(11580);
        internalCounters.push_back(11954);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(10899);
        internalCounters.push_back(11273);
        internalCounters.push_back(11647);
        internalCounters.push_back(12021);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(10899);
        internalCounters.push_back(11273);
        internalCounters.push_back(11647);
        internalCounters.push_back(12021);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(10912);
        internalCounters.push_back(11286);
        internalCounters.push_back(11660);
        internalCounters.push_back(12034);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(10912);
        internalCounters.push_back(11286);
        internalCounters.push_back(11660);
        internalCounters.push_back(12034);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4106);
        internalCounters.push_back(4302);
        internalCounters.push_back(4498);
        internalCounters.push_back(4694);
        internalCounters.push_back(4112);
        internalCounters.push_back(4308);
        internalCounters.push_back(4504);
        internalCounters.push_back(4700);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);
        internalCounters.push_back(15330);
        internalCounters.push_back(15704);
        internalCounters.push_back(16078);
        internalCounters.push_back(16452);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15342);
        internalCounters.push_back(15716);
        internalCounters.push_back(16090);
        internalCounters.push_back(16464);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15401);
        internalCounters.push_back(15775);
        internalCounters.push_back(16149);
        internalCounters.push_back(16523);
        internalCounters.push_back(15387);
        internalCounters.push_back(15761);
        internalCounters.push_back(16135);
        internalCounters.push_back(16509);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of 64. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),*,/,(100),*,8,9,10,11,12,13,14,15,sum8,ifnotzero,(100),min", "4476879e-cdc0-d602-b24e-9b4a8d38438f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15346);
        internalCounters.push_back(15720);
        internalCounters.push_back(16094);
        internalCounters.push_back(16468);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15344);
        internalCounters.push_back(15718);
        internalCounters.push_back(16092);
        internalCounters.push_back(16466);
        internalCounters.push_back(17745);
        internalCounters.push_back(17864);
        internalCounters.push_back(17983);
        internalCounters.push_back(18102);
        internalCounters.push_back(18221);
        internalCounters.push_back(18340);
        internalCounters.push_back(18459);
        internalCounters.push_back(18578);
        internalCounters.push_back(18697);
        internalCounters.push_back(18816);
        internalCounters.push_back(18935);
        internalCounters.push_back(19054);
        internalCounters.push_back(19173);
        internalCounters.push_back(19292);
        internalCounters.push_back(19411);
        internalCounters.push_back(19530);
        internalCounters.push_back(19649);
        internalCounters.push_back(19768);
        internalCounters.push_back(19887);
        internalCounters.push_back(20006);
        internalCounters.push_back(20125);
        internalCounters.push_back(20244);
        internalCounters.push_back(20363);
        internalCounters.push_back(20482);
        internalCounters.push_back(20601);
        internalCounters.push_back(20720);
        internalCounters.push_back(20839);
        internalCounters.push_back(20958);
        internalCounters.push_back(21077);
        internalCounters.push_back(21196);
        internalCounters.push_back(21315);
        internalCounters.push_back(21434);
        internalCounters.push_back(21553);
        internalCounters.push_back(21672);
        internalCounters.push_back(21791);
        internalCounters.push_back(21910);
        internalCounters.push_back(22029);
        internalCounters.push_back(22148);
        internalCounters.push_back(22267);
        internalCounters.push_back(22386);
        internalCounters.push_back(22505);
        internalCounters.push_back(22624);
        internalCounters.push_back(22743);
        internalCounters.push_back(22862);
        internalCounters.push_back(22981);
        internalCounters.push_back(23100);
        internalCounters.push_back(23219);
        internalCounters.push_back(23338);
        internalCounters.push_back(23457);
        internalCounters.push_back(23576);
        internalCounters.push_back(23695);
        internalCounters.push_back(23814);
        internalCounters.push_back(23933);
        internalCounters.push_back(24052);
        internalCounters.push_back(24171);
        internalCounters.push_back(24290);
        internalCounters.push_back(24409);
        internalCounters.push_back(24528);
        internalCounters.push_back(24647);
        internalCounters.push_back(24766);
        internalCounters.push_back(24885);
        internalCounters.push_back(25004);
        internalCounters.push_back(25123);
        internalCounters.push_back(25242);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15347);
        internalCounters.push_back(15721);
        internalCounters.push_back(16095);
        internalCounters.push_back(16469);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15343);
        internalCounters.push_back(15717);
        internalCounters.push_back(16091);
        internalCounters.push_back(16465);
        internalCounters.push_back(17746);
        internalCounters.push_back(17865);
        internalCounters.push_back(17984);
        internalCounters.push_back(18103);
        internalCounters.push_back(18222);
        internalCounters.push_back(18341);
        internalCounters.push_back(18460);
        internalCounters.push_back(18579);
        internalCounters.push_back(18698);
        internalCounters.push_back(18817);
        internalCounters.push_back(18936);
        internalCounters.push_back(19055);
        internalCounters.push_back(19174);
        internalCounters.push_back(19293);
        internalCounters.push_back(19412);
        internalCounters.push_back(19531);
        internalCounters.push_back(19650);
        internalCounters.push_back(19769);
        internalCounters.push_back(19888);
        internalCounters.push_back(20007);
        internalCounters.push_back(20126);
        internalCounters.push_back(20245);
        internalCounters.push_back(20364);
        internalCounters.push_back(20483);
        internalCounters.push_back(20602);
        internalCounters.push_back(20721);
        internalCounters.push_back(20840);
        internalCounters.push_back(20959);
        internalCounters.push_back(21078);
        internalCounters.push_back(21197);
        internalCounters.push_back(21316);
        internalCounters.push_back(21435);
        internalCounters.push_back(21554);
        internalCounters.push_back(21673);
        internalCounters.push_back(21792);
        internalCounters.push_back(21911);
        internalCounters.push_back(22030);
        internalCounters.push_back(22149);
        internalCounters.push_back(22268);
        internalCounters.push_back(22387);
        internalCounters.push_back(22506);
        internalCounters.push_back(22625);
        internalCounters.push_back(22744);
        internalCounters.push_back(22863);
        internalCounters.push_back(22982);
        internalCounters.push_back(23101);
        internalCounters.push_back(23220);
        internalCounters.push_back(23339);
        internalCounters.push_back(23458);
        internalCounters.push_back(23577);
        internalCounters.push_back(23696);
        internalCounters.push_back(23815);
        internalCounters.push_back(23934);
        internalCounters.push_back(24053);
        internalCounters.push_back(24172);
        internalCounters.push_back(24291);
        internalCounters.push_back(24410);
        internalCounters.push_back(24529);
        internalCounters.push_back(24648);
        internalCounters.push_back(24767);
        internalCounters.push_back(24886);
        internalCounters.push_back(25005);
        internalCounters.push_back(25124);
        internalCounters.push_back(25243);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15348);
        internalCounters.push_back(15722);
        internalCounters.push_back(16096);
        internalCounters.push_back(16470);
        internalCounters.push_back(15349);
        internalCounters.push_back(15723);
        internalCounters.push_back(16097);
        internalCounters.push_back(16471);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSFlatVMemInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to the video memory executed per work item (affected by flow control). Includes FLAT instructions that read from or write to scratch.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "2570b477-13e3-f5b6-e6ff-7159373bc74d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15387);
        internalCounters.push_back(15761);
        internalCounters.push_back(16135);
        internalCounters.push_back(16509);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15387);
        internalCounters.push_back(15761);
        internalCounters.push_back(16135);
        internalCounters.push_back(16509);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15400);
        internalCounters.push_back(15774);
        internalCounters.push_back(16148);
        internalCounters.push_back(16522);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15400);
        internalCounters.push_back(15774);
        internalCounters.push_back(16148);
        internalCounters.push_back(16522);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17659);
        internalCounters.push_back(17778);
        internalCounters.push_back(17897);
        internalCounters.push_back(18016);
        internalCounters.push_back(18135);
        internalCounters.push_back(18254);
        internalCounters.push_back(18373);
        internalCounters.push_back(18492);
        internalCounters.push_back(18611);
        internalCounters.push_back(18730);
        internalCounters.push_back(18849);
        internalCounters.push_back(18968);
        internalCounters.push_back(19087);
        internalCounters.push_back(19206);
        internalCounters.push_back(19325);
        internalCounters.push_back(19444);
        internalCounters.push_back(19563);
        internalCounters.push_back(19682);
        internalCounters.push_back(19801);
        internalCounters.push_back(19920);
        internalCounters.push_back(20039);
        internalCounters.push_back(20158);
        internalCounters.push_back(20277);
        internalCounters.push_back(20396);
        internalCounters.push_back(20515);
        internalCounters.push_back(20634);
        internalCounters.push_back(20753);
        internalCounters.push_back(20872);
        internalCounters.push_back(20991);
        internalCounters.push_back(21110);
        internalCounters.push_back(21229);
        internalCounters.push_back(21348);
        internalCounters.push_back(21467);
        internalCounters.push_back(21586);
        internalCounters.push_back(21705);
        internalCounters.push_back(21824);
        internalCounters.push_back(21943);
        internalCounters.push_back(22062);
        internalCounters.push_back(22181);
        internalCounters.push_back(22300);
        internalCounters.push_back(22419);
        internalCounters.push_back(22538);
        internalCounters.push_back(22657);
        internalCounters.push_back(22776);
        internalCounters.push_back(22895);
        internalCounters.push_back(23014);
        internalCounters.push_back(23133);
        internalCounters.push_back(23252);
        internalCounters.push_back(23371);
        internalCounters.push_back(23490);
        internalCounters.push_back(23609);
        internalCounters.push_back(23728);
        internalCounters.push_back(23847);
        internalCounters.push_back(23966);
        internalCounters.push_back(24085);
        internalCounters.push_back(24204);
        internalCounters.push_back(24323);
        internalCounters.push_back(24442);
        internalCounters.push_back(24561);
        internalCounters.push_back(24680);
        internalCounters.push_back(24799);
        internalCounters.push_back(24918);
        internalCounters.push_back(25037);
        internalCounters.push_back(25156);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17659);
        internalCounters.push_back(17778);
        internalCounters.push_back(17897);
        internalCounters.push_back(18016);
        internalCounters.push_back(18135);
        internalCounters.push_back(18254);
        internalCounters.push_back(18373);
        internalCounters.push_back(18492);
        internalCounters.push_back(18611);
        internalCounters.push_back(18730);
        internalCounters.push_back(18849);
        internalCounters.push_back(18968);
        internalCounters.push_back(19087);
        internalCounters.push_back(19206);
        internalCounters.push_back(19325);
        internalCounters.push_back(19444);
        internalCounters.push_back(19563);
        internalCounters.push_back(19682);
        internalCounters.push_back(19801);
        internalCounters.push_back(19920);
        internalCounters.push_back(20039);
        internalCounters.push_back(20158);
        internalCounters.push_back(20277);
        internalCounters.push_back(20396);
        internalCounters.push_back(20515);
        internalCounters.push_back(20634);
        internalCounters.push_back(20753);
        internalCounters.push_back(20872);
        internalCounters.push_back(20991);
        internalCounters.push_back(21110);
        internalCounters.push_back(21229);
        internalCounters.push_back(21348);
        internalCounters.push_back(21467);
        internalCounters.push_back(21586);
        internalCounters.push_back(21705);
        internalCounters.push_back(21824);
        internalCounters.push_back(21943);
        internalCounters.push_back(22062);
        internalCounters.push_back(22181);
        internalCounters.push_back(22300);
        internalCounters.push_back(22419);
        internalCounters.push_back(22538);
        internalCounters.push_back(22657);
        internalCounters.push_back(22776);
        internalCounters.push_back(22895);
        internalCounters.push_back(23014);
        internalCounters.push_back(23133);
        internalCounters.push_back(23252);
        internalCounters.push_back(23371);
        internalCounters.push_back(23490);
        internalCounters.push_back(23609);
        internalCounters.push_back(23728);
        internalCounters.push_back(23847);
        internalCounters.push_back(23966);
        internalCounters.push_back(24085);
        internalCounters.push_back(24204);
        internalCounters.push_back(24323);
        internalCounters.push_back(24442);
        internalCounters.push_back(24561);
        internalCounters.push_back(24680);
        internalCounters.push_back(24799);
        internalCounters.push_back(24918);
        internalCounters.push_back(25037);
        internalCounters.push_back(25156);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,65,66,67,68,69,70,71,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28914);
        internalCounters.push_back(28999);
        internalCounters.push_back(29084);
        internalCounters.push_back(29169);
        internalCounters.push_back(29254);
        internalCounters.push_back(29339);
        internalCounters.push_back(29424);
        internalCounters.push_back(29509);
        internalCounters.push_back(29594);
        internalCounters.push_back(29679);
        internalCounters.push_back(29764);
        internalCounters.push_back(29849);
        internalCounters.push_back(29934);
        internalCounters.push_back(30019);
        internalCounters.push_back(30104);
        internalCounters.push_back(30189);
        internalCounters.push_back(30274);
        internalCounters.push_back(30359);
        internalCounters.push_back(30444);
        internalCounters.push_back(30529);
        internalCounters.push_back(30614);
        internalCounters.push_back(30699);
        internalCounters.push_back(30784);
        internalCounters.push_back(30869);
        internalCounters.push_back(30954);
        internalCounters.push_back(31039);
        internalCounters.push_back(31124);
        internalCounters.push_back(31209);
        internalCounters.push_back(31294);
        internalCounters.push_back(31379);
        internalCounters.push_back(31464);
        internalCounters.push_back(31549);
        internalCounters.push_back(31634);
        internalCounters.push_back(31719);
        internalCounters.push_back(31804);
        internalCounters.push_back(31889);
        internalCounters.push_back(31974);
        internalCounters.push_back(32059);
        internalCounters.push_back(32144);
        internalCounters.push_back(32229);
        internalCounters.push_back(32314);
        internalCounters.push_back(32399);
        internalCounters.push_back(32484);
        internalCounters.push_back(32569);
        internalCounters.push_back(32654);
        internalCounters.push_back(32739);
        internalCounters.push_back(32824);
        internalCounters.push_back(32909);
        internalCounters.push_back(32994);
        internalCounters.push_back(33079);
        internalCounters.push_back(33164);
        internalCounters.push_back(33249);
        internalCounters.push_back(33334);
        internalCounters.push_back(33419);
        internalCounters.push_back(33504);
        internalCounters.push_back(33589);
        internalCounters.push_back(33674);
        internalCounters.push_back(33759);
        internalCounters.push_back(33844);
        internalCounters.push_back(33929);
        internalCounters.push_back(34014);
        internalCounters.push_back(34099);
        internalCounters.push_back(34184);
        internalCounters.push_back(34269);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28914);
        internalCounters.push_back(28999);
        internalCounters.push_back(29084);
        internalCounters.push_back(29169);
        internalCounters.push_back(29254);
        internalCounters.push_back(29339);
        internalCounters.push_back(29424);
        internalCounters.push_back(29509);
        internalCounters.push_back(29594);
        internalCounters.push_back(29679);
        internalCounters.push_back(29764);
        internalCounters.push_back(29849);
        internalCounters.push_back(29934);
        internalCounters.push_back(30019);
        internalCounters.push_back(30104);
        internalCounters.push_back(30189);
        internalCounters.push_back(30274);
        internalCounters.push_back(30359);
        internalCounters.push_back(30444);
        internalCounters.push_back(30529);
        internalCounters.push_back(30614);
        internalCounters.push_back(30699);
        internalCounters.push_back(30784);
        internalCounters.push_back(30869);
        internalCounters.push_back(30954);
        internalCounters.push_back(31039);
        internalCounters.push_back(31124);
        internalCounters.push_back(31209);
        internalCounters.push_back(31294);
        internalCounters.push_back(31379);
        internalCounters.push_back(31464);
        internalCounters.push_back(31549);
        internalCounters.push_back(31634);
        internalCounters.push_back(31719);
        internalCounters.push_back(31804);
        internalCounters.push_back(31889);
        internalCounters.push_back(31974);
        internalCounters.push_back(32059);
        internalCounters.push_back(32144);
        internalCounters.push_back(32229);
        internalCounters.push_back(32314);
        internalCounters.push_back(32399);
        internalCounters.push_back(32484);
        internalCounters.push_back(32569);
        internalCounters.push_back(32654);
        internalCounters.push_back(32739);
        internalCounters.push_back(32824);
        internalCounters.push_back(32909);
        internalCounters.push_back(32994);
        internalCounters.push_back(33079);
        internalCounters.push_back(33164);
        internalCounters.push_back(33249);
        internalCounters.push_back(33334);
        internalCounters.push_back(33419);
        internalCounters.push_back(33504);
        internalCounters.push_back(33589);
        internalCounters.push_back(33674);
        internalCounters.push_back(33759);
        internalCounters.push_back(33844);
        internalCounters.push_back(33929);
        internalCounters.push_back(34014);
        internalCounters.push_back(34099);
        internalCounters.push_back(34184);
        internalCounters.push_back(34269);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,65,66,67,68,69,70,71,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34381);
        internalCounters.push_back(34663);
        internalCounters.push_back(34945);
        internalCounters.push_back(35227);
        internalCounters.push_back(35509);
        internalCounters.push_back(35791);
        internalCounters.push_back(36073);
        internalCounters.push_back(36355);
        internalCounters.push_back(36637);
        internalCounters.push_back(36919);
        internalCounters.push_back(37201);
        internalCounters.push_back(37483);
        internalCounters.push_back(37765);
        internalCounters.push_back(38047);
        internalCounters.push_back(38329);
        internalCounters.push_back(38611);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*,17,18,19,20,21,22,23,24,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34381);
        internalCounters.push_back(34663);
        internalCounters.push_back(34945);
        internalCounters.push_back(35227);
        internalCounters.push_back(35509);
        internalCounters.push_back(35791);
        internalCounters.push_back(36073);
        internalCounters.push_back(36355);
        internalCounters.push_back(36637);
        internalCounters.push_back(36919);
        internalCounters.push_back(37201);
        internalCounters.push_back(37483);
        internalCounters.push_back(37765);
        internalCounters.push_back(38047);
        internalCounters.push_back(38329);
        internalCounters.push_back(38611);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,17,18,19,20,21,22,23,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15351);
        internalCounters.push_back(15725);
        internalCounters.push_back(16099);
        internalCounters.push_back(16473);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15350);
        internalCounters.push_back(15724);
        internalCounters.push_back(16098);
        internalCounters.push_back(16472);
        internalCounters.push_back(15349);
        internalCounters.push_back(15723);
        internalCounters.push_back(16097);
        internalCounters.push_back(16471);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15349);
        internalCounters.push_back(15723);
        internalCounters.push_back(16097);
        internalCounters.push_back(16471);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSFlatLDSInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to LDS executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "99672cda-de2b-014c-482e-cf73b90068d5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15379);
        internalCounters.push_back(15753);
        internalCounters.push_back(16127);
        internalCounters.push_back(16501);
        internalCounters.push_back(15320);
        internalCounters.push_back(15694);
        internalCounters.push_back(16068);
        internalCounters.push_back(16442);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15379);
        internalCounters.push_back(15753);
        internalCounters.push_back(16127);
        internalCounters.push_back(16501);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15409);
        internalCounters.push_back(15783);
        internalCounters.push_back(16157);
        internalCounters.push_back(16531);
        internalCounters.push_back(23);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15409);
        internalCounters.push_back(15783);
        internalCounters.push_back(16157);
        internalCounters.push_back(16531);
        internalCounters.push_back(4103);
        internalCounters.push_back(4299);
        internalCounters.push_back(4495);
        internalCounters.push_back(4691);
        internalCounters.push_back(4109);
        internalCounters.push_back(4305);
        internalCounters.push_back(4501);
        internalCounters.push_back(4697);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17659);
        internalCounters.push_back(17778);
        internalCounters.push_back(17897);
        internalCounters.push_back(18016);
        internalCounters.push_back(18135);
        internalCounters.push_back(18254);
        internalCounters.push_back(18373);
        internalCounters.push_back(18492);
        internalCounters.push_back(18611);
        internalCounters.push_back(18730);
        internalCounters.push_back(18849);
        internalCounters.push_back(18968);
        internalCounters.push_back(19087);
        internalCounters.push_back(19206);
        internalCounters.push_back(19325);
        internalCounters.push_back(19444);
        internalCounters.push_back(19563);
        internalCounters.push_back(19682);
        internalCounters.push_back(19801);
        internalCounters.push_back(19920);
        internalCounters.push_back(20039);
        internalCounters.push_back(20158);
        internalCounters.push_back(20277);
        internalCounters.push_back(20396);
        internalCounters.push_back(20515);
        internalCounters.push_back(20634);
        internalCounters.push_back(20753);
        internalCounters.push_back(20872);
        internalCounters.push_back(20991);
        internalCounters.push_back(21110);
        internalCounters.push_back(21229);
        internalCounters.push_back(21348);
        internalCounters.push_back(21467);
        internalCounters.push_back(21586);
        internalCounters.push_back(21705);
        internalCounters.push_back(21824);
        internalCounters.push_back(21943);
        internalCounters.push_back(22062);
        internalCounters.push_back(22181);
        internalCounters.push_back(22300);
        internalCounters.push_back(22419);
        internalCounters.push_back(22538);
        internalCounters.push_back(22657);
        internalCounters.push_back(22776);
        internalCounters.push_back(22895);
        internalCounters.push_back(23014);
        internalCounters.push_back(23133);
        internalCounters.push_back(23252);
        internalCounters.push_back(23371);
        internalCounters.push_back(23490);
        internalCounters.push_back(23609);
        internalCounters.push_back(23728);
        internalCounters.push_back(23847);
        internalCounters.push_back(23966);
        internalCounters.push_back(24085);
        internalCounters.push_back(24204);
        internalCounters.push_back(24323);
        internalCounters.push_back(24442);
        internalCounters.push_back(24561);
        internalCounters.push_back(24680);
        internalCounters.push_back(24799);
        internalCounters.push_back(24918);
        internalCounters.push_back(25037);
        internalCounters.push_back(25156);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17659);
        internalCounters.push_back(17778);
        internalCounters.push_back(17897);
        internalCounters.push_back(18016);
        internalCounters.push_back(18135);
        internalCounters.push_back(18254);
        internalCounters.push_back(18373);
        internalCounters.push_back(18492);
        internalCounters.push_back(18611);
        internalCounters.push_back(18730);
        internalCounters.push_back(18849);
        internalCounters.push_back(18968);
        internalCounters.push_back(19087);
        internalCounters.push_back(19206);
        internalCounters.push_back(19325);
        internalCounters.push_back(19444);
        internalCounters.push_back(19563);
        internalCounters.push_back(19682);
        internalCounters.push_back(19801);
        internalCounters.push_back(19920);
        internalCounters.push_back(20039);
        internalCounters.push_back(20158);
        internalCounters.push_back(20277);
        internalCounters.push_back(20396);
        internalCounters.push_back(20515);
        internalCounters.push_back(20634);
        internalCounters.push_back(20753);
        internalCounters.push_back(20872);
        internalCounters.push_back(20991);
        internalCounters.push_back(21110);
        internalCounters.push_back(21229);
        internalCounters.push_back(21348);
        internalCounters.push_back(21467);
        internalCounters.push_back(21586);
        internalCounters.push_back(21705);
        internalCounters.push_back(21824);
        internalCounters.push_back(21943);
        internalCounters.push_back(22062);
        internalCounters.push_back(22181);
        internalCounters.push_back(22300);
        internalCounters.push_back(22419);
        internalCounters.push_back(22538);
        internalCounters.push_back(22657);
        internalCounters.push_back(22776);
        internalCounters.push_back(22895);
        internalCounters.push_back(23014);
        internalCounters.push_back(23133);
        internalCounters.push_back(23252);
        internalCounters.push_back(23371);
        internalCounters.push_back(23490);
        internalCounters.push_back(23609);
        internalCounters.push_back(23728);
        internalCounters.push_back(23847);
        internalCounters.push_back(23966);
        internalCounters.push_back(24085);
        internalCounters.push_back(24204);
        internalCounters.push_back(24323);
        internalCounters.push_back(24442);
        internalCounters.push_back(24561);
        internalCounters.push_back(24680);
        internalCounters.push_back(24799);
        internalCounters.push_back(24918);
        internalCounters.push_back(25037);
        internalCounters.push_back(25156);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17713);
        internalCounters.push_back(17832);
        internalCounters.push_back(17951);
        internalCounters.push_back(18070);
        internalCounters.push_back(18189);
        internalCounters.push_back(18308);
        internalCounters.push_back(18427);
        internalCounters.push_back(18546);
        internalCounters.push_back(18665);
        internalCounters.push_back(18784);
        internalCounters.push_back(18903);
        internalCounters.push_back(19022);
        internalCounters.push_back(19141);
        internalCounters.push_back(19260);
        internalCounters.push_back(19379);
        internalCounters.push_back(19498);
        internalCounters.push_back(19617);
        internalCounters.push_back(19736);
        internalCounters.push_back(19855);
        internalCounters.push_back(19974);
        internalCounters.push_back(20093);
        internalCounters.push_back(20212);
        internalCounters.push_back(20331);
        internalCounters.push_back(20450);
        internalCounters.push_back(20569);
        internalCounters.push_back(20688);
        internalCounters.push_back(20807);
        internalCounters.push_back(20926);
        internalCounters.push_back(21045);
        internalCounters.push_back(21164);
        internalCounters.push_back(21283);
        internalCounters.push_back(21402);
        internalCounters.push_back(21521);
        internalCounters.push_back(21640);
        internalCounters.push_back(21759);
        internalCounters.push_back(21878);
        internalCounters.push_back(21997);
        internalCounters.push_back(22116);
        internalCounters.push_back(22235);
        internalCounters.push_back(22354);
        internalCounters.push_back(22473);
        internalCounters.push_back(22592);
        internalCounters.push_back(22711);
        internalCounters.push_back(22830);
        internalCounters.push_back(22949);
        internalCounters.push_back(23068);
        internalCounters.push_back(23187);
        internalCounters.push_back(23306);
        internalCounters.push_back(23425);
        internalCounters.push_back(23544);
        internalCounters.push_back(23663);
        internalCounters.push_back(23782);
        internalCounters.push_back(23901);
        internalCounters.push_back(24020);
        internalCounters.push_back(24139);
        internalCounters.push_back(24258);
        internalCounters.push_back(24377);
        internalCounters.push_back(24496);
        internalCounters.push_back(24615);
        internalCounters.push_back(24734);
        internalCounters.push_back(24853);
        internalCounters.push_back(24972);
        internalCounters.push_back(25091);
        internalCounters.push_back(25210);
        internalCounters.push_back(17712);
        internalCounters.push_back(17831);
        internalCounters.push_back(17950);
        internalCounters.push_back(18069);
        internalCounters.push_back(18188);
        internalCounters.push_back(18307);
        internalCounters.push_back(18426);
        internalCounters.push_back(18545);
        internalCounters.push_back(18664);
        internalCounters.push_back(18783);
        internalCounters.push_back(18902);
        internalCounters.push_back(19021);
        internalCounters.push_back(19140);
        internalCounters.push_back(19259);
        internalCounters.push_back(19378);
        internalCounters.push_back(19497);
        internalCounters.push_back(19616);
        internalCounters.push_back(19735);
        internalCounters.push_back(19854);
        internalCounters.push_back(19973);
        internalCounters.push_back(20092);
        internalCounters.push_back(20211);
        internalCounters.push_back(20330);
        internalCounters.push_back(20449);
        internalCounters.push_back(20568);
        internalCounters.push_back(20687);
        internalCounters.push_back(20806);
        internalCounters.push_back(20925);
        internalCounters.push_back(21044);
        internalCounters.push_back(21163);
        internalCounters.push_back(21282);
        internalCounters.push_back(21401);
        internalCounters.push_back(21520);
        internalCounters.push_back(21639);
        internalCounters.push_back(21758);
        internalCounters.push_back(21877);
        internalCounters.push_back(21996);
        internalCounters.push_back(22115);
        internalCounters.push_back(22234);
        internalCounters.push_back(22353);
        internalCounters.push_back(22472);
        internalCounters.push_back(22591);
        internalCounters.push_back(22710);
        internalCounters.push_back(22829);
        internalCounters.push_back(22948);
        internalCounters.push_back(23067);
        internalCounters.push_back(23186);
        internalCounters.push_back(23305);
        internalCounters.push_back(23424);
        internalCounters.push_back(23543);
        internalCounters.push_back(23662);
        internalCounters.push_back(23781);
        internalCounters.push_back(23900);
        internalCounters.push_back(24019);
        internalCounters.push_back(24138);
        internalCounters.push_back(24257);
        internalCounters.push_back(24376);
        internalCounters.push_back(24495);
        internalCounters.push_back(24614);
        internalCounters.push_back(24733);
        internalCounters.push_back(24852);
        internalCounters.push_back(24971);
        internalCounters.push_back(25090);
        internalCounters.push_back(25209);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17713);
        internalCounters.push_back(17832);
        internalCounters.push_back(17951);
        internalCounters.push_back(18070);
        internalCounters.push_back(18189);
        internalCounters.push_back(18308);
        internalCounters.push_back(18427);
        internalCounters.push_back(18546);
        internalCounters.push_back(18665);
        internalCounters.push_back(18784);
        internalCounters.push_back(18903);
        internalCounters.push_back(19022);
        internalCounters.push_back(19141);
        internalCounters.push_back(19260);
        internalCounters.push_back(19379);
        internalCounters.push_back(19498);
        internalCounters.push_back(19617);
        internalCounters.push_back(19736);
        internalCounters.push_back(19855);
        internalCounters.push_back(19974);
        internalCounters.push_back(20093);
        internalCounters.push_back(20212);
        internalCounters.push_back(20331);
        internalCounters.push_back(20450);
        internalCounters.push_back(20569);
        internalCounters.push_back(20688);
        internalCounters.push_back(20807);
        internalCounters.push_back(20926);
        internalCounters.push_back(21045);
        internalCounters.push_back(21164);
        internalCounters.push_back(21283);
        internalCounters.push_back(21402);
        internalCounters.push_back(21521);
        internalCounters.push_back(21640);
        internalCounters.push_back(21759);
        internalCounters.push_back(21878);
        internalCounters.push_back(21997);
        internalCounters.push_back(22116);
        internalCounters.push_back(22235);
        internalCounters.push_back(22354);
        internalCounters.push_back(22473);
        internalCounters.push_back(22592);
        internalCounters.push_back(22711);
        internalCounters.push_back(22830);
        internalCounters.push_back(22949);
        internalCounters.push_back(23068);
        internalCounters.push_back(23187);
        internalCounters.push_back(23306);
        internalCounters.push_back(23425);
        internalCounters.push_back(23544);
        internalCounters.push_back(23663);
        internalCounters.push_back(23782);
        internalCounters.push_back(23901);
        internalCounters.push_back(24020);
        internalCounters.push_back(24139);
        internalCounters.push_back(24258);
        internalCounters.push_back(24377);
        internalCounters.push_back(24496);
        internalCounters.push_back(24615);
        internalCounters.push_back(24734);
        internalCounters.push_back(24853);
        internalCounters.push_back(24972);
        internalCounters.push_back(25091);
        internalCounters.push_back(25210);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17712);
        internalCounters.push_back(17831);
        internalCounters.push_back(17950);
        internalCounters.push_back(18069);
        internalCounters.push_back(18188);
        internalCounters.push_back(18307);
        internalCounters.push_back(18426);
        internalCounters.push_back(18545);
        internalCounters.push_back(18664);
        internalCounters.push_back(18783);
        internalCounters.push_back(18902);
        internalCounters.push_back(19021);
        internalCounters.push_back(19140);
        internalCounters.push_back(19259);
        internalCounters.push_back(19378);
        internalCounters.push_back(19497);
        internalCounters.push_back(19616);
        internalCounters.push_back(19735);
        internalCounters.push_back(19854);
        internalCounters.push_back(19973);
        internalCounters.push_back(20092);
        internalCounters.push_back(20211);
        internalCounters.push_back(20330);
        internalCounters.push_back(20449);
        internalCounters.push_back(20568);
        internalCounters.push_back(20687);
        internalCounters.push_back(20806);
        internalCounters.push_back(20925);
        internalCounters.push_back(21044);
        internalCounters.push_back(21163);
        internalCounters.push_back(21282);
        internalCounters.push_back(21401);
        internalCounters.push_back(21520);
        internalCounters.push_back(21639);
        internalCounters.push_back(21758);
        internalCounters.push_back(21877);
        internalCounters.push_back(21996);
        internalCounters.push_back(22115);
        internalCounters.push_back(22234);
        internalCounters.push_back(22353);
        internalCounters.push_back(22472);
        internalCounters.push_back(22591);
        internalCounters.push_back(22710);
        internalCounters.push_back(22829);
        internalCounters.push_back(22948);
        internalCounters.push_back(23067);
        internalCounters.push_back(23186);
        internalCounters.push_back(23305);
        internalCounters.push_back(23424);
        internalCounters.push_back(23543);
        internalCounters.push_back(23662);
        internalCounters.push_back(23781);
        internalCounters.push_back(23900);
        internalCounters.push_back(24019);
        internalCounters.push_back(24138);
        internalCounters.push_back(24257);
        internalCounters.push_back(24376);
        internalCounters.push_back(24495);
        internalCounters.push_back(24614);
        internalCounters.push_back(24733);
        internalCounters.push_back(24852);
        internalCounters.push_back(24971);
        internalCounters.push_back(25090);
        internalCounters.push_back(25209);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17715);
        internalCounters.push_back(17834);
        internalCounters.push_back(17953);
        internalCounters.push_back(18072);
        internalCounters.push_back(18191);
        internalCounters.push_back(18310);
        internalCounters.push_back(18429);
        internalCounters.push_back(18548);
        internalCounters.push_back(18667);
        internalCounters.push_back(18786);
        internalCounters.push_back(18905);
        internalCounters.push_back(19024);
        internalCounters.push_back(19143);
        internalCounters.push_back(19262);
        internalCounters.push_back(19381);
        internalCounters.push_back(19500);
        internalCounters.push_back(19619);
        internalCounters.push_back(19738);
        internalCounters.push_back(19857);
        internalCounters.push_back(19976);
        internalCounters.push_back(20095);
        internalCounters.push_back(20214);
        internalCounters.push_back(20333);
        internalCounters.push_back(20452);
        internalCounters.push_back(20571);
        internalCounters.push_back(20690);
        internalCounters.push_back(20809);
        internalCounters.push_back(20928);
        internalCounters.push_back(21047);
        internalCounters.push_back(21166);
        internalCounters.push_back(21285);
        internalCounters.push_back(21404);
        internalCounters.push_back(21523);
        internalCounters.push_back(21642);
        internalCounters.push_back(21761);
        internalCounters.push_back(21880);
        internalCounters.push_back(21999);
        internalCounters.push_back(22118);
        internalCounters.push_back(22237);
        internalCounters.push_back(22356);
        internalCounters.push_back(22475);
        internalCounters.push_back(22594);
        internalCounters.push_back(22713);
        internalCounters.push_back(22832);
        internalCounters.push_back(22951);
        internalCounters.push_back(23070);
        internalCounters.push_back(23189);
        internalCounters.push_back(23308);
        internalCounters.push_back(23427);
        internalCounters.push_back(23546);
        internalCounters.push_back(23665);
        internalCounters.push_back(23784);
        internalCounters.push_back(23903);
        internalCounters.push_back(24022);
        internalCounters.push_back(24141);
        internalCounters.push_back(24260);
        internalCounters.push_back(24379);
        internalCounters.push_back(24498);
        internalCounters.push_back(24617);
        internalCounters.push_back(24736);
        internalCounters.push_back(24855);
        internalCounters.push_back(24974);
        internalCounters.push_back(25093);
        internalCounters.push_back(25212);
        internalCounters.push_back(17714);
        internalCounters.push_back(17833);
        internalCounters.push_back(17952);
        internalCounters.push_back(18071);
        internalCounters.push_back(18190);
        internalCounters.push_back(18309);
        internalCounters.push_back(18428);
        internalCounters.push_back(18547);
        internalCounters.push_back(18666);
        internalCounters.push_back(18785);
        internalCounters.push_back(18904);
        internalCounters.push_back(19023);
        internalCounters.push_back(19142);
        internalCounters.push_back(19261);
        internalCounters.push_back(19380);
        internalCounters.push_back(19499);
        internalCounters.push_back(19618);
        internalCounters.push_back(19737);
        internalCounters.push_back(19856);
        internalCounters.push_back(19975);
        internalCounters.push_back(20094);
        internalCounters.push_back(20213);
        internalCounters.push_back(20332);
        internalCounters.push_back(20451);
        internalCounters.push_back(20570);
        internalCounters.push_back(20689);
        internalCounters.push_back(20808);
        internalCounters.push_back(20927);
        internalCounters.push_back(21046);
        internalCounters.push_back(21165);
        internalCounters.push_back(21284);
        internalCounters.push_back(21403);
        internalCounters.push_back(21522);
        internalCounters.push_back(21641);
        internalCounters.push_back(21760);
        internalCounters.push_back(21879);
        internalCounters.push_back(21998);
        internalCounters.push_back(22117);
        internalCounters.push_back(22236);
        internalCounters.push_back(22355);
        internalCounters.push_back(22474);
        internalCounters.push_back(22593);
        internalCounters.push_back(22712);
        internalCounters.push_back(22831);
        internalCounters.push_back(22950);
        internalCounters.push_back(23069);
        internalCounters.push_back(23188);
        internalCounters.push_back(23307);
        internalCounters.push_back(23426);
        internalCounters.push_back(23545);
        internalCounters.push_back(23664);
        internalCounters.push_back(23783);
        internalCounters.push_back(23902);
        internalCounters.push_back(24021);
        internalCounters.push_back(24140);
        internalCounters.push_back(24259);
        internalCounters.push_back(24378);
        internalCounters.push_back(24497);
        internalCounters.push_back(24616);
        internalCounters.push_back(24735);
        internalCounters.push_back(24854);
        internalCounters.push_back(24973);
        internalCounters.push_back(25092);
        internalCounters.push_back(25211);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17715);
        internalCounters.push_back(17834);
        internalCounters.push_back(17953);
        internalCounters.push_back(18072);
        internalCounters.push_back(18191);
        internalCounters.push_back(18310);
        internalCounters.push_back(18429);
        internalCounters.push_back(18548);
        internalCounters.push_back(18667);
        internalCounters.push_back(18786);
        internalCounters.push_back(18905);
        internalCounters.push_back(19024);
        internalCounters.push_back(19143);
        internalCounters.push_back(19262);
        internalCounters.push_back(19381);
        internalCounters.push_back(19500);
        internalCounters.push_back(19619);
        internalCounters.push_back(19738);
        internalCounters.push_back(19857);
        internalCounters.push_back(19976);
        internalCounters.push_back(20095);
        internalCounters.push_back(20214);
        internalCounters.push_back(20333);
        internalCounters.push_back(20452);
        internalCounters.push_back(20571);
        internalCounters.push_back(20690);
        internalCounters.push_back(20809);
        internalCounters.push_back(20928);
        internalCounters.push_back(21047);
        internalCounters.push_back(21166);
        internalCounters.push_back(21285);
        internalCounters.push_back(21404);
        internalCounters.push_back(21523);
        internalCounters.push_back(21642);
        internalCounters.push_back(21761);
        internalCounters.push_back(21880);
        internalCounters.push_back(21999);
        internalCounters.push_back(22118);
        internalCounters.push_back(22237);
        internalCounters.push_back(22356);
        internalCounters.push_back(22475);
        internalCounters.push_back(22594);
        internalCounters.push_back(22713);
        internalCounters.push_back(22832);
        internalCounters.push_back(22951);
        internalCounters.push_back(23070);
        internalCounters.push_back(23189);
        internalCounters.push_back(23308);
        internalCounters.push_back(23427);
        internalCounters.push_back(23546);
        internalCounters.push_back(23665);
        internalCounters.push_back(23784);
        internalCounters.push_back(23903);
        internalCounters.push_back(24022);
        internalCounters.push_back(24141);
        internalCounters.push_back(24260);
        internalCounters.push_back(24379);
        internalCounters.push_back(24498);
        internalCounters.push_back(24617);
        internalCounters.push_back(24736);
        internalCounters.push_back(24855);
        internalCounters.push_back(24974);
        internalCounters.push_back(25093);
        internalCounters.push_back(25212);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17714);
        internalCounters.push_back(17833);
        internalCounters.push_back(17952);
        internalCounters.push_back(18071);
        internalCounters.push_back(18190);
        internalCounters.push_back(18309);
        internalCounters.push_back(18428);
        internalCounters.push_back(18547);
        internalCounters.push_back(18666);
        internalCounters.push_back(18785);
        internalCounters.push_back(18904);
        internalCounters.push_back(19023);
        internalCounters.push_back(19142);
        internalCounters.push_back(19261);
        internalCounters.push_back(19380);
        internalCounters.push_back(19499);
        internalCounters.push_back(19618);
        internalCounters.push_back(19737);
        internalCounters.push_back(19856);
        internalCounters.push_back(19975);
        internalCounters.push_back(20094);
        internalCounters.push_back(20213);
        internalCounters.push_back(20332);
        internalCounters.push_back(20451);
        internalCounters.push_back(20570);
        internalCounters.push_back(20689);
        internalCounters.push_back(20808);
        internalCounters.push_back(20927);
        internalCounters.push_back(21046);
        internalCounters.push_back(21165);
        internalCounters.push_back(21284);
        internalCounters.push_back(21403);
        internalCounters.push_back(21522);
        internalCounters.push_back(21641);
        internalCounters.push_back(21760);
        internalCounters.push_back(21879);
        internalCounters.push_back(21998);
        internalCounters.push_back(22117);
        internalCounters.push_back(22236);
        internalCounters.push_back(22355);
        internalCounters.push_back(22474);
        internalCounters.push_back(22593);
        internalCounters.push_back(22712);
        internalCounters.push_back(22831);
        internalCounters.push_back(22950);
        internalCounters.push_back(23069);
        internalCounters.push_back(23188);
        internalCounters.push_back(23307);
        internalCounters.push_back(23426);
        internalCounters.push_back(23545);
        internalCounters.push_back(23664);
        internalCounters.push_back(23783);
        internalCounters.push_back(23902);
        internalCounters.push_back(24021);
        internalCounters.push_back(24140);
        internalCounters.push_back(24259);
        internalCounters.push_back(24378);
        internalCounters.push_back(24497);
        internalCounters.push_back(24616);
        internalCounters.push_back(24735);
        internalCounters.push_back(24854);
        internalCounters.push_back(24973);
        internalCounters.push_back(25092);
        internalCounters.push_back(25211);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17733);
        internalCounters.push_back(17852);
        internalCounters.push_back(17971);
        internalCounters.push_back(18090);
        internalCounters.push_back(18209);
        internalCounters.push_back(18328);
        internalCounters.push_back(18447);
        internalCounters.push_back(18566);
        internalCounters.push_back(18685);
        internalCounters.push_back(18804);
        internalCounters.push_back(18923);
        internalCounters.push_back(19042);
        internalCounters.push_back(19161);
        internalCounters.push_back(19280);
        internalCounters.push_back(19399);
        internalCounters.push_back(19518);
        internalCounters.push_back(19637);
        internalCounters.push_back(19756);
        internalCounters.push_back(19875);
        internalCounters.push_back(19994);
        internalCounters.push_back(20113);
        internalCounters.push_back(20232);
        internalCounters.push_back(20351);
        internalCounters.push_back(20470);
        internalCounters.push_back(20589);
        internalCounters.push_back(20708);
        internalCounters.push_back(20827);
        internalCounters.push_back(20946);
        internalCounters.push_back(21065);
        internalCounters.push_back(21184);
        internalCounters.push_back(21303);
        internalCounters.push_back(21422);
        internalCounters.push_back(21541);
        internalCounters.push_back(21660);
        internalCounters.push_back(21779);
        internalCounters.push_back(21898);
        internalCounters.push_back(22017);
        internalCounters.push_back(22136);
        internalCounters.push_back(22255);
        internalCounters.push_back(22374);
        internalCounters.push_back(22493);
        internalCounters.push_back(22612);
        internalCounters.push_back(22731);
        internalCounters.push_back(22850);
        internalCounters.push_back(22969);
        internalCounters.push_back(23088);
        internalCounters.push_back(23207);
        internalCounters.push_back(23326);
        internalCounters.push_back(23445);
        internalCounters.push_back(23564);
        internalCounters.push_back(23683);
        internalCounters.push_back(23802);
        internalCounters.push_back(23921);
        internalCounters.push_back(24040);
        internalCounters.push_back(24159);
        internalCounters.push_back(24278);
        internalCounters.push_back(24397);
        internalCounters.push_back(24516);
        internalCounters.push_back(24635);
        internalCounters.push_back(24754);
        internalCounters.push_back(24873);
        internalCounters.push_back(24992);
        internalCounters.push_back(25111);
        internalCounters.push_back(25230);
        internalCounters.push_back(17734);
        internalCounters.push_back(17853);
        internalCounters.push_back(17972);
        internalCounters.push_back(18091);
        internalCounters.push_back(18210);
        internalCounters.push_back(18329);
        internalCounters.push_back(18448);
        internalCounters.push_back(18567);
        internalCounters.push_back(18686);
        internalCounters.push_back(18805);
        internalCounters.push_back(18924);
        internalCounters.push_back(19043);
        internalCounters.push_back(19162);
        internalCounters.push_back(19281);
        internalCounters.push_back(19400);
        internalCounters.push_back(19519);
        internalCounters.push_back(19638);
        internalCounters.push_back(19757);
        internalCounters.push_back(19876);
        internalCounters.push_back(19995);
        internalCounters.push_back(20114);
        internalCounters.push_back(20233);
        internalCounters.push_back(20352);
        internalCounters.push_back(20471);
        internalCounters.push_back(20590);
        internalCounters.push_back(20709);
        internalCounters.push_back(20828);
        internalCounters.push_back(20947);
        internalCounters.push_back(21066);
        internalCounters.push_back(21185);
        internalCounters.push_back(21304);
        internalCounters.push_back(21423);
        internalCounters.push_back(21542);
        internalCounters.push_back(21661);
        internalCounters.push_back(21780);
        internalCounters.push_back(21899);
        internalCounters.push_back(22018);
        internalCounters.push_back(22137);
        internalCounters.push_back(22256);
        internalCounters.push_back(22375);
        internalCounters.push_back(22494);
        internalCounters.push_back(22613);
        internalCounters.push_back(22732);
        internalCounters.push_back(22851);
        internalCounters.push_back(22970);
        internalCounters.push_back(23089);
        internalCounters.push_back(23208);
        internalCounters.push_back(23327);
        internalCounters.push_back(23446);
        internalCounters.push_back(23565);
        internalCounters.push_back(23684);
        internalCounters.push_back(23803);
        internalCounters.push_back(23922);
        internalCounters.push_back(24041);
        internalCounters.push_back(24160);
        internalCounters.push_back(24279);
        internalCounters.push_back(24398);
        internalCounters.push_back(24517);
        internalCounters.push_back(24636);
        internalCounters.push_back(24755);
        internalCounters.push_back(24874);
        internalCounters.push_back(24993);
        internalCounters.push_back(25112);
        internalCounters.push_back(25231);
        internalCounters.push_back(17735);
        internalCounters.push_back(17854);
        internalCounters.push_back(17973);
        internalCounters.push_back(18092);
        internalCounters.push_back(18211);
        internalCounters.push_back(18330);
        internalCounters.push_back(18449);
        internalCounters.push_back(18568);
        internalCounters.push_back(18687);
        internalCounters.push_back(18806);
        internalCounters.push_back(18925);
        internalCounters.push_back(19044);
        internalCounters.push_back(19163);
        internalCounters.push_back(19282);
        internalCounters.push_back(19401);
        internalCounters.push_back(19520);
        internalCounters.push_back(19639);
        internalCounters.push_back(19758);
        internalCounters.push_back(19877);
        internalCounters.push_back(19996);
        internalCounters.push_back(20115);
        internalCounters.push_back(20234);
        internalCounters.push_back(20353);
        internalCounters.push_back(20472);
        internalCounters.push_back(20591);
        internalCounters.push_back(20710);
        internalCounters.push_back(20829);
        internalCounters.push_back(20948);
        internalCounters.push_back(21067);
        internalCounters.push_back(21186);
        internalCounters.push_back(21305);
        internalCounters.push_back(21424);
        internalCounters.push_back(21543);
        internalCounters.push_back(21662);
        internalCounters.push_back(21781);
        internalCounters.push_back(21900);
        internalCounters.push_back(22019);
        internalCounters.push_back(22138);
        internalCounters.push_back(22257);
        internalCounters.push_back(22376);
        internalCounters.push_back(22495);
        internalCounters.push_back(22614);
        internalCounters.push_back(22733);
        internalCounters.push_back(22852);
        internalCounters.push_back(22971);
        internalCounters.push_back(23090);
        internalCounters.push_back(23209);
        internalCounters.push_back(23328);
        internalCounters.push_back(23447);
        internalCounters.push_back(23566);
        internalCounters.push_back(23685);
        internalCounters.push_back(23804);
        internalCounters.push_back(23923);
        internalCounters.push_back(24042);
        internalCounters.push_back(24161);
        internalCounters.push_back(24280);
        internalCounters.push_back(24399);
        internalCounters.push_back(24518);
        internalCounters.push_back(24637);
        internalCounters.push_back(24756);
        internalCounters.push_back(24875);
        internalCounters.push_back(24994);
        internalCounters.push_back(25113);
        internalCounters.push_back(25232);
        internalCounters.push_back(17736);
        internalCounters.push_back(17855);
        internalCounters.push_back(17974);
        internalCounters.push_back(18093);
        internalCounters.push_back(18212);
        internalCounters.push_back(18331);
        internalCounters.push_back(18450);
        internalCounters.push_back(18569);
        internalCounters.push_back(18688);
        internalCounters.push_back(18807);
        internalCounters.push_back(18926);
        internalCounters.push_back(19045);
        internalCounters.push_back(19164);
        internalCounters.push_back(19283);
        internalCounters.push_back(19402);
        internalCounters.push_back(19521);
        internalCounters.push_back(19640);
        internalCounters.push_back(19759);
        internalCounters.push_back(19878);
        internalCounters.push_back(19997);
        internalCounters.push_back(20116);
        internalCounters.push_back(20235);
        internalCounters.push_back(20354);
        internalCounters.push_back(20473);
        internalCounters.push_back(20592);
        internalCounters.push_back(20711);
        internalCounters.push_back(20830);
        internalCounters.push_back(20949);
        internalCounters.push_back(21068);
        internalCounters.push_back(21187);
        internalCounters.push_back(21306);
        internalCounters.push_back(21425);
        internalCounters.push_back(21544);
        internalCounters.push_back(21663);
        internalCounters.push_back(21782);
        internalCounters.push_back(21901);
        internalCounters.push_back(22020);
        internalCounters.push_back(22139);
        internalCounters.push_back(22258);
        internalCounters.push_back(22377);
        internalCounters.push_back(22496);
        internalCounters.push_back(22615);
        internalCounters.push_back(22734);
        internalCounters.push_back(22853);
        internalCounters.push_back(22972);
        internalCounters.push_back(23091);
        internalCounters.push_back(23210);
        internalCounters.push_back(23329);
        internalCounters.push_back(23448);
        internalCounters.push_back(23567);
        internalCounters.push_back(23686);
        internalCounters.push_back(23805);
        internalCounters.push_back(23924);
        internalCounters.push_back(24043);
        internalCounters.push_back(24162);
        internalCounters.push_back(24281);
        internalCounters.push_back(24400);
        internalCounters.push_back(24519);
        internalCounters.push_back(24638);
        internalCounters.push_back(24757);
        internalCounters.push_back(24876);
        internalCounters.push_back(24995);
        internalCounters.push_back(25114);
        internalCounters.push_back(25233);
        internalCounters.push_back(17737);
        internalCounters.push_back(17856);
        internalCounters.push_back(17975);
        internalCounters.push_back(18094);
        internalCounters.push_back(18213);
        internalCounters.push_back(18332);
        internalCounters.push_back(18451);
        internalCounters.push_back(18570);
        internalCounters.push_back(18689);
        internalCounters.push_back(18808);
        internalCounters.push_back(18927);
        internalCounters.push_back(19046);
        internalCounters.push_back(19165);
        internalCounters.push_back(19284);
        internalCounters.push_back(19403);
        internalCounters.push_back(19522);
        internalCounters.push_back(19641);
        internalCounters.push_back(19760);
        internalCounters.push_back(19879);
        internalCounters.push_back(19998);
        internalCounters.push_back(20117);
        internalCounters.push_back(20236);
        internalCounters.push_back(20355);
        internalCounters.push_back(20474);
        internalCounters.push_back(20593);
        internalCounters.push_back(20712);
        internalCounters.push_back(20831);
        internalCounters.push_back(20950);
        internalCounters.push_back(21069);
        internalCounters.push_back(21188);
        internalCounters.push_back(21307);
        internalCounters.push_back(21426);
        internalCounters.push_back(21545);
        internalCounters.push_back(21664);
        internalCounters.push_back(21783);
        internalCounters.push_back(21902);
        internalCounters.push_back(22021);
        internalCounters.push_back(22140);
        internalCounters.push_back(22259);
        internalCounters.push_back(22378);
        internalCounters.push_back(22497);
        internalCounters.push_back(22616);
        internalCounters.push_back(22735);
        internalCounters.push_back(22854);
        internalCounters.push_back(22973);
        internalCounters.push_back(23092);
        internalCounters.push_back(23211);
        internalCounters.push_back(23330);
        internalCounters.push_back(23449);
        internalCounters.push_back(23568);
        internalCounters.push_back(23687);
        internalCounters.push_back(23806);
        internalCounters.push_back(23925);
        internalCounters.push_back(24044);
        internalCounters.push_back(24163);
        internalCounters.push_back(24282);
        internalCounters.push_back(24401);
        internalCounters.push_back(24520);
        internalCounters.push_back(24639);
        internalCounters.push_back(24758);
        internalCounters.push_back(24877);
        internalCounters.push_back(24996);
        internalCounters.push_back(25115);
        internalCounters.push_back(25234);
        internalCounters.push_back(17738);
        internalCounters.push_back(17857);
        internalCounters.push_back(17976);
        internalCounters.push_back(18095);
        internalCounters.push_back(18214);
        internalCounters.push_back(18333);
        internalCounters.push_back(18452);
        internalCounters.push_back(18571);
        internalCounters.push_back(18690);
        internalCounters.push_back(18809);
        internalCounters.push_back(18928);
        internalCounters.push_back(19047);
        internalCounters.push_back(19166);
        internalCounters.push_back(19285);
        internalCounters.push_back(19404);
        internalCounters.push_back(19523);
        internalCounters.push_back(19642);
        internalCounters.push_back(19761);
        internalCounters.push_back(19880);
        internalCounters.push_back(19999);
        internalCounters.push_back(20118);
        internalCounters.push_back(20237);
        internalCounters.push_back(20356);
        internalCounters.push_back(20475);
        internalCounters.push_back(20594);
        internalCounters.push_back(20713);
        internalCounters.push_back(20832);
        internalCounters.push_back(20951);
        internalCounters.push_back(21070);
        internalCounters.push_back(21189);
        internalCounters.push_back(21308);
        internalCounters.push_back(21427);
        internalCounters.push_back(21546);
        internalCounters.push_back(21665);
        internalCounters.push_back(21784);
        internalCounters.push_back(21903);
        internalCounters.push_back(22022);
        internalCounters.push_back(22141);
        internalCounters.push_back(22260);
        internalCounters.push_back(22379);
        internalCounters.push_back(22498);
        internalCounters.push_back(22617);
        internalCounters.push_back(22736);
        internalCounters.push_back(22855);
        internalCounters.push_back(22974);
        internalCounters.push_back(23093);
        internalCounters.push_back(23212);
        internalCounters.push_back(23331);
        internalCounters.push_back(23450);
        internalCounters.push_back(23569);
        internalCounters.push_back(23688);
        internalCounters.push_back(23807);
        internalCounters.push_back(23926);
        internalCounters.push_back(24045);
        internalCounters.push_back(24164);
        internalCounters.push_back(24283);
        internalCounters.push_back(24402);
        internalCounters.push_back(24521);
        internalCounters.push_back(24640);
        internalCounters.push_back(24759);
        internalCounters.push_back(24878);
        internalCounters.push_back(24997);
        internalCounters.push_back(25116);
        internalCounters.push_back(25235);
        internalCounters.push_back(17739);
        internalCounters.push_back(17858);
        internalCounters.push_back(17977);
        internalCounters.push_back(18096);
        internalCounters.push_back(18215);
        internalCounters.push_back(18334);
        internalCounters.push_back(18453);
        internalCounters.push_back(18572);
        internalCounters.push_back(18691);
        internalCounters.push_back(18810);
        internalCounters.push_back(18929);
        internalCounters.push_back(19048);
        internalCounters.push_back(19167);
        internalCounters.push_back(19286);
        internalCounters.push_back(19405);
        internalCounters.push_back(19524);
        internalCounters.push_back(19643);
        internalCounters.push_back(19762);
        internalCounters.push_back(19881);
        internalCounters.push_back(20000);
        internalCounters.push_back(20119);
        internalCounters.push_back(20238);
        internalCounters.push_back(20357);
        internalCounters.push_back(20476);
        internalCounters.push_back(20595);
        internalCounters.push_back(20714);
        internalCounters.push_back(20833);
        internalCounters.push_back(20952);
        internalCounters.push_back(21071);
        internalCounters.push_back(21190);
        internalCounters.push_back(21309);
        internalCounters.push_back(21428);
        internalCounters.push_back(21547);
        internalCounters.push_back(21666);
        internalCounters.push_back(21785);
        internalCounters.push_back(21904);
        internalCounters.push_back(22023);
        internalCounters.push_back(22142);
        internalCounters.push_back(22261);
        internalCounters.push_back(22380);
        internalCounters.push_back(22499);
        internalCounters.push_back(22618);
        internalCounters.push_back(22737);
        internalCounters.push_back(22856);
        internalCounters.push_back(22975);
        internalCounters.push_back(23094);
        internalCounters.push_back(23213);
        internalCounters.push_back(23332);
        internalCounters.push_back(23451);
        internalCounters.push_back(23570);
        internalCounters.push_back(23689);
        internalCounters.push_back(23808);
        internalCounters.push_back(23927);
        internalCounters.push_back(24046);
        internalCounters.push_back(24165);
        internalCounters.push_back(24284);
        internalCounters.push_back(24403);
        internalCounters.push_back(24522);
        internalCounters.push_back(24641);
        internalCounters.push_back(24760);
        internalCounters.push_back(24879);
        internalCounters.push_back(24998);
        internalCounters.push_back(25117);
        internalCounters.push_back(25236);
        internalCounters.push_back(17740);
        internalCounters.push_back(17859);
        internalCounters.push_back(17978);
        internalCounters.push_back(18097);
        internalCounters.push_back(18216);
        internalCounters.push_back(18335);
        internalCounters.push_back(18454);
        internalCounters.push_back(18573);
        internalCounters.push_back(18692);
        internalCounters.push_back(18811);
        internalCounters.push_back(18930);
        internalCounters.push_back(19049);
        internalCounters.push_back(19168);
        internalCounters.push_back(19287);
        internalCounters.push_back(19406);
        internalCounters.push_back(19525);
        internalCounters.push_back(19644);
        internalCounters.push_back(19763);
        internalCounters.push_back(19882);
        internalCounters.push_back(20001);
        internalCounters.push_back(20120);
        internalCounters.push_back(20239);
        internalCounters.push_back(20358);
        internalCounters.push_back(20477);
        internalCounters.push_back(20596);
        internalCounters.push_back(20715);
        internalCounters.push_back(20834);
        internalCounters.push_back(20953);
        internalCounters.push_back(21072);
        internalCounters.push_back(21191);
        internalCounters.push_back(21310);
        internalCounters.push_back(21429);
        internalCounters.push_back(21548);
        internalCounters.push_back(21667);
        internalCounters.push_back(21786);
        internalCounters.push_back(21905);
        internalCounters.push_back(22024);
        internalCounters.push_back(22143);
        internalCounters.push_back(22262);
        internalCounters.push_back(22381);
        internalCounters.push_back(22500);
        internalCounters.push_back(22619);
        internalCounters.push_back(22738);
        internalCounters.push_back(22857);
        internalCounters.push_back(22976);
        internalCounters.push_back(23095);
        internalCounters.push_back(23214);
        internalCounters.push_back(23333);
        internalCounters.push_back(23452);
        internalCounters.push_back(23571);
        internalCounters.push_back(23690);
        internalCounters.push_back(23809);
        internalCounters.push_back(23928);
        internalCounters.push_back(24047);
        internalCounters.push_back(24166);
        internalCounters.push_back(24285);
        internalCounters.push_back(24404);
        internalCounters.push_back(24523);
        internalCounters.push_back(24642);
        internalCounters.push_back(24761);
        internalCounters.push_back(24880);
        internalCounters.push_back(24999);
        internalCounters.push_back(25118);
        internalCounters.push_back(25237);
        internalCounters.push_back(17741);
        internalCounters.push_back(17860);
        internalCounters.push_back(17979);
        internalCounters.push_back(18098);
        internalCounters.push_back(18217);
        internalCounters.push_back(18336);
        internalCounters.push_back(18455);
        internalCounters.push_back(18574);
        internalCounters.push_back(18693);
        internalCounters.push_back(18812);
        internalCounters.push_back(18931);
        internalCounters.push_back(19050);
        internalCounters.push_back(19169);
        internalCounters.push_back(19288);
        internalCounters.push_back(19407);
        internalCounters.push_back(19526);
        internalCounters.push_back(19645);
        internalCounters.push_back(19764);
        internalCounters.push_back(19883);
        internalCounters.push_back(20002);
        internalCounters.push_back(20121);
        internalCounters.push_back(20240);
        internalCounters.push_back(20359);
        internalCounters.push_back(20478);
        internalCounters.push_back(20597);
        internalCounters.push_back(20716);
        internalCounters.push_back(20835);
        internalCounters.push_back(20954);
        internalCounters.push_back(21073);
        internalCounters.push_back(21192);
        internalCounters.push_back(21311);
        internalCounters.push_back(21430);
        internalCounters.push_back(21549);
        internalCounters.push_back(21668);
        internalCounters.push_back(21787);
        internalCounters.push_back(21906);
        internalCounters.push_back(22025);
        internalCounters.push_back(22144);
        internalCounters.push_back(22263);
        internalCounters.push_back(22382);
        internalCounters.push_back(22501);
        internalCounters.push_back(22620);
        internalCounters.push_back(22739);
        internalCounters.push_back(22858);
        internalCounters.push_back(22977);
        internalCounters.push_back(23096);
        internalCounters.push_back(23215);
        internalCounters.push_back(23334);
        internalCounters.push_back(23453);
        internalCounters.push_back(23572);
        internalCounters.push_back(23691);
        internalCounters.push_back(23810);
        internalCounters.push_back(23929);
        internalCounters.push_back(24048);
        internalCounters.push_back(24167);
        internalCounters.push_back(24286);
        internalCounters.push_back(24405);
        internalCounters.push_back(24524);
        internalCounters.push_back(24643);
        internalCounters.push_back(24762);
        internalCounters.push_back(24881);
        internalCounters.push_back(25000);
        internalCounters.push_back(25119);
        internalCounters.push_back(25238);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(2),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,*,+,(4),128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,*,+,(6),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,*,+,(8),256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,*,+,(10),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,*,+,(12),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,*,+,(14),448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,*,+,(16),512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,+,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,+,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,+,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,+,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39074);
        internalCounters.push_back(39402);
        internalCounters.push_back(39730);
        internalCounters.push_back(40058);
        internalCounters.push_back(40386);
        internalCounters.push_back(40714);
        internalCounters.push_back(41042);
        internalCounters.push_back(41370);
        internalCounters.push_back(41698);
        internalCounters.push_back(42026);
        internalCounters.push_back(42354);
        internalCounters.push_back(42682);
        internalCounters.push_back(43010);
        internalCounters.push_back(43338);
        internalCounters.push_back(43666);
        internalCounters.push_back(43994);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39074);
        internalCounters.push_back(39402);
        internalCounters.push_back(39730);
        internalCounters.push_back(40058);
        internalCounters.push_back(40386);
        internalCounters.push_back(40714);
        internalCounters.push_back(41042);
        internalCounters.push_back(41370);
        internalCounters.push_back(41698);
        internalCounters.push_back(42026);
        internalCounters.push_back(42354);
        internalCounters.push_back(42682);
        internalCounters.push_back(43010);
        internalCounters.push_back(43338);
        internalCounters.push_back(43666);
        internalCounters.push_back(43994);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38945);
        internalCounters.push_back(39273);
        internalCounters.push_back(39601);
        internalCounters.push_back(39929);
        internalCounters.push_back(40257);
        internalCounters.push_back(40585);
        internalCounters.push_back(40913);
        internalCounters.push_back(41241);
        internalCounters.push_back(41569);
        internalCounters.push_back(41897);
        internalCounters.push_back(42225);
        internalCounters.push_back(42553);
        internalCounters.push_back(42881);
        internalCounters.push_back(43209);
        internalCounters.push_back(43537);
        internalCounters.push_back(43865);
        internalCounters.push_back(38934);
        internalCounters.push_back(39262);
        internalCounters.push_back(39590);
        internalCounters.push_back(39918);
        internalCounters.push_back(40246);
        internalCounters.push_back(40574);
        internalCounters.push_back(40902);
        internalCounters.push_back(41230);
        internalCounters.push_back(41558);
        internalCounters.push_back(41886);
        internalCounters.push_back(42214);
        internalCounters.push_back(42542);
        internalCounters.push_back(42870);
        internalCounters.push_back(43198);
        internalCounters.push_back(43526);
        internalCounters.push_back(43854);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38945);
        internalCounters.push_back(39273);
        internalCounters.push_back(39601);
        internalCounters.push_back(39929);
        internalCounters.push_back(40257);
        internalCounters.push_back(40585);
        internalCounters.push_back(40913);
        internalCounters.push_back(41241);
        internalCounters.push_back(41569);
        internalCounters.push_back(41897);
        internalCounters.push_back(42225);
        internalCounters.push_back(42553);
        internalCounters.push_back(42881);
        internalCounters.push_back(43209);
        internalCounters.push_back(43537);
        internalCounters.push_back(43865);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38934);
        internalCounters.push_back(39262);
        internalCounters.push_back(39590);
        internalCounters.push_back(39918);
        internalCounters.push_back(40246);
        internalCounters.push_back(40574);
        internalCounters.push_back(40902);
        internalCounters.push_back(41230);
        internalCounters.push_back(41558);
        internalCounters.push_back(41886);
        internalCounters.push_back(42214);
        internalCounters.push_back(42542);
        internalCounters.push_back(42870);
        internalCounters.push_back(43198);
        internalCounters.push_back(43526);
        internalCounters.push_back(43854);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38934);
        internalCounters.push_back(39262);
        internalCounters.push_back(39590);
        internalCounters.push_back(39918);
        internalCounters.push_back(40246);
        internalCounters.push_back(40574);
        internalCounters.push_back(40902);
        internalCounters.push_back(41230);
        internalCounters.push_back(41558);
        internalCounters.push_back(41886);
        internalCounters.push_back(42214);
        internalCounters.push_back(42542);
        internalCounters.push_back(42870);
        internalCounters.push_back(43198);
        internalCounters.push_back(43526);
        internalCounters.push_back(43854);
        internalCounters.push_back(38958);
        internalCounters.push_back(39286);
        internalCounters.push_back(39614);
        internalCounters.push_back(39942);
        internalCounters.push_back(40270);
        internalCounters.push_back(40598);
        internalCounters.push_back(40926);
        internalCounters.push_back(41254);
        internalCounters.push_back(41582);
        internalCounters.push_back(41910);
        internalCounters.push_back(42238);
        internalCounters.push_back(42566);
        internalCounters.push_back(42894);
        internalCounters.push_back(43222);
        internalCounters.push_back(43550);
        internalCounters.push_back(43878);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38958);
        internalCounters.push_back(39286);
        internalCounters.push_back(39614);
        internalCounters.push_back(39942);
        internalCounters.push_back(40270);
        internalCounters.push_back(40598);
        internalCounters.push_back(40926);
        internalCounters.push_back(41254);
        internalCounters.push_back(41582);
        internalCounters.push_back(41910);
        internalCounters.push_back(42238);
        internalCounters.push_back(42566);
        internalCounters.push_back(42894);
        internalCounters.push_back(43222);
        internalCounters.push_back(43550);
        internalCounters.push_back(43878);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38934);
        internalCounters.push_back(39262);
        internalCounters.push_back(39590);
        internalCounters.push_back(39918);
        internalCounters.push_back(40246);
        internalCounters.push_back(40574);
        internalCounters.push_back(40902);
        internalCounters.push_back(41230);
        internalCounters.push_back(41558);
        internalCounters.push_back(41886);
        internalCounters.push_back(42214);
        internalCounters.push_back(42542);
        internalCounters.push_back(42870);
        internalCounters.push_back(43198);
        internalCounters.push_back(43526);
        internalCounters.push_back(43854);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2251);
        internalCounters.push_back(2743);
        internalCounters.push_back(3235);
        internalCounters.push_back(3727);
        internalCounters.push_back(2252);
        internalCounters.push_back(2744);
        internalCounters.push_back(3236);
        internalCounters.push_back(3728);
        internalCounters.push_back(2253);
        internalCounters.push_back(2745);
        internalCounters.push_back(3237);
        internalCounters.push_back(3729);
        internalCounters.push_back(2254);
        internalCounters.push_back(2746);
        internalCounters.push_back(3238);
        internalCounters.push_back(3730);
        internalCounters.push_back(2327);
        internalCounters.push_back(2819);
        internalCounters.push_back(3311);
        internalCounters.push_back(3803);
        internalCounters.push_back(2328);
        internalCounters.push_back(2820);
        internalCounters.push_back(3312);
        internalCounters.push_back(3804);
        internalCounters.push_back(2329);
        internalCounters.push_back(2821);
        internalCounters.push_back(3313);
        internalCounters.push_back(3805);
        internalCounters.push_back(2330);
        internalCounters.push_back(2822);
        internalCounters.push_back(3314);
        internalCounters.push_back(3806);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2251);
        internalCounters.push_back(2743);
        internalCounters.push_back(3235);
        internalCounters.push_back(3727);
        internalCounters.push_back(2252);
        internalCounters.push_back(2744);
        internalCounters.push_back(3236);
        internalCounters.push_back(3728);
        internalCounters.push_back(2253);
        internalCounters.push_back(2745);
        internalCounters.push_back(3237);
        internalCounters.push_back(3729);
        internalCounters.push_back(2254);
        internalCounters.push_back(2746);
        internalCounters.push_back(3238);
        internalCounters.push_back(3730);
        internalCounters.push_back(2327);
        internalCounters.push_back(2819);
        internalCounters.push_back(3311);
        internalCounters.push_back(3803);
        internalCounters.push_back(2328);
        internalCounters.push_back(2820);
        internalCounters.push_back(3312);
        internalCounters.push_back(3804);
        internalCounters.push_back(2329);
        internalCounters.push_back(2821);
        internalCounters.push_back(3313);
        internalCounters.push_back(3805);
        internalCounters.push_back(2330);
        internalCounters.push_back(2822);
        internalCounters.push_back(3314);
        internalCounters.push_back(3806);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2327);
        internalCounters.push_back(2819);
        internalCounters.push_back(3311);
        internalCounters.push_back(3803);
        internalCounters.push_back(2328);
        internalCounters.push_back(2820);
        internalCounters.push_back(3312);
        internalCounters.push_back(3804);
        internalCounters.push_back(2329);
        internalCounters.push_back(2821);
        internalCounters.push_back(3313);
        internalCounters.push_back(3805);
        internalCounters.push_back(2330);
        internalCounters.push_back(2822);
        internalCounters.push_back(3314);
        internalCounters.push_back(3806);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2251);
        internalCounters.push_back(2743);
        internalCounters.push_back(3235);
        internalCounters.push_back(3727);
        internalCounters.push_back(2252);
        internalCounters.push_back(2744);
        internalCounters.push_back(3236);
        internalCounters.push_back(3728);
        internalCounters.push_back(2253);
        internalCounters.push_back(2745);
        internalCounters.push_back(3237);
        internalCounters.push_back(3729);
        internalCounters.push_back(2254);
        internalCounters.push_back(2746);
        internalCounters.push_back(3238);
        internalCounters.push_back(3730);
        internalCounters.push_back(2351);
        internalCounters.push_back(2843);
        internalCounters.push_back(3335);
        internalCounters.push_back(3827);
        internalCounters.push_back(2327);
        internalCounters.push_back(2819);
        internalCounters.push_back(3311);
        internalCounters.push_back(3803);
        internalCounters.push_back(2328);
        internalCounters.push_back(2820);
        internalCounters.push_back(3312);
        internalCounters.push_back(3804);
        internalCounters.push_back(2329);
        internalCounters.push_back(2821);
        internalCounters.push_back(3313);
        internalCounters.push_back(3805);
        internalCounters.push_back(2330);
        internalCounters.push_back(2822);
        internalCounters.push_back(3314);
        internalCounters.push_back(3806);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,16,17,18,19,sum4,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2251);
        internalCounters.push_back(2743);
        internalCounters.push_back(3235);
        internalCounters.push_back(3727);
        internalCounters.push_back(2252);
        internalCounters.push_back(2744);
        internalCounters.push_back(3236);
        internalCounters.push_back(3728);
        internalCounters.push_back(2253);
        internalCounters.push_back(2745);
        internalCounters.push_back(3237);
        internalCounters.push_back(3729);
        internalCounters.push_back(2254);
        internalCounters.push_back(2746);
        internalCounters.push_back(3238);
        internalCounters.push_back(3730);
        internalCounters.push_back(2351);
        internalCounters.push_back(2843);
        internalCounters.push_back(3335);
        internalCounters.push_back(3827);
        internalCounters.push_back(2327);
        internalCounters.push_back(2819);
        internalCounters.push_back(3311);
        internalCounters.push_back(3803);
        internalCounters.push_back(2328);
        internalCounters.push_back(2820);
        internalCounters.push_back(3312);
        internalCounters.push_back(3804);
        internalCounters.push_back(2329);
        internalCounters.push_back(2821);
        internalCounters.push_back(3313);
        internalCounters.push_back(3805);
        internalCounters.push_back(2330);
        internalCounters.push_back(2822);
        internalCounters.push_back(3314);
        internalCounters.push_back(3806);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,sum4,-,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2351);
        internalCounters.push_back(2843);
        internalCounters.push_back(3335);
        internalCounters.push_back(3827);
        internalCounters.push_back(2327);
        internalCounters.push_back(2819);
        internalCounters.push_back(3311);
        internalCounters.push_back(3803);
        internalCounters.push_back(2328);
        internalCounters.push_back(2820);
        internalCounters.push_back(3312);
        internalCounters.push_back(3804);
        internalCounters.push_back(2329);
        internalCounters.push_back(2821);
        internalCounters.push_back(3313);
        internalCounters.push_back(3805);
        internalCounters.push_back(2330);
        internalCounters.push_back(2822);
        internalCounters.push_back(3314);
        internalCounters.push_back(3806);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,0,1,2,3,sum4,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2351);
        internalCounters.push_back(2843);
        internalCounters.push_back(3335);
        internalCounters.push_back(3827);
        internalCounters.push_back(2251);
        internalCounters.push_back(2743);
        internalCounters.push_back(3235);
        internalCounters.push_back(3727);
        internalCounters.push_back(2252);
        internalCounters.push_back(2744);
        internalCounters.push_back(3236);
        internalCounters.push_back(3728);
        internalCounters.push_back(2253);
        internalCounters.push_back(2745);
        internalCounters.push_back(3237);
        internalCounters.push_back(3729);
        internalCounters.push_back(2254);
        internalCounters.push_back(2746);
        internalCounters.push_back(3238);
        internalCounters.push_back(3730);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2351);
        internalCounters.push_back(2843);
        internalCounters.push_back(3335);
        internalCounters.push_back(3827);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39107);
        internalCounters.push_back(39435);
        internalCounters.push_back(39763);
        internalCounters.push_back(40091);
        internalCounters.push_back(40419);
        internalCounters.push_back(40747);
        internalCounters.push_back(41075);
        internalCounters.push_back(41403);
        internalCounters.push_back(41731);
        internalCounters.push_back(42059);
        internalCounters.push_back(42387);
        internalCounters.push_back(42715);
        internalCounters.push_back(43043);
        internalCounters.push_back(43371);
        internalCounters.push_back(43699);
        internalCounters.push_back(44027);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39109);
        internalCounters.push_back(39437);
        internalCounters.push_back(39765);
        internalCounters.push_back(40093);
        internalCounters.push_back(40421);
        internalCounters.push_back(40749);
        internalCounters.push_back(41077);
        internalCounters.push_back(41405);
        internalCounters.push_back(41733);
        internalCounters.push_back(42061);
        internalCounters.push_back(42389);
        internalCounters.push_back(42717);
        internalCounters.push_back(43045);
        internalCounters.push_back(43373);
        internalCounters.push_back(43701);
        internalCounters.push_back(44029);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39108);
        internalCounters.push_back(39436);
        internalCounters.push_back(39764);
        internalCounters.push_back(40092);
        internalCounters.push_back(40420);
        internalCounters.push_back(40748);
        internalCounters.push_back(41076);
        internalCounters.push_back(41404);
        internalCounters.push_back(41732);
        internalCounters.push_back(42060);
        internalCounters.push_back(42388);
        internalCounters.push_back(42716);
        internalCounters.push_back(43044);
        internalCounters.push_back(43372);
        internalCounters.push_back(43700);
        internalCounters.push_back(44028);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39104);
        internalCounters.push_back(39432);
        internalCounters.push_back(39760);
        internalCounters.push_back(40088);
        internalCounters.push_back(40416);
        internalCounters.push_back(40744);
        internalCounters.push_back(41072);
        internalCounters.push_back(41400);
        internalCounters.push_back(41728);
        internalCounters.push_back(42056);
        internalCounters.push_back(42384);
        internalCounters.push_back(42712);
        internalCounters.push_back(43040);
        internalCounters.push_back(43368);
        internalCounters.push_back(43696);
        internalCounters.push_back(44024);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39106);
        internalCounters.push_back(39434);
        internalCounters.push_back(39762);
        internalCounters.push_back(40090);
        internalCounters.push_back(40418);
        internalCounters.push_back(40746);
        internalCounters.push_back(41074);
        internalCounters.push_back(41402);
        internalCounters.push_back(41730);
        internalCounters.push_back(42058);
        internalCounters.push_back(42386);
        internalCounters.push_back(42714);
        internalCounters.push_back(43042);
        internalCounters.push_back(43370);
        internalCounters.push_back(43698);
        internalCounters.push_back(44026);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39105);
        internalCounters.push_back(39433);
        internalCounters.push_back(39761);
        internalCounters.push_back(40089);
        internalCounters.push_back(40417);
        internalCounters.push_back(40745);
        internalCounters.push_back(41073);
        internalCounters.push_back(41401);
        internalCounters.push_back(41729);
        internalCounters.push_back(42057);
        internalCounters.push_back(42385);
        internalCounters.push_back(42713);
        internalCounters.push_back(43041);
        internalCounters.push_back(43369);
        internalCounters.push_back(43697);
        internalCounters.push_back(44025);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38976);
        internalCounters.push_back(39304);
        internalCounters.push_back(39632);
        internalCounters.push_back(39960);
        internalCounters.push_back(40288);
        internalCounters.push_back(40616);
        internalCounters.push_back(40944);
        internalCounters.push_back(41272);
        internalCounters.push_back(41600);
        internalCounters.push_back(41928);
        internalCounters.push_back(42256);
        internalCounters.push_back(42584);
        internalCounters.push_back(42912);
        internalCounters.push_back(43240);
        internalCounters.push_back(43568);
        internalCounters.push_back(43896);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38976);
        internalCounters.push_back(39304);
        internalCounters.push_back(39632);
        internalCounters.push_back(39960);
        internalCounters.push_back(40288);
        internalCounters.push_back(40616);
        internalCounters.push_back(40944);
        internalCounters.push_back(41272);
        internalCounters.push_back(41600);
        internalCounters.push_back(41928);
        internalCounters.push_back(42256);
        internalCounters.push_back(42584);
        internalCounters.push_back(42912);
        internalCounters.push_back(43240);
        internalCounters.push_back(43568);
        internalCounters.push_back(43896);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38978);
        internalCounters.push_back(39306);
        internalCounters.push_back(39634);
        internalCounters.push_back(39962);
        internalCounters.push_back(40290);
        internalCounters.push_back(40618);
        internalCounters.push_back(40946);
        internalCounters.push_back(41274);
        internalCounters.push_back(41602);
        internalCounters.push_back(41930);
        internalCounters.push_back(42258);
        internalCounters.push_back(42586);
        internalCounters.push_back(42914);
        internalCounters.push_back(43242);
        internalCounters.push_back(43570);
        internalCounters.push_back(43898);
        internalCounters.push_back(38985);
        internalCounters.push_back(39313);
        internalCounters.push_back(39641);
        internalCounters.push_back(39969);
        internalCounters.push_back(40297);
        internalCounters.push_back(40625);
        internalCounters.push_back(40953);
        internalCounters.push_back(41281);
        internalCounters.push_back(41609);
        internalCounters.push_back(41937);
        internalCounters.push_back(42265);
        internalCounters.push_back(42593);
        internalCounters.push_back(42921);
        internalCounters.push_back(43249);
        internalCounters.push_back(43577);
        internalCounters.push_back(43905);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(38990);
        internalCounters.push_back(39318);
        internalCounters.push_back(39646);
        internalCounters.push_back(39974);
        internalCounters.push_back(40302);
        internalCounters.push_back(40630);
        internalCounters.push_back(40958);
        internalCounters.push_back(41286);
        internalCounters.push_back(41614);
        internalCounters.push_back(41942);
        internalCounters.push_back(42270);
        internalCounters.push_back(42598);
        internalCounters.push_back(42926);
        internalCounters.push_back(43254);
        internalCounters.push_back(43582);
        internalCounters.push_back(43910);
        internalCounters.push_back(38993);
        internalCounters.push_back(39321);
        internalCounters.push_back(39649);
        internalCounters.push_back(39977);
        internalCounters.push_back(40305);
        internalCounters.push_back(40633);
        internalCounters.push_back(40961);
        internalCounters.push_back(41289);
        internalCounters.push_back(41617);
        internalCounters.push_back(41945);
        internalCounters.push_back(42273);
        internalCounters.push_back(42601);
        internalCounters.push_back(42929);
        internalCounters.push_back(43257);
        internalCounters.push_back(43585);
        internalCounters.push_back(43913);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(44306);
        internalCounters.push_back(44744);
        internalCounters.push_back(45182);
        internalCounters.push_back(45620);
        internalCounters.push_back(46058);
        internalCounters.push_back(46496);
        internalCounters.push_back(46934);
        internalCounters.push_back(47372);
        internalCounters.push_back(47810);
        internalCounters.push_back(48248);
        internalCounters.push_back(48686);
        internalCounters.push_back(49124);
        internalCounters.push_back(49562);
        internalCounters.push_back(50000);
        internalCounters.push_back(50438);
        internalCounters.push_back(50876);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(44437);
        internalCounters.push_back(44875);
        internalCounters.push_back(45313);
        internalCounters.push_back(45751);
        internalCounters.push_back(46189);
        internalCounters.push_back(46627);
        internalCounters.push_back(47065);
        internalCounters.push_back(47503);
        internalCounters.push_back(47941);
        internalCounters.push_back(48379);
        internalCounters.push_back(48817);
        internalCounters.push_back(49255);
        internalCounters.push_back(49693);
        internalCounters.push_back(50131);
        internalCounters.push_back(50569);
        internalCounters.push_back(51007);
        internalCounters.push_back(44304);
        internalCounters.push_back(44742);
        internalCounters.push_back(45180);
        internalCounters.push_back(45618);
        internalCounters.push_back(46056);
        internalCounters.push_back(46494);
        internalCounters.push_back(46932);
        internalCounters.push_back(47370);
        internalCounters.push_back(47808);
        internalCounters.push_back(48246);
        internalCounters.push_back(48684);
        internalCounters.push_back(49122);
        internalCounters.push_back(49560);
        internalCounters.push_back(49998);
        internalCounters.push_back(50436);
        internalCounters.push_back(50874);
        internalCounters.push_back(44305);
        internalCounters.push_back(44743);
        internalCounters.push_back(45181);
        internalCounters.push_back(45619);
        internalCounters.push_back(46057);
        internalCounters.push_back(46495);
        internalCounters.push_back(46933);
        internalCounters.push_back(47371);
        internalCounters.push_back(47809);
        internalCounters.push_back(48247);
        internalCounters.push_back(48685);
        internalCounters.push_back(49123);
        internalCounters.push_back(49561);
        internalCounters.push_back(49999);
        internalCounters.push_back(50437);
        internalCounters.push_back(50875);
        internalCounters.push_back(44306);
        internalCounters.push_back(44744);
        internalCounters.push_back(45182);
        internalCounters.push_back(45620);
        internalCounters.push_back(46058);
        internalCounters.push_back(46496);
        internalCounters.push_back(46934);
        internalCounters.push_back(47372);
        internalCounters.push_back(47810);
        internalCounters.push_back(48248);
        internalCounters.push_back(48686);
        internalCounters.push_back(49124);
        internalCounters.push_back(49562);
        internalCounters.push_back(50000);
        internalCounters.push_back(50438);
        internalCounters.push_back(50876);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(44296);
        internalCounters.push_back(44734);
        internalCounters.push_back(45172);
        internalCounters.push_back(45610);
        internalCounters.push_back(46048);
        internalCounters.push_back(46486);
        internalCounters.push_back(46924);
        internalCounters.push_back(47362);
        internalCounters.push_back(47800);
        internalCounters.push_back(48238);
        internalCounters.push_back(48676);
        internalCounters.push_back(49114);
        internalCounters.push_back(49552);
        internalCounters.push_back(49990);
        internalCounters.push_back(50428);
        internalCounters.push_back(50866);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(44435);
        internalCounters.push_back(44873);
        internalCounters.push_back(45311);
        internalCounters.push_back(45749);
        internalCounters.push_back(46187);
        internalCounters.push_back(46625);
        internalCounters.push_back(47063);
        internalCounters.push_back(47501);
        internalCounters.push_back(47939);
        internalCounters.push_back(48377);
        internalCounters.push_back(48815);
        internalCounters.push_back(49253);
        internalCounters.push_back(49691);
        internalCounters.push_back(50129);
        internalCounters.push_back(50567);
        internalCounters.push_back(51005);
        internalCounters.push_back(44294);
        internalCounters.push_back(44732);
        internalCounters.push_back(45170);
        internalCounters.push_back(45608);
        internalCounters.push_back(46046);
        internalCounters.push_back(46484);
        internalCounters.push_back(46922);
        internalCounters.push_back(47360);
        internalCounters.push_back(47798);
        internalCounters.push_back(48236);
        internalCounters.push_back(48674);
        internalCounters.push_back(49112);
        internalCounters.push_back(49550);
        internalCounters.push_back(49988);
        internalCounters.push_back(50426);
        internalCounters.push_back(50864);
        internalCounters.push_back(44295);
        internalCounters.push_back(44733);
        internalCounters.push_back(45171);
        internalCounters.push_back(45609);
        internalCounters.push_back(46047);
        internalCounters.push_back(46485);
        internalCounters.push_back(46923);
        internalCounters.push_back(47361);
        internalCounters.push_back(47799);
        internalCounters.push_back(48237);
        internalCounters.push_back(48675);
        internalCounters.push_back(49113);
        internalCounters.push_back(49551);
        internalCounters.push_back(49989);
        internalCounters.push_back(50427);
        internalCounters.push_back(50865);
        internalCounters.push_back(44296);
        internalCounters.push_back(44734);
        internalCounters.push_back(45172);
        internalCounters.push_back(45610);
        internalCounters.push_back(46048);
        internalCounters.push_back(46486);
        internalCounters.push_back(46924);
        internalCounters.push_back(47362);
        internalCounters.push_back(47800);
        internalCounters.push_back(48238);
        internalCounters.push_back(48676);
        internalCounters.push_back(49114);
        internalCounters.push_back(49552);
        internalCounters.push_back(49990);
        internalCounters.push_back(50428);
        internalCounters.push_back(50866);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(44340);
        internalCounters.push_back(44778);
        internalCounters.push_back(45216);
        internalCounters.push_back(45654);
        internalCounters.push_back(46092);
        internalCounters.push_back(46530);
        internalCounters.push_back(46968);
        internalCounters.push_back(47406);
        internalCounters.push_back(47844);
        internalCounters.push_back(48282);
        internalCounters.push_back(48720);
        internalCounters.push_back(49158);
        internalCounters.push_back(49596);
        internalCounters.push_back(50034);
        internalCounters.push_back(50472);
        internalCounters.push_back(50910);
        internalCounters.push_back(44185);
        internalCounters.push_back(44623);
        internalCounters.push_back(45061);
        internalCounters.push_back(45499);
        internalCounters.push_back(45937);
        internalCounters.push_back(46375);
        internalCounters.push_back(46813);
        internalCounters.push_back(47251);
        internalCounters.push_back(47689);
        internalCounters.push_back(48127);
        internalCounters.push_back(48565);
        internalCounters.push_back(49003);
        internalCounters.push_back(49441);
        internalCounters.push_back(49879);
        internalCounters.push_back(50317);
        internalCounters.push_back(50755);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(44340);
        internalCounters.push_back(44778);
        internalCounters.push_back(45216);
        internalCounters.push_back(45654);
        internalCounters.push_back(46092);
        internalCounters.push_back(46530);
        internalCounters.push_back(46968);
        internalCounters.push_back(47406);
        internalCounters.push_back(47844);
        internalCounters.push_back(48282);
        internalCounters.push_back(48720);
        internalCounters.push_back(49158);
        internalCounters.push_back(49596);
        internalCounters.push_back(50034);
        internalCounters.push_back(50472);
        internalCounters.push_back(50910);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34389);
        internalCounters.push_back(34671);
        internalCounters.push_back(34953);
        internalCounters.push_back(35235);
        internalCounters.push_back(35517);
        internalCounters.push_back(35799);
        internalCounters.push_back(36081);
        internalCounters.push_back(36363);
        internalCounters.push_back(36645);
        internalCounters.push_back(36927);
        internalCounters.push_back(37209);
        internalCounters.push_back(37491);
        internalCounters.push_back(37773);
        internalCounters.push_back(38055);
        internalCounters.push_back(38337);
        internalCounters.push_back(38619);
        internalCounters.push_back(34390);
        internalCounters.push_back(34672);
        internalCounters.push_back(34954);
        internalCounters.push_back(35236);
        internalCounters.push_back(35518);
        internalCounters.push_back(35800);
        internalCounters.push_back(36082);
        internalCounters.push_back(36364);
        internalCounters.push_back(36646);
        internalCounters.push_back(36928);
        internalCounters.push_back(37210);
        internalCounters.push_back(37492);
        internalCounters.push_back(37774);
        internalCounters.push_back(38056);
        internalCounters.push_back(38338);
        internalCounters.push_back(38620);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(64),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34377);
        internalCounters.push_back(34659);
        internalCounters.push_back(34941);
        internalCounters.push_back(35223);
        internalCounters.push_back(35505);
        internalCounters.push_back(35787);
        internalCounters.push_back(36069);
        internalCounters.push_back(36351);
        internalCounters.push_back(36633);
        internalCounters.push_back(36915);
        internalCounters.push_back(37197);
        internalCounters.push_back(37479);
        internalCounters.push_back(37761);
        internalCounters.push_back(38043);
        internalCounters.push_back(38325);
        internalCounters.push_back(38607);
        internalCounters.push_back(34378);
        internalCounters.push_back(34660);
        internalCounters.push_back(34942);
        internalCounters.push_back(35224);
        internalCounters.push_back(35506);
        internalCounters.push_back(35788);
        internalCounters.push_back(36070);
        internalCounters.push_back(36352);
        internalCounters.push_back(36634);
        internalCounters.push_back(36916);
        internalCounters.push_back(37198);
        internalCounters.push_back(37480);
        internalCounters.push_back(37762);
        internalCounters.push_back(38044);
        internalCounters.push_back(38326);
        internalCounters.push_back(38608);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28968);
        internalCounters.push_back(29053);
        internalCounters.push_back(29138);
        internalCounters.push_back(29223);
        internalCounters.push_back(29308);
        internalCounters.push_back(29393);
        internalCounters.push_back(29478);
        internalCounters.push_back(29563);
        internalCounters.push_back(29648);
        internalCounters.push_back(29733);
        internalCounters.push_back(29818);
        internalCounters.push_back(29903);
        internalCounters.push_back(29988);
        internalCounters.push_back(30073);
        internalCounters.push_back(30158);
        internalCounters.push_back(30243);
        internalCounters.push_back(30328);
        internalCounters.push_back(30413);
        internalCounters.push_back(30498);
        internalCounters.push_back(30583);
        internalCounters.push_back(30668);
        internalCounters.push_back(30753);
        internalCounters.push_back(30838);
        internalCounters.push_back(30923);
        internalCounters.push_back(31008);
        internalCounters.push_back(31093);
        internalCounters.push_back(31178);
        internalCounters.push_back(31263);
        internalCounters.push_back(31348);
        internalCounters.push_back(31433);
        internalCounters.push_back(31518);
        internalCounters.push_back(31603);
        internalCounters.push_back(31688);
        internalCounters.push_back(31773);
        internalCounters.push_back(31858);
        internalCounters.push_back(31943);
        internalCounters.push_back(32028);
        internalCounters.push_back(32113);
        internalCounters.push_back(32198);
        internalCounters.push_back(32283);
        internalCounters.push_back(32368);
        internalCounters.push_back(32453);
        internalCounters.push_back(32538);
        internalCounters.push_back(32623);
        internalCounters.push_back(32708);
        internalCounters.push_back(32793);
        internalCounters.push_back(32878);
        internalCounters.push_back(32963);
        internalCounters.push_back(33048);
        internalCounters.push_back(33133);
        internalCounters.push_back(33218);
        internalCounters.push_back(33303);
        internalCounters.push_back(33388);
        internalCounters.push_back(33473);
        internalCounters.push_back(33558);
        internalCounters.push_back(33643);
        internalCounters.push_back(33728);
        internalCounters.push_back(33813);
        internalCounters.push_back(33898);
        internalCounters.push_back(33983);
        internalCounters.push_back(34068);
        internalCounters.push_back(34153);
        internalCounters.push_back(34238);
        internalCounters.push_back(34323);
        internalCounters.push_back(28977);
        internalCounters.push_back(29062);
        internalCounters.push_back(29147);
        internalCounters.push_back(29232);
        internalCounters.push_back(29317);
        internalCounters.push_back(29402);
        internalCounters.push_back(29487);
        internalCounters.push_back(29572);
        internalCounters.push_back(29657);
        internalCounters.push_back(29742);
        internalCounters.push_back(29827);
        internalCounters.push_back(29912);
        internalCounters.push_back(29997);
        internalCounters.push_back(30082);
        internalCounters.push_back(30167);
        internalCounters.push_back(30252);
        internalCounters.push_back(30337);
        internalCounters.push_back(30422);
        internalCounters.push_back(30507);
        internalCounters.push_back(30592);
        internalCounters.push_back(30677);
        internalCounters.push_back(30762);
        internalCounters.push_back(30847);
        internalCounters.push_back(30932);
        internalCounters.push_back(31017);
        internalCounters.push_back(31102);
        internalCounters.push_back(31187);
        internalCounters.push_back(31272);
        internalCounters.push_back(31357);
        internalCounters.push_back(31442);
        internalCounters.push_back(31527);
        internalCounters.push_back(31612);
        internalCounters.push_back(31697);
        internalCounters.push_back(31782);
        internalCounters.push_back(31867);
        internalCounters.push_back(31952);
        internalCounters.push_back(32037);
        internalCounters.push_back(32122);
        internalCounters.push_back(32207);
        internalCounters.push_back(32292);
        internalCounters.push_back(32377);
        internalCounters.push_back(32462);
        internalCounters.push_back(32547);
        internalCounters.push_back(32632);
        internalCounters.push_back(32717);
        internalCounters.push_back(32802);
        internalCounters.push_back(32887);
        internalCounters.push_back(32972);
        internalCounters.push_back(33057);
        internalCounters.push_back(33142);
        internalCounters.push_back(33227);
        internalCounters.push_back(33312);
        internalCounters.push_back(33397);
        internalCounters.push_back(33482);
        internalCounters.push_back(33567);
        internalCounters.push_back(33652);
        internalCounters.push_back(33737);
        internalCounters.push_back(33822);
        internalCounters.push_back(33907);
        internalCounters.push_back(33992);
        internalCounters.push_back(34077);
        internalCounters.push_back(34162);
        internalCounters.push_back(34247);
        internalCounters.push_back(34332);
        internalCounters.push_back(28978);
        internalCounters.push_back(29063);
        internalCounters.push_back(29148);
        internalCounters.push_back(29233);
        internalCounters.push_back(29318);
        internalCounters.push_back(29403);
        internalCounters.push_back(29488);
        internalCounters.push_back(29573);
        internalCounters.push_back(29658);
        internalCounters.push_back(29743);
        internalCounters.push_back(29828);
        internalCounters.push_back(29913);
        internalCounters.push_back(29998);
        internalCounters.push_back(30083);
        internalCounters.push_back(30168);
        internalCounters.push_back(30253);
        internalCounters.push_back(30338);
        internalCounters.push_back(30423);
        internalCounters.push_back(30508);
        internalCounters.push_back(30593);
        internalCounters.push_back(30678);
        internalCounters.push_back(30763);
        internalCounters.push_back(30848);
        internalCounters.push_back(30933);
        internalCounters.push_back(31018);
        internalCounters.push_back(31103);
        internalCounters.push_back(31188);
        internalCounters.push_back(31273);
        internalCounters.push_back(31358);
        internalCounters.push_back(31443);
        internalCounters.push_back(31528);
        internalCounters.push_back(31613);
        internalCounters.push_back(31698);
        internalCounters.push_back(31783);
        internalCounters.push_back(31868);
        internalCounters.push_back(31953);
        internalCounters.push_back(32038);
        internalCounters.push_back(32123);
        internalCounters.push_back(32208);
        internalCounters.push_back(32293);
        internalCounters.push_back(32378);
        internalCounters.push_back(32463);
        internalCounters.push_back(32548);
        internalCounters.push_back(32633);
        internalCounters.push_back(32718);
        internalCounters.push_back(32803);
        internalCounters.push_back(32888);
        internalCounters.push_back(32973);
        internalCounters.push_back(33058);
        internalCounters.push_back(33143);
        internalCounters.push_back(33228);
        internalCounters.push_back(33313);
        internalCounters.push_back(33398);
        internalCounters.push_back(33483);
        internalCounters.push_back(33568);
        internalCounters.push_back(33653);
        internalCounters.push_back(33738);
        internalCounters.push_back(33823);
        internalCounters.push_back(33908);
        internalCounters.push_back(33993);
        internalCounters.push_back(34078);
        internalCounters.push_back(34163);
        internalCounters.push_back(34248);
        internalCounters.push_back(34333);
        internalCounters.push_back(28979);
        internalCounters.push_back(29064);
        internalCounters.push_back(29149);
        internalCounters.push_back(29234);
        internalCounters.push_back(29319);
        internalCounters.push_back(29404);
        internalCounters.push_back(29489);
        internalCounters.push_back(29574);
        internalCounters.push_back(29659);
        internalCounters.push_back(29744);
        internalCounters.push_back(29829);
        internalCounters.push_back(29914);
        internalCounters.push_back(29999);
        internalCounters.push_back(30084);
        internalCounters.push_back(30169);
        internalCounters.push_back(30254);
        internalCounters.push_back(30339);
        internalCounters.push_back(30424);
        internalCounters.push_back(30509);
        internalCounters.push_back(30594);
        internalCounters.push_back(30679);
        internalCounters.push_back(30764);
        internalCounters.push_back(30849);
        internalCounters.push_back(30934);
        internalCounters.push_back(31019);
        internalCounters.push_back(31104);
        internalCounters.push_back(31189);
        internalCounters.push_back(31274);
        internalCounters.push_back(31359);
        internalCounters.push_back(31444);
        internalCounters.push_back(31529);
        internalCounters.push_back(31614);
        internalCounters.push_back(31699);
        internalCounters.push_back(31784);
        internalCounters.push_back(31869);
        internalCounters.push_back(31954);
        internalCounters.push_back(32039);
        internalCounters.push_back(32124);
        internalCounters.push_back(32209);
        internalCounters.push_back(32294);
        internalCounters.push_back(32379);
        internalCounters.push_back(32464);
        internalCounters.push_back(32549);
        internalCounters.push_back(32634);
        internalCounters.push_back(32719);
        internalCounters.push_back(32804);
        internalCounters.push_back(32889);
        internalCounters.push_back(32974);
        internalCounters.push_back(33059);
        internalCounters.push_back(33144);
        internalCounters.push_back(33229);
        internalCounters.push_back(33314);
        internalCounters.push_back(33399);
        internalCounters.push_back(33484);
        internalCounters.push_back(33569);
        internalCounters.push_back(33654);
        internalCounters.push_back(33739);
        internalCounters.push_back(33824);
        internalCounters.push_back(33909);
        internalCounters.push_back(33994);
        internalCounters.push_back(34079);
        internalCounters.push_back(34164);
        internalCounters.push_back(34249);
        internalCounters.push_back(34334);
        internalCounters.push_back(28980);
        internalCounters.push_back(29065);
        internalCounters.push_back(29150);
        internalCounters.push_back(29235);
        internalCounters.push_back(29320);
        internalCounters.push_back(29405);
        internalCounters.push_back(29490);
        internalCounters.push_back(29575);
        internalCounters.push_back(29660);
        internalCounters.push_back(29745);
        internalCounters.push_back(29830);
        internalCounters.push_back(29915);
        internalCounters.push_back(30000);
        internalCounters.push_back(30085);
        internalCounters.push_back(30170);
        internalCounters.push_back(30255);
        internalCounters.push_back(30340);
        internalCounters.push_back(30425);
        internalCounters.push_back(30510);
        internalCounters.push_back(30595);
        internalCounters.push_back(30680);
        internalCounters.push_back(30765);
        internalCounters.push_back(30850);
        internalCounters.push_back(30935);
        internalCounters.push_back(31020);
        internalCounters.push_back(31105);
        internalCounters.push_back(31190);
        internalCounters.push_back(31275);
        internalCounters.push_back(31360);
        internalCounters.push_back(31445);
        internalCounters.push_back(31530);
        internalCounters.push_back(31615);
        internalCounters.push_back(31700);
        internalCounters.push_back(31785);
        internalCounters.push_back(31870);
        internalCounters.push_back(31955);
        internalCounters.push_back(32040);
        internalCounters.push_back(32125);
        internalCounters.push_back(32210);
        internalCounters.push_back(32295);
        internalCounters.push_back(32380);
        internalCounters.push_back(32465);
        internalCounters.push_back(32550);
        internalCounters.push_back(32635);
        internalCounters.push_back(32720);
        internalCounters.push_back(32805);
        internalCounters.push_back(32890);
        internalCounters.push_back(32975);
        internalCounters.push_back(33060);
        internalCounters.push_back(33145);
        internalCounters.push_back(33230);
        internalCounters.push_back(33315);
        internalCounters.push_back(33400);
        internalCounters.push_back(33485);
        internalCounters.push_back(33570);
        internalCounters.push_back(33655);
        internalCounters.push_back(33740);
        internalCounters.push_back(33825);
        internalCounters.push_back(33910);
        internalCounters.push_back(33995);
        internalCounters.push_back(34080);
        internalCounters.push_back(34165);
        internalCounters.push_back(34250);
        internalCounters.push_back(34335);

        c.DefineDerivedCounter("L1CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L1 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,ifnotzero", "6deaf002-3cac-2d2d-7b89-566c7a52b08e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28968);
        internalCounters.push_back(29053);
        internalCounters.push_back(29138);
        internalCounters.push_back(29223);
        internalCounters.push_back(29308);
        internalCounters.push_back(29393);
        internalCounters.push_back(29478);
        internalCounters.push_back(29563);
        internalCounters.push_back(29648);
        internalCounters.push_back(29733);
        internalCounters.push_back(29818);
        internalCounters.push_back(29903);
        internalCounters.push_back(29988);
        internalCounters.push_back(30073);
        internalCounters.push_back(30158);
        internalCounters.push_back(30243);
        internalCounters.push_back(30328);
        internalCounters.push_back(30413);
        internalCounters.push_back(30498);
        internalCounters.push_back(30583);
        internalCounters.push_back(30668);
        internalCounters.push_back(30753);
        internalCounters.push_back(30838);
        internalCounters.push_back(30923);
        internalCounters.push_back(31008);
        internalCounters.push_back(31093);
        internalCounters.push_back(31178);
        internalCounters.push_back(31263);
        internalCounters.push_back(31348);
        internalCounters.push_back(31433);
        internalCounters.push_back(31518);
        internalCounters.push_back(31603);
        internalCounters.push_back(31688);
        internalCounters.push_back(31773);
        internalCounters.push_back(31858);
        internalCounters.push_back(31943);
        internalCounters.push_back(32028);
        internalCounters.push_back(32113);
        internalCounters.push_back(32198);
        internalCounters.push_back(32283);
        internalCounters.push_back(32368);
        internalCounters.push_back(32453);
        internalCounters.push_back(32538);
        internalCounters.push_back(32623);
        internalCounters.push_back(32708);
        internalCounters.push_back(32793);
        internalCounters.push_back(32878);
        internalCounters.push_back(32963);
        internalCounters.push_back(33048);
        internalCounters.push_back(33133);
        internalCounters.push_back(33218);
        internalCounters.push_back(33303);
        internalCounters.push_back(33388);
        internalCounters.push_back(33473);
        internalCounters.push_back(33558);
        internalCounters.push_back(33643);
        internalCounters.push_back(33728);
        internalCounters.push_back(33813);
        internalCounters.push_back(33898);
        internalCounters.push_back(33983);
        internalCounters.push_back(34068);
        internalCounters.push_back(34153);
        internalCounters.push_back(34238);
        internalCounters.push_back(34323);
        internalCounters.push_back(28977);
        internalCounters.push_back(29062);
        internalCounters.push_back(29147);
        internalCounters.push_back(29232);
        internalCounters.push_back(29317);
        internalCounters.push_back(29402);
        internalCounters.push_back(29487);
        internalCounters.push_back(29572);
        internalCounters.push_back(29657);
        internalCounters.push_back(29742);
        internalCounters.push_back(29827);
        internalCounters.push_back(29912);
        internalCounters.push_back(29997);
        internalCounters.push_back(30082);
        internalCounters.push_back(30167);
        internalCounters.push_back(30252);
        internalCounters.push_back(30337);
        internalCounters.push_back(30422);
        internalCounters.push_back(30507);
        internalCounters.push_back(30592);
        internalCounters.push_back(30677);
        internalCounters.push_back(30762);
        internalCounters.push_back(30847);
        internalCounters.push_back(30932);
        internalCounters.push_back(31017);
        internalCounters.push_back(31102);
        internalCounters.push_back(31187);
        internalCounters.push_back(31272);
        internalCounters.push_back(31357);
        internalCounters.push_back(31442);
        internalCounters.push_back(31527);
        internalCounters.push_back(31612);
        internalCounters.push_back(31697);
        internalCounters.push_back(31782);
        internalCounters.push_back(31867);
        internalCounters.push_back(31952);
        internalCounters.push_back(32037);
        internalCounters.push_back(32122);
        internalCounters.push_back(32207);
        internalCounters.push_back(32292);
        internalCounters.push_back(32377);
        internalCounters.push_back(32462);
        internalCounters.push_back(32547);
        internalCounters.push_back(32632);
        internalCounters.push_back(32717);
        internalCounters.push_back(32802);
        internalCounters.push_back(32887);
        internalCounters.push_back(32972);
        internalCounters.push_back(33057);
        internalCounters.push_back(33142);
        internalCounters.push_back(33227);
        internalCounters.push_back(33312);
        internalCounters.push_back(33397);
        internalCounters.push_back(33482);
        internalCounters.push_back(33567);
        internalCounters.push_back(33652);
        internalCounters.push_back(33737);
        internalCounters.push_back(33822);
        internalCounters.push_back(33907);
        internalCounters.push_back(33992);
        internalCounters.push_back(34077);
        internalCounters.push_back(34162);
        internalCounters.push_back(34247);
        internalCounters.push_back(34332);
        internalCounters.push_back(28978);
        internalCounters.push_back(29063);
        internalCounters.push_back(29148);
        internalCounters.push_back(29233);
        internalCounters.push_back(29318);
        internalCounters.push_back(29403);
        internalCounters.push_back(29488);
        internalCounters.push_back(29573);
        internalCounters.push_back(29658);
        internalCounters.push_back(29743);
        internalCounters.push_back(29828);
        internalCounters.push_back(29913);
        internalCounters.push_back(29998);
        internalCounters.push_back(30083);
        internalCounters.push_back(30168);
        internalCounters.push_back(30253);
        internalCounters.push_back(30338);
        internalCounters.push_back(30423);
        internalCounters.push_back(30508);
        internalCounters.push_back(30593);
        internalCounters.push_back(30678);
        internalCounters.push_back(30763);
        internalCounters.push_back(30848);
        internalCounters.push_back(30933);
        internalCounters.push_back(31018);
        internalCounters.push_back(31103);
        internalCounters.push_back(31188);
        internalCounters.push_back(31273);
        internalCounters.push_back(31358);
        internalCounters.push_back(31443);
        internalCounters.push_back(31528);
        internalCounters.push_back(31613);
        internalCounters.push_back(31698);
        internalCounters.push_back(31783);
        internalCounters.push_back(31868);
        internalCounters.push_back(31953);
        internalCounters.push_back(32038);
        internalCounters.push_back(32123);
        internalCounters.push_back(32208);
        internalCounters.push_back(32293);
        internalCounters.push_back(32378);
        internalCounters.push_back(32463);
        internalCounters.push_back(32548);
        internalCounters.push_back(32633);
        internalCounters.push_back(32718);
        internalCounters.push_back(32803);
        internalCounters.push_back(32888);
        internalCounters.push_back(32973);
        internalCounters.push_back(33058);
        internalCounters.push_back(33143);
        internalCounters.push_back(33228);
        internalCounters.push_back(33313);
        internalCounters.push_back(33398);
        internalCounters.push_back(33483);
        internalCounters.push_back(33568);
        internalCounters.push_back(33653);
        internalCounters.push_back(33738);
        internalCounters.push_back(33823);
        internalCounters.push_back(33908);
        internalCounters.push_back(33993);
        internalCounters.push_back(34078);
        internalCounters.push_back(34163);
        internalCounters.push_back(34248);
        internalCounters.push_back(34333);
        internalCounters.push_back(28979);
        internalCounters.push_back(29064);
        internalCounters.push_back(29149);
        internalCounters.push_back(29234);
        internalCounters.push_back(29319);
        internalCounters.push_back(29404);
        internalCounters.push_back(29489);
        internalCounters.push_back(29574);
        internalCounters.push_back(29659);
        internalCounters.push_back(29744);
        internalCounters.push_back(29829);
        internalCounters.push_back(29914);
        internalCounters.push_back(29999);
        internalCounters.push_back(30084);
        internalCounters.push_back(30169);
        internalCounters.push_back(30254);
        internalCounters.push_back(30339);
        internalCounters.push_back(30424);
        internalCounters.push_back(30509);
        internalCounters.push_back(30594);
        internalCounters.push_back(30679);
        internalCounters.push_back(30764);
        internalCounters.push_back(30849);
        internalCounters.push_back(30934);
        internalCounters.push_back(31019);
        internalCounters.push_back(31104);
        internalCounters.push_back(31189);
        internalCounters.push_back(31274);
        internalCounters.push_back(31359);
        internalCounters.push_back(31444);
        internalCounters.push_back(31529);
        internalCounters.push_back(31614);
        internalCounters.push_back(31699);
        internalCounters.push_back(31784);
        internalCounters.push_back(31869);
        internalCounters.push_back(31954);
        internalCounters.push_back(32039);
        internalCounters.push_back(32124);
        internalCounters.push_back(32209);
        internalCounters.push_back(32294);
        internalCounters.push_back(32379);
        internalCounters.push_back(32464);
        internalCounters.push_back(32549);
        internalCounters.push_back(32634);
        internalCounters.push_back(32719);
        internalCounters.push_back(32804);
        internalCounters.push_back(32889);
        internalCounters.push_back(32974);
        internalCounters.push_back(33059);
        internalCounters.push_back(33144);
        internalCounters.push_back(33229);
        internalCounters.push_back(33314);
        internalCounters.push_back(33399);
        internalCounters.push_back(33484);
        internalCounters.push_back(33569);
        internalCounters.push_back(33654);
        internalCounters.push_back(33739);
        internalCounters.push_back(33824);
        internalCounters.push_back(33909);
        internalCounters.push_back(33994);
        internalCounters.push_back(34079);
        internalCounters.push_back(34164);
        internalCounters.push_back(34249);
        internalCounters.push_back(34334);
        internalCounters.push_back(28980);
        internalCounters.push_back(29065);
        internalCounters.push_back(29150);
        internalCounters.push_back(29235);
        internalCounters.push_back(29320);
        internalCounters.push_back(29405);
        internalCounters.push_back(29490);
        internalCounters.push_back(29575);
        internalCounters.push_back(29660);
        internalCounters.push_back(29745);
        internalCounters.push_back(29830);
        internalCounters.push_back(29915);
        internalCounters.push_back(30000);
        internalCounters.push_back(30085);
        internalCounters.push_back(30170);
        internalCounters.push_back(30255);
        internalCounters.push_back(30340);
        internalCounters.push_back(30425);
        internalCounters.push_back(30510);
        internalCounters.push_back(30595);
        internalCounters.push_back(30680);
        internalCounters.push_back(30765);
        internalCounters.push_back(30850);
        internalCounters.push_back(30935);
        internalCounters.push_back(31020);
        internalCounters.push_back(31105);
        internalCounters.push_back(31190);
        internalCounters.push_back(31275);
        internalCounters.push_back(31360);
        internalCounters.push_back(31445);
        internalCounters.push_back(31530);
        internalCounters.push_back(31615);
        internalCounters.push_back(31700);
        internalCounters.push_back(31785);
        internalCounters.push_back(31870);
        internalCounters.push_back(31955);
        internalCounters.push_back(32040);
        internalCounters.push_back(32125);
        internalCounters.push_back(32210);
        internalCounters.push_back(32295);
        internalCounters.push_back(32380);
        internalCounters.push_back(32465);
        internalCounters.push_back(32550);
        internalCounters.push_back(32635);
        internalCounters.push_back(32720);
        internalCounters.push_back(32805);
        internalCounters.push_back(32890);
        internalCounters.push_back(32975);
        internalCounters.push_back(33060);
        internalCounters.push_back(33145);
        internalCounters.push_back(33230);
        internalCounters.push_back(33315);
        internalCounters.push_back(33400);
        internalCounters.push_back(33485);
        internalCounters.push_back(33570);
        internalCounters.push_back(33655);
        internalCounters.push_back(33740);
        internalCounters.push_back(33825);
        internalCounters.push_back(33910);
        internalCounters.push_back(33995);
        internalCounters.push_back(34080);
        internalCounters.push_back(34165);
        internalCounters.push_back(34250);
        internalCounters.push_back(34335);

        c.DefineDerivedCounter("L1CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,-", "279c8bff-ec6a-f9bf-96d7-5e8000f77891");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28977);
        internalCounters.push_back(29062);
        internalCounters.push_back(29147);
        internalCounters.push_back(29232);
        internalCounters.push_back(29317);
        internalCounters.push_back(29402);
        internalCounters.push_back(29487);
        internalCounters.push_back(29572);
        internalCounters.push_back(29657);
        internalCounters.push_back(29742);
        internalCounters.push_back(29827);
        internalCounters.push_back(29912);
        internalCounters.push_back(29997);
        internalCounters.push_back(30082);
        internalCounters.push_back(30167);
        internalCounters.push_back(30252);
        internalCounters.push_back(30337);
        internalCounters.push_back(30422);
        internalCounters.push_back(30507);
        internalCounters.push_back(30592);
        internalCounters.push_back(30677);
        internalCounters.push_back(30762);
        internalCounters.push_back(30847);
        internalCounters.push_back(30932);
        internalCounters.push_back(31017);
        internalCounters.push_back(31102);
        internalCounters.push_back(31187);
        internalCounters.push_back(31272);
        internalCounters.push_back(31357);
        internalCounters.push_back(31442);
        internalCounters.push_back(31527);
        internalCounters.push_back(31612);
        internalCounters.push_back(31697);
        internalCounters.push_back(31782);
        internalCounters.push_back(31867);
        internalCounters.push_back(31952);
        internalCounters.push_back(32037);
        internalCounters.push_back(32122);
        internalCounters.push_back(32207);
        internalCounters.push_back(32292);
        internalCounters.push_back(32377);
        internalCounters.push_back(32462);
        internalCounters.push_back(32547);
        internalCounters.push_back(32632);
        internalCounters.push_back(32717);
        internalCounters.push_back(32802);
        internalCounters.push_back(32887);
        internalCounters.push_back(32972);
        internalCounters.push_back(33057);
        internalCounters.push_back(33142);
        internalCounters.push_back(33227);
        internalCounters.push_back(33312);
        internalCounters.push_back(33397);
        internalCounters.push_back(33482);
        internalCounters.push_back(33567);
        internalCounters.push_back(33652);
        internalCounters.push_back(33737);
        internalCounters.push_back(33822);
        internalCounters.push_back(33907);
        internalCounters.push_back(33992);
        internalCounters.push_back(34077);
        internalCounters.push_back(34162);
        internalCounters.push_back(34247);
        internalCounters.push_back(34332);
        internalCounters.push_back(28978);
        internalCounters.push_back(29063);
        internalCounters.push_back(29148);
        internalCounters.push_back(29233);
        internalCounters.push_back(29318);
        internalCounters.push_back(29403);
        internalCounters.push_back(29488);
        internalCounters.push_back(29573);
        internalCounters.push_back(29658);
        internalCounters.push_back(29743);
        internalCounters.push_back(29828);
        internalCounters.push_back(29913);
        internalCounters.push_back(29998);
        internalCounters.push_back(30083);
        internalCounters.push_back(30168);
        internalCounters.push_back(30253);
        internalCounters.push_back(30338);
        internalCounters.push_back(30423);
        internalCounters.push_back(30508);
        internalCounters.push_back(30593);
        internalCounters.push_back(30678);
        internalCounters.push_back(30763);
        internalCounters.push_back(30848);
        internalCounters.push_back(30933);
        internalCounters.push_back(31018);
        internalCounters.push_back(31103);
        internalCounters.push_back(31188);
        internalCounters.push_back(31273);
        internalCounters.push_back(31358);
        internalCounters.push_back(31443);
        internalCounters.push_back(31528);
        internalCounters.push_back(31613);
        internalCounters.push_back(31698);
        internalCounters.push_back(31783);
        internalCounters.push_back(31868);
        internalCounters.push_back(31953);
        internalCounters.push_back(32038);
        internalCounters.push_back(32123);
        internalCounters.push_back(32208);
        internalCounters.push_back(32293);
        internalCounters.push_back(32378);
        internalCounters.push_back(32463);
        internalCounters.push_back(32548);
        internalCounters.push_back(32633);
        internalCounters.push_back(32718);
        internalCounters.push_back(32803);
        internalCounters.push_back(32888);
        internalCounters.push_back(32973);
        internalCounters.push_back(33058);
        internalCounters.push_back(33143);
        internalCounters.push_back(33228);
        internalCounters.push_back(33313);
        internalCounters.push_back(33398);
        internalCounters.push_back(33483);
        internalCounters.push_back(33568);
        internalCounters.push_back(33653);
        internalCounters.push_back(33738);
        internalCounters.push_back(33823);
        internalCounters.push_back(33908);
        internalCounters.push_back(33993);
        internalCounters.push_back(34078);
        internalCounters.push_back(34163);
        internalCounters.push_back(34248);
        internalCounters.push_back(34333);
        internalCounters.push_back(28979);
        internalCounters.push_back(29064);
        internalCounters.push_back(29149);
        internalCounters.push_back(29234);
        internalCounters.push_back(29319);
        internalCounters.push_back(29404);
        internalCounters.push_back(29489);
        internalCounters.push_back(29574);
        internalCounters.push_back(29659);
        internalCounters.push_back(29744);
        internalCounters.push_back(29829);
        internalCounters.push_back(29914);
        internalCounters.push_back(29999);
        internalCounters.push_back(30084);
        internalCounters.push_back(30169);
        internalCounters.push_back(30254);
        internalCounters.push_back(30339);
        internalCounters.push_back(30424);
        internalCounters.push_back(30509);
        internalCounters.push_back(30594);
        internalCounters.push_back(30679);
        internalCounters.push_back(30764);
        internalCounters.push_back(30849);
        internalCounters.push_back(30934);
        internalCounters.push_back(31019);
        internalCounters.push_back(31104);
        internalCounters.push_back(31189);
        internalCounters.push_back(31274);
        internalCounters.push_back(31359);
        internalCounters.push_back(31444);
        internalCounters.push_back(31529);
        internalCounters.push_back(31614);
        internalCounters.push_back(31699);
        internalCounters.push_back(31784);
        internalCounters.push_back(31869);
        internalCounters.push_back(31954);
        internalCounters.push_back(32039);
        internalCounters.push_back(32124);
        internalCounters.push_back(32209);
        internalCounters.push_back(32294);
        internalCounters.push_back(32379);
        internalCounters.push_back(32464);
        internalCounters.push_back(32549);
        internalCounters.push_back(32634);
        internalCounters.push_back(32719);
        internalCounters.push_back(32804);
        internalCounters.push_back(32889);
        internalCounters.push_back(32974);
        internalCounters.push_back(33059);
        internalCounters.push_back(33144);
        internalCounters.push_back(33229);
        internalCounters.push_back(33314);
        internalCounters.push_back(33399);
        internalCounters.push_back(33484);
        internalCounters.push_back(33569);
        internalCounters.push_back(33654);
        internalCounters.push_back(33739);
        internalCounters.push_back(33824);
        internalCounters.push_back(33909);
        internalCounters.push_back(33994);
        internalCounters.push_back(34079);
        internalCounters.push_back(34164);
        internalCounters.push_back(34249);
        internalCounters.push_back(34334);
        internalCounters.push_back(28980);
        internalCounters.push_back(29065);
        internalCounters.push_back(29150);
        internalCounters.push_back(29235);
        internalCounters.push_back(29320);
        internalCounters.push_back(29405);
        internalCounters.push_back(29490);
        internalCounters.push_back(29575);
        internalCounters.push_back(29660);
        internalCounters.push_back(29745);
        internalCounters.push_back(29830);
        internalCounters.push_back(29915);
        internalCounters.push_back(30000);
        internalCounters.push_back(30085);
        internalCounters.push_back(30170);
        internalCounters.push_back(30255);
        internalCounters.push_back(30340);
        internalCounters.push_back(30425);
        internalCounters.push_back(30510);
        internalCounters.push_back(30595);
        internalCounters.push_back(30680);
        internalCounters.push_back(30765);
        internalCounters.push_back(30850);
        internalCounters.push_back(30935);
        internalCounters.push_back(31020);
        internalCounters.push_back(31105);
        internalCounters.push_back(31190);
        internalCounters.push_back(31275);
        internalCounters.push_back(31360);
        internalCounters.push_back(31445);
        internalCounters.push_back(31530);
        internalCounters.push_back(31615);
        internalCounters.push_back(31700);
        internalCounters.push_back(31785);
        internalCounters.push_back(31870);
        internalCounters.push_back(31955);
        internalCounters.push_back(32040);
        internalCounters.push_back(32125);
        internalCounters.push_back(32210);
        internalCounters.push_back(32295);
        internalCounters.push_back(32380);
        internalCounters.push_back(32465);
        internalCounters.push_back(32550);
        internalCounters.push_back(32635);
        internalCounters.push_back(32720);
        internalCounters.push_back(32805);
        internalCounters.push_back(32890);
        internalCounters.push_back(32975);
        internalCounters.push_back(33060);
        internalCounters.push_back(33145);
        internalCounters.push_back(33230);
        internalCounters.push_back(33315);
        internalCounters.push_back(33400);
        internalCounters.push_back(33485);
        internalCounters.push_back(33570);
        internalCounters.push_back(33655);
        internalCounters.push_back(33740);
        internalCounters.push_back(33825);
        internalCounters.push_back(33910);
        internalCounters.push_back(33995);
        internalCounters.push_back(34080);
        internalCounters.push_back(34165);
        internalCounters.push_back(34250);
        internalCounters.push_back(34335);

        c.DefineDerivedCounter("L1CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum256", "6e4ee364-41d7-476d-361d-f47b266c15db");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34368);
        internalCounters.push_back(34650);
        internalCounters.push_back(34932);
        internalCounters.push_back(35214);
        internalCounters.push_back(35496);
        internalCounters.push_back(35778);
        internalCounters.push_back(36060);
        internalCounters.push_back(36342);
        internalCounters.push_back(36624);
        internalCounters.push_back(36906);
        internalCounters.push_back(37188);
        internalCounters.push_back(37470);
        internalCounters.push_back(37752);
        internalCounters.push_back(38034);
        internalCounters.push_back(38316);
        internalCounters.push_back(38598);
        internalCounters.push_back(34370);
        internalCounters.push_back(34652);
        internalCounters.push_back(34934);
        internalCounters.push_back(35216);
        internalCounters.push_back(35498);
        internalCounters.push_back(35780);
        internalCounters.push_back(36062);
        internalCounters.push_back(36344);
        internalCounters.push_back(36626);
        internalCounters.push_back(36908);
        internalCounters.push_back(37190);
        internalCounters.push_back(37472);
        internalCounters.push_back(37754);
        internalCounters.push_back(38036);
        internalCounters.push_back(38318);
        internalCounters.push_back(38600);

        c.DefineDerivedCounter("L2CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the L2 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "d78fdf66-104f-8372-02c1-91d07d7dc62e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34368);
        internalCounters.push_back(34650);
        internalCounters.push_back(34932);
        internalCounters.push_back(35214);
        internalCounters.push_back(35496);
        internalCounters.push_back(35778);
        internalCounters.push_back(36060);
        internalCounters.push_back(36342);
        internalCounters.push_back(36624);
        internalCounters.push_back(36906);
        internalCounters.push_back(37188);
        internalCounters.push_back(37470);
        internalCounters.push_back(37752);
        internalCounters.push_back(38034);
        internalCounters.push_back(38316);
        internalCounters.push_back(38598);
        internalCounters.push_back(34370);
        internalCounters.push_back(34652);
        internalCounters.push_back(34934);
        internalCounters.push_back(35216);
        internalCounters.push_back(35498);
        internalCounters.push_back(35780);
        internalCounters.push_back(36062);
        internalCounters.push_back(36344);
        internalCounters.push_back(36626);
        internalCounters.push_back(36908);
        internalCounters.push_back(37190);
        internalCounters.push_back(37472);
        internalCounters.push_back(37754);
        internalCounters.push_back(38036);
        internalCounters.push_back(38318);
        internalCounters.push_back(38600);

        c.DefineDerivedCounter("L2CacheMiss", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that miss the L2 cache. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "4cd70885-41b3-25cd-92db-c76a0decc634");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34368);
        internalCounters.push_back(34650);
        internalCounters.push_back(34932);
        internalCounters.push_back(35214);
        internalCounters.push_back(35496);
        internalCounters.push_back(35778);
        internalCounters.push_back(36060);
        internalCounters.push_back(36342);
        internalCounters.push_back(36624);
        internalCounters.push_back(36906);
        internalCounters.push_back(37188);
        internalCounters.push_back(37470);
        internalCounters.push_back(37752);
        internalCounters.push_back(38034);
        internalCounters.push_back(38316);
        internalCounters.push_back(38598);

        c.DefineDerivedCounter("L2CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "d0bce171-560c-1895-66b3-bc56abccb077");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34370);
        internalCounters.push_back(34652);
        internalCounters.push_back(34934);
        internalCounters.push_back(35216);
        internalCounters.push_back(35498);
        internalCounters.push_back(35780);
        internalCounters.push_back(36062);
        internalCounters.push_back(36344);
        internalCounters.push_back(36626);
        internalCounters.push_back(36908);
        internalCounters.push_back(37190);
        internalCounters.push_back(37472);
        internalCounters.push_back(37754);
        internalCounters.push_back(38036);
        internalCounters.push_back(38318);
        internalCounters.push_back(38600);

        c.DefineDerivedCounter("L2CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f2ab3a1a-ead6-9893-961b-88ba2a758807");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17659);
        internalCounters.push_back(17778);
        internalCounters.push_back(17897);
        internalCounters.push_back(18016);
        internalCounters.push_back(18135);
        internalCounters.push_back(18254);
        internalCounters.push_back(18373);
        internalCounters.push_back(18492);
        internalCounters.push_back(18611);
        internalCounters.push_back(18730);
        internalCounters.push_back(18849);
        internalCounters.push_back(18968);
        internalCounters.push_back(19087);
        internalCounters.push_back(19206);
        internalCounters.push_back(19325);
        internalCounters.push_back(19444);
        internalCounters.push_back(19563);
        internalCounters.push_back(19682);
        internalCounters.push_back(19801);
        internalCounters.push_back(19920);
        internalCounters.push_back(20039);
        internalCounters.push_back(20158);
        internalCounters.push_back(20277);
        internalCounters.push_back(20396);
        internalCounters.push_back(20515);
        internalCounters.push_back(20634);
        internalCounters.push_back(20753);
        internalCounters.push_back(20872);
        internalCounters.push_back(20991);
        internalCounters.push_back(21110);
        internalCounters.push_back(21229);
        internalCounters.push_back(21348);
        internalCounters.push_back(21467);
        internalCounters.push_back(21586);
        internalCounters.push_back(21705);
        internalCounters.push_back(21824);
        internalCounters.push_back(21943);
        internalCounters.push_back(22062);
        internalCounters.push_back(22181);
        internalCounters.push_back(22300);
        internalCounters.push_back(22419);
        internalCounters.push_back(22538);
        internalCounters.push_back(22657);
        internalCounters.push_back(22776);
        internalCounters.push_back(22895);
        internalCounters.push_back(23014);
        internalCounters.push_back(23133);
        internalCounters.push_back(23252);
        internalCounters.push_back(23371);
        internalCounters.push_back(23490);
        internalCounters.push_back(23609);
        internalCounters.push_back(23728);
        internalCounters.push_back(23847);
        internalCounters.push_back(23966);
        internalCounters.push_back(24085);
        internalCounters.push_back(24204);
        internalCounters.push_back(24323);
        internalCounters.push_back(24442);
        internalCounters.push_back(24561);
        internalCounters.push_back(24680);
        internalCounters.push_back(24799);
        internalCounters.push_back(24918);
        internalCounters.push_back(25037);
        internalCounters.push_back(25156);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(17659);
        internalCounters.push_back(17778);
        internalCounters.push_back(17897);
        internalCounters.push_back(18016);
        internalCounters.push_back(18135);
        internalCounters.push_back(18254);
        internalCounters.push_back(18373);
        internalCounters.push_back(18492);
        internalCounters.push_back(18611);
        internalCounters.push_back(18730);
        internalCounters.push_back(18849);
        internalCounters.push_back(18968);
        internalCounters.push_back(19087);
        internalCounters.push_back(19206);
        internalCounters.push_back(19325);
        internalCounters.push_back(19444);
        internalCounters.push_back(19563);
        internalCounters.push_back(19682);
        internalCounters.push_back(19801);
        internalCounters.push_back(19920);
        internalCounters.push_back(20039);
        internalCounters.push_back(20158);
        internalCounters.push_back(20277);
        internalCounters.push_back(20396);
        internalCounters.push_back(20515);
        internalCounters.push_back(20634);
        internalCounters.push_back(20753);
        internalCounters.push_back(20872);
        internalCounters.push_back(20991);
        internalCounters.push_back(21110);
        internalCounters.push_back(21229);
        internalCounters.push_back(21348);
        internalCounters.push_back(21467);
        internalCounters.push_back(21586);
        internalCounters.push_back(21705);
        internalCounters.push_back(21824);
        internalCounters.push_back(21943);
        internalCounters.push_back(22062);
        internalCounters.push_back(22181);
        internalCounters.push_back(22300);
        internalCounters.push_back(22419);
        internalCounters.push_back(22538);
        internalCounters.push_back(22657);
        internalCounters.push_back(22776);
        internalCounters.push_back(22895);
        internalCounters.push_back(23014);
        internalCounters.push_back(23133);
        internalCounters.push_back(23252);
        internalCounters.push_back(23371);
        internalCounters.push_back(23490);
        internalCounters.push_back(23609);
        internalCounters.push_back(23728);
        internalCounters.push_back(23847);
        internalCounters.push_back(23966);
        internalCounters.push_back(24085);
        internalCounters.push_back(24204);
        internalCounters.push_back(24323);
        internalCounters.push_back(24442);
        internalCounters.push_back(24561);
        internalCounters.push_back(24680);
        internalCounters.push_back(24799);
        internalCounters.push_back(24918);
        internalCounters.push_back(25037);
        internalCounters.push_back(25156);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28914);
        internalCounters.push_back(28999);
        internalCounters.push_back(29084);
        internalCounters.push_back(29169);
        internalCounters.push_back(29254);
        internalCounters.push_back(29339);
        internalCounters.push_back(29424);
        internalCounters.push_back(29509);
        internalCounters.push_back(29594);
        internalCounters.push_back(29679);
        internalCounters.push_back(29764);
        internalCounters.push_back(29849);
        internalCounters.push_back(29934);
        internalCounters.push_back(30019);
        internalCounters.push_back(30104);
        internalCounters.push_back(30189);
        internalCounters.push_back(30274);
        internalCounters.push_back(30359);
        internalCounters.push_back(30444);
        internalCounters.push_back(30529);
        internalCounters.push_back(30614);
        internalCounters.push_back(30699);
        internalCounters.push_back(30784);
        internalCounters.push_back(30869);
        internalCounters.push_back(30954);
        internalCounters.push_back(31039);
        internalCounters.push_back(31124);
        internalCounters.push_back(31209);
        internalCounters.push_back(31294);
        internalCounters.push_back(31379);
        internalCounters.push_back(31464);
        internalCounters.push_back(31549);
        internalCounters.push_back(31634);
        internalCounters.push_back(31719);
        internalCounters.push_back(31804);
        internalCounters.push_back(31889);
        internalCounters.push_back(31974);
        internalCounters.push_back(32059);
        internalCounters.push_back(32144);
        internalCounters.push_back(32229);
        internalCounters.push_back(32314);
        internalCounters.push_back(32399);
        internalCounters.push_back(32484);
        internalCounters.push_back(32569);
        internalCounters.push_back(32654);
        internalCounters.push_back(32739);
        internalCounters.push_back(32824);
        internalCounters.push_back(32909);
        internalCounters.push_back(32994);
        internalCounters.push_back(33079);
        internalCounters.push_back(33164);
        internalCounters.push_back(33249);
        internalCounters.push_back(33334);
        internalCounters.push_back(33419);
        internalCounters.push_back(33504);
        internalCounters.push_back(33589);
        internalCounters.push_back(33674);
        internalCounters.push_back(33759);
        internalCounters.push_back(33844);
        internalCounters.push_back(33929);
        internalCounters.push_back(34014);
        internalCounters.push_back(34099);
        internalCounters.push_back(34184);
        internalCounters.push_back(34269);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28914);
        internalCounters.push_back(28999);
        internalCounters.push_back(29084);
        internalCounters.push_back(29169);
        internalCounters.push_back(29254);
        internalCounters.push_back(29339);
        internalCounters.push_back(29424);
        internalCounters.push_back(29509);
        internalCounters.push_back(29594);
        internalCounters.push_back(29679);
        internalCounters.push_back(29764);
        internalCounters.push_back(29849);
        internalCounters.push_back(29934);
        internalCounters.push_back(30019);
        internalCounters.push_back(30104);
        internalCounters.push_back(30189);
        internalCounters.push_back(30274);
        internalCounters.push_back(30359);
        internalCounters.push_back(30444);
        internalCounters.push_back(30529);
        internalCounters.push_back(30614);
        internalCounters.push_back(30699);
        internalCounters.push_back(30784);
        internalCounters.push_back(30869);
        internalCounters.push_back(30954);
        internalCounters.push_back(31039);
        internalCounters.push_back(31124);
        internalCounters.push_back(31209);
        internalCounters.push_back(31294);
        internalCounters.push_back(31379);
        internalCounters.push_back(31464);
        internalCounters.push_back(31549);
        internalCounters.push_back(31634);
        internalCounters.push_back(31719);
        internalCounters.push_back(31804);
        internalCounters.push_back(31889);
        internalCounters.push_back(31974);
        internalCounters.push_back(32059);
        internalCounters.push_back(32144);
        internalCounters.push_back(32229);
        internalCounters.push_back(32314);
        internalCounters.push_back(32399);
        internalCounters.push_back(32484);
        internalCounters.push_back(32569);
        internalCounters.push_back(32654);
        internalCounters.push_back(32739);
        internalCounters.push_back(32824);
        internalCounters.push_back(32909);
        internalCounters.push_back(32994);
        internalCounters.push_back(33079);
        internalCounters.push_back(33164);
        internalCounters.push_back(33249);
        internalCounters.push_back(33334);
        internalCounters.push_back(33419);
        internalCounters.push_back(33504);
        internalCounters.push_back(33589);
        internalCounters.push_back(33674);
        internalCounters.push_back(33759);
        internalCounters.push_back(33844);
        internalCounters.push_back(33929);
        internalCounters.push_back(34014);
        internalCounters.push_back(34099);
        internalCounters.push_back(34184);
        internalCounters.push_back(34269);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34381);
        internalCounters.push_back(34663);
        internalCounters.push_back(34945);
        internalCounters.push_back(35227);
        internalCounters.push_back(35509);
        internalCounters.push_back(35791);
        internalCounters.push_back(36073);
        internalCounters.push_back(36355);
        internalCounters.push_back(36637);
        internalCounters.push_back(36919);
        internalCounters.push_back(37201);
        internalCounters.push_back(37483);
        internalCounters.push_back(37765);
        internalCounters.push_back(38047);
        internalCounters.push_back(38329);
        internalCounters.push_back(38611);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(34381);
        internalCounters.push_back(34663);
        internalCounters.push_back(34945);
        internalCounters.push_back(35227);
        internalCounters.push_back(35509);
        internalCounters.push_back(35791);
        internalCounters.push_back(36073);
        internalCounters.push_back(36355);
        internalCounters.push_back(36637);
        internalCounters.push_back(36919);
        internalCounters.push_back(37201);
        internalCounters.push_back(37483);
        internalCounters.push_back(37765);
        internalCounters.push_back(38047);
        internalCounters.push_back(38329);
        internalCounters.push_back(38611);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(51871);
        internalCounters.push_back(51954);
        internalCounters.push_back(52037);
        internalCounters.push_back(52120);
        internalCounters.push_back(52203);
        internalCounters.push_back(52286);
        internalCounters.push_back(52369);
        internalCounters.push_back(52452);
        internalCounters.push_back(52535);
        internalCounters.push_back(52618);
        internalCounters.push_back(52701);
        internalCounters.push_back(52784);
        internalCounters.push_back(52867);
        internalCounters.push_back(52950);
        internalCounters.push_back(53033);
        internalCounters.push_back(53116);

        c.DefineDerivedCounter("LocalVidMemBytes", "GlobalMemory", "Number of bytes read from or written to local video memory", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "2a601145-56c1-625b-bedd-66d959c5ecc3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(51873);
        internalCounters.push_back(51956);
        internalCounters.push_back(52039);
        internalCounters.push_back(52122);
        internalCounters.push_back(52205);
        internalCounters.push_back(52288);
        internalCounters.push_back(52371);
        internalCounters.push_back(52454);
        internalCounters.push_back(52537);
        internalCounters.push_back(52620);
        internalCounters.push_back(52703);
        internalCounters.push_back(52786);
        internalCounters.push_back(52869);
        internalCounters.push_back(52952);
        internalCounters.push_back(53035);
        internalCounters.push_back(53118);

        c.DefineDerivedCounter("PcieBytes", "GlobalMemory", "Number of bytes sent and received over the PCIe bus", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "4bbe92de-f79e-ed39-bfde-9e08390cdb21");
    }
}

