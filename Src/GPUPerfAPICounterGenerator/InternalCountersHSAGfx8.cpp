//==============================================================================
// Copyright (c) 2010-2018 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  HSA internal counter definitions for GFX8
//==============================================================================

#include "GPAInternalCounter.h"
#include "GPAInternalCountersGfx8.h"
#include "InternalCountersHSAGfx8.h"

// This file is autogenerated by the ConvertHWEnums project

GPA_HardwareCounterDesc* HSACounterGroupArrayGfx8[] =
{
    CPCcountersGfx8,
    CPFcountersGfx8,
    GDScountersGfx8,
    GRBMcountersGfx8,
    GRBMSE0countersGfx8,
    SPI0countersGfx8,
    SQ0countersGfx8,
    SQ_CS0countersGfx8,
    SRBMcountersGfx8,
    SX0countersGfx8,
    TA0countersGfx8,
    TA1countersGfx8,
    TA2countersGfx8,
    TA3countersGfx8,
    TA4countersGfx8,
    TA5countersGfx8,
    TA6countersGfx8,
    TA7countersGfx8,
    TA8countersGfx8,
    TA9countersGfx8,
    TA10countersGfx8,
    TA11countersGfx8,
    TA12countersGfx8,
    TA13countersGfx8,
    TA14countersGfx8,
    TA15countersGfx8,
    TCA0countersGfx8,
    TCA1countersGfx8,
    TCC0countersGfx8,
    TCC1countersGfx8,
    TCC2countersGfx8,
    TCC3countersGfx8,
    TCC4countersGfx8,
    TCC5countersGfx8,
    TCC6countersGfx8,
    TCC7countersGfx8,
    TCC8countersGfx8,
    TCC9countersGfx8,
    TCC10countersGfx8,
    TCC11countersGfx8,
    TCC12countersGfx8,
    TCC13countersGfx8,
    TCC14countersGfx8,
    TCC15countersGfx8,
    TCP0countersGfx8,
    TCP1countersGfx8,
    TCP2countersGfx8,
    TCP3countersGfx8,
    TCP4countersGfx8,
    TCP5countersGfx8,
    TCP6countersGfx8,
    TCP7countersGfx8,
    TCP8countersGfx8,
    TCP9countersGfx8,
    TCP10countersGfx8,
    TCP11countersGfx8,
    TCP12countersGfx8,
    TCP13countersGfx8,
    TCP14countersGfx8,
    TCP15countersGfx8,
    TD0countersGfx8,
    TD1countersGfx8,
    TD2countersGfx8,
    TD3countersGfx8,
    TD4countersGfx8,
    TD5countersGfx8,
    TD6countersGfx8,
    TD7countersGfx8,
    TD8countersGfx8,
    TD9countersGfx8,
    TD10countersGfx8,
    TD11countersGfx8,
    TD12countersGfx8,
    TD13countersGfx8,
    TD14countersGfx8,
    TD15countersGfx8,
    MC0countersGfx8,
};

GPA_CounterGroupDesc HWHSAGroupsGfx8[] =
{
    {0, "CPC", 0, 24, 2},
    {1, "CPF", 0, 19, 2},
    {2, "GDS", 0, 121, 4},
    {3, "GRBM", 0, 34, 2},
    {4, "GRBMSE", 0, 15, 4},
    {5, "SPI", 0, 197, 6},
    {6, "SQ", 0, 299, 16},
    {7, "SQ_CS", 0, 299, 16},
    {8, "SRBM", 0, 27, 2},
    {9, "SX", 0, 34, 4},
    {10, "TA0", 0, 119, 2},
    {11, "TA1", 1, 119, 2},
    {12, "TA2", 2, 119, 2},
    {13, "TA3", 3, 119, 2},
    {14, "TA4", 4, 119, 2},
    {15, "TA5", 5, 119, 2},
    {16, "TA6", 6, 119, 2},
    {17, "TA7", 7, 119, 2},
    {18, "TA8", 8, 119, 2},
    {19, "TA9", 9, 119, 2},
    {20, "TA10", 10, 119, 2},
    {21, "TA11", 11, 119, 2},
    {22, "TA12", 12, 119, 2},
    {23, "TA13", 13, 119, 2},
    {24, "TA14", 14, 119, 2},
    {25, "TA15", 15, 119, 2},
    {26, "TCA0", 0, 35, 4},
    {27, "TCA1", 1, 35, 4},
    {28, "TCC0", 0, 192, 4},
    {29, "TCC1", 1, 192, 4},
    {30, "TCC2", 2, 192, 4},
    {31, "TCC3", 3, 192, 4},
    {32, "TCC4", 4, 192, 4},
    {33, "TCC5", 5, 192, 4},
    {34, "TCC6", 6, 192, 4},
    {35, "TCC7", 7, 192, 4},
    {36, "TCC8", 8, 192, 4},
    {37, "TCC9", 9, 192, 4},
    {38, "TCC10", 10, 192, 4},
    {39, "TCC11", 11, 192, 4},
    {40, "TCC12", 12, 192, 4},
    {41, "TCC13", 13, 192, 4},
    {42, "TCC14", 14, 192, 4},
    {43, "TCC15", 15, 192, 4},
    {44, "TCP0", 0, 180, 4},
    {45, "TCP1", 1, 180, 4},
    {46, "TCP2", 2, 180, 4},
    {47, "TCP3", 3, 180, 4},
    {48, "TCP4", 4, 180, 4},
    {49, "TCP5", 5, 180, 4},
    {50, "TCP6", 6, 180, 4},
    {51, "TCP7", 7, 180, 4},
    {52, "TCP8", 8, 180, 4},
    {53, "TCP9", 9, 180, 4},
    {54, "TCP10", 10, 180, 4},
    {55, "TCP11", 11, 180, 4},
    {56, "TCP12", 12, 180, 4},
    {57, "TCP13", 13, 180, 4},
    {58, "TCP14", 14, 180, 4},
    {59, "TCP15", 15, 180, 4},
    {60, "TD0", 0, 55, 2},
    {61, "TD1", 1, 55, 2},
    {62, "TD2", 2, 55, 2},
    {63, "TD3", 3, 55, 2},
    {64, "TD4", 4, 55, 2},
    {65, "TD5", 5, 55, 2},
    {66, "TD6", 6, 55, 2},
    {67, "TD7", 7, 55, 2},
    {68, "TD8", 8, 55, 2},
    {69, "TD9", 9, 55, 2},
    {70, "TD10", 10, 55, 2},
    {71, "TD11", 11, 55, 2},
    {72, "TD12", 12, 55, 2},
    {73, "TD13", 13, 55, 2},
    {74, "TD14", 14, 55, 2},
    {75, "TD15", 15, 55, 2},
    {76, "MC", 0, 33, 4},
};

GPA_SQCounterGroupDesc HWHSASQGroupsGfx8[] =
{
    {6, 0, SQ_ALL},
    {7, 0, SQ_CS},
};


unsigned int HWHSASQIsolatedGroupsGfx8[] =
{
    10, // Ta
    11, // Ta
    12, // Ta
    13, // Ta
    14, // Ta
    15, // Ta
    16, // Ta
    17, // Ta
    18, // Ta
    19, // Ta
    20, // Ta
    21, // Ta
    22, // Ta
    23, // Ta
    24, // Ta
    25, // Ta
    26, // Tca
    27, // Tca
    28, // Tcc
    29, // Tcc
    30, // Tcc
    31, // Tcc
    32, // Tcc
    33, // Tcc
    34, // Tcc
    35, // Tcc
    36, // Tcc
    37, // Tcc
    38, // Tcc
    39, // Tcc
    40, // Tcc
    41, // Tcc
    42, // Tcc
    43, // Tcc
    44, // Tcp
    45, // Tcp
    46, // Tcp
    47, // Tcp
    48, // Tcp
    49, // Tcp
    50, // Tcp
    51, // Tcp
    52, // Tcp
    53, // Tcp
    54, // Tcp
    55, // Tcp
    56, // Tcp
    57, // Tcp
    58, // Tcp
    59, // Tcp
    60, // Td
    61, // Td
    62, // Td
    63, // Td
    64, // Td
    65, // Td
    66, // Td
    67, // Td
    68, // Td
    69, // Td
    70, // Td
    71, // Td
    72, // Td
    73, // Td
    74, // Td
    75, // Td
};

const std::set<unsigned int> HWHSATimestampBlockIdsGfx8 = {  }; ///< Timestamp block id's for HSA for Gfx8 family
const std::set<unsigned int> HWHSATimeCounterIndicesGfx8 = {  }; ///< Timestamp counter indices for HSA for Gfx8 family
const unsigned int HWHSAGroupCountGfx8 = sizeof(HWHSAGroupsGfx8) / sizeof(GPA_CounterGroupDesc);
const unsigned int HWHSASQGroupCountGfx8 = sizeof(HWHSASQGroupsGfx8) / sizeof(GPA_SQCounterGroupDesc);
const unsigned int HWHSASQIsolatedGroupCountGfx8 = sizeof(HWHSASQIsolatedGroupsGfx8) / sizeof(unsigned int);
