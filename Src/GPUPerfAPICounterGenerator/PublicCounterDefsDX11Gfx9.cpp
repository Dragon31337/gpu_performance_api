//==============================================================================
// Copyright (c) 2010-2018 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief PublicCounterDefinitions for DX11GFX9
//==============================================================================

#include "GPAInternalCounter.h"
#include "PublicCounterDefsDX11Gfx9.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDX11Gfx9(GPA_DerivedCounters& c)
{
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(55296);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12484);
        internalCounters.push_back(12482);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time GPU was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "bef38bf3-1167-0844-81f0-67d2d28ddbc5");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "1e84970d-7014-2b8d-d61e-388b5f782691");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(51143);
        internalCounters.push_back(51291);
        internalCounters.push_back(51439);
        internalCounters.push_back(51587);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("TessellatorBusy", "Timing", "The percentage of time the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(51143);
        internalCounters.push_back(51291);
        internalCounters.push_back(51439);
        internalCounters.push_back(51587);

        c.DefineDerivedCounter("TessellatorBusyCycles", "Timing", "Number of GPU cycles that the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16796);
        internalCounters.push_back(16992);
        internalCounters.push_back(17188);
        internalCounters.push_back(17384);
        internalCounters.push_back(16805);
        internalCounters.push_back(17001);
        internalCounters.push_back(17197);
        internalCounters.push_back(17393);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16796);
        internalCounters.push_back(16992);
        internalCounters.push_back(17188);
        internalCounters.push_back(17384);
        internalCounters.push_back(16805);
        internalCounters.push_back(17001);
        internalCounters.push_back(17197);
        internalCounters.push_back(17393);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(55296);
        internalCounters.push_back(16796);
        internalCounters.push_back(16992);
        internalCounters.push_back(17188);
        internalCounters.push_back(17384);
        internalCounters.push_back(16805);
        internalCounters.push_back(17001);
        internalCounters.push_back(17197);
        internalCounters.push_back(17393);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16827);
        internalCounters.push_back(17023);
        internalCounters.push_back(17219);
        internalCounters.push_back(17415);
        internalCounters.push_back(16833);
        internalCounters.push_back(17029);
        internalCounters.push_back(17225);
        internalCounters.push_back(17421);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16827);
        internalCounters.push_back(17023);
        internalCounters.push_back(17219);
        internalCounters.push_back(17415);
        internalCounters.push_back(16833);
        internalCounters.push_back(17029);
        internalCounters.push_back(17225);
        internalCounters.push_back(17421);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(55296);
        internalCounters.push_back(16827);
        internalCounters.push_back(17023);
        internalCounters.push_back(17219);
        internalCounters.push_back(17415);
        internalCounters.push_back(16833);
        internalCounters.push_back(17029);
        internalCounters.push_back(17225);
        internalCounters.push_back(17421);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16815);
        internalCounters.push_back(17011);
        internalCounters.push_back(17207);
        internalCounters.push_back(17403);
        internalCounters.push_back(16818);
        internalCounters.push_back(17014);
        internalCounters.push_back(17210);
        internalCounters.push_back(17406);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("GSBusy", "Timing", "The percentage of time the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "876f36d8-d046-833f-7832-673cbffd0a45");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16815);
        internalCounters.push_back(17011);
        internalCounters.push_back(17207);
        internalCounters.push_back(17403);
        internalCounters.push_back(16818);
        internalCounters.push_back(17014);
        internalCounters.push_back(17210);
        internalCounters.push_back(17406);

        c.DefineDerivedCounter("GSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "48203b6b-8983-c067-d63e-05da8be5111b");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(55296);
        internalCounters.push_back(16815);
        internalCounters.push_back(17011);
        internalCounters.push_back(17207);
        internalCounters.push_back(17403);
        internalCounters.push_back(16818);
        internalCounters.push_back(17014);
        internalCounters.push_back(17210);
        internalCounters.push_back(17406);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("GSTime", "Timing", "Time geometry shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "c73e715f-59af-76e8-9e22-097b94c066c4");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);
        internalCounters.push_back(17437);
        internalCounters.push_back(16854);
        internalCounters.push_back(17050);
        internalCounters.push_back(17246);
        internalCounters.push_back(17442);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);
        internalCounters.push_back(17437);
        internalCounters.push_back(16854);
        internalCounters.push_back(17050);
        internalCounters.push_back(17246);
        internalCounters.push_back(17442);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(55296);
        internalCounters.push_back(16849);
        internalCounters.push_back(17045);
        internalCounters.push_back(17241);
        internalCounters.push_back(17437);
        internalCounters.push_back(16854);
        internalCounters.push_back(17050);
        internalCounters.push_back(17246);
        internalCounters.push_back(17442);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16837);
        internalCounters.push_back(17033);
        internalCounters.push_back(17229);
        internalCounters.push_back(17425);
        internalCounters.push_back(16841);
        internalCounters.push_back(17037);
        internalCounters.push_back(17233);
        internalCounters.push_back(17429);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(17431);
        internalCounters.push_back(16847);
        internalCounters.push_back(17043);
        internalCounters.push_back(17239);
        internalCounters.push_back(17435);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16837);
        internalCounters.push_back(17033);
        internalCounters.push_back(17229);
        internalCounters.push_back(17425);
        internalCounters.push_back(16841);
        internalCounters.push_back(17037);
        internalCounters.push_back(17233);
        internalCounters.push_back(17429);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(17431);
        internalCounters.push_back(16847);
        internalCounters.push_back(17043);
        internalCounters.push_back(17239);
        internalCounters.push_back(17435);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(55296);
        internalCounters.push_back(16837);
        internalCounters.push_back(17033);
        internalCounters.push_back(17229);
        internalCounters.push_back(17425);
        internalCounters.push_back(16841);
        internalCounters.push_back(17037);
        internalCounters.push_back(17233);
        internalCounters.push_back(17429);
        internalCounters.push_back(16843);
        internalCounters.push_back(17039);
        internalCounters.push_back(17235);
        internalCounters.push_back(17431);
        internalCounters.push_back(16847);
        internalCounters.push_back(17043);
        internalCounters.push_back(17239);
        internalCounters.push_back(17435);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(51038);
        internalCounters.push_back(51186);
        internalCounters.push_back(51334);
        internalCounters.push_back(51482);
        internalCounters.push_back(51019);
        internalCounters.push_back(51167);
        internalCounters.push_back(51315);
        internalCounters.push_back(51463);
        internalCounters.push_back(51114);
        internalCounters.push_back(51262);
        internalCounters.push_back(51410);
        internalCounters.push_back(51558);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(22093);
        internalCounters.push_back(22467);
        internalCounters.push_back(22841);
        internalCounters.push_back(23215);
        internalCounters.push_back(22071);
        internalCounters.push_back(22445);
        internalCounters.push_back(22819);
        internalCounters.push_back(23193);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(22097);
        internalCounters.push_back(22471);
        internalCounters.push_back(22845);
        internalCounters.push_back(23219);
        internalCounters.push_back(22071);
        internalCounters.push_back(22445);
        internalCounters.push_back(22819);
        internalCounters.push_back(23193);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(22138);
        internalCounters.push_back(22512);
        internalCounters.push_back(22886);
        internalCounters.push_back(23260);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(22138);
        internalCounters.push_back(22512);
        internalCounters.push_back(22886);
        internalCounters.push_back(23260);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(22151);
        internalCounters.push_back(22525);
        internalCounters.push_back(22899);
        internalCounters.push_back(23273);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(22151);
        internalCounters.push_back(22525);
        internalCounters.push_back(22899);
        internalCounters.push_back(23273);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(51123);
        internalCounters.push_back(51271);
        internalCounters.push_back(51419);
        internalCounters.push_back(51567);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(26581);
        internalCounters.push_back(26955);
        internalCounters.push_back(27329);
        internalCounters.push_back(27703);
        internalCounters.push_back(26559);
        internalCounters.push_back(26933);
        internalCounters.push_back(27307);
        internalCounters.push_back(27681);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(26585);
        internalCounters.push_back(26959);
        internalCounters.push_back(27333);
        internalCounters.push_back(27707);
        internalCounters.push_back(26559);
        internalCounters.push_back(26933);
        internalCounters.push_back(27307);
        internalCounters.push_back(27681);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(26626);
        internalCounters.push_back(27000);
        internalCounters.push_back(27374);
        internalCounters.push_back(27748);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(26626);
        internalCounters.push_back(27000);
        internalCounters.push_back(27374);
        internalCounters.push_back(27748);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(26639);
        internalCounters.push_back(27013);
        internalCounters.push_back(27387);
        internalCounters.push_back(27761);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(26639);
        internalCounters.push_back(27013);
        internalCounters.push_back(27387);
        internalCounters.push_back(27761);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(51027);
        internalCounters.push_back(51175);
        internalCounters.push_back(51323);
        internalCounters.push_back(51471);

        c.DefineDerivedCounter("GSPrimsIn", "GeometryShader", "The number of primitives passed into the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "20c29866-509a-aaab-2697-6b2c38f79953");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(51038);
        internalCounters.push_back(51186);
        internalCounters.push_back(51334);
        internalCounters.push_back(51482);
        internalCounters.push_back(51019);
        internalCounters.push_back(51167);
        internalCounters.push_back(51315);
        internalCounters.push_back(51463);

        c.DefineDerivedCounter("GSVerticesOut", "GeometryShader", "The number of vertices output by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero", "775b9736-319a-bd8a-48c9-68db9c91d978");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(20597);
        internalCounters.push_back(20971);
        internalCounters.push_back(21345);
        internalCounters.push_back(21719);
        internalCounters.push_back(20575);
        internalCounters.push_back(20949);
        internalCounters.push_back(21323);
        internalCounters.push_back(21697);

        c.DefineDerivedCounter("GSVALUInstCount", "GeometryShader", "Average number of vector ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "21b12bfa-b8cd-2e71-a2d5-f9e9f1d65d61");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(20601);
        internalCounters.push_back(20975);
        internalCounters.push_back(21349);
        internalCounters.push_back(21723);
        internalCounters.push_back(20575);
        internalCounters.push_back(20949);
        internalCounters.push_back(21323);
        internalCounters.push_back(21697);

        c.DefineDerivedCounter("GSSALUInstCount", "GeometryShader", "Average number of scalar ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "a8562594-d335-ca43-61bf-03b72d2b98a5");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(20642);
        internalCounters.push_back(21016);
        internalCounters.push_back(21390);
        internalCounters.push_back(21764);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("GSVALUBusy", "GeometryShader", "The percentage of GPUTime vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "228a4818-1e56-cebb-0720-3b2cdc057a6f");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(20642);
        internalCounters.push_back(21016);
        internalCounters.push_back(21390);
        internalCounters.push_back(21764);

        c.DefineDerivedCounter("GSVALUBusyCycles", "GeometryShader", "Number of GPU cycles where vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "be217edd-226f-bd97-9a48-46e2809b1933");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(20655);
        internalCounters.push_back(21029);
        internalCounters.push_back(21403);
        internalCounters.push_back(21777);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("GSSALUBusy", "GeometryShader", "The percentage of GPUTime scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,NUM_SHADER_ENGINES,/,/,4,/,(100),*", "f28ce300-800e-9822-39e4-f48528bdb935");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(20655);
        internalCounters.push_back(21029);
        internalCounters.push_back(21403);
        internalCounters.push_back(21777);

        c.DefineDerivedCounter("GSSALUBusyCycles", "GeometryShader", "Number of GPU cycles where scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,NUM_SHADER_ENGINES,/,/", "b3eace7c-3bc4-0107-887f-923851dc8ea7");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12696);
        internalCounters.push_back(13047);
        internalCounters.push_back(13398);
        internalCounters.push_back(13749);
        internalCounters.push_back(12700);
        internalCounters.push_back(13051);
        internalCounters.push_back(13402);
        internalCounters.push_back(13753);
        internalCounters.push_back(12652);
        internalCounters.push_back(13003);
        internalCounters.push_back(13354);
        internalCounters.push_back(13705);
        internalCounters.push_back(12664);
        internalCounters.push_back(13015);
        internalCounters.push_back(13366);
        internalCounters.push_back(13717);
        internalCounters.push_back(12653);
        internalCounters.push_back(13004);
        internalCounters.push_back(13355);
        internalCounters.push_back(13706);
        internalCounters.push_back(12665);
        internalCounters.push_back(13016);
        internalCounters.push_back(13367);
        internalCounters.push_back(13718);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "fe08f347-91cb-01b6-02e4-d79f7cb89a93");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12696);
        internalCounters.push_back(13047);
        internalCounters.push_back(13398);
        internalCounters.push_back(13749);
        internalCounters.push_back(12700);
        internalCounters.push_back(13051);
        internalCounters.push_back(13402);
        internalCounters.push_back(13753);
        internalCounters.push_back(12652);
        internalCounters.push_back(13003);
        internalCounters.push_back(13354);
        internalCounters.push_back(13705);
        internalCounters.push_back(12664);
        internalCounters.push_back(13015);
        internalCounters.push_back(13366);
        internalCounters.push_back(13717);
        internalCounters.push_back(12653);
        internalCounters.push_back(13004);
        internalCounters.push_back(13355);
        internalCounters.push_back(13706);
        internalCounters.push_back(12665);
        internalCounters.push_back(13016);
        internalCounters.push_back(13367);
        internalCounters.push_back(13718);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "b75bc709-9c04-bf6c-b3f2-511b66e70ed0");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12599);
        internalCounters.push_back(12950);
        internalCounters.push_back(13301);
        internalCounters.push_back(13652);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12605);
        internalCounters.push_back(12956);
        internalCounters.push_back(13307);
        internalCounters.push_back(13658);
        internalCounters.push_back(12645);
        internalCounters.push_back(12996);
        internalCounters.push_back(13347);
        internalCounters.push_back(13698);
        internalCounters.push_back(12646);
        internalCounters.push_back(12997);
        internalCounters.push_back(13348);
        internalCounters.push_back(13699);
        internalCounters.push_back(12647);
        internalCounters.push_back(12998);
        internalCounters.push_back(13349);
        internalCounters.push_back(13700);
        internalCounters.push_back(12648);
        internalCounters.push_back(12999);
        internalCounters.push_back(13350);
        internalCounters.push_back(13701);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,+,2,+,3,+,4,+,5,+,6,+,7,+,8,+,9,+,10,+,11,+,12,+,13,+,14,+,15,+,16,+,17,+,18,+,19,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12612);
        internalCounters.push_back(12963);
        internalCounters.push_back(13314);
        internalCounters.push_back(13665);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12700);
        internalCounters.push_back(13051);
        internalCounters.push_back(13402);
        internalCounters.push_back(13753);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(12700);
        internalCounters.push_back(13051);
        internalCounters.push_back(13402);
        internalCounters.push_back(13753);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(15975);
        internalCounters.push_back(16183);
        internalCounters.push_back(16391);
        internalCounters.push_back(16599);
        internalCounters.push_back(15980);
        internalCounters.push_back(16188);
        internalCounters.push_back(16396);
        internalCounters.push_back(16604);
        internalCounters.push_back(15985);
        internalCounters.push_back(16193);
        internalCounters.push_back(16401);
        internalCounters.push_back(16609);
        internalCounters.push_back(15990);
        internalCounters.push_back(16198);
        internalCounters.push_back(16406);
        internalCounters.push_back(16614);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,8,9,10,11,sum4,12,13,14,15,sum4,sum4", "edd35449-8cba-daa2-06f8-8f0eb2bd42c8");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(15977);
        internalCounters.push_back(16185);
        internalCounters.push_back(16393);
        internalCounters.push_back(16601);
        internalCounters.push_back(15982);
        internalCounters.push_back(16190);
        internalCounters.push_back(16398);
        internalCounters.push_back(16606);
        internalCounters.push_back(15987);
        internalCounters.push_back(16195);
        internalCounters.push_back(16403);
        internalCounters.push_back(16611);
        internalCounters.push_back(15992);
        internalCounters.push_back(16200);
        internalCounters.push_back(16408);
        internalCounters.push_back(16616);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max,16,/,(100),*", "d438414c-9ff5-d60a-1468-92040ce387c7");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(15977);
        internalCounters.push_back(16185);
        internalCounters.push_back(16393);
        internalCounters.push_back(16601);
        internalCounters.push_back(15982);
        internalCounters.push_back(16190);
        internalCounters.push_back(16398);
        internalCounters.push_back(16606);
        internalCounters.push_back(15987);
        internalCounters.push_back(16195);
        internalCounters.push_back(16403);
        internalCounters.push_back(16611);
        internalCounters.push_back(15992);
        internalCounters.push_back(16200);
        internalCounters.push_back(16408);
        internalCounters.push_back(16616);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max", "477bf668-a6d3-bd1b-823e-3aff43b2beb4");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(23589);
        internalCounters.push_back(23963);
        internalCounters.push_back(24337);
        internalCounters.push_back(24711);
        internalCounters.push_back(23567);
        internalCounters.push_back(23941);
        internalCounters.push_back(24315);
        internalCounters.push_back(24689);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(23593);
        internalCounters.push_back(23967);
        internalCounters.push_back(24341);
        internalCounters.push_back(24715);
        internalCounters.push_back(23567);
        internalCounters.push_back(23941);
        internalCounters.push_back(24315);
        internalCounters.push_back(24689);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(23634);
        internalCounters.push_back(24008);
        internalCounters.push_back(24382);
        internalCounters.push_back(24756);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(23634);
        internalCounters.push_back(24008);
        internalCounters.push_back(24382);
        internalCounters.push_back(24756);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(23647);
        internalCounters.push_back(24021);
        internalCounters.push_back(24395);
        internalCounters.push_back(24769);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,NUM_SHADER_ENGINES,/,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(23647);
        internalCounters.push_back(24021);
        internalCounters.push_back(24395);
        internalCounters.push_back(24769);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,NUM_SHADER_ENGINES,/,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16841);
        internalCounters.push_back(17037);
        internalCounters.push_back(17233);
        internalCounters.push_back(17429);
        internalCounters.push_back(16847);
        internalCounters.push_back(17043);
        internalCounters.push_back(17239);
        internalCounters.push_back(17435);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);
        internalCounters.push_back(17593);
        internalCounters.push_back(17967);
        internalCounters.push_back(18341);
        internalCounters.push_back(18715);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28077);
        internalCounters.push_back(28451);
        internalCounters.push_back(28825);
        internalCounters.push_back(29199);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28136);
        internalCounters.push_back(28510);
        internalCounters.push_back(28884);
        internalCounters.push_back(29258);
        internalCounters.push_back(28122);
        internalCounters.push_back(28496);
        internalCounters.push_back(28870);
        internalCounters.push_back(29244);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of 64. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),*,/,(100),*,8,9,10,11,12,13,14,15,sum8,ifnotzero,(100),min", "4476879e-cdc0-d602-b24e-9b4a8d38438f");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28081);
        internalCounters.push_back(28455);
        internalCounters.push_back(28829);
        internalCounters.push_back(29203);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28079);
        internalCounters.push_back(28453);
        internalCounters.push_back(28827);
        internalCounters.push_back(29201);
        internalCounters.push_back(29648);
        internalCounters.push_back(29767);
        internalCounters.push_back(29886);
        internalCounters.push_back(30005);
        internalCounters.push_back(30124);
        internalCounters.push_back(30243);
        internalCounters.push_back(30362);
        internalCounters.push_back(30481);
        internalCounters.push_back(30600);
        internalCounters.push_back(30719);
        internalCounters.push_back(30838);
        internalCounters.push_back(30957);
        internalCounters.push_back(31076);
        internalCounters.push_back(31195);
        internalCounters.push_back(31314);
        internalCounters.push_back(31433);
        internalCounters.push_back(31552);
        internalCounters.push_back(31671);
        internalCounters.push_back(31790);
        internalCounters.push_back(31909);
        internalCounters.push_back(32028);
        internalCounters.push_back(32147);
        internalCounters.push_back(32266);
        internalCounters.push_back(32385);
        internalCounters.push_back(32504);
        internalCounters.push_back(32623);
        internalCounters.push_back(32742);
        internalCounters.push_back(32861);
        internalCounters.push_back(32980);
        internalCounters.push_back(33099);
        internalCounters.push_back(33218);
        internalCounters.push_back(33337);
        internalCounters.push_back(33456);
        internalCounters.push_back(33575);
        internalCounters.push_back(33694);
        internalCounters.push_back(33813);
        internalCounters.push_back(33932);
        internalCounters.push_back(34051);
        internalCounters.push_back(34170);
        internalCounters.push_back(34289);
        internalCounters.push_back(34408);
        internalCounters.push_back(34527);
        internalCounters.push_back(34646);
        internalCounters.push_back(34765);
        internalCounters.push_back(34884);
        internalCounters.push_back(35003);
        internalCounters.push_back(35122);
        internalCounters.push_back(35241);
        internalCounters.push_back(35360);
        internalCounters.push_back(35479);
        internalCounters.push_back(35598);
        internalCounters.push_back(35717);
        internalCounters.push_back(35836);
        internalCounters.push_back(35955);
        internalCounters.push_back(36074);
        internalCounters.push_back(36193);
        internalCounters.push_back(36312);
        internalCounters.push_back(36431);
        internalCounters.push_back(36550);
        internalCounters.push_back(36669);
        internalCounters.push_back(36788);
        internalCounters.push_back(36907);
        internalCounters.push_back(37026);
        internalCounters.push_back(37145);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28082);
        internalCounters.push_back(28456);
        internalCounters.push_back(28830);
        internalCounters.push_back(29204);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28078);
        internalCounters.push_back(28452);
        internalCounters.push_back(28826);
        internalCounters.push_back(29200);
        internalCounters.push_back(29649);
        internalCounters.push_back(29768);
        internalCounters.push_back(29887);
        internalCounters.push_back(30006);
        internalCounters.push_back(30125);
        internalCounters.push_back(30244);
        internalCounters.push_back(30363);
        internalCounters.push_back(30482);
        internalCounters.push_back(30601);
        internalCounters.push_back(30720);
        internalCounters.push_back(30839);
        internalCounters.push_back(30958);
        internalCounters.push_back(31077);
        internalCounters.push_back(31196);
        internalCounters.push_back(31315);
        internalCounters.push_back(31434);
        internalCounters.push_back(31553);
        internalCounters.push_back(31672);
        internalCounters.push_back(31791);
        internalCounters.push_back(31910);
        internalCounters.push_back(32029);
        internalCounters.push_back(32148);
        internalCounters.push_back(32267);
        internalCounters.push_back(32386);
        internalCounters.push_back(32505);
        internalCounters.push_back(32624);
        internalCounters.push_back(32743);
        internalCounters.push_back(32862);
        internalCounters.push_back(32981);
        internalCounters.push_back(33100);
        internalCounters.push_back(33219);
        internalCounters.push_back(33338);
        internalCounters.push_back(33457);
        internalCounters.push_back(33576);
        internalCounters.push_back(33695);
        internalCounters.push_back(33814);
        internalCounters.push_back(33933);
        internalCounters.push_back(34052);
        internalCounters.push_back(34171);
        internalCounters.push_back(34290);
        internalCounters.push_back(34409);
        internalCounters.push_back(34528);
        internalCounters.push_back(34647);
        internalCounters.push_back(34766);
        internalCounters.push_back(34885);
        internalCounters.push_back(35004);
        internalCounters.push_back(35123);
        internalCounters.push_back(35242);
        internalCounters.push_back(35361);
        internalCounters.push_back(35480);
        internalCounters.push_back(35599);
        internalCounters.push_back(35718);
        internalCounters.push_back(35837);
        internalCounters.push_back(35956);
        internalCounters.push_back(36075);
        internalCounters.push_back(36194);
        internalCounters.push_back(36313);
        internalCounters.push_back(36432);
        internalCounters.push_back(36551);
        internalCounters.push_back(36670);
        internalCounters.push_back(36789);
        internalCounters.push_back(36908);
        internalCounters.push_back(37027);
        internalCounters.push_back(37146);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28083);
        internalCounters.push_back(28457);
        internalCounters.push_back(28831);
        internalCounters.push_back(29205);
        internalCounters.push_back(28084);
        internalCounters.push_back(28458);
        internalCounters.push_back(28832);
        internalCounters.push_back(29206);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSFlatVMemInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to the video memory executed per work item (affected by flow control). Includes FLAT instructions that read from or write to scratch.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "2570b477-13e3-f5b6-e6ff-7159373bc74d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28122);
        internalCounters.push_back(28496);
        internalCounters.push_back(28870);
        internalCounters.push_back(29244);
        internalCounters.push_back(12484);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28122);
        internalCounters.push_back(28496);
        internalCounters.push_back(28870);
        internalCounters.push_back(29244);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28135);
        internalCounters.push_back(28509);
        internalCounters.push_back(28883);
        internalCounters.push_back(29257);
        internalCounters.push_back(12484);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,NUM_SHADER_ENGINES,/,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28135);
        internalCounters.push_back(28509);
        internalCounters.push_back(28883);
        internalCounters.push_back(29257);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,NUM_SHADER_ENGINES,/,/", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29562);
        internalCounters.push_back(29681);
        internalCounters.push_back(29800);
        internalCounters.push_back(29919);
        internalCounters.push_back(30038);
        internalCounters.push_back(30157);
        internalCounters.push_back(30276);
        internalCounters.push_back(30395);
        internalCounters.push_back(30514);
        internalCounters.push_back(30633);
        internalCounters.push_back(30752);
        internalCounters.push_back(30871);
        internalCounters.push_back(30990);
        internalCounters.push_back(31109);
        internalCounters.push_back(31228);
        internalCounters.push_back(31347);
        internalCounters.push_back(31466);
        internalCounters.push_back(31585);
        internalCounters.push_back(31704);
        internalCounters.push_back(31823);
        internalCounters.push_back(31942);
        internalCounters.push_back(32061);
        internalCounters.push_back(32180);
        internalCounters.push_back(32299);
        internalCounters.push_back(32418);
        internalCounters.push_back(32537);
        internalCounters.push_back(32656);
        internalCounters.push_back(32775);
        internalCounters.push_back(32894);
        internalCounters.push_back(33013);
        internalCounters.push_back(33132);
        internalCounters.push_back(33251);
        internalCounters.push_back(33370);
        internalCounters.push_back(33489);
        internalCounters.push_back(33608);
        internalCounters.push_back(33727);
        internalCounters.push_back(33846);
        internalCounters.push_back(33965);
        internalCounters.push_back(34084);
        internalCounters.push_back(34203);
        internalCounters.push_back(34322);
        internalCounters.push_back(34441);
        internalCounters.push_back(34560);
        internalCounters.push_back(34679);
        internalCounters.push_back(34798);
        internalCounters.push_back(34917);
        internalCounters.push_back(35036);
        internalCounters.push_back(35155);
        internalCounters.push_back(35274);
        internalCounters.push_back(35393);
        internalCounters.push_back(35512);
        internalCounters.push_back(35631);
        internalCounters.push_back(35750);
        internalCounters.push_back(35869);
        internalCounters.push_back(35988);
        internalCounters.push_back(36107);
        internalCounters.push_back(36226);
        internalCounters.push_back(36345);
        internalCounters.push_back(36464);
        internalCounters.push_back(36583);
        internalCounters.push_back(36702);
        internalCounters.push_back(36821);
        internalCounters.push_back(36940);
        internalCounters.push_back(37059);
        internalCounters.push_back(12484);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29562);
        internalCounters.push_back(29681);
        internalCounters.push_back(29800);
        internalCounters.push_back(29919);
        internalCounters.push_back(30038);
        internalCounters.push_back(30157);
        internalCounters.push_back(30276);
        internalCounters.push_back(30395);
        internalCounters.push_back(30514);
        internalCounters.push_back(30633);
        internalCounters.push_back(30752);
        internalCounters.push_back(30871);
        internalCounters.push_back(30990);
        internalCounters.push_back(31109);
        internalCounters.push_back(31228);
        internalCounters.push_back(31347);
        internalCounters.push_back(31466);
        internalCounters.push_back(31585);
        internalCounters.push_back(31704);
        internalCounters.push_back(31823);
        internalCounters.push_back(31942);
        internalCounters.push_back(32061);
        internalCounters.push_back(32180);
        internalCounters.push_back(32299);
        internalCounters.push_back(32418);
        internalCounters.push_back(32537);
        internalCounters.push_back(32656);
        internalCounters.push_back(32775);
        internalCounters.push_back(32894);
        internalCounters.push_back(33013);
        internalCounters.push_back(33132);
        internalCounters.push_back(33251);
        internalCounters.push_back(33370);
        internalCounters.push_back(33489);
        internalCounters.push_back(33608);
        internalCounters.push_back(33727);
        internalCounters.push_back(33846);
        internalCounters.push_back(33965);
        internalCounters.push_back(34084);
        internalCounters.push_back(34203);
        internalCounters.push_back(34322);
        internalCounters.push_back(34441);
        internalCounters.push_back(34560);
        internalCounters.push_back(34679);
        internalCounters.push_back(34798);
        internalCounters.push_back(34917);
        internalCounters.push_back(35036);
        internalCounters.push_back(35155);
        internalCounters.push_back(35274);
        internalCounters.push_back(35393);
        internalCounters.push_back(35512);
        internalCounters.push_back(35631);
        internalCounters.push_back(35750);
        internalCounters.push_back(35869);
        internalCounters.push_back(35988);
        internalCounters.push_back(36107);
        internalCounters.push_back(36226);
        internalCounters.push_back(36345);
        internalCounters.push_back(36464);
        internalCounters.push_back(36583);
        internalCounters.push_back(36702);
        internalCounters.push_back(36821);
        internalCounters.push_back(36940);
        internalCounters.push_back(37059);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(40817);
        internalCounters.push_back(40902);
        internalCounters.push_back(40987);
        internalCounters.push_back(41072);
        internalCounters.push_back(41157);
        internalCounters.push_back(41242);
        internalCounters.push_back(41327);
        internalCounters.push_back(41412);
        internalCounters.push_back(41497);
        internalCounters.push_back(41582);
        internalCounters.push_back(41667);
        internalCounters.push_back(41752);
        internalCounters.push_back(41837);
        internalCounters.push_back(41922);
        internalCounters.push_back(42007);
        internalCounters.push_back(42092);
        internalCounters.push_back(42177);
        internalCounters.push_back(42262);
        internalCounters.push_back(42347);
        internalCounters.push_back(42432);
        internalCounters.push_back(42517);
        internalCounters.push_back(42602);
        internalCounters.push_back(42687);
        internalCounters.push_back(42772);
        internalCounters.push_back(42857);
        internalCounters.push_back(42942);
        internalCounters.push_back(43027);
        internalCounters.push_back(43112);
        internalCounters.push_back(43197);
        internalCounters.push_back(43282);
        internalCounters.push_back(43367);
        internalCounters.push_back(43452);
        internalCounters.push_back(43537);
        internalCounters.push_back(43622);
        internalCounters.push_back(43707);
        internalCounters.push_back(43792);
        internalCounters.push_back(43877);
        internalCounters.push_back(43962);
        internalCounters.push_back(44047);
        internalCounters.push_back(44132);
        internalCounters.push_back(44217);
        internalCounters.push_back(44302);
        internalCounters.push_back(44387);
        internalCounters.push_back(44472);
        internalCounters.push_back(44557);
        internalCounters.push_back(44642);
        internalCounters.push_back(44727);
        internalCounters.push_back(44812);
        internalCounters.push_back(44897);
        internalCounters.push_back(44982);
        internalCounters.push_back(45067);
        internalCounters.push_back(45152);
        internalCounters.push_back(45237);
        internalCounters.push_back(45322);
        internalCounters.push_back(45407);
        internalCounters.push_back(45492);
        internalCounters.push_back(45577);
        internalCounters.push_back(45662);
        internalCounters.push_back(45747);
        internalCounters.push_back(45832);
        internalCounters.push_back(45917);
        internalCounters.push_back(46002);
        internalCounters.push_back(46087);
        internalCounters.push_back(46172);
        internalCounters.push_back(12484);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(40817);
        internalCounters.push_back(40902);
        internalCounters.push_back(40987);
        internalCounters.push_back(41072);
        internalCounters.push_back(41157);
        internalCounters.push_back(41242);
        internalCounters.push_back(41327);
        internalCounters.push_back(41412);
        internalCounters.push_back(41497);
        internalCounters.push_back(41582);
        internalCounters.push_back(41667);
        internalCounters.push_back(41752);
        internalCounters.push_back(41837);
        internalCounters.push_back(41922);
        internalCounters.push_back(42007);
        internalCounters.push_back(42092);
        internalCounters.push_back(42177);
        internalCounters.push_back(42262);
        internalCounters.push_back(42347);
        internalCounters.push_back(42432);
        internalCounters.push_back(42517);
        internalCounters.push_back(42602);
        internalCounters.push_back(42687);
        internalCounters.push_back(42772);
        internalCounters.push_back(42857);
        internalCounters.push_back(42942);
        internalCounters.push_back(43027);
        internalCounters.push_back(43112);
        internalCounters.push_back(43197);
        internalCounters.push_back(43282);
        internalCounters.push_back(43367);
        internalCounters.push_back(43452);
        internalCounters.push_back(43537);
        internalCounters.push_back(43622);
        internalCounters.push_back(43707);
        internalCounters.push_back(43792);
        internalCounters.push_back(43877);
        internalCounters.push_back(43962);
        internalCounters.push_back(44047);
        internalCounters.push_back(44132);
        internalCounters.push_back(44217);
        internalCounters.push_back(44302);
        internalCounters.push_back(44387);
        internalCounters.push_back(44472);
        internalCounters.push_back(44557);
        internalCounters.push_back(44642);
        internalCounters.push_back(44727);
        internalCounters.push_back(44812);
        internalCounters.push_back(44897);
        internalCounters.push_back(44982);
        internalCounters.push_back(45067);
        internalCounters.push_back(45152);
        internalCounters.push_back(45237);
        internalCounters.push_back(45322);
        internalCounters.push_back(45407);
        internalCounters.push_back(45492);
        internalCounters.push_back(45577);
        internalCounters.push_back(45662);
        internalCounters.push_back(45747);
        internalCounters.push_back(45832);
        internalCounters.push_back(45917);
        internalCounters.push_back(46002);
        internalCounters.push_back(46087);
        internalCounters.push_back(46172);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(40871);
        internalCounters.push_back(40956);
        internalCounters.push_back(41041);
        internalCounters.push_back(41126);
        internalCounters.push_back(41211);
        internalCounters.push_back(41296);
        internalCounters.push_back(41381);
        internalCounters.push_back(41466);
        internalCounters.push_back(41551);
        internalCounters.push_back(41636);
        internalCounters.push_back(41721);
        internalCounters.push_back(41806);
        internalCounters.push_back(41891);
        internalCounters.push_back(41976);
        internalCounters.push_back(42061);
        internalCounters.push_back(42146);
        internalCounters.push_back(42231);
        internalCounters.push_back(42316);
        internalCounters.push_back(42401);
        internalCounters.push_back(42486);
        internalCounters.push_back(42571);
        internalCounters.push_back(42656);
        internalCounters.push_back(42741);
        internalCounters.push_back(42826);
        internalCounters.push_back(42911);
        internalCounters.push_back(42996);
        internalCounters.push_back(43081);
        internalCounters.push_back(43166);
        internalCounters.push_back(43251);
        internalCounters.push_back(43336);
        internalCounters.push_back(43421);
        internalCounters.push_back(43506);
        internalCounters.push_back(43591);
        internalCounters.push_back(43676);
        internalCounters.push_back(43761);
        internalCounters.push_back(43846);
        internalCounters.push_back(43931);
        internalCounters.push_back(44016);
        internalCounters.push_back(44101);
        internalCounters.push_back(44186);
        internalCounters.push_back(44271);
        internalCounters.push_back(44356);
        internalCounters.push_back(44441);
        internalCounters.push_back(44526);
        internalCounters.push_back(44611);
        internalCounters.push_back(44696);
        internalCounters.push_back(44781);
        internalCounters.push_back(44866);
        internalCounters.push_back(44951);
        internalCounters.push_back(45036);
        internalCounters.push_back(45121);
        internalCounters.push_back(45206);
        internalCounters.push_back(45291);
        internalCounters.push_back(45376);
        internalCounters.push_back(45461);
        internalCounters.push_back(45546);
        internalCounters.push_back(45631);
        internalCounters.push_back(45716);
        internalCounters.push_back(45801);
        internalCounters.push_back(45886);
        internalCounters.push_back(45971);
        internalCounters.push_back(46056);
        internalCounters.push_back(46141);
        internalCounters.push_back(46226);
        internalCounters.push_back(40880);
        internalCounters.push_back(40965);
        internalCounters.push_back(41050);
        internalCounters.push_back(41135);
        internalCounters.push_back(41220);
        internalCounters.push_back(41305);
        internalCounters.push_back(41390);
        internalCounters.push_back(41475);
        internalCounters.push_back(41560);
        internalCounters.push_back(41645);
        internalCounters.push_back(41730);
        internalCounters.push_back(41815);
        internalCounters.push_back(41900);
        internalCounters.push_back(41985);
        internalCounters.push_back(42070);
        internalCounters.push_back(42155);
        internalCounters.push_back(42240);
        internalCounters.push_back(42325);
        internalCounters.push_back(42410);
        internalCounters.push_back(42495);
        internalCounters.push_back(42580);
        internalCounters.push_back(42665);
        internalCounters.push_back(42750);
        internalCounters.push_back(42835);
        internalCounters.push_back(42920);
        internalCounters.push_back(43005);
        internalCounters.push_back(43090);
        internalCounters.push_back(43175);
        internalCounters.push_back(43260);
        internalCounters.push_back(43345);
        internalCounters.push_back(43430);
        internalCounters.push_back(43515);
        internalCounters.push_back(43600);
        internalCounters.push_back(43685);
        internalCounters.push_back(43770);
        internalCounters.push_back(43855);
        internalCounters.push_back(43940);
        internalCounters.push_back(44025);
        internalCounters.push_back(44110);
        internalCounters.push_back(44195);
        internalCounters.push_back(44280);
        internalCounters.push_back(44365);
        internalCounters.push_back(44450);
        internalCounters.push_back(44535);
        internalCounters.push_back(44620);
        internalCounters.push_back(44705);
        internalCounters.push_back(44790);
        internalCounters.push_back(44875);
        internalCounters.push_back(44960);
        internalCounters.push_back(45045);
        internalCounters.push_back(45130);
        internalCounters.push_back(45215);
        internalCounters.push_back(45300);
        internalCounters.push_back(45385);
        internalCounters.push_back(45470);
        internalCounters.push_back(45555);
        internalCounters.push_back(45640);
        internalCounters.push_back(45725);
        internalCounters.push_back(45810);
        internalCounters.push_back(45895);
        internalCounters.push_back(45980);
        internalCounters.push_back(46065);
        internalCounters.push_back(46150);
        internalCounters.push_back(46235);
        internalCounters.push_back(40881);
        internalCounters.push_back(40966);
        internalCounters.push_back(41051);
        internalCounters.push_back(41136);
        internalCounters.push_back(41221);
        internalCounters.push_back(41306);
        internalCounters.push_back(41391);
        internalCounters.push_back(41476);
        internalCounters.push_back(41561);
        internalCounters.push_back(41646);
        internalCounters.push_back(41731);
        internalCounters.push_back(41816);
        internalCounters.push_back(41901);
        internalCounters.push_back(41986);
        internalCounters.push_back(42071);
        internalCounters.push_back(42156);
        internalCounters.push_back(42241);
        internalCounters.push_back(42326);
        internalCounters.push_back(42411);
        internalCounters.push_back(42496);
        internalCounters.push_back(42581);
        internalCounters.push_back(42666);
        internalCounters.push_back(42751);
        internalCounters.push_back(42836);
        internalCounters.push_back(42921);
        internalCounters.push_back(43006);
        internalCounters.push_back(43091);
        internalCounters.push_back(43176);
        internalCounters.push_back(43261);
        internalCounters.push_back(43346);
        internalCounters.push_back(43431);
        internalCounters.push_back(43516);
        internalCounters.push_back(43601);
        internalCounters.push_back(43686);
        internalCounters.push_back(43771);
        internalCounters.push_back(43856);
        internalCounters.push_back(43941);
        internalCounters.push_back(44026);
        internalCounters.push_back(44111);
        internalCounters.push_back(44196);
        internalCounters.push_back(44281);
        internalCounters.push_back(44366);
        internalCounters.push_back(44451);
        internalCounters.push_back(44536);
        internalCounters.push_back(44621);
        internalCounters.push_back(44706);
        internalCounters.push_back(44791);
        internalCounters.push_back(44876);
        internalCounters.push_back(44961);
        internalCounters.push_back(45046);
        internalCounters.push_back(45131);
        internalCounters.push_back(45216);
        internalCounters.push_back(45301);
        internalCounters.push_back(45386);
        internalCounters.push_back(45471);
        internalCounters.push_back(45556);
        internalCounters.push_back(45641);
        internalCounters.push_back(45726);
        internalCounters.push_back(45811);
        internalCounters.push_back(45896);
        internalCounters.push_back(45981);
        internalCounters.push_back(46066);
        internalCounters.push_back(46151);
        internalCounters.push_back(46236);
        internalCounters.push_back(40882);
        internalCounters.push_back(40967);
        internalCounters.push_back(41052);
        internalCounters.push_back(41137);
        internalCounters.push_back(41222);
        internalCounters.push_back(41307);
        internalCounters.push_back(41392);
        internalCounters.push_back(41477);
        internalCounters.push_back(41562);
        internalCounters.push_back(41647);
        internalCounters.push_back(41732);
        internalCounters.push_back(41817);
        internalCounters.push_back(41902);
        internalCounters.push_back(41987);
        internalCounters.push_back(42072);
        internalCounters.push_back(42157);
        internalCounters.push_back(42242);
        internalCounters.push_back(42327);
        internalCounters.push_back(42412);
        internalCounters.push_back(42497);
        internalCounters.push_back(42582);
        internalCounters.push_back(42667);
        internalCounters.push_back(42752);
        internalCounters.push_back(42837);
        internalCounters.push_back(42922);
        internalCounters.push_back(43007);
        internalCounters.push_back(43092);
        internalCounters.push_back(43177);
        internalCounters.push_back(43262);
        internalCounters.push_back(43347);
        internalCounters.push_back(43432);
        internalCounters.push_back(43517);
        internalCounters.push_back(43602);
        internalCounters.push_back(43687);
        internalCounters.push_back(43772);
        internalCounters.push_back(43857);
        internalCounters.push_back(43942);
        internalCounters.push_back(44027);
        internalCounters.push_back(44112);
        internalCounters.push_back(44197);
        internalCounters.push_back(44282);
        internalCounters.push_back(44367);
        internalCounters.push_back(44452);
        internalCounters.push_back(44537);
        internalCounters.push_back(44622);
        internalCounters.push_back(44707);
        internalCounters.push_back(44792);
        internalCounters.push_back(44877);
        internalCounters.push_back(44962);
        internalCounters.push_back(45047);
        internalCounters.push_back(45132);
        internalCounters.push_back(45217);
        internalCounters.push_back(45302);
        internalCounters.push_back(45387);
        internalCounters.push_back(45472);
        internalCounters.push_back(45557);
        internalCounters.push_back(45642);
        internalCounters.push_back(45727);
        internalCounters.push_back(45812);
        internalCounters.push_back(45897);
        internalCounters.push_back(45982);
        internalCounters.push_back(46067);
        internalCounters.push_back(46152);
        internalCounters.push_back(46237);
        internalCounters.push_back(40883);
        internalCounters.push_back(40968);
        internalCounters.push_back(41053);
        internalCounters.push_back(41138);
        internalCounters.push_back(41223);
        internalCounters.push_back(41308);
        internalCounters.push_back(41393);
        internalCounters.push_back(41478);
        internalCounters.push_back(41563);
        internalCounters.push_back(41648);
        internalCounters.push_back(41733);
        internalCounters.push_back(41818);
        internalCounters.push_back(41903);
        internalCounters.push_back(41988);
        internalCounters.push_back(42073);
        internalCounters.push_back(42158);
        internalCounters.push_back(42243);
        internalCounters.push_back(42328);
        internalCounters.push_back(42413);
        internalCounters.push_back(42498);
        internalCounters.push_back(42583);
        internalCounters.push_back(42668);
        internalCounters.push_back(42753);
        internalCounters.push_back(42838);
        internalCounters.push_back(42923);
        internalCounters.push_back(43008);
        internalCounters.push_back(43093);
        internalCounters.push_back(43178);
        internalCounters.push_back(43263);
        internalCounters.push_back(43348);
        internalCounters.push_back(43433);
        internalCounters.push_back(43518);
        internalCounters.push_back(43603);
        internalCounters.push_back(43688);
        internalCounters.push_back(43773);
        internalCounters.push_back(43858);
        internalCounters.push_back(43943);
        internalCounters.push_back(44028);
        internalCounters.push_back(44113);
        internalCounters.push_back(44198);
        internalCounters.push_back(44283);
        internalCounters.push_back(44368);
        internalCounters.push_back(44453);
        internalCounters.push_back(44538);
        internalCounters.push_back(44623);
        internalCounters.push_back(44708);
        internalCounters.push_back(44793);
        internalCounters.push_back(44878);
        internalCounters.push_back(44963);
        internalCounters.push_back(45048);
        internalCounters.push_back(45133);
        internalCounters.push_back(45218);
        internalCounters.push_back(45303);
        internalCounters.push_back(45388);
        internalCounters.push_back(45473);
        internalCounters.push_back(45558);
        internalCounters.push_back(45643);
        internalCounters.push_back(45728);
        internalCounters.push_back(45813);
        internalCounters.push_back(45898);
        internalCounters.push_back(45983);
        internalCounters.push_back(46068);
        internalCounters.push_back(46153);
        internalCounters.push_back(46238);

        c.DefineDerivedCounter("L1CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L1 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,ifnotzero", "6deaf002-3cac-2d2d-7b89-566c7a52b08e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(40871);
        internalCounters.push_back(40956);
        internalCounters.push_back(41041);
        internalCounters.push_back(41126);
        internalCounters.push_back(41211);
        internalCounters.push_back(41296);
        internalCounters.push_back(41381);
        internalCounters.push_back(41466);
        internalCounters.push_back(41551);
        internalCounters.push_back(41636);
        internalCounters.push_back(41721);
        internalCounters.push_back(41806);
        internalCounters.push_back(41891);
        internalCounters.push_back(41976);
        internalCounters.push_back(42061);
        internalCounters.push_back(42146);
        internalCounters.push_back(42231);
        internalCounters.push_back(42316);
        internalCounters.push_back(42401);
        internalCounters.push_back(42486);
        internalCounters.push_back(42571);
        internalCounters.push_back(42656);
        internalCounters.push_back(42741);
        internalCounters.push_back(42826);
        internalCounters.push_back(42911);
        internalCounters.push_back(42996);
        internalCounters.push_back(43081);
        internalCounters.push_back(43166);
        internalCounters.push_back(43251);
        internalCounters.push_back(43336);
        internalCounters.push_back(43421);
        internalCounters.push_back(43506);
        internalCounters.push_back(43591);
        internalCounters.push_back(43676);
        internalCounters.push_back(43761);
        internalCounters.push_back(43846);
        internalCounters.push_back(43931);
        internalCounters.push_back(44016);
        internalCounters.push_back(44101);
        internalCounters.push_back(44186);
        internalCounters.push_back(44271);
        internalCounters.push_back(44356);
        internalCounters.push_back(44441);
        internalCounters.push_back(44526);
        internalCounters.push_back(44611);
        internalCounters.push_back(44696);
        internalCounters.push_back(44781);
        internalCounters.push_back(44866);
        internalCounters.push_back(44951);
        internalCounters.push_back(45036);
        internalCounters.push_back(45121);
        internalCounters.push_back(45206);
        internalCounters.push_back(45291);
        internalCounters.push_back(45376);
        internalCounters.push_back(45461);
        internalCounters.push_back(45546);
        internalCounters.push_back(45631);
        internalCounters.push_back(45716);
        internalCounters.push_back(45801);
        internalCounters.push_back(45886);
        internalCounters.push_back(45971);
        internalCounters.push_back(46056);
        internalCounters.push_back(46141);
        internalCounters.push_back(46226);
        internalCounters.push_back(40880);
        internalCounters.push_back(40965);
        internalCounters.push_back(41050);
        internalCounters.push_back(41135);
        internalCounters.push_back(41220);
        internalCounters.push_back(41305);
        internalCounters.push_back(41390);
        internalCounters.push_back(41475);
        internalCounters.push_back(41560);
        internalCounters.push_back(41645);
        internalCounters.push_back(41730);
        internalCounters.push_back(41815);
        internalCounters.push_back(41900);
        internalCounters.push_back(41985);
        internalCounters.push_back(42070);
        internalCounters.push_back(42155);
        internalCounters.push_back(42240);
        internalCounters.push_back(42325);
        internalCounters.push_back(42410);
        internalCounters.push_back(42495);
        internalCounters.push_back(42580);
        internalCounters.push_back(42665);
        internalCounters.push_back(42750);
        internalCounters.push_back(42835);
        internalCounters.push_back(42920);
        internalCounters.push_back(43005);
        internalCounters.push_back(43090);
        internalCounters.push_back(43175);
        internalCounters.push_back(43260);
        internalCounters.push_back(43345);
        internalCounters.push_back(43430);
        internalCounters.push_back(43515);
        internalCounters.push_back(43600);
        internalCounters.push_back(43685);
        internalCounters.push_back(43770);
        internalCounters.push_back(43855);
        internalCounters.push_back(43940);
        internalCounters.push_back(44025);
        internalCounters.push_back(44110);
        internalCounters.push_back(44195);
        internalCounters.push_back(44280);
        internalCounters.push_back(44365);
        internalCounters.push_back(44450);
        internalCounters.push_back(44535);
        internalCounters.push_back(44620);
        internalCounters.push_back(44705);
        internalCounters.push_back(44790);
        internalCounters.push_back(44875);
        internalCounters.push_back(44960);
        internalCounters.push_back(45045);
        internalCounters.push_back(45130);
        internalCounters.push_back(45215);
        internalCounters.push_back(45300);
        internalCounters.push_back(45385);
        internalCounters.push_back(45470);
        internalCounters.push_back(45555);
        internalCounters.push_back(45640);
        internalCounters.push_back(45725);
        internalCounters.push_back(45810);
        internalCounters.push_back(45895);
        internalCounters.push_back(45980);
        internalCounters.push_back(46065);
        internalCounters.push_back(46150);
        internalCounters.push_back(46235);
        internalCounters.push_back(40881);
        internalCounters.push_back(40966);
        internalCounters.push_back(41051);
        internalCounters.push_back(41136);
        internalCounters.push_back(41221);
        internalCounters.push_back(41306);
        internalCounters.push_back(41391);
        internalCounters.push_back(41476);
        internalCounters.push_back(41561);
        internalCounters.push_back(41646);
        internalCounters.push_back(41731);
        internalCounters.push_back(41816);
        internalCounters.push_back(41901);
        internalCounters.push_back(41986);
        internalCounters.push_back(42071);
        internalCounters.push_back(42156);
        internalCounters.push_back(42241);
        internalCounters.push_back(42326);
        internalCounters.push_back(42411);
        internalCounters.push_back(42496);
        internalCounters.push_back(42581);
        internalCounters.push_back(42666);
        internalCounters.push_back(42751);
        internalCounters.push_back(42836);
        internalCounters.push_back(42921);
        internalCounters.push_back(43006);
        internalCounters.push_back(43091);
        internalCounters.push_back(43176);
        internalCounters.push_back(43261);
        internalCounters.push_back(43346);
        internalCounters.push_back(43431);
        internalCounters.push_back(43516);
        internalCounters.push_back(43601);
        internalCounters.push_back(43686);
        internalCounters.push_back(43771);
        internalCounters.push_back(43856);
        internalCounters.push_back(43941);
        internalCounters.push_back(44026);
        internalCounters.push_back(44111);
        internalCounters.push_back(44196);
        internalCounters.push_back(44281);
        internalCounters.push_back(44366);
        internalCounters.push_back(44451);
        internalCounters.push_back(44536);
        internalCounters.push_back(44621);
        internalCounters.push_back(44706);
        internalCounters.push_back(44791);
        internalCounters.push_back(44876);
        internalCounters.push_back(44961);
        internalCounters.push_back(45046);
        internalCounters.push_back(45131);
        internalCounters.push_back(45216);
        internalCounters.push_back(45301);
        internalCounters.push_back(45386);
        internalCounters.push_back(45471);
        internalCounters.push_back(45556);
        internalCounters.push_back(45641);
        internalCounters.push_back(45726);
        internalCounters.push_back(45811);
        internalCounters.push_back(45896);
        internalCounters.push_back(45981);
        internalCounters.push_back(46066);
        internalCounters.push_back(46151);
        internalCounters.push_back(46236);
        internalCounters.push_back(40882);
        internalCounters.push_back(40967);
        internalCounters.push_back(41052);
        internalCounters.push_back(41137);
        internalCounters.push_back(41222);
        internalCounters.push_back(41307);
        internalCounters.push_back(41392);
        internalCounters.push_back(41477);
        internalCounters.push_back(41562);
        internalCounters.push_back(41647);
        internalCounters.push_back(41732);
        internalCounters.push_back(41817);
        internalCounters.push_back(41902);
        internalCounters.push_back(41987);
        internalCounters.push_back(42072);
        internalCounters.push_back(42157);
        internalCounters.push_back(42242);
        internalCounters.push_back(42327);
        internalCounters.push_back(42412);
        internalCounters.push_back(42497);
        internalCounters.push_back(42582);
        internalCounters.push_back(42667);
        internalCounters.push_back(42752);
        internalCounters.push_back(42837);
        internalCounters.push_back(42922);
        internalCounters.push_back(43007);
        internalCounters.push_back(43092);
        internalCounters.push_back(43177);
        internalCounters.push_back(43262);
        internalCounters.push_back(43347);
        internalCounters.push_back(43432);
        internalCounters.push_back(43517);
        internalCounters.push_back(43602);
        internalCounters.push_back(43687);
        internalCounters.push_back(43772);
        internalCounters.push_back(43857);
        internalCounters.push_back(43942);
        internalCounters.push_back(44027);
        internalCounters.push_back(44112);
        internalCounters.push_back(44197);
        internalCounters.push_back(44282);
        internalCounters.push_back(44367);
        internalCounters.push_back(44452);
        internalCounters.push_back(44537);
        internalCounters.push_back(44622);
        internalCounters.push_back(44707);
        internalCounters.push_back(44792);
        internalCounters.push_back(44877);
        internalCounters.push_back(44962);
        internalCounters.push_back(45047);
        internalCounters.push_back(45132);
        internalCounters.push_back(45217);
        internalCounters.push_back(45302);
        internalCounters.push_back(45387);
        internalCounters.push_back(45472);
        internalCounters.push_back(45557);
        internalCounters.push_back(45642);
        internalCounters.push_back(45727);
        internalCounters.push_back(45812);
        internalCounters.push_back(45897);
        internalCounters.push_back(45982);
        internalCounters.push_back(46067);
        internalCounters.push_back(46152);
        internalCounters.push_back(46237);
        internalCounters.push_back(40883);
        internalCounters.push_back(40968);
        internalCounters.push_back(41053);
        internalCounters.push_back(41138);
        internalCounters.push_back(41223);
        internalCounters.push_back(41308);
        internalCounters.push_back(41393);
        internalCounters.push_back(41478);
        internalCounters.push_back(41563);
        internalCounters.push_back(41648);
        internalCounters.push_back(41733);
        internalCounters.push_back(41818);
        internalCounters.push_back(41903);
        internalCounters.push_back(41988);
        internalCounters.push_back(42073);
        internalCounters.push_back(42158);
        internalCounters.push_back(42243);
        internalCounters.push_back(42328);
        internalCounters.push_back(42413);
        internalCounters.push_back(42498);
        internalCounters.push_back(42583);
        internalCounters.push_back(42668);
        internalCounters.push_back(42753);
        internalCounters.push_back(42838);
        internalCounters.push_back(42923);
        internalCounters.push_back(43008);
        internalCounters.push_back(43093);
        internalCounters.push_back(43178);
        internalCounters.push_back(43263);
        internalCounters.push_back(43348);
        internalCounters.push_back(43433);
        internalCounters.push_back(43518);
        internalCounters.push_back(43603);
        internalCounters.push_back(43688);
        internalCounters.push_back(43773);
        internalCounters.push_back(43858);
        internalCounters.push_back(43943);
        internalCounters.push_back(44028);
        internalCounters.push_back(44113);
        internalCounters.push_back(44198);
        internalCounters.push_back(44283);
        internalCounters.push_back(44368);
        internalCounters.push_back(44453);
        internalCounters.push_back(44538);
        internalCounters.push_back(44623);
        internalCounters.push_back(44708);
        internalCounters.push_back(44793);
        internalCounters.push_back(44878);
        internalCounters.push_back(44963);
        internalCounters.push_back(45048);
        internalCounters.push_back(45133);
        internalCounters.push_back(45218);
        internalCounters.push_back(45303);
        internalCounters.push_back(45388);
        internalCounters.push_back(45473);
        internalCounters.push_back(45558);
        internalCounters.push_back(45643);
        internalCounters.push_back(45728);
        internalCounters.push_back(45813);
        internalCounters.push_back(45898);
        internalCounters.push_back(45983);
        internalCounters.push_back(46068);
        internalCounters.push_back(46153);
        internalCounters.push_back(46238);

        c.DefineDerivedCounter("L1CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,-", "279c8bff-ec6a-f9bf-96d7-5e8000f77891");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(40880);
        internalCounters.push_back(40965);
        internalCounters.push_back(41050);
        internalCounters.push_back(41135);
        internalCounters.push_back(41220);
        internalCounters.push_back(41305);
        internalCounters.push_back(41390);
        internalCounters.push_back(41475);
        internalCounters.push_back(41560);
        internalCounters.push_back(41645);
        internalCounters.push_back(41730);
        internalCounters.push_back(41815);
        internalCounters.push_back(41900);
        internalCounters.push_back(41985);
        internalCounters.push_back(42070);
        internalCounters.push_back(42155);
        internalCounters.push_back(42240);
        internalCounters.push_back(42325);
        internalCounters.push_back(42410);
        internalCounters.push_back(42495);
        internalCounters.push_back(42580);
        internalCounters.push_back(42665);
        internalCounters.push_back(42750);
        internalCounters.push_back(42835);
        internalCounters.push_back(42920);
        internalCounters.push_back(43005);
        internalCounters.push_back(43090);
        internalCounters.push_back(43175);
        internalCounters.push_back(43260);
        internalCounters.push_back(43345);
        internalCounters.push_back(43430);
        internalCounters.push_back(43515);
        internalCounters.push_back(43600);
        internalCounters.push_back(43685);
        internalCounters.push_back(43770);
        internalCounters.push_back(43855);
        internalCounters.push_back(43940);
        internalCounters.push_back(44025);
        internalCounters.push_back(44110);
        internalCounters.push_back(44195);
        internalCounters.push_back(44280);
        internalCounters.push_back(44365);
        internalCounters.push_back(44450);
        internalCounters.push_back(44535);
        internalCounters.push_back(44620);
        internalCounters.push_back(44705);
        internalCounters.push_back(44790);
        internalCounters.push_back(44875);
        internalCounters.push_back(44960);
        internalCounters.push_back(45045);
        internalCounters.push_back(45130);
        internalCounters.push_back(45215);
        internalCounters.push_back(45300);
        internalCounters.push_back(45385);
        internalCounters.push_back(45470);
        internalCounters.push_back(45555);
        internalCounters.push_back(45640);
        internalCounters.push_back(45725);
        internalCounters.push_back(45810);
        internalCounters.push_back(45895);
        internalCounters.push_back(45980);
        internalCounters.push_back(46065);
        internalCounters.push_back(46150);
        internalCounters.push_back(46235);
        internalCounters.push_back(40881);
        internalCounters.push_back(40966);
        internalCounters.push_back(41051);
        internalCounters.push_back(41136);
        internalCounters.push_back(41221);
        internalCounters.push_back(41306);
        internalCounters.push_back(41391);
        internalCounters.push_back(41476);
        internalCounters.push_back(41561);
        internalCounters.push_back(41646);
        internalCounters.push_back(41731);
        internalCounters.push_back(41816);
        internalCounters.push_back(41901);
        internalCounters.push_back(41986);
        internalCounters.push_back(42071);
        internalCounters.push_back(42156);
        internalCounters.push_back(42241);
        internalCounters.push_back(42326);
        internalCounters.push_back(42411);
        internalCounters.push_back(42496);
        internalCounters.push_back(42581);
        internalCounters.push_back(42666);
        internalCounters.push_back(42751);
        internalCounters.push_back(42836);
        internalCounters.push_back(42921);
        internalCounters.push_back(43006);
        internalCounters.push_back(43091);
        internalCounters.push_back(43176);
        internalCounters.push_back(43261);
        internalCounters.push_back(43346);
        internalCounters.push_back(43431);
        internalCounters.push_back(43516);
        internalCounters.push_back(43601);
        internalCounters.push_back(43686);
        internalCounters.push_back(43771);
        internalCounters.push_back(43856);
        internalCounters.push_back(43941);
        internalCounters.push_back(44026);
        internalCounters.push_back(44111);
        internalCounters.push_back(44196);
        internalCounters.push_back(44281);
        internalCounters.push_back(44366);
        internalCounters.push_back(44451);
        internalCounters.push_back(44536);
        internalCounters.push_back(44621);
        internalCounters.push_back(44706);
        internalCounters.push_back(44791);
        internalCounters.push_back(44876);
        internalCounters.push_back(44961);
        internalCounters.push_back(45046);
        internalCounters.push_back(45131);
        internalCounters.push_back(45216);
        internalCounters.push_back(45301);
        internalCounters.push_back(45386);
        internalCounters.push_back(45471);
        internalCounters.push_back(45556);
        internalCounters.push_back(45641);
        internalCounters.push_back(45726);
        internalCounters.push_back(45811);
        internalCounters.push_back(45896);
        internalCounters.push_back(45981);
        internalCounters.push_back(46066);
        internalCounters.push_back(46151);
        internalCounters.push_back(46236);
        internalCounters.push_back(40882);
        internalCounters.push_back(40967);
        internalCounters.push_back(41052);
        internalCounters.push_back(41137);
        internalCounters.push_back(41222);
        internalCounters.push_back(41307);
        internalCounters.push_back(41392);
        internalCounters.push_back(41477);
        internalCounters.push_back(41562);
        internalCounters.push_back(41647);
        internalCounters.push_back(41732);
        internalCounters.push_back(41817);
        internalCounters.push_back(41902);
        internalCounters.push_back(41987);
        internalCounters.push_back(42072);
        internalCounters.push_back(42157);
        internalCounters.push_back(42242);
        internalCounters.push_back(42327);
        internalCounters.push_back(42412);
        internalCounters.push_back(42497);
        internalCounters.push_back(42582);
        internalCounters.push_back(42667);
        internalCounters.push_back(42752);
        internalCounters.push_back(42837);
        internalCounters.push_back(42922);
        internalCounters.push_back(43007);
        internalCounters.push_back(43092);
        internalCounters.push_back(43177);
        internalCounters.push_back(43262);
        internalCounters.push_back(43347);
        internalCounters.push_back(43432);
        internalCounters.push_back(43517);
        internalCounters.push_back(43602);
        internalCounters.push_back(43687);
        internalCounters.push_back(43772);
        internalCounters.push_back(43857);
        internalCounters.push_back(43942);
        internalCounters.push_back(44027);
        internalCounters.push_back(44112);
        internalCounters.push_back(44197);
        internalCounters.push_back(44282);
        internalCounters.push_back(44367);
        internalCounters.push_back(44452);
        internalCounters.push_back(44537);
        internalCounters.push_back(44622);
        internalCounters.push_back(44707);
        internalCounters.push_back(44792);
        internalCounters.push_back(44877);
        internalCounters.push_back(44962);
        internalCounters.push_back(45047);
        internalCounters.push_back(45132);
        internalCounters.push_back(45217);
        internalCounters.push_back(45302);
        internalCounters.push_back(45387);
        internalCounters.push_back(45472);
        internalCounters.push_back(45557);
        internalCounters.push_back(45642);
        internalCounters.push_back(45727);
        internalCounters.push_back(45812);
        internalCounters.push_back(45897);
        internalCounters.push_back(45982);
        internalCounters.push_back(46067);
        internalCounters.push_back(46152);
        internalCounters.push_back(46237);
        internalCounters.push_back(40883);
        internalCounters.push_back(40968);
        internalCounters.push_back(41053);
        internalCounters.push_back(41138);
        internalCounters.push_back(41223);
        internalCounters.push_back(41308);
        internalCounters.push_back(41393);
        internalCounters.push_back(41478);
        internalCounters.push_back(41563);
        internalCounters.push_back(41648);
        internalCounters.push_back(41733);
        internalCounters.push_back(41818);
        internalCounters.push_back(41903);
        internalCounters.push_back(41988);
        internalCounters.push_back(42073);
        internalCounters.push_back(42158);
        internalCounters.push_back(42243);
        internalCounters.push_back(42328);
        internalCounters.push_back(42413);
        internalCounters.push_back(42498);
        internalCounters.push_back(42583);
        internalCounters.push_back(42668);
        internalCounters.push_back(42753);
        internalCounters.push_back(42838);
        internalCounters.push_back(42923);
        internalCounters.push_back(43008);
        internalCounters.push_back(43093);
        internalCounters.push_back(43178);
        internalCounters.push_back(43263);
        internalCounters.push_back(43348);
        internalCounters.push_back(43433);
        internalCounters.push_back(43518);
        internalCounters.push_back(43603);
        internalCounters.push_back(43688);
        internalCounters.push_back(43773);
        internalCounters.push_back(43858);
        internalCounters.push_back(43943);
        internalCounters.push_back(44028);
        internalCounters.push_back(44113);
        internalCounters.push_back(44198);
        internalCounters.push_back(44283);
        internalCounters.push_back(44368);
        internalCounters.push_back(44453);
        internalCounters.push_back(44538);
        internalCounters.push_back(44623);
        internalCounters.push_back(44708);
        internalCounters.push_back(44793);
        internalCounters.push_back(44878);
        internalCounters.push_back(44963);
        internalCounters.push_back(45048);
        internalCounters.push_back(45133);
        internalCounters.push_back(45218);
        internalCounters.push_back(45303);
        internalCounters.push_back(45388);
        internalCounters.push_back(45473);
        internalCounters.push_back(45558);
        internalCounters.push_back(45643);
        internalCounters.push_back(45728);
        internalCounters.push_back(45813);
        internalCounters.push_back(45898);
        internalCounters.push_back(45983);
        internalCounters.push_back(46068);
        internalCounters.push_back(46153);
        internalCounters.push_back(46238);

        c.DefineDerivedCounter("L1CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum256", "6e4ee364-41d7-476d-361d-f47b266c15db");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46284);
        internalCounters.push_back(46566);
        internalCounters.push_back(46848);
        internalCounters.push_back(47130);
        internalCounters.push_back(47412);
        internalCounters.push_back(47694);
        internalCounters.push_back(47976);
        internalCounters.push_back(48258);
        internalCounters.push_back(48540);
        internalCounters.push_back(48822);
        internalCounters.push_back(49104);
        internalCounters.push_back(49386);
        internalCounters.push_back(49668);
        internalCounters.push_back(49950);
        internalCounters.push_back(50232);
        internalCounters.push_back(50514);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28086);
        internalCounters.push_back(28460);
        internalCounters.push_back(28834);
        internalCounters.push_back(29208);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28085);
        internalCounters.push_back(28459);
        internalCounters.push_back(28833);
        internalCounters.push_back(29207);
        internalCounters.push_back(28084);
        internalCounters.push_back(28458);
        internalCounters.push_back(28832);
        internalCounters.push_back(29206);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28084);
        internalCounters.push_back(28458);
        internalCounters.push_back(28832);
        internalCounters.push_back(29206);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSFlatLDSInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to LDS executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "99672cda-de2b-014c-482e-cf73b90068d5");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28114);
        internalCounters.push_back(28488);
        internalCounters.push_back(28862);
        internalCounters.push_back(29236);
        internalCounters.push_back(28055);
        internalCounters.push_back(28429);
        internalCounters.push_back(28803);
        internalCounters.push_back(29177);
        internalCounters.push_back(12484);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28114);
        internalCounters.push_back(28488);
        internalCounters.push_back(28862);
        internalCounters.push_back(29236);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SHADER_ENGINES,/", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28144);
        internalCounters.push_back(28518);
        internalCounters.push_back(28892);
        internalCounters.push_back(29266);
        internalCounters.push_back(12484);
        internalCounters.push_back(16838);
        internalCounters.push_back(17034);
        internalCounters.push_back(17230);
        internalCounters.push_back(17426);
        internalCounters.push_back(16844);
        internalCounters.push_back(17040);
        internalCounters.push_back(17236);
        internalCounters.push_back(17432);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(28144);
        internalCounters.push_back(28518);
        internalCounters.push_back(28892);
        internalCounters.push_back(29266);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29562);
        internalCounters.push_back(29681);
        internalCounters.push_back(29800);
        internalCounters.push_back(29919);
        internalCounters.push_back(30038);
        internalCounters.push_back(30157);
        internalCounters.push_back(30276);
        internalCounters.push_back(30395);
        internalCounters.push_back(30514);
        internalCounters.push_back(30633);
        internalCounters.push_back(30752);
        internalCounters.push_back(30871);
        internalCounters.push_back(30990);
        internalCounters.push_back(31109);
        internalCounters.push_back(31228);
        internalCounters.push_back(31347);
        internalCounters.push_back(31466);
        internalCounters.push_back(31585);
        internalCounters.push_back(31704);
        internalCounters.push_back(31823);
        internalCounters.push_back(31942);
        internalCounters.push_back(32061);
        internalCounters.push_back(32180);
        internalCounters.push_back(32299);
        internalCounters.push_back(32418);
        internalCounters.push_back(32537);
        internalCounters.push_back(32656);
        internalCounters.push_back(32775);
        internalCounters.push_back(32894);
        internalCounters.push_back(33013);
        internalCounters.push_back(33132);
        internalCounters.push_back(33251);
        internalCounters.push_back(33370);
        internalCounters.push_back(33489);
        internalCounters.push_back(33608);
        internalCounters.push_back(33727);
        internalCounters.push_back(33846);
        internalCounters.push_back(33965);
        internalCounters.push_back(34084);
        internalCounters.push_back(34203);
        internalCounters.push_back(34322);
        internalCounters.push_back(34441);
        internalCounters.push_back(34560);
        internalCounters.push_back(34679);
        internalCounters.push_back(34798);
        internalCounters.push_back(34917);
        internalCounters.push_back(35036);
        internalCounters.push_back(35155);
        internalCounters.push_back(35274);
        internalCounters.push_back(35393);
        internalCounters.push_back(35512);
        internalCounters.push_back(35631);
        internalCounters.push_back(35750);
        internalCounters.push_back(35869);
        internalCounters.push_back(35988);
        internalCounters.push_back(36107);
        internalCounters.push_back(36226);
        internalCounters.push_back(36345);
        internalCounters.push_back(36464);
        internalCounters.push_back(36583);
        internalCounters.push_back(36702);
        internalCounters.push_back(36821);
        internalCounters.push_back(36940);
        internalCounters.push_back(37059);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29562);
        internalCounters.push_back(29681);
        internalCounters.push_back(29800);
        internalCounters.push_back(29919);
        internalCounters.push_back(30038);
        internalCounters.push_back(30157);
        internalCounters.push_back(30276);
        internalCounters.push_back(30395);
        internalCounters.push_back(30514);
        internalCounters.push_back(30633);
        internalCounters.push_back(30752);
        internalCounters.push_back(30871);
        internalCounters.push_back(30990);
        internalCounters.push_back(31109);
        internalCounters.push_back(31228);
        internalCounters.push_back(31347);
        internalCounters.push_back(31466);
        internalCounters.push_back(31585);
        internalCounters.push_back(31704);
        internalCounters.push_back(31823);
        internalCounters.push_back(31942);
        internalCounters.push_back(32061);
        internalCounters.push_back(32180);
        internalCounters.push_back(32299);
        internalCounters.push_back(32418);
        internalCounters.push_back(32537);
        internalCounters.push_back(32656);
        internalCounters.push_back(32775);
        internalCounters.push_back(32894);
        internalCounters.push_back(33013);
        internalCounters.push_back(33132);
        internalCounters.push_back(33251);
        internalCounters.push_back(33370);
        internalCounters.push_back(33489);
        internalCounters.push_back(33608);
        internalCounters.push_back(33727);
        internalCounters.push_back(33846);
        internalCounters.push_back(33965);
        internalCounters.push_back(34084);
        internalCounters.push_back(34203);
        internalCounters.push_back(34322);
        internalCounters.push_back(34441);
        internalCounters.push_back(34560);
        internalCounters.push_back(34679);
        internalCounters.push_back(34798);
        internalCounters.push_back(34917);
        internalCounters.push_back(35036);
        internalCounters.push_back(35155);
        internalCounters.push_back(35274);
        internalCounters.push_back(35393);
        internalCounters.push_back(35512);
        internalCounters.push_back(35631);
        internalCounters.push_back(35750);
        internalCounters.push_back(35869);
        internalCounters.push_back(35988);
        internalCounters.push_back(36107);
        internalCounters.push_back(36226);
        internalCounters.push_back(36345);
        internalCounters.push_back(36464);
        internalCounters.push_back(36583);
        internalCounters.push_back(36702);
        internalCounters.push_back(36821);
        internalCounters.push_back(36940);
        internalCounters.push_back(37059);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29616);
        internalCounters.push_back(29735);
        internalCounters.push_back(29854);
        internalCounters.push_back(29973);
        internalCounters.push_back(30092);
        internalCounters.push_back(30211);
        internalCounters.push_back(30330);
        internalCounters.push_back(30449);
        internalCounters.push_back(30568);
        internalCounters.push_back(30687);
        internalCounters.push_back(30806);
        internalCounters.push_back(30925);
        internalCounters.push_back(31044);
        internalCounters.push_back(31163);
        internalCounters.push_back(31282);
        internalCounters.push_back(31401);
        internalCounters.push_back(31520);
        internalCounters.push_back(31639);
        internalCounters.push_back(31758);
        internalCounters.push_back(31877);
        internalCounters.push_back(31996);
        internalCounters.push_back(32115);
        internalCounters.push_back(32234);
        internalCounters.push_back(32353);
        internalCounters.push_back(32472);
        internalCounters.push_back(32591);
        internalCounters.push_back(32710);
        internalCounters.push_back(32829);
        internalCounters.push_back(32948);
        internalCounters.push_back(33067);
        internalCounters.push_back(33186);
        internalCounters.push_back(33305);
        internalCounters.push_back(33424);
        internalCounters.push_back(33543);
        internalCounters.push_back(33662);
        internalCounters.push_back(33781);
        internalCounters.push_back(33900);
        internalCounters.push_back(34019);
        internalCounters.push_back(34138);
        internalCounters.push_back(34257);
        internalCounters.push_back(34376);
        internalCounters.push_back(34495);
        internalCounters.push_back(34614);
        internalCounters.push_back(34733);
        internalCounters.push_back(34852);
        internalCounters.push_back(34971);
        internalCounters.push_back(35090);
        internalCounters.push_back(35209);
        internalCounters.push_back(35328);
        internalCounters.push_back(35447);
        internalCounters.push_back(35566);
        internalCounters.push_back(35685);
        internalCounters.push_back(35804);
        internalCounters.push_back(35923);
        internalCounters.push_back(36042);
        internalCounters.push_back(36161);
        internalCounters.push_back(36280);
        internalCounters.push_back(36399);
        internalCounters.push_back(36518);
        internalCounters.push_back(36637);
        internalCounters.push_back(36756);
        internalCounters.push_back(36875);
        internalCounters.push_back(36994);
        internalCounters.push_back(37113);
        internalCounters.push_back(29615);
        internalCounters.push_back(29734);
        internalCounters.push_back(29853);
        internalCounters.push_back(29972);
        internalCounters.push_back(30091);
        internalCounters.push_back(30210);
        internalCounters.push_back(30329);
        internalCounters.push_back(30448);
        internalCounters.push_back(30567);
        internalCounters.push_back(30686);
        internalCounters.push_back(30805);
        internalCounters.push_back(30924);
        internalCounters.push_back(31043);
        internalCounters.push_back(31162);
        internalCounters.push_back(31281);
        internalCounters.push_back(31400);
        internalCounters.push_back(31519);
        internalCounters.push_back(31638);
        internalCounters.push_back(31757);
        internalCounters.push_back(31876);
        internalCounters.push_back(31995);
        internalCounters.push_back(32114);
        internalCounters.push_back(32233);
        internalCounters.push_back(32352);
        internalCounters.push_back(32471);
        internalCounters.push_back(32590);
        internalCounters.push_back(32709);
        internalCounters.push_back(32828);
        internalCounters.push_back(32947);
        internalCounters.push_back(33066);
        internalCounters.push_back(33185);
        internalCounters.push_back(33304);
        internalCounters.push_back(33423);
        internalCounters.push_back(33542);
        internalCounters.push_back(33661);
        internalCounters.push_back(33780);
        internalCounters.push_back(33899);
        internalCounters.push_back(34018);
        internalCounters.push_back(34137);
        internalCounters.push_back(34256);
        internalCounters.push_back(34375);
        internalCounters.push_back(34494);
        internalCounters.push_back(34613);
        internalCounters.push_back(34732);
        internalCounters.push_back(34851);
        internalCounters.push_back(34970);
        internalCounters.push_back(35089);
        internalCounters.push_back(35208);
        internalCounters.push_back(35327);
        internalCounters.push_back(35446);
        internalCounters.push_back(35565);
        internalCounters.push_back(35684);
        internalCounters.push_back(35803);
        internalCounters.push_back(35922);
        internalCounters.push_back(36041);
        internalCounters.push_back(36160);
        internalCounters.push_back(36279);
        internalCounters.push_back(36398);
        internalCounters.push_back(36517);
        internalCounters.push_back(36636);
        internalCounters.push_back(36755);
        internalCounters.push_back(36874);
        internalCounters.push_back(36993);
        internalCounters.push_back(37112);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29616);
        internalCounters.push_back(29735);
        internalCounters.push_back(29854);
        internalCounters.push_back(29973);
        internalCounters.push_back(30092);
        internalCounters.push_back(30211);
        internalCounters.push_back(30330);
        internalCounters.push_back(30449);
        internalCounters.push_back(30568);
        internalCounters.push_back(30687);
        internalCounters.push_back(30806);
        internalCounters.push_back(30925);
        internalCounters.push_back(31044);
        internalCounters.push_back(31163);
        internalCounters.push_back(31282);
        internalCounters.push_back(31401);
        internalCounters.push_back(31520);
        internalCounters.push_back(31639);
        internalCounters.push_back(31758);
        internalCounters.push_back(31877);
        internalCounters.push_back(31996);
        internalCounters.push_back(32115);
        internalCounters.push_back(32234);
        internalCounters.push_back(32353);
        internalCounters.push_back(32472);
        internalCounters.push_back(32591);
        internalCounters.push_back(32710);
        internalCounters.push_back(32829);
        internalCounters.push_back(32948);
        internalCounters.push_back(33067);
        internalCounters.push_back(33186);
        internalCounters.push_back(33305);
        internalCounters.push_back(33424);
        internalCounters.push_back(33543);
        internalCounters.push_back(33662);
        internalCounters.push_back(33781);
        internalCounters.push_back(33900);
        internalCounters.push_back(34019);
        internalCounters.push_back(34138);
        internalCounters.push_back(34257);
        internalCounters.push_back(34376);
        internalCounters.push_back(34495);
        internalCounters.push_back(34614);
        internalCounters.push_back(34733);
        internalCounters.push_back(34852);
        internalCounters.push_back(34971);
        internalCounters.push_back(35090);
        internalCounters.push_back(35209);
        internalCounters.push_back(35328);
        internalCounters.push_back(35447);
        internalCounters.push_back(35566);
        internalCounters.push_back(35685);
        internalCounters.push_back(35804);
        internalCounters.push_back(35923);
        internalCounters.push_back(36042);
        internalCounters.push_back(36161);
        internalCounters.push_back(36280);
        internalCounters.push_back(36399);
        internalCounters.push_back(36518);
        internalCounters.push_back(36637);
        internalCounters.push_back(36756);
        internalCounters.push_back(36875);
        internalCounters.push_back(36994);
        internalCounters.push_back(37113);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29615);
        internalCounters.push_back(29734);
        internalCounters.push_back(29853);
        internalCounters.push_back(29972);
        internalCounters.push_back(30091);
        internalCounters.push_back(30210);
        internalCounters.push_back(30329);
        internalCounters.push_back(30448);
        internalCounters.push_back(30567);
        internalCounters.push_back(30686);
        internalCounters.push_back(30805);
        internalCounters.push_back(30924);
        internalCounters.push_back(31043);
        internalCounters.push_back(31162);
        internalCounters.push_back(31281);
        internalCounters.push_back(31400);
        internalCounters.push_back(31519);
        internalCounters.push_back(31638);
        internalCounters.push_back(31757);
        internalCounters.push_back(31876);
        internalCounters.push_back(31995);
        internalCounters.push_back(32114);
        internalCounters.push_back(32233);
        internalCounters.push_back(32352);
        internalCounters.push_back(32471);
        internalCounters.push_back(32590);
        internalCounters.push_back(32709);
        internalCounters.push_back(32828);
        internalCounters.push_back(32947);
        internalCounters.push_back(33066);
        internalCounters.push_back(33185);
        internalCounters.push_back(33304);
        internalCounters.push_back(33423);
        internalCounters.push_back(33542);
        internalCounters.push_back(33661);
        internalCounters.push_back(33780);
        internalCounters.push_back(33899);
        internalCounters.push_back(34018);
        internalCounters.push_back(34137);
        internalCounters.push_back(34256);
        internalCounters.push_back(34375);
        internalCounters.push_back(34494);
        internalCounters.push_back(34613);
        internalCounters.push_back(34732);
        internalCounters.push_back(34851);
        internalCounters.push_back(34970);
        internalCounters.push_back(35089);
        internalCounters.push_back(35208);
        internalCounters.push_back(35327);
        internalCounters.push_back(35446);
        internalCounters.push_back(35565);
        internalCounters.push_back(35684);
        internalCounters.push_back(35803);
        internalCounters.push_back(35922);
        internalCounters.push_back(36041);
        internalCounters.push_back(36160);
        internalCounters.push_back(36279);
        internalCounters.push_back(36398);
        internalCounters.push_back(36517);
        internalCounters.push_back(36636);
        internalCounters.push_back(36755);
        internalCounters.push_back(36874);
        internalCounters.push_back(36993);
        internalCounters.push_back(37112);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29618);
        internalCounters.push_back(29737);
        internalCounters.push_back(29856);
        internalCounters.push_back(29975);
        internalCounters.push_back(30094);
        internalCounters.push_back(30213);
        internalCounters.push_back(30332);
        internalCounters.push_back(30451);
        internalCounters.push_back(30570);
        internalCounters.push_back(30689);
        internalCounters.push_back(30808);
        internalCounters.push_back(30927);
        internalCounters.push_back(31046);
        internalCounters.push_back(31165);
        internalCounters.push_back(31284);
        internalCounters.push_back(31403);
        internalCounters.push_back(31522);
        internalCounters.push_back(31641);
        internalCounters.push_back(31760);
        internalCounters.push_back(31879);
        internalCounters.push_back(31998);
        internalCounters.push_back(32117);
        internalCounters.push_back(32236);
        internalCounters.push_back(32355);
        internalCounters.push_back(32474);
        internalCounters.push_back(32593);
        internalCounters.push_back(32712);
        internalCounters.push_back(32831);
        internalCounters.push_back(32950);
        internalCounters.push_back(33069);
        internalCounters.push_back(33188);
        internalCounters.push_back(33307);
        internalCounters.push_back(33426);
        internalCounters.push_back(33545);
        internalCounters.push_back(33664);
        internalCounters.push_back(33783);
        internalCounters.push_back(33902);
        internalCounters.push_back(34021);
        internalCounters.push_back(34140);
        internalCounters.push_back(34259);
        internalCounters.push_back(34378);
        internalCounters.push_back(34497);
        internalCounters.push_back(34616);
        internalCounters.push_back(34735);
        internalCounters.push_back(34854);
        internalCounters.push_back(34973);
        internalCounters.push_back(35092);
        internalCounters.push_back(35211);
        internalCounters.push_back(35330);
        internalCounters.push_back(35449);
        internalCounters.push_back(35568);
        internalCounters.push_back(35687);
        internalCounters.push_back(35806);
        internalCounters.push_back(35925);
        internalCounters.push_back(36044);
        internalCounters.push_back(36163);
        internalCounters.push_back(36282);
        internalCounters.push_back(36401);
        internalCounters.push_back(36520);
        internalCounters.push_back(36639);
        internalCounters.push_back(36758);
        internalCounters.push_back(36877);
        internalCounters.push_back(36996);
        internalCounters.push_back(37115);
        internalCounters.push_back(29617);
        internalCounters.push_back(29736);
        internalCounters.push_back(29855);
        internalCounters.push_back(29974);
        internalCounters.push_back(30093);
        internalCounters.push_back(30212);
        internalCounters.push_back(30331);
        internalCounters.push_back(30450);
        internalCounters.push_back(30569);
        internalCounters.push_back(30688);
        internalCounters.push_back(30807);
        internalCounters.push_back(30926);
        internalCounters.push_back(31045);
        internalCounters.push_back(31164);
        internalCounters.push_back(31283);
        internalCounters.push_back(31402);
        internalCounters.push_back(31521);
        internalCounters.push_back(31640);
        internalCounters.push_back(31759);
        internalCounters.push_back(31878);
        internalCounters.push_back(31997);
        internalCounters.push_back(32116);
        internalCounters.push_back(32235);
        internalCounters.push_back(32354);
        internalCounters.push_back(32473);
        internalCounters.push_back(32592);
        internalCounters.push_back(32711);
        internalCounters.push_back(32830);
        internalCounters.push_back(32949);
        internalCounters.push_back(33068);
        internalCounters.push_back(33187);
        internalCounters.push_back(33306);
        internalCounters.push_back(33425);
        internalCounters.push_back(33544);
        internalCounters.push_back(33663);
        internalCounters.push_back(33782);
        internalCounters.push_back(33901);
        internalCounters.push_back(34020);
        internalCounters.push_back(34139);
        internalCounters.push_back(34258);
        internalCounters.push_back(34377);
        internalCounters.push_back(34496);
        internalCounters.push_back(34615);
        internalCounters.push_back(34734);
        internalCounters.push_back(34853);
        internalCounters.push_back(34972);
        internalCounters.push_back(35091);
        internalCounters.push_back(35210);
        internalCounters.push_back(35329);
        internalCounters.push_back(35448);
        internalCounters.push_back(35567);
        internalCounters.push_back(35686);
        internalCounters.push_back(35805);
        internalCounters.push_back(35924);
        internalCounters.push_back(36043);
        internalCounters.push_back(36162);
        internalCounters.push_back(36281);
        internalCounters.push_back(36400);
        internalCounters.push_back(36519);
        internalCounters.push_back(36638);
        internalCounters.push_back(36757);
        internalCounters.push_back(36876);
        internalCounters.push_back(36995);
        internalCounters.push_back(37114);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29618);
        internalCounters.push_back(29737);
        internalCounters.push_back(29856);
        internalCounters.push_back(29975);
        internalCounters.push_back(30094);
        internalCounters.push_back(30213);
        internalCounters.push_back(30332);
        internalCounters.push_back(30451);
        internalCounters.push_back(30570);
        internalCounters.push_back(30689);
        internalCounters.push_back(30808);
        internalCounters.push_back(30927);
        internalCounters.push_back(31046);
        internalCounters.push_back(31165);
        internalCounters.push_back(31284);
        internalCounters.push_back(31403);
        internalCounters.push_back(31522);
        internalCounters.push_back(31641);
        internalCounters.push_back(31760);
        internalCounters.push_back(31879);
        internalCounters.push_back(31998);
        internalCounters.push_back(32117);
        internalCounters.push_back(32236);
        internalCounters.push_back(32355);
        internalCounters.push_back(32474);
        internalCounters.push_back(32593);
        internalCounters.push_back(32712);
        internalCounters.push_back(32831);
        internalCounters.push_back(32950);
        internalCounters.push_back(33069);
        internalCounters.push_back(33188);
        internalCounters.push_back(33307);
        internalCounters.push_back(33426);
        internalCounters.push_back(33545);
        internalCounters.push_back(33664);
        internalCounters.push_back(33783);
        internalCounters.push_back(33902);
        internalCounters.push_back(34021);
        internalCounters.push_back(34140);
        internalCounters.push_back(34259);
        internalCounters.push_back(34378);
        internalCounters.push_back(34497);
        internalCounters.push_back(34616);
        internalCounters.push_back(34735);
        internalCounters.push_back(34854);
        internalCounters.push_back(34973);
        internalCounters.push_back(35092);
        internalCounters.push_back(35211);
        internalCounters.push_back(35330);
        internalCounters.push_back(35449);
        internalCounters.push_back(35568);
        internalCounters.push_back(35687);
        internalCounters.push_back(35806);
        internalCounters.push_back(35925);
        internalCounters.push_back(36044);
        internalCounters.push_back(36163);
        internalCounters.push_back(36282);
        internalCounters.push_back(36401);
        internalCounters.push_back(36520);
        internalCounters.push_back(36639);
        internalCounters.push_back(36758);
        internalCounters.push_back(36877);
        internalCounters.push_back(36996);
        internalCounters.push_back(37115);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29617);
        internalCounters.push_back(29736);
        internalCounters.push_back(29855);
        internalCounters.push_back(29974);
        internalCounters.push_back(30093);
        internalCounters.push_back(30212);
        internalCounters.push_back(30331);
        internalCounters.push_back(30450);
        internalCounters.push_back(30569);
        internalCounters.push_back(30688);
        internalCounters.push_back(30807);
        internalCounters.push_back(30926);
        internalCounters.push_back(31045);
        internalCounters.push_back(31164);
        internalCounters.push_back(31283);
        internalCounters.push_back(31402);
        internalCounters.push_back(31521);
        internalCounters.push_back(31640);
        internalCounters.push_back(31759);
        internalCounters.push_back(31878);
        internalCounters.push_back(31997);
        internalCounters.push_back(32116);
        internalCounters.push_back(32235);
        internalCounters.push_back(32354);
        internalCounters.push_back(32473);
        internalCounters.push_back(32592);
        internalCounters.push_back(32711);
        internalCounters.push_back(32830);
        internalCounters.push_back(32949);
        internalCounters.push_back(33068);
        internalCounters.push_back(33187);
        internalCounters.push_back(33306);
        internalCounters.push_back(33425);
        internalCounters.push_back(33544);
        internalCounters.push_back(33663);
        internalCounters.push_back(33782);
        internalCounters.push_back(33901);
        internalCounters.push_back(34020);
        internalCounters.push_back(34139);
        internalCounters.push_back(34258);
        internalCounters.push_back(34377);
        internalCounters.push_back(34496);
        internalCounters.push_back(34615);
        internalCounters.push_back(34734);
        internalCounters.push_back(34853);
        internalCounters.push_back(34972);
        internalCounters.push_back(35091);
        internalCounters.push_back(35210);
        internalCounters.push_back(35329);
        internalCounters.push_back(35448);
        internalCounters.push_back(35567);
        internalCounters.push_back(35686);
        internalCounters.push_back(35805);
        internalCounters.push_back(35924);
        internalCounters.push_back(36043);
        internalCounters.push_back(36162);
        internalCounters.push_back(36281);
        internalCounters.push_back(36400);
        internalCounters.push_back(36519);
        internalCounters.push_back(36638);
        internalCounters.push_back(36757);
        internalCounters.push_back(36876);
        internalCounters.push_back(36995);
        internalCounters.push_back(37114);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29636);
        internalCounters.push_back(29755);
        internalCounters.push_back(29874);
        internalCounters.push_back(29993);
        internalCounters.push_back(30112);
        internalCounters.push_back(30231);
        internalCounters.push_back(30350);
        internalCounters.push_back(30469);
        internalCounters.push_back(30588);
        internalCounters.push_back(30707);
        internalCounters.push_back(30826);
        internalCounters.push_back(30945);
        internalCounters.push_back(31064);
        internalCounters.push_back(31183);
        internalCounters.push_back(31302);
        internalCounters.push_back(31421);
        internalCounters.push_back(31540);
        internalCounters.push_back(31659);
        internalCounters.push_back(31778);
        internalCounters.push_back(31897);
        internalCounters.push_back(32016);
        internalCounters.push_back(32135);
        internalCounters.push_back(32254);
        internalCounters.push_back(32373);
        internalCounters.push_back(32492);
        internalCounters.push_back(32611);
        internalCounters.push_back(32730);
        internalCounters.push_back(32849);
        internalCounters.push_back(32968);
        internalCounters.push_back(33087);
        internalCounters.push_back(33206);
        internalCounters.push_back(33325);
        internalCounters.push_back(33444);
        internalCounters.push_back(33563);
        internalCounters.push_back(33682);
        internalCounters.push_back(33801);
        internalCounters.push_back(33920);
        internalCounters.push_back(34039);
        internalCounters.push_back(34158);
        internalCounters.push_back(34277);
        internalCounters.push_back(34396);
        internalCounters.push_back(34515);
        internalCounters.push_back(34634);
        internalCounters.push_back(34753);
        internalCounters.push_back(34872);
        internalCounters.push_back(34991);
        internalCounters.push_back(35110);
        internalCounters.push_back(35229);
        internalCounters.push_back(35348);
        internalCounters.push_back(35467);
        internalCounters.push_back(35586);
        internalCounters.push_back(35705);
        internalCounters.push_back(35824);
        internalCounters.push_back(35943);
        internalCounters.push_back(36062);
        internalCounters.push_back(36181);
        internalCounters.push_back(36300);
        internalCounters.push_back(36419);
        internalCounters.push_back(36538);
        internalCounters.push_back(36657);
        internalCounters.push_back(36776);
        internalCounters.push_back(36895);
        internalCounters.push_back(37014);
        internalCounters.push_back(37133);
        internalCounters.push_back(29637);
        internalCounters.push_back(29756);
        internalCounters.push_back(29875);
        internalCounters.push_back(29994);
        internalCounters.push_back(30113);
        internalCounters.push_back(30232);
        internalCounters.push_back(30351);
        internalCounters.push_back(30470);
        internalCounters.push_back(30589);
        internalCounters.push_back(30708);
        internalCounters.push_back(30827);
        internalCounters.push_back(30946);
        internalCounters.push_back(31065);
        internalCounters.push_back(31184);
        internalCounters.push_back(31303);
        internalCounters.push_back(31422);
        internalCounters.push_back(31541);
        internalCounters.push_back(31660);
        internalCounters.push_back(31779);
        internalCounters.push_back(31898);
        internalCounters.push_back(32017);
        internalCounters.push_back(32136);
        internalCounters.push_back(32255);
        internalCounters.push_back(32374);
        internalCounters.push_back(32493);
        internalCounters.push_back(32612);
        internalCounters.push_back(32731);
        internalCounters.push_back(32850);
        internalCounters.push_back(32969);
        internalCounters.push_back(33088);
        internalCounters.push_back(33207);
        internalCounters.push_back(33326);
        internalCounters.push_back(33445);
        internalCounters.push_back(33564);
        internalCounters.push_back(33683);
        internalCounters.push_back(33802);
        internalCounters.push_back(33921);
        internalCounters.push_back(34040);
        internalCounters.push_back(34159);
        internalCounters.push_back(34278);
        internalCounters.push_back(34397);
        internalCounters.push_back(34516);
        internalCounters.push_back(34635);
        internalCounters.push_back(34754);
        internalCounters.push_back(34873);
        internalCounters.push_back(34992);
        internalCounters.push_back(35111);
        internalCounters.push_back(35230);
        internalCounters.push_back(35349);
        internalCounters.push_back(35468);
        internalCounters.push_back(35587);
        internalCounters.push_back(35706);
        internalCounters.push_back(35825);
        internalCounters.push_back(35944);
        internalCounters.push_back(36063);
        internalCounters.push_back(36182);
        internalCounters.push_back(36301);
        internalCounters.push_back(36420);
        internalCounters.push_back(36539);
        internalCounters.push_back(36658);
        internalCounters.push_back(36777);
        internalCounters.push_back(36896);
        internalCounters.push_back(37015);
        internalCounters.push_back(37134);
        internalCounters.push_back(29638);
        internalCounters.push_back(29757);
        internalCounters.push_back(29876);
        internalCounters.push_back(29995);
        internalCounters.push_back(30114);
        internalCounters.push_back(30233);
        internalCounters.push_back(30352);
        internalCounters.push_back(30471);
        internalCounters.push_back(30590);
        internalCounters.push_back(30709);
        internalCounters.push_back(30828);
        internalCounters.push_back(30947);
        internalCounters.push_back(31066);
        internalCounters.push_back(31185);
        internalCounters.push_back(31304);
        internalCounters.push_back(31423);
        internalCounters.push_back(31542);
        internalCounters.push_back(31661);
        internalCounters.push_back(31780);
        internalCounters.push_back(31899);
        internalCounters.push_back(32018);
        internalCounters.push_back(32137);
        internalCounters.push_back(32256);
        internalCounters.push_back(32375);
        internalCounters.push_back(32494);
        internalCounters.push_back(32613);
        internalCounters.push_back(32732);
        internalCounters.push_back(32851);
        internalCounters.push_back(32970);
        internalCounters.push_back(33089);
        internalCounters.push_back(33208);
        internalCounters.push_back(33327);
        internalCounters.push_back(33446);
        internalCounters.push_back(33565);
        internalCounters.push_back(33684);
        internalCounters.push_back(33803);
        internalCounters.push_back(33922);
        internalCounters.push_back(34041);
        internalCounters.push_back(34160);
        internalCounters.push_back(34279);
        internalCounters.push_back(34398);
        internalCounters.push_back(34517);
        internalCounters.push_back(34636);
        internalCounters.push_back(34755);
        internalCounters.push_back(34874);
        internalCounters.push_back(34993);
        internalCounters.push_back(35112);
        internalCounters.push_back(35231);
        internalCounters.push_back(35350);
        internalCounters.push_back(35469);
        internalCounters.push_back(35588);
        internalCounters.push_back(35707);
        internalCounters.push_back(35826);
        internalCounters.push_back(35945);
        internalCounters.push_back(36064);
        internalCounters.push_back(36183);
        internalCounters.push_back(36302);
        internalCounters.push_back(36421);
        internalCounters.push_back(36540);
        internalCounters.push_back(36659);
        internalCounters.push_back(36778);
        internalCounters.push_back(36897);
        internalCounters.push_back(37016);
        internalCounters.push_back(37135);
        internalCounters.push_back(29639);
        internalCounters.push_back(29758);
        internalCounters.push_back(29877);
        internalCounters.push_back(29996);
        internalCounters.push_back(30115);
        internalCounters.push_back(30234);
        internalCounters.push_back(30353);
        internalCounters.push_back(30472);
        internalCounters.push_back(30591);
        internalCounters.push_back(30710);
        internalCounters.push_back(30829);
        internalCounters.push_back(30948);
        internalCounters.push_back(31067);
        internalCounters.push_back(31186);
        internalCounters.push_back(31305);
        internalCounters.push_back(31424);
        internalCounters.push_back(31543);
        internalCounters.push_back(31662);
        internalCounters.push_back(31781);
        internalCounters.push_back(31900);
        internalCounters.push_back(32019);
        internalCounters.push_back(32138);
        internalCounters.push_back(32257);
        internalCounters.push_back(32376);
        internalCounters.push_back(32495);
        internalCounters.push_back(32614);
        internalCounters.push_back(32733);
        internalCounters.push_back(32852);
        internalCounters.push_back(32971);
        internalCounters.push_back(33090);
        internalCounters.push_back(33209);
        internalCounters.push_back(33328);
        internalCounters.push_back(33447);
        internalCounters.push_back(33566);
        internalCounters.push_back(33685);
        internalCounters.push_back(33804);
        internalCounters.push_back(33923);
        internalCounters.push_back(34042);
        internalCounters.push_back(34161);
        internalCounters.push_back(34280);
        internalCounters.push_back(34399);
        internalCounters.push_back(34518);
        internalCounters.push_back(34637);
        internalCounters.push_back(34756);
        internalCounters.push_back(34875);
        internalCounters.push_back(34994);
        internalCounters.push_back(35113);
        internalCounters.push_back(35232);
        internalCounters.push_back(35351);
        internalCounters.push_back(35470);
        internalCounters.push_back(35589);
        internalCounters.push_back(35708);
        internalCounters.push_back(35827);
        internalCounters.push_back(35946);
        internalCounters.push_back(36065);
        internalCounters.push_back(36184);
        internalCounters.push_back(36303);
        internalCounters.push_back(36422);
        internalCounters.push_back(36541);
        internalCounters.push_back(36660);
        internalCounters.push_back(36779);
        internalCounters.push_back(36898);
        internalCounters.push_back(37017);
        internalCounters.push_back(37136);
        internalCounters.push_back(29640);
        internalCounters.push_back(29759);
        internalCounters.push_back(29878);
        internalCounters.push_back(29997);
        internalCounters.push_back(30116);
        internalCounters.push_back(30235);
        internalCounters.push_back(30354);
        internalCounters.push_back(30473);
        internalCounters.push_back(30592);
        internalCounters.push_back(30711);
        internalCounters.push_back(30830);
        internalCounters.push_back(30949);
        internalCounters.push_back(31068);
        internalCounters.push_back(31187);
        internalCounters.push_back(31306);
        internalCounters.push_back(31425);
        internalCounters.push_back(31544);
        internalCounters.push_back(31663);
        internalCounters.push_back(31782);
        internalCounters.push_back(31901);
        internalCounters.push_back(32020);
        internalCounters.push_back(32139);
        internalCounters.push_back(32258);
        internalCounters.push_back(32377);
        internalCounters.push_back(32496);
        internalCounters.push_back(32615);
        internalCounters.push_back(32734);
        internalCounters.push_back(32853);
        internalCounters.push_back(32972);
        internalCounters.push_back(33091);
        internalCounters.push_back(33210);
        internalCounters.push_back(33329);
        internalCounters.push_back(33448);
        internalCounters.push_back(33567);
        internalCounters.push_back(33686);
        internalCounters.push_back(33805);
        internalCounters.push_back(33924);
        internalCounters.push_back(34043);
        internalCounters.push_back(34162);
        internalCounters.push_back(34281);
        internalCounters.push_back(34400);
        internalCounters.push_back(34519);
        internalCounters.push_back(34638);
        internalCounters.push_back(34757);
        internalCounters.push_back(34876);
        internalCounters.push_back(34995);
        internalCounters.push_back(35114);
        internalCounters.push_back(35233);
        internalCounters.push_back(35352);
        internalCounters.push_back(35471);
        internalCounters.push_back(35590);
        internalCounters.push_back(35709);
        internalCounters.push_back(35828);
        internalCounters.push_back(35947);
        internalCounters.push_back(36066);
        internalCounters.push_back(36185);
        internalCounters.push_back(36304);
        internalCounters.push_back(36423);
        internalCounters.push_back(36542);
        internalCounters.push_back(36661);
        internalCounters.push_back(36780);
        internalCounters.push_back(36899);
        internalCounters.push_back(37018);
        internalCounters.push_back(37137);
        internalCounters.push_back(29641);
        internalCounters.push_back(29760);
        internalCounters.push_back(29879);
        internalCounters.push_back(29998);
        internalCounters.push_back(30117);
        internalCounters.push_back(30236);
        internalCounters.push_back(30355);
        internalCounters.push_back(30474);
        internalCounters.push_back(30593);
        internalCounters.push_back(30712);
        internalCounters.push_back(30831);
        internalCounters.push_back(30950);
        internalCounters.push_back(31069);
        internalCounters.push_back(31188);
        internalCounters.push_back(31307);
        internalCounters.push_back(31426);
        internalCounters.push_back(31545);
        internalCounters.push_back(31664);
        internalCounters.push_back(31783);
        internalCounters.push_back(31902);
        internalCounters.push_back(32021);
        internalCounters.push_back(32140);
        internalCounters.push_back(32259);
        internalCounters.push_back(32378);
        internalCounters.push_back(32497);
        internalCounters.push_back(32616);
        internalCounters.push_back(32735);
        internalCounters.push_back(32854);
        internalCounters.push_back(32973);
        internalCounters.push_back(33092);
        internalCounters.push_back(33211);
        internalCounters.push_back(33330);
        internalCounters.push_back(33449);
        internalCounters.push_back(33568);
        internalCounters.push_back(33687);
        internalCounters.push_back(33806);
        internalCounters.push_back(33925);
        internalCounters.push_back(34044);
        internalCounters.push_back(34163);
        internalCounters.push_back(34282);
        internalCounters.push_back(34401);
        internalCounters.push_back(34520);
        internalCounters.push_back(34639);
        internalCounters.push_back(34758);
        internalCounters.push_back(34877);
        internalCounters.push_back(34996);
        internalCounters.push_back(35115);
        internalCounters.push_back(35234);
        internalCounters.push_back(35353);
        internalCounters.push_back(35472);
        internalCounters.push_back(35591);
        internalCounters.push_back(35710);
        internalCounters.push_back(35829);
        internalCounters.push_back(35948);
        internalCounters.push_back(36067);
        internalCounters.push_back(36186);
        internalCounters.push_back(36305);
        internalCounters.push_back(36424);
        internalCounters.push_back(36543);
        internalCounters.push_back(36662);
        internalCounters.push_back(36781);
        internalCounters.push_back(36900);
        internalCounters.push_back(37019);
        internalCounters.push_back(37138);
        internalCounters.push_back(29642);
        internalCounters.push_back(29761);
        internalCounters.push_back(29880);
        internalCounters.push_back(29999);
        internalCounters.push_back(30118);
        internalCounters.push_back(30237);
        internalCounters.push_back(30356);
        internalCounters.push_back(30475);
        internalCounters.push_back(30594);
        internalCounters.push_back(30713);
        internalCounters.push_back(30832);
        internalCounters.push_back(30951);
        internalCounters.push_back(31070);
        internalCounters.push_back(31189);
        internalCounters.push_back(31308);
        internalCounters.push_back(31427);
        internalCounters.push_back(31546);
        internalCounters.push_back(31665);
        internalCounters.push_back(31784);
        internalCounters.push_back(31903);
        internalCounters.push_back(32022);
        internalCounters.push_back(32141);
        internalCounters.push_back(32260);
        internalCounters.push_back(32379);
        internalCounters.push_back(32498);
        internalCounters.push_back(32617);
        internalCounters.push_back(32736);
        internalCounters.push_back(32855);
        internalCounters.push_back(32974);
        internalCounters.push_back(33093);
        internalCounters.push_back(33212);
        internalCounters.push_back(33331);
        internalCounters.push_back(33450);
        internalCounters.push_back(33569);
        internalCounters.push_back(33688);
        internalCounters.push_back(33807);
        internalCounters.push_back(33926);
        internalCounters.push_back(34045);
        internalCounters.push_back(34164);
        internalCounters.push_back(34283);
        internalCounters.push_back(34402);
        internalCounters.push_back(34521);
        internalCounters.push_back(34640);
        internalCounters.push_back(34759);
        internalCounters.push_back(34878);
        internalCounters.push_back(34997);
        internalCounters.push_back(35116);
        internalCounters.push_back(35235);
        internalCounters.push_back(35354);
        internalCounters.push_back(35473);
        internalCounters.push_back(35592);
        internalCounters.push_back(35711);
        internalCounters.push_back(35830);
        internalCounters.push_back(35949);
        internalCounters.push_back(36068);
        internalCounters.push_back(36187);
        internalCounters.push_back(36306);
        internalCounters.push_back(36425);
        internalCounters.push_back(36544);
        internalCounters.push_back(36663);
        internalCounters.push_back(36782);
        internalCounters.push_back(36901);
        internalCounters.push_back(37020);
        internalCounters.push_back(37139);
        internalCounters.push_back(29643);
        internalCounters.push_back(29762);
        internalCounters.push_back(29881);
        internalCounters.push_back(30000);
        internalCounters.push_back(30119);
        internalCounters.push_back(30238);
        internalCounters.push_back(30357);
        internalCounters.push_back(30476);
        internalCounters.push_back(30595);
        internalCounters.push_back(30714);
        internalCounters.push_back(30833);
        internalCounters.push_back(30952);
        internalCounters.push_back(31071);
        internalCounters.push_back(31190);
        internalCounters.push_back(31309);
        internalCounters.push_back(31428);
        internalCounters.push_back(31547);
        internalCounters.push_back(31666);
        internalCounters.push_back(31785);
        internalCounters.push_back(31904);
        internalCounters.push_back(32023);
        internalCounters.push_back(32142);
        internalCounters.push_back(32261);
        internalCounters.push_back(32380);
        internalCounters.push_back(32499);
        internalCounters.push_back(32618);
        internalCounters.push_back(32737);
        internalCounters.push_back(32856);
        internalCounters.push_back(32975);
        internalCounters.push_back(33094);
        internalCounters.push_back(33213);
        internalCounters.push_back(33332);
        internalCounters.push_back(33451);
        internalCounters.push_back(33570);
        internalCounters.push_back(33689);
        internalCounters.push_back(33808);
        internalCounters.push_back(33927);
        internalCounters.push_back(34046);
        internalCounters.push_back(34165);
        internalCounters.push_back(34284);
        internalCounters.push_back(34403);
        internalCounters.push_back(34522);
        internalCounters.push_back(34641);
        internalCounters.push_back(34760);
        internalCounters.push_back(34879);
        internalCounters.push_back(34998);
        internalCounters.push_back(35117);
        internalCounters.push_back(35236);
        internalCounters.push_back(35355);
        internalCounters.push_back(35474);
        internalCounters.push_back(35593);
        internalCounters.push_back(35712);
        internalCounters.push_back(35831);
        internalCounters.push_back(35950);
        internalCounters.push_back(36069);
        internalCounters.push_back(36188);
        internalCounters.push_back(36307);
        internalCounters.push_back(36426);
        internalCounters.push_back(36545);
        internalCounters.push_back(36664);
        internalCounters.push_back(36783);
        internalCounters.push_back(36902);
        internalCounters.push_back(37021);
        internalCounters.push_back(37140);
        internalCounters.push_back(29644);
        internalCounters.push_back(29763);
        internalCounters.push_back(29882);
        internalCounters.push_back(30001);
        internalCounters.push_back(30120);
        internalCounters.push_back(30239);
        internalCounters.push_back(30358);
        internalCounters.push_back(30477);
        internalCounters.push_back(30596);
        internalCounters.push_back(30715);
        internalCounters.push_back(30834);
        internalCounters.push_back(30953);
        internalCounters.push_back(31072);
        internalCounters.push_back(31191);
        internalCounters.push_back(31310);
        internalCounters.push_back(31429);
        internalCounters.push_back(31548);
        internalCounters.push_back(31667);
        internalCounters.push_back(31786);
        internalCounters.push_back(31905);
        internalCounters.push_back(32024);
        internalCounters.push_back(32143);
        internalCounters.push_back(32262);
        internalCounters.push_back(32381);
        internalCounters.push_back(32500);
        internalCounters.push_back(32619);
        internalCounters.push_back(32738);
        internalCounters.push_back(32857);
        internalCounters.push_back(32976);
        internalCounters.push_back(33095);
        internalCounters.push_back(33214);
        internalCounters.push_back(33333);
        internalCounters.push_back(33452);
        internalCounters.push_back(33571);
        internalCounters.push_back(33690);
        internalCounters.push_back(33809);
        internalCounters.push_back(33928);
        internalCounters.push_back(34047);
        internalCounters.push_back(34166);
        internalCounters.push_back(34285);
        internalCounters.push_back(34404);
        internalCounters.push_back(34523);
        internalCounters.push_back(34642);
        internalCounters.push_back(34761);
        internalCounters.push_back(34880);
        internalCounters.push_back(34999);
        internalCounters.push_back(35118);
        internalCounters.push_back(35237);
        internalCounters.push_back(35356);
        internalCounters.push_back(35475);
        internalCounters.push_back(35594);
        internalCounters.push_back(35713);
        internalCounters.push_back(35832);
        internalCounters.push_back(35951);
        internalCounters.push_back(36070);
        internalCounters.push_back(36189);
        internalCounters.push_back(36308);
        internalCounters.push_back(36427);
        internalCounters.push_back(36546);
        internalCounters.push_back(36665);
        internalCounters.push_back(36784);
        internalCounters.push_back(36903);
        internalCounters.push_back(37022);
        internalCounters.push_back(37141);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(2),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,*,+,(4),128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,*,+,(6),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,*,+,(8),256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,*,+,(10),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,*,+,(12),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,*,+,(14),448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,*,+,(16),512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,+,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,+,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,+,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,+,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7378);
        internalCounters.push_back(7706);
        internalCounters.push_back(8034);
        internalCounters.push_back(8362);
        internalCounters.push_back(8690);
        internalCounters.push_back(9018);
        internalCounters.push_back(9346);
        internalCounters.push_back(9674);
        internalCounters.push_back(10002);
        internalCounters.push_back(10330);
        internalCounters.push_back(10658);
        internalCounters.push_back(10986);
        internalCounters.push_back(11314);
        internalCounters.push_back(11642);
        internalCounters.push_back(11970);
        internalCounters.push_back(12298);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7378);
        internalCounters.push_back(7706);
        internalCounters.push_back(8034);
        internalCounters.push_back(8362);
        internalCounters.push_back(8690);
        internalCounters.push_back(9018);
        internalCounters.push_back(9346);
        internalCounters.push_back(9674);
        internalCounters.push_back(10002);
        internalCounters.push_back(10330);
        internalCounters.push_back(10658);
        internalCounters.push_back(10986);
        internalCounters.push_back(11314);
        internalCounters.push_back(11642);
        internalCounters.push_back(11970);
        internalCounters.push_back(12298);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7249);
        internalCounters.push_back(7577);
        internalCounters.push_back(7905);
        internalCounters.push_back(8233);
        internalCounters.push_back(8561);
        internalCounters.push_back(8889);
        internalCounters.push_back(9217);
        internalCounters.push_back(9545);
        internalCounters.push_back(9873);
        internalCounters.push_back(10201);
        internalCounters.push_back(10529);
        internalCounters.push_back(10857);
        internalCounters.push_back(11185);
        internalCounters.push_back(11513);
        internalCounters.push_back(11841);
        internalCounters.push_back(12169);
        internalCounters.push_back(7238);
        internalCounters.push_back(7566);
        internalCounters.push_back(7894);
        internalCounters.push_back(8222);
        internalCounters.push_back(8550);
        internalCounters.push_back(8878);
        internalCounters.push_back(9206);
        internalCounters.push_back(9534);
        internalCounters.push_back(9862);
        internalCounters.push_back(10190);
        internalCounters.push_back(10518);
        internalCounters.push_back(10846);
        internalCounters.push_back(11174);
        internalCounters.push_back(11502);
        internalCounters.push_back(11830);
        internalCounters.push_back(12158);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7249);
        internalCounters.push_back(7577);
        internalCounters.push_back(7905);
        internalCounters.push_back(8233);
        internalCounters.push_back(8561);
        internalCounters.push_back(8889);
        internalCounters.push_back(9217);
        internalCounters.push_back(9545);
        internalCounters.push_back(9873);
        internalCounters.push_back(10201);
        internalCounters.push_back(10529);
        internalCounters.push_back(10857);
        internalCounters.push_back(11185);
        internalCounters.push_back(11513);
        internalCounters.push_back(11841);
        internalCounters.push_back(12169);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7238);
        internalCounters.push_back(7566);
        internalCounters.push_back(7894);
        internalCounters.push_back(8222);
        internalCounters.push_back(8550);
        internalCounters.push_back(8878);
        internalCounters.push_back(9206);
        internalCounters.push_back(9534);
        internalCounters.push_back(9862);
        internalCounters.push_back(10190);
        internalCounters.push_back(10518);
        internalCounters.push_back(10846);
        internalCounters.push_back(11174);
        internalCounters.push_back(11502);
        internalCounters.push_back(11830);
        internalCounters.push_back(12158);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7238);
        internalCounters.push_back(7566);
        internalCounters.push_back(7894);
        internalCounters.push_back(8222);
        internalCounters.push_back(8550);
        internalCounters.push_back(8878);
        internalCounters.push_back(9206);
        internalCounters.push_back(9534);
        internalCounters.push_back(9862);
        internalCounters.push_back(10190);
        internalCounters.push_back(10518);
        internalCounters.push_back(10846);
        internalCounters.push_back(11174);
        internalCounters.push_back(11502);
        internalCounters.push_back(11830);
        internalCounters.push_back(12158);
        internalCounters.push_back(7262);
        internalCounters.push_back(7590);
        internalCounters.push_back(7918);
        internalCounters.push_back(8246);
        internalCounters.push_back(8574);
        internalCounters.push_back(8902);
        internalCounters.push_back(9230);
        internalCounters.push_back(9558);
        internalCounters.push_back(9886);
        internalCounters.push_back(10214);
        internalCounters.push_back(10542);
        internalCounters.push_back(10870);
        internalCounters.push_back(11198);
        internalCounters.push_back(11526);
        internalCounters.push_back(11854);
        internalCounters.push_back(12182);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7262);
        internalCounters.push_back(7590);
        internalCounters.push_back(7918);
        internalCounters.push_back(8246);
        internalCounters.push_back(8574);
        internalCounters.push_back(8902);
        internalCounters.push_back(9230);
        internalCounters.push_back(9558);
        internalCounters.push_back(9886);
        internalCounters.push_back(10214);
        internalCounters.push_back(10542);
        internalCounters.push_back(10870);
        internalCounters.push_back(11198);
        internalCounters.push_back(11526);
        internalCounters.push_back(11854);
        internalCounters.push_back(12182);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7238);
        internalCounters.push_back(7566);
        internalCounters.push_back(7894);
        internalCounters.push_back(8222);
        internalCounters.push_back(8550);
        internalCounters.push_back(8878);
        internalCounters.push_back(9206);
        internalCounters.push_back(9534);
        internalCounters.push_back(9862);
        internalCounters.push_back(10190);
        internalCounters.push_back(10518);
        internalCounters.push_back(10846);
        internalCounters.push_back(11174);
        internalCounters.push_back(11502);
        internalCounters.push_back(11830);
        internalCounters.push_back(12158);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14154);
        internalCounters.push_back(14646);
        internalCounters.push_back(15138);
        internalCounters.push_back(15630);
        internalCounters.push_back(14155);
        internalCounters.push_back(14647);
        internalCounters.push_back(15139);
        internalCounters.push_back(15631);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14157);
        internalCounters.push_back(14649);
        internalCounters.push_back(15141);
        internalCounters.push_back(15633);
        internalCounters.push_back(14230);
        internalCounters.push_back(14722);
        internalCounters.push_back(15214);
        internalCounters.push_back(15706);
        internalCounters.push_back(14231);
        internalCounters.push_back(14723);
        internalCounters.push_back(15215);
        internalCounters.push_back(15707);
        internalCounters.push_back(14232);
        internalCounters.push_back(14724);
        internalCounters.push_back(15216);
        internalCounters.push_back(15708);
        internalCounters.push_back(14233);
        internalCounters.push_back(14725);
        internalCounters.push_back(15217);
        internalCounters.push_back(15709);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14154);
        internalCounters.push_back(14646);
        internalCounters.push_back(15138);
        internalCounters.push_back(15630);
        internalCounters.push_back(14155);
        internalCounters.push_back(14647);
        internalCounters.push_back(15139);
        internalCounters.push_back(15631);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14157);
        internalCounters.push_back(14649);
        internalCounters.push_back(15141);
        internalCounters.push_back(15633);
        internalCounters.push_back(14230);
        internalCounters.push_back(14722);
        internalCounters.push_back(15214);
        internalCounters.push_back(15706);
        internalCounters.push_back(14231);
        internalCounters.push_back(14723);
        internalCounters.push_back(15215);
        internalCounters.push_back(15707);
        internalCounters.push_back(14232);
        internalCounters.push_back(14724);
        internalCounters.push_back(15216);
        internalCounters.push_back(15708);
        internalCounters.push_back(14233);
        internalCounters.push_back(14725);
        internalCounters.push_back(15217);
        internalCounters.push_back(15709);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14230);
        internalCounters.push_back(14722);
        internalCounters.push_back(15214);
        internalCounters.push_back(15706);
        internalCounters.push_back(14231);
        internalCounters.push_back(14723);
        internalCounters.push_back(15215);
        internalCounters.push_back(15707);
        internalCounters.push_back(14232);
        internalCounters.push_back(14724);
        internalCounters.push_back(15216);
        internalCounters.push_back(15708);
        internalCounters.push_back(14233);
        internalCounters.push_back(14725);
        internalCounters.push_back(15217);
        internalCounters.push_back(15709);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14154);
        internalCounters.push_back(14646);
        internalCounters.push_back(15138);
        internalCounters.push_back(15630);
        internalCounters.push_back(14155);
        internalCounters.push_back(14647);
        internalCounters.push_back(15139);
        internalCounters.push_back(15631);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14157);
        internalCounters.push_back(14649);
        internalCounters.push_back(15141);
        internalCounters.push_back(15633);
        internalCounters.push_back(14254);
        internalCounters.push_back(14746);
        internalCounters.push_back(15238);
        internalCounters.push_back(15730);
        internalCounters.push_back(14230);
        internalCounters.push_back(14722);
        internalCounters.push_back(15214);
        internalCounters.push_back(15706);
        internalCounters.push_back(14231);
        internalCounters.push_back(14723);
        internalCounters.push_back(15215);
        internalCounters.push_back(15707);
        internalCounters.push_back(14232);
        internalCounters.push_back(14724);
        internalCounters.push_back(15216);
        internalCounters.push_back(15708);
        internalCounters.push_back(14233);
        internalCounters.push_back(14725);
        internalCounters.push_back(15217);
        internalCounters.push_back(15709);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,16,17,18,19,sum4,-,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14154);
        internalCounters.push_back(14646);
        internalCounters.push_back(15138);
        internalCounters.push_back(15630);
        internalCounters.push_back(14155);
        internalCounters.push_back(14647);
        internalCounters.push_back(15139);
        internalCounters.push_back(15631);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14157);
        internalCounters.push_back(14649);
        internalCounters.push_back(15141);
        internalCounters.push_back(15633);
        internalCounters.push_back(14254);
        internalCounters.push_back(14746);
        internalCounters.push_back(15238);
        internalCounters.push_back(15730);
        internalCounters.push_back(14230);
        internalCounters.push_back(14722);
        internalCounters.push_back(15214);
        internalCounters.push_back(15706);
        internalCounters.push_back(14231);
        internalCounters.push_back(14723);
        internalCounters.push_back(15215);
        internalCounters.push_back(15707);
        internalCounters.push_back(14232);
        internalCounters.push_back(14724);
        internalCounters.push_back(15216);
        internalCounters.push_back(15708);
        internalCounters.push_back(14233);
        internalCounters.push_back(14725);
        internalCounters.push_back(15217);
        internalCounters.push_back(15709);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,sum4,-,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,-", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14254);
        internalCounters.push_back(14746);
        internalCounters.push_back(15238);
        internalCounters.push_back(15730);
        internalCounters.push_back(14230);
        internalCounters.push_back(14722);
        internalCounters.push_back(15214);
        internalCounters.push_back(15706);
        internalCounters.push_back(14231);
        internalCounters.push_back(14723);
        internalCounters.push_back(15215);
        internalCounters.push_back(15707);
        internalCounters.push_back(14232);
        internalCounters.push_back(14724);
        internalCounters.push_back(15216);
        internalCounters.push_back(15708);
        internalCounters.push_back(14233);
        internalCounters.push_back(14725);
        internalCounters.push_back(15217);
        internalCounters.push_back(15709);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,0,1,2,3,sum4,-", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14254);
        internalCounters.push_back(14746);
        internalCounters.push_back(15238);
        internalCounters.push_back(15730);
        internalCounters.push_back(14154);
        internalCounters.push_back(14646);
        internalCounters.push_back(15138);
        internalCounters.push_back(15630);
        internalCounters.push_back(14155);
        internalCounters.push_back(14647);
        internalCounters.push_back(15139);
        internalCounters.push_back(15631);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14157);
        internalCounters.push_back(14649);
        internalCounters.push_back(15141);
        internalCounters.push_back(15633);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(14254);
        internalCounters.push_back(14746);
        internalCounters.push_back(15238);
        internalCounters.push_back(15730);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7411);
        internalCounters.push_back(7739);
        internalCounters.push_back(8067);
        internalCounters.push_back(8395);
        internalCounters.push_back(8723);
        internalCounters.push_back(9051);
        internalCounters.push_back(9379);
        internalCounters.push_back(9707);
        internalCounters.push_back(10035);
        internalCounters.push_back(10363);
        internalCounters.push_back(10691);
        internalCounters.push_back(11019);
        internalCounters.push_back(11347);
        internalCounters.push_back(11675);
        internalCounters.push_back(12003);
        internalCounters.push_back(12331);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7413);
        internalCounters.push_back(7741);
        internalCounters.push_back(8069);
        internalCounters.push_back(8397);
        internalCounters.push_back(8725);
        internalCounters.push_back(9053);
        internalCounters.push_back(9381);
        internalCounters.push_back(9709);
        internalCounters.push_back(10037);
        internalCounters.push_back(10365);
        internalCounters.push_back(10693);
        internalCounters.push_back(11021);
        internalCounters.push_back(11349);
        internalCounters.push_back(11677);
        internalCounters.push_back(12005);
        internalCounters.push_back(12333);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7412);
        internalCounters.push_back(7740);
        internalCounters.push_back(8068);
        internalCounters.push_back(8396);
        internalCounters.push_back(8724);
        internalCounters.push_back(9052);
        internalCounters.push_back(9380);
        internalCounters.push_back(9708);
        internalCounters.push_back(10036);
        internalCounters.push_back(10364);
        internalCounters.push_back(10692);
        internalCounters.push_back(11020);
        internalCounters.push_back(11348);
        internalCounters.push_back(11676);
        internalCounters.push_back(12004);
        internalCounters.push_back(12332);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7408);
        internalCounters.push_back(7736);
        internalCounters.push_back(8064);
        internalCounters.push_back(8392);
        internalCounters.push_back(8720);
        internalCounters.push_back(9048);
        internalCounters.push_back(9376);
        internalCounters.push_back(9704);
        internalCounters.push_back(10032);
        internalCounters.push_back(10360);
        internalCounters.push_back(10688);
        internalCounters.push_back(11016);
        internalCounters.push_back(11344);
        internalCounters.push_back(11672);
        internalCounters.push_back(12000);
        internalCounters.push_back(12328);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7410);
        internalCounters.push_back(7738);
        internalCounters.push_back(8066);
        internalCounters.push_back(8394);
        internalCounters.push_back(8722);
        internalCounters.push_back(9050);
        internalCounters.push_back(9378);
        internalCounters.push_back(9706);
        internalCounters.push_back(10034);
        internalCounters.push_back(10362);
        internalCounters.push_back(10690);
        internalCounters.push_back(11018);
        internalCounters.push_back(11346);
        internalCounters.push_back(11674);
        internalCounters.push_back(12002);
        internalCounters.push_back(12330);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7409);
        internalCounters.push_back(7737);
        internalCounters.push_back(8065);
        internalCounters.push_back(8393);
        internalCounters.push_back(8721);
        internalCounters.push_back(9049);
        internalCounters.push_back(9377);
        internalCounters.push_back(9705);
        internalCounters.push_back(10033);
        internalCounters.push_back(10361);
        internalCounters.push_back(10689);
        internalCounters.push_back(11017);
        internalCounters.push_back(11345);
        internalCounters.push_back(11673);
        internalCounters.push_back(12001);
        internalCounters.push_back(12329);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7280);
        internalCounters.push_back(7608);
        internalCounters.push_back(7936);
        internalCounters.push_back(8264);
        internalCounters.push_back(8592);
        internalCounters.push_back(8920);
        internalCounters.push_back(9248);
        internalCounters.push_back(9576);
        internalCounters.push_back(9904);
        internalCounters.push_back(10232);
        internalCounters.push_back(10560);
        internalCounters.push_back(10888);
        internalCounters.push_back(11216);
        internalCounters.push_back(11544);
        internalCounters.push_back(11872);
        internalCounters.push_back(12200);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7280);
        internalCounters.push_back(7608);
        internalCounters.push_back(7936);
        internalCounters.push_back(8264);
        internalCounters.push_back(8592);
        internalCounters.push_back(8920);
        internalCounters.push_back(9248);
        internalCounters.push_back(9576);
        internalCounters.push_back(9904);
        internalCounters.push_back(10232);
        internalCounters.push_back(10560);
        internalCounters.push_back(10888);
        internalCounters.push_back(11216);
        internalCounters.push_back(11544);
        internalCounters.push_back(11872);
        internalCounters.push_back(12200);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7282);
        internalCounters.push_back(7610);
        internalCounters.push_back(7938);
        internalCounters.push_back(8266);
        internalCounters.push_back(8594);
        internalCounters.push_back(8922);
        internalCounters.push_back(9250);
        internalCounters.push_back(9578);
        internalCounters.push_back(9906);
        internalCounters.push_back(10234);
        internalCounters.push_back(10562);
        internalCounters.push_back(10890);
        internalCounters.push_back(11218);
        internalCounters.push_back(11546);
        internalCounters.push_back(11874);
        internalCounters.push_back(12202);
        internalCounters.push_back(7289);
        internalCounters.push_back(7617);
        internalCounters.push_back(7945);
        internalCounters.push_back(8273);
        internalCounters.push_back(8601);
        internalCounters.push_back(8929);
        internalCounters.push_back(9257);
        internalCounters.push_back(9585);
        internalCounters.push_back(9913);
        internalCounters.push_back(10241);
        internalCounters.push_back(10569);
        internalCounters.push_back(10897);
        internalCounters.push_back(11225);
        internalCounters.push_back(11553);
        internalCounters.push_back(11881);
        internalCounters.push_back(12209);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(7294);
        internalCounters.push_back(7622);
        internalCounters.push_back(7950);
        internalCounters.push_back(8278);
        internalCounters.push_back(8606);
        internalCounters.push_back(8934);
        internalCounters.push_back(9262);
        internalCounters.push_back(9590);
        internalCounters.push_back(9918);
        internalCounters.push_back(10246);
        internalCounters.push_back(10574);
        internalCounters.push_back(10902);
        internalCounters.push_back(11230);
        internalCounters.push_back(11558);
        internalCounters.push_back(11886);
        internalCounters.push_back(12214);
        internalCounters.push_back(7297);
        internalCounters.push_back(7625);
        internalCounters.push_back(7953);
        internalCounters.push_back(8281);
        internalCounters.push_back(8609);
        internalCounters.push_back(8937);
        internalCounters.push_back(9265);
        internalCounters.push_back(9593);
        internalCounters.push_back(9921);
        internalCounters.push_back(10249);
        internalCounters.push_back(10577);
        internalCounters.push_back(10905);
        internalCounters.push_back(11233);
        internalCounters.push_back(11561);
        internalCounters.push_back(11889);
        internalCounters.push_back(12217);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(354);
        internalCounters.push_back(792);
        internalCounters.push_back(1230);
        internalCounters.push_back(1668);
        internalCounters.push_back(2106);
        internalCounters.push_back(2544);
        internalCounters.push_back(2982);
        internalCounters.push_back(3420);
        internalCounters.push_back(3858);
        internalCounters.push_back(4296);
        internalCounters.push_back(4734);
        internalCounters.push_back(5172);
        internalCounters.push_back(5610);
        internalCounters.push_back(6048);
        internalCounters.push_back(6486);
        internalCounters.push_back(6924);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(485);
        internalCounters.push_back(923);
        internalCounters.push_back(1361);
        internalCounters.push_back(1799);
        internalCounters.push_back(2237);
        internalCounters.push_back(2675);
        internalCounters.push_back(3113);
        internalCounters.push_back(3551);
        internalCounters.push_back(3989);
        internalCounters.push_back(4427);
        internalCounters.push_back(4865);
        internalCounters.push_back(5303);
        internalCounters.push_back(5741);
        internalCounters.push_back(6179);
        internalCounters.push_back(6617);
        internalCounters.push_back(7055);
        internalCounters.push_back(352);
        internalCounters.push_back(790);
        internalCounters.push_back(1228);
        internalCounters.push_back(1666);
        internalCounters.push_back(2104);
        internalCounters.push_back(2542);
        internalCounters.push_back(2980);
        internalCounters.push_back(3418);
        internalCounters.push_back(3856);
        internalCounters.push_back(4294);
        internalCounters.push_back(4732);
        internalCounters.push_back(5170);
        internalCounters.push_back(5608);
        internalCounters.push_back(6046);
        internalCounters.push_back(6484);
        internalCounters.push_back(6922);
        internalCounters.push_back(353);
        internalCounters.push_back(791);
        internalCounters.push_back(1229);
        internalCounters.push_back(1667);
        internalCounters.push_back(2105);
        internalCounters.push_back(2543);
        internalCounters.push_back(2981);
        internalCounters.push_back(3419);
        internalCounters.push_back(3857);
        internalCounters.push_back(4295);
        internalCounters.push_back(4733);
        internalCounters.push_back(5171);
        internalCounters.push_back(5609);
        internalCounters.push_back(6047);
        internalCounters.push_back(6485);
        internalCounters.push_back(6923);
        internalCounters.push_back(354);
        internalCounters.push_back(792);
        internalCounters.push_back(1230);
        internalCounters.push_back(1668);
        internalCounters.push_back(2106);
        internalCounters.push_back(2544);
        internalCounters.push_back(2982);
        internalCounters.push_back(3420);
        internalCounters.push_back(3858);
        internalCounters.push_back(4296);
        internalCounters.push_back(4734);
        internalCounters.push_back(5172);
        internalCounters.push_back(5610);
        internalCounters.push_back(6048);
        internalCounters.push_back(6486);
        internalCounters.push_back(6924);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(344);
        internalCounters.push_back(782);
        internalCounters.push_back(1220);
        internalCounters.push_back(1658);
        internalCounters.push_back(2096);
        internalCounters.push_back(2534);
        internalCounters.push_back(2972);
        internalCounters.push_back(3410);
        internalCounters.push_back(3848);
        internalCounters.push_back(4286);
        internalCounters.push_back(4724);
        internalCounters.push_back(5162);
        internalCounters.push_back(5600);
        internalCounters.push_back(6038);
        internalCounters.push_back(6476);
        internalCounters.push_back(6914);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(483);
        internalCounters.push_back(921);
        internalCounters.push_back(1359);
        internalCounters.push_back(1797);
        internalCounters.push_back(2235);
        internalCounters.push_back(2673);
        internalCounters.push_back(3111);
        internalCounters.push_back(3549);
        internalCounters.push_back(3987);
        internalCounters.push_back(4425);
        internalCounters.push_back(4863);
        internalCounters.push_back(5301);
        internalCounters.push_back(5739);
        internalCounters.push_back(6177);
        internalCounters.push_back(6615);
        internalCounters.push_back(7053);
        internalCounters.push_back(342);
        internalCounters.push_back(780);
        internalCounters.push_back(1218);
        internalCounters.push_back(1656);
        internalCounters.push_back(2094);
        internalCounters.push_back(2532);
        internalCounters.push_back(2970);
        internalCounters.push_back(3408);
        internalCounters.push_back(3846);
        internalCounters.push_back(4284);
        internalCounters.push_back(4722);
        internalCounters.push_back(5160);
        internalCounters.push_back(5598);
        internalCounters.push_back(6036);
        internalCounters.push_back(6474);
        internalCounters.push_back(6912);
        internalCounters.push_back(343);
        internalCounters.push_back(781);
        internalCounters.push_back(1219);
        internalCounters.push_back(1657);
        internalCounters.push_back(2095);
        internalCounters.push_back(2533);
        internalCounters.push_back(2971);
        internalCounters.push_back(3409);
        internalCounters.push_back(3847);
        internalCounters.push_back(4285);
        internalCounters.push_back(4723);
        internalCounters.push_back(5161);
        internalCounters.push_back(5599);
        internalCounters.push_back(6037);
        internalCounters.push_back(6475);
        internalCounters.push_back(6913);
        internalCounters.push_back(344);
        internalCounters.push_back(782);
        internalCounters.push_back(1220);
        internalCounters.push_back(1658);
        internalCounters.push_back(2096);
        internalCounters.push_back(2534);
        internalCounters.push_back(2972);
        internalCounters.push_back(3410);
        internalCounters.push_back(3848);
        internalCounters.push_back(4286);
        internalCounters.push_back(4724);
        internalCounters.push_back(5162);
        internalCounters.push_back(5600);
        internalCounters.push_back(6038);
        internalCounters.push_back(6476);
        internalCounters.push_back(6914);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(388);
        internalCounters.push_back(826);
        internalCounters.push_back(1264);
        internalCounters.push_back(1702);
        internalCounters.push_back(2140);
        internalCounters.push_back(2578);
        internalCounters.push_back(3016);
        internalCounters.push_back(3454);
        internalCounters.push_back(3892);
        internalCounters.push_back(4330);
        internalCounters.push_back(4768);
        internalCounters.push_back(5206);
        internalCounters.push_back(5644);
        internalCounters.push_back(6082);
        internalCounters.push_back(6520);
        internalCounters.push_back(6958);
        internalCounters.push_back(233);
        internalCounters.push_back(671);
        internalCounters.push_back(1109);
        internalCounters.push_back(1547);
        internalCounters.push_back(1985);
        internalCounters.push_back(2423);
        internalCounters.push_back(2861);
        internalCounters.push_back(3299);
        internalCounters.push_back(3737);
        internalCounters.push_back(4175);
        internalCounters.push_back(4613);
        internalCounters.push_back(5051);
        internalCounters.push_back(5489);
        internalCounters.push_back(5927);
        internalCounters.push_back(6365);
        internalCounters.push_back(6803);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(388);
        internalCounters.push_back(826);
        internalCounters.push_back(1264);
        internalCounters.push_back(1702);
        internalCounters.push_back(2140);
        internalCounters.push_back(2578);
        internalCounters.push_back(3016);
        internalCounters.push_back(3454);
        internalCounters.push_back(3892);
        internalCounters.push_back(4330);
        internalCounters.push_back(4768);
        internalCounters.push_back(5206);
        internalCounters.push_back(5644);
        internalCounters.push_back(6082);
        internalCounters.push_back(6520);
        internalCounters.push_back(6958);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46292);
        internalCounters.push_back(46574);
        internalCounters.push_back(46856);
        internalCounters.push_back(47138);
        internalCounters.push_back(47420);
        internalCounters.push_back(47702);
        internalCounters.push_back(47984);
        internalCounters.push_back(48266);
        internalCounters.push_back(48548);
        internalCounters.push_back(48830);
        internalCounters.push_back(49112);
        internalCounters.push_back(49394);
        internalCounters.push_back(49676);
        internalCounters.push_back(49958);
        internalCounters.push_back(50240);
        internalCounters.push_back(50522);
        internalCounters.push_back(46293);
        internalCounters.push_back(46575);
        internalCounters.push_back(46857);
        internalCounters.push_back(47139);
        internalCounters.push_back(47421);
        internalCounters.push_back(47703);
        internalCounters.push_back(47985);
        internalCounters.push_back(48267);
        internalCounters.push_back(48549);
        internalCounters.push_back(48831);
        internalCounters.push_back(49113);
        internalCounters.push_back(49395);
        internalCounters.push_back(49677);
        internalCounters.push_back(49959);
        internalCounters.push_back(50241);
        internalCounters.push_back(50523);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(64),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46280);
        internalCounters.push_back(46562);
        internalCounters.push_back(46844);
        internalCounters.push_back(47126);
        internalCounters.push_back(47408);
        internalCounters.push_back(47690);
        internalCounters.push_back(47972);
        internalCounters.push_back(48254);
        internalCounters.push_back(48536);
        internalCounters.push_back(48818);
        internalCounters.push_back(49100);
        internalCounters.push_back(49382);
        internalCounters.push_back(49664);
        internalCounters.push_back(49946);
        internalCounters.push_back(50228);
        internalCounters.push_back(50510);
        internalCounters.push_back(46281);
        internalCounters.push_back(46563);
        internalCounters.push_back(46845);
        internalCounters.push_back(47127);
        internalCounters.push_back(47409);
        internalCounters.push_back(47691);
        internalCounters.push_back(47973);
        internalCounters.push_back(48255);
        internalCounters.push_back(48537);
        internalCounters.push_back(48819);
        internalCounters.push_back(49101);
        internalCounters.push_back(49383);
        internalCounters.push_back(49665);
        internalCounters.push_back(49947);
        internalCounters.push_back(50229);
        internalCounters.push_back(50511);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46271);
        internalCounters.push_back(46553);
        internalCounters.push_back(46835);
        internalCounters.push_back(47117);
        internalCounters.push_back(47399);
        internalCounters.push_back(47681);
        internalCounters.push_back(47963);
        internalCounters.push_back(48245);
        internalCounters.push_back(48527);
        internalCounters.push_back(48809);
        internalCounters.push_back(49091);
        internalCounters.push_back(49373);
        internalCounters.push_back(49655);
        internalCounters.push_back(49937);
        internalCounters.push_back(50219);
        internalCounters.push_back(50501);
        internalCounters.push_back(46273);
        internalCounters.push_back(46555);
        internalCounters.push_back(46837);
        internalCounters.push_back(47119);
        internalCounters.push_back(47401);
        internalCounters.push_back(47683);
        internalCounters.push_back(47965);
        internalCounters.push_back(48247);
        internalCounters.push_back(48529);
        internalCounters.push_back(48811);
        internalCounters.push_back(49093);
        internalCounters.push_back(49375);
        internalCounters.push_back(49657);
        internalCounters.push_back(49939);
        internalCounters.push_back(50221);
        internalCounters.push_back(50503);

        c.DefineDerivedCounter("L2CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the L2 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "d78fdf66-104f-8372-02c1-91d07d7dc62e");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46271);
        internalCounters.push_back(46553);
        internalCounters.push_back(46835);
        internalCounters.push_back(47117);
        internalCounters.push_back(47399);
        internalCounters.push_back(47681);
        internalCounters.push_back(47963);
        internalCounters.push_back(48245);
        internalCounters.push_back(48527);
        internalCounters.push_back(48809);
        internalCounters.push_back(49091);
        internalCounters.push_back(49373);
        internalCounters.push_back(49655);
        internalCounters.push_back(49937);
        internalCounters.push_back(50219);
        internalCounters.push_back(50501);
        internalCounters.push_back(46273);
        internalCounters.push_back(46555);
        internalCounters.push_back(46837);
        internalCounters.push_back(47119);
        internalCounters.push_back(47401);
        internalCounters.push_back(47683);
        internalCounters.push_back(47965);
        internalCounters.push_back(48247);
        internalCounters.push_back(48529);
        internalCounters.push_back(48811);
        internalCounters.push_back(49093);
        internalCounters.push_back(49375);
        internalCounters.push_back(49657);
        internalCounters.push_back(49939);
        internalCounters.push_back(50221);
        internalCounters.push_back(50503);

        c.DefineDerivedCounter("L2CacheMiss", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that miss the L2 cache. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "4cd70885-41b3-25cd-92db-c76a0decc634");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46271);
        internalCounters.push_back(46553);
        internalCounters.push_back(46835);
        internalCounters.push_back(47117);
        internalCounters.push_back(47399);
        internalCounters.push_back(47681);
        internalCounters.push_back(47963);
        internalCounters.push_back(48245);
        internalCounters.push_back(48527);
        internalCounters.push_back(48809);
        internalCounters.push_back(49091);
        internalCounters.push_back(49373);
        internalCounters.push_back(49655);
        internalCounters.push_back(49937);
        internalCounters.push_back(50219);
        internalCounters.push_back(50501);

        c.DefineDerivedCounter("L2CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "d0bce171-560c-1895-66b3-bc56abccb077");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46273);
        internalCounters.push_back(46555);
        internalCounters.push_back(46837);
        internalCounters.push_back(47119);
        internalCounters.push_back(47401);
        internalCounters.push_back(47683);
        internalCounters.push_back(47965);
        internalCounters.push_back(48247);
        internalCounters.push_back(48529);
        internalCounters.push_back(48811);
        internalCounters.push_back(49093);
        internalCounters.push_back(49375);
        internalCounters.push_back(49657);
        internalCounters.push_back(49939);
        internalCounters.push_back(50221);
        internalCounters.push_back(50503);

        c.DefineDerivedCounter("L2CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f2ab3a1a-ead6-9893-961b-88ba2a758807");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(29562);
        internalCounters.push_back(29681);
        internalCounters.push_back(29800);
        internalCounters.push_back(29919);
        internalCounters.push_back(30038);
        internalCounters.push_back(30157);
        internalCounters.push_back(30276);
        internalCounters.push_back(30395);
        internalCounters.push_back(30514);
        internalCounters.push_back(30633);
        internalCounters.push_back(30752);
        internalCounters.push_back(30871);
        internalCounters.push_back(30990);
        internalCounters.push_back(31109);
        internalCounters.push_back(31228);
        internalCounters.push_back(31347);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,NUM_SHADER_ENGINES,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(40817);
        internalCounters.push_back(40902);
        internalCounters.push_back(40987);
        internalCounters.push_back(41072);
        internalCounters.push_back(41157);
        internalCounters.push_back(41242);
        internalCounters.push_back(41327);
        internalCounters.push_back(41412);
        internalCounters.push_back(41497);
        internalCounters.push_back(41582);
        internalCounters.push_back(41667);
        internalCounters.push_back(41752);
        internalCounters.push_back(41837);
        internalCounters.push_back(41922);
        internalCounters.push_back(42007);
        internalCounters.push_back(42092);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,NUM_SHADER_ENGINES,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector< gpa_uint32 > internalCounters;
        internalCounters.push_back(46284);
        internalCounters.push_back(46566);
        internalCounters.push_back(46848);
        internalCounters.push_back(47130);
        internalCounters.push_back(47412);
        internalCounters.push_back(47694);
        internalCounters.push_back(47976);
        internalCounters.push_back(48258);
        internalCounters.push_back(48540);
        internalCounters.push_back(48822);
        internalCounters.push_back(49104);
        internalCounters.push_back(49386);
        internalCounters.push_back(49668);
        internalCounters.push_back(49950);
        internalCounters.push_back(50232);
        internalCounters.push_back(50514);
        internalCounters.push_back(12484);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
}

