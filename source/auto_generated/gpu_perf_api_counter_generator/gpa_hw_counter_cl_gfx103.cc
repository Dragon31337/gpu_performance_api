//==============================================================================
// Copyright (c) 2010-2020 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  CL counter definitions for GFX103
//==============================================================================

#include "gpa_counter.h"
#include "gpa_hw_counter_gfx103.h"
#include "gpa_hw_exposed_counters_gfx103.h"
#include "gpa_hw_counter_cl_gfx103.h"

// This file is autogenerated by the ConvertHWEnums project

// clang-format off

namespace counter_cl_gfx103
{
    using namespace counter_gfx103;

    GPA_HardwareCounterDesc* cl_counter_group_array_gfx103[] = {
        cb0_counters_gfx103,
        cb1_counters_gfx103,
        cb2_counters_gfx103,
        cb3_counters_gfx103,
        cpf_counters_gfx103,
        db0_counters_gfx103,
        db1_counters_gfx103,
        db2_counters_gfx103,
        db3_counters_gfx103,
        grbm_counters_gfx103,
        grbmse0_counters_gfx103,
        pa_su0_counters_gfx103,
        pa_sc0_counters_gfx103,
        pa_sc1_counters_gfx103,
        spi0_counters_gfx103,
        sq0_counters_gfx103,
        sq_es0_counters_gfx103,
        sq_gs0_counters_gfx103,
        sq_vs0_counters_gfx103,
        sq_ps0_counters_gfx103,
        sq_ls0_counters_gfx103,
        sq_hs0_counters_gfx103,
        sq_cs0_counters_gfx103,
        sx0_counters_gfx103,
        ta0_counters_gfx103,
        ta1_counters_gfx103,
        ta2_counters_gfx103,
        ta3_counters_gfx103,
        ta4_counters_gfx103,
        ta5_counters_gfx103,
        ta6_counters_gfx103,
        ta7_counters_gfx103,
        ta8_counters_gfx103,
        ta9_counters_gfx103,
        ta10_counters_gfx103,
        ta11_counters_gfx103,
        ta12_counters_gfx103,
        ta13_counters_gfx103,
        ta14_counters_gfx103,
        ta15_counters_gfx103,
        td0_counters_gfx103,
        td1_counters_gfx103,
        td2_counters_gfx103,
        td3_counters_gfx103,
        td4_counters_gfx103,
        td5_counters_gfx103,
        td6_counters_gfx103,
        td7_counters_gfx103,
        td8_counters_gfx103,
        td9_counters_gfx103,
        td10_counters_gfx103,
        td11_counters_gfx103,
        td12_counters_gfx103,
        td13_counters_gfx103,
        td14_counters_gfx103,
        td15_counters_gfx103,
        tcp0_counters_gfx103,
        tcp1_counters_gfx103,
        tcp2_counters_gfx103,
        tcp3_counters_gfx103,
        tcp4_counters_gfx103,
        tcp5_counters_gfx103,
        tcp6_counters_gfx103,
        tcp7_counters_gfx103,
        tcp8_counters_gfx103,
        tcp9_counters_gfx103,
        tcp10_counters_gfx103,
        tcp11_counters_gfx103,
        tcp12_counters_gfx103,
        tcp13_counters_gfx103,
        tcp14_counters_gfx103,
        tcp15_counters_gfx103,
        gds_counters_gfx103,
        cpg_counters_gfx103,
        cpc_counters_gfx103,
        atc_counters_gfx103,
        atcl2_counters_gfx103,
        mcvml2_counters_gfx103,
        gcea0_counters_gfx103,
        gcea1_counters_gfx103,
        gcea2_counters_gfx103,
        gcea3_counters_gfx103,
        gcea4_counters_gfx103,
        gcea5_counters_gfx103,
        gcea6_counters_gfx103,
        gcea7_counters_gfx103,
        gcea8_counters_gfx103,
        gcea9_counters_gfx103,
        gcea10_counters_gfx103,
        gcea11_counters_gfx103,
        gcea12_counters_gfx103,
        gcea13_counters_gfx103,
        gcea14_counters_gfx103,
        gcea15_counters_gfx103,
        rpb_counters_gfx103,
        rmi0_counters_gfx103,
        rmi1_counters_gfx103,
        ge_counters_gfx103,
        gl1a0_counters_gfx103,
        gl1c0_counters_gfx103,
        gl1cg0_counters_gfx103,
        gl1cg1_counters_gfx103,
        gl1cg2_counters_gfx103,
        gl1cg3_counters_gfx103,
        gl2a0_counters_gfx103,
        gl2a1_counters_gfx103,
        gl2a2_counters_gfx103,
        gl2a3_counters_gfx103,
        gl2c0_counters_gfx103,
        gl2c1_counters_gfx103,
        gl2c2_counters_gfx103,
        gl2c3_counters_gfx103,
        gl2c4_counters_gfx103,
        gl2c5_counters_gfx103,
        gl2c6_counters_gfx103,
        gl2c7_counters_gfx103,
        gl2c8_counters_gfx103,
        gl2c9_counters_gfx103,
        gl2c10_counters_gfx103,
        gl2c11_counters_gfx103,
        gl2c12_counters_gfx103,
        gl2c13_counters_gfx103,
        gl2c14_counters_gfx103,
        gl2c15_counters_gfx103,
        gl2c16_counters_gfx103,
        gl2c17_counters_gfx103,
        gl2c18_counters_gfx103,
        gl2c19_counters_gfx103,
        gl2c20_counters_gfx103,
        gl2c21_counters_gfx103,
        gl2c22_counters_gfx103,
        gl2c23_counters_gfx103,
        cha_counters_gfx103,
        chc0_counters_gfx103,
        chcg_counters_gfx103,
        gus_counters_gfx103,
        gcr_counters_gfx103,
        pa_ph_counters_gfx103,
        utcl10_counters_gfx103,
    };

    GPA_HardwareCounterDesc* cl_exposed_counters_group_array_gfx103[] = {
        cb0_exposed_counters_gfx103,
        cb1_exposed_counters_gfx103,
        cb2_exposed_counters_gfx103,
        cb3_exposed_counters_gfx103,
        cpf_exposed_counters_gfx103,
        db0_exposed_counters_gfx103,
        db1_exposed_counters_gfx103,
        db2_exposed_counters_gfx103,
        db3_exposed_counters_gfx103,
        grbm_exposed_counters_gfx103,
        pa_su0_exposed_counters_gfx103,
        pa_sc0_exposed_counters_gfx103,
        pa_sc1_exposed_counters_gfx103,
        spi0_exposed_counters_gfx103,
        sq0_exposed_counters_gfx103,
        sq_es0_exposed_counters_gfx103,
        sq_gs0_exposed_counters_gfx103,
        sq_vs0_exposed_counters_gfx103,
        sq_ps0_exposed_counters_gfx103,
        sq_ls0_exposed_counters_gfx103,
        sq_hs0_exposed_counters_gfx103,
        sq_cs0_exposed_counters_gfx103,
        sx0_exposed_counters_gfx103,
        ta0_exposed_counters_gfx103,
        ta1_exposed_counters_gfx103,
        ta2_exposed_counters_gfx103,
        ta3_exposed_counters_gfx103,
        ta4_exposed_counters_gfx103,
        ta5_exposed_counters_gfx103,
        ta6_exposed_counters_gfx103,
        ta7_exposed_counters_gfx103,
        ta8_exposed_counters_gfx103,
        ta9_exposed_counters_gfx103,
        ta10_exposed_counters_gfx103,
        ta11_exposed_counters_gfx103,
        ta12_exposed_counters_gfx103,
        ta13_exposed_counters_gfx103,
        ta14_exposed_counters_gfx103,
        ta15_exposed_counters_gfx103,
        td0_exposed_counters_gfx103,
        td1_exposed_counters_gfx103,
        td2_exposed_counters_gfx103,
        td3_exposed_counters_gfx103,
        td4_exposed_counters_gfx103,
        td5_exposed_counters_gfx103,
        td6_exposed_counters_gfx103,
        td7_exposed_counters_gfx103,
        td8_exposed_counters_gfx103,
        td9_exposed_counters_gfx103,
        td10_exposed_counters_gfx103,
        td11_exposed_counters_gfx103,
        td12_exposed_counters_gfx103,
        td13_exposed_counters_gfx103,
        td14_exposed_counters_gfx103,
        td15_exposed_counters_gfx103,
        tcp0_exposed_counters_gfx103,
        tcp1_exposed_counters_gfx103,
        tcp2_exposed_counters_gfx103,
        tcp3_exposed_counters_gfx103,
        tcp4_exposed_counters_gfx103,
        tcp5_exposed_counters_gfx103,
        tcp6_exposed_counters_gfx103,
        tcp7_exposed_counters_gfx103,
        tcp8_exposed_counters_gfx103,
        tcp9_exposed_counters_gfx103,
        tcp10_exposed_counters_gfx103,
        tcp11_exposed_counters_gfx103,
        tcp12_exposed_counters_gfx103,
        tcp13_exposed_counters_gfx103,
        tcp14_exposed_counters_gfx103,
        tcp15_exposed_counters_gfx103,
        gcea0_exposed_counters_gfx103,
        gcea1_exposed_counters_gfx103,
        gcea2_exposed_counters_gfx103,
        gcea3_exposed_counters_gfx103,
        gcea4_exposed_counters_gfx103,
        gcea5_exposed_counters_gfx103,
        gcea6_exposed_counters_gfx103,
        gcea7_exposed_counters_gfx103,
        gcea8_exposed_counters_gfx103,
        gcea9_exposed_counters_gfx103,
        gcea10_exposed_counters_gfx103,
        gcea11_exposed_counters_gfx103,
        gcea12_exposed_counters_gfx103,
        gcea13_exposed_counters_gfx103,
        gcea14_exposed_counters_gfx103,
        gcea15_exposed_counters_gfx103,
        gl1c0_exposed_counters_gfx103,
        gl2c0_exposed_counters_gfx103,
        gl2c1_exposed_counters_gfx103,
        gl2c2_exposed_counters_gfx103,
        gl2c3_exposed_counters_gfx103,
        gl2c4_exposed_counters_gfx103,
        gl2c5_exposed_counters_gfx103,
        gl2c6_exposed_counters_gfx103,
        gl2c7_exposed_counters_gfx103,
        gl2c8_exposed_counters_gfx103,
        gl2c9_exposed_counters_gfx103,
        gl2c10_exposed_counters_gfx103,
        gl2c11_exposed_counters_gfx103,
        gl2c12_exposed_counters_gfx103,
        gl2c13_exposed_counters_gfx103,
        gl2c14_exposed_counters_gfx103,
        gl2c15_exposed_counters_gfx103,
        gl2c16_exposed_counters_gfx103,
        gl2c17_exposed_counters_gfx103,
        gl2c18_exposed_counters_gfx103,
        gl2c19_exposed_counters_gfx103,
        gl2c20_exposed_counters_gfx103,
        gl2c21_exposed_counters_gfx103,
        gl2c22_exposed_counters_gfx103,
        gl2c23_exposed_counters_gfx103,
    };

    GPA_CounterGroupDesc hw_cl_groups_gfx103[] = {
        {0, "CB0", 0, 461, 4, 0},
        {1, "CB1", 1, 461, 4, 0},
        {2, "CB2", 2, 461, 4, 0},
        {3, "CB3", 3, 461, 4, 0},
        {4, "CPF", 0, 40, 2, 0},
        {5, "DB0", 0, 391, 4, 0},
        {6, "DB1", 1, 391, 4, 0},
        {7, "DB2", 2, 391, 4, 0},
        {8, "DB3", 3, 391, 4, 0},
        {9, "GRBM", 0, 47, 2, 0},
        {10, "GRBMSE", 0, 19, 4, 0},
        {11, "PA_SU", 0, 276, 4, 0},
        {12, "PA_SC0", 0, 578, 8, 0},
        {13, "PA_SC1", 1, 578, 8, 0},
        {14, "SPI", 0, 332, 6, 0},
        {15, "SQ", 0, 512, 16, 0},
        {16, "SQ_ES", 0, 512, 16, 0},
        {17, "SQ_GS", 0, 512, 16, 0},
        {18, "SQ_VS", 0, 512, 16, 0},
        {19, "SQ_PS", 0, 512, 16, 0},
        {20, "SQ_LS", 0, 512, 16, 0},
        {21, "SQ_HS", 0, 512, 16, 0},
        {22, "SQ_CS", 0, 512, 16, 0},
        {23, "SX", 0, 225, 4, 0},
        {24, "TA0", 0, 236, 2, 0},
        {25, "TA1", 1, 236, 2, 0},
        {26, "TA2", 2, 236, 2, 0},
        {27, "TA3", 3, 236, 2, 0},
        {28, "TA4", 4, 236, 2, 0},
        {29, "TA5", 5, 236, 2, 0},
        {30, "TA6", 6, 236, 2, 0},
        {31, "TA7", 7, 236, 2, 0},
        {32, "TA8", 8, 236, 2, 0},
        {33, "TA9", 9, 236, 2, 0},
        {34, "TA10", 10, 236, 2, 0},
        {35, "TA11", 11, 236, 2, 0},
        {36, "TA12", 12, 236, 2, 0},
        {37, "TA13", 13, 236, 2, 0},
        {38, "TA14", 14, 236, 2, 0},
        {39, "TA15", 15, 236, 2, 0},
        {40, "TD0", 0, 192, 2, 0},
        {41, "TD1", 1, 192, 2, 0},
        {42, "TD2", 2, 192, 2, 0},
        {43, "TD3", 3, 192, 2, 0},
        {44, "TD4", 4, 192, 2, 0},
        {45, "TD5", 5, 192, 2, 0},
        {46, "TD6", 6, 192, 2, 0},
        {47, "TD7", 7, 192, 2, 0},
        {48, "TD8", 8, 192, 2, 0},
        {49, "TD9", 9, 192, 2, 0},
        {50, "TD10", 10, 192, 2, 0},
        {51, "TD11", 11, 192, 2, 0},
        {52, "TD12", 12, 192, 2, 0},
        {53, "TD13", 13, 192, 2, 0},
        {54, "TD14", 14, 192, 2, 0},
        {55, "TD15", 15, 192, 2, 0},
        {56, "TCP0", 0, 77, 4, 0},
        {57, "TCP1", 1, 77, 4, 0},
        {58, "TCP2", 2, 77, 4, 0},
        {59, "TCP3", 3, 77, 4, 0},
        {60, "TCP4", 4, 77, 4, 0},
        {61, "TCP5", 5, 77, 4, 0},
        {62, "TCP6", 6, 77, 4, 0},
        {63, "TCP7", 7, 77, 4, 0},
        {64, "TCP8", 8, 77, 4, 0},
        {65, "TCP9", 9, 77, 4, 0},
        {66, "TCP10", 10, 77, 4, 0},
        {67, "TCP11", 11, 77, 4, 0},
        {68, "TCP12", 12, 77, 4, 0},
        {69, "TCP13", 13, 77, 4, 0},
        {70, "TCP14", 14, 77, 4, 0},
        {71, "TCP15", 15, 77, 4, 0},
        {72, "GDS", 0, 123, 4, 0},
        {73, "CPG", 0, 82, 2, 0},
        {74, "CPC", 0, 47, 2, 0},
        {75, "ATC", 0, 24, 4, 0},
        {76, "ATCL2", 0, 12, 2, 0},
        {77, "MCVML2", 0, 91, 8, 0},
        {78, "GCEA0", 0, 90, 2, 0},
        {79, "GCEA1", 1, 90, 2, 0},
        {80, "GCEA2", 2, 90, 2, 0},
        {81, "GCEA3", 3, 90, 2, 0},
        {82, "GCEA4", 4, 90, 2, 0},
        {83, "GCEA5", 5, 90, 2, 0},
        {84, "GCEA6", 6, 90, 2, 0},
        {85, "GCEA7", 7, 90, 2, 0},
        {86, "GCEA8", 8, 90, 2, 0},
        {87, "GCEA9", 9, 90, 2, 0},
        {88, "GCEA10", 10, 90, 2, 0},
        {89, "GCEA11", 11, 90, 2, 0},
        {90, "GCEA12", 12, 90, 2, 0},
        {91, "GCEA13", 13, 90, 2, 0},
        {92, "GCEA14", 14, 90, 2, 0},
        {93, "GCEA15", 15, 90, 2, 0},
        {94, "RPB", 0, 63, 4, 0},
        {95, "RMI0", 0, 258, 4, 0},
        {96, "RMI1", 1, 258, 4, 0},
        {97, "GE", 0, 40, 4, 0},
        {98, "GL1A", 0, 36, 4, 0},
        {99, "GL1C", 0, 83, 4, 0},
        {100, "GL1CG0", 0, 38, 4, 0},
        {101, "GL1CG1", 1, 38, 4, 0},
        {102, "GL1CG2", 2, 38, 4, 0},
        {103, "GL1CG3", 3, 38, 4, 0},
        {104, "GL2A0", 0, 91, 4, 0},
        {105, "GL2A1", 1, 91, 4, 0},
        {106, "GL2A2", 2, 91, 4, 0},
        {107, "GL2A3", 3, 91, 4, 0},
        {108, "GL2C0", 0, 254, 4, 0},
        {109, "GL2C1", 1, 254, 4, 0},
        {110, "GL2C2", 2, 254, 4, 0},
        {111, "GL2C3", 3, 254, 4, 0},
        {112, "GL2C4", 4, 254, 4, 0},
        {113, "GL2C5", 5, 254, 4, 0},
        {114, "GL2C6", 6, 254, 4, 0},
        {115, "GL2C7", 7, 254, 4, 0},
        {116, "GL2C8", 8, 254, 4, 0},
        {117, "GL2C9", 9, 254, 4, 0},
        {118, "GL2C10", 10, 254, 4, 0},
        {119, "GL2C11", 11, 254, 4, 0},
        {120, "GL2C12", 12, 254, 4, 0},
        {121, "GL2C13", 13, 254, 4, 0},
        {122, "GL2C14", 14, 254, 4, 0},
        {123, "GL2C15", 15, 254, 4, 0},
        {124, "GL2C16", 16, 254, 4, 0},
        {125, "GL2C17", 17, 254, 4, 0},
        {126, "GL2C18", 18, 254, 4, 0},
        {127, "GL2C19", 19, 254, 4, 0},
        {128, "GL2C20", 20, 254, 4, 0},
        {129, "GL2C21", 21, 254, 4, 0},
        {130, "GL2C22", 22, 254, 4, 0},
        {131, "GL2C23", 23, 254, 4, 0},
        {132, "CHA", 0, 45, 4, 0},
        {133, "CHC", 0, 40, 4, 0},
        {134, "CHCG", 0, 40, 4, 0},
        {135, "GUS", 0, 176, 2, 0},
        {136, "GCR", 0, 142, 2, 0},
        {137, "PA_PH", 0, 992, 8, 0},
        {138, "UTCL1", 0, 21, 2, 0},
    };

    GPA_CounterGroupExposedCounterDesc hw_cl_exposed_counters_by_group_gfx103[] = {
        {0, 0, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {1, 461, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {2, 922, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {3, 1383, {7, 116, 117, 118, 126, 127, 128, 162, 257, 259}},
        {4, 1844, {0, 24}},
        {5, 1884, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {6, 2275, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {7, 2666, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {8, 3057, {4, 15, 28, 46, 48, 55, 60, 63, 144, 174, 175, 176, 177, 178, 179}},
        {9, 3448, {0, 2}},
        {11, 3514, {8, 14, 21, 54, 55, 56, 57, 61, 62, 73, 74, 105, 109}},
        {12, 3790, {159, 160, 161, 162, 235, 236, 237, 238, 259}},
        {13, 4368, {159, 160, 161, 162, 235, 236, 237, 238, 259}},
        {14, 4946, {1, 9, 18, 21, 34, 41, 45, 46, 49, 51, 52, 55, 60, 61, 62, 63, 80, 81, 82, 83, 308, 314, 320, 326}},
        {15, 5278, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {16, 5790, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {17, 6302, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {18, 6814, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {19, 7326, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {20, 7838, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {21, 8350, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {22, 8862, {4, 5, 8, 31, 55, 57, 59, 60, 61, 64, 69, 70, 82, 117, 285, 299, 301, 334, 336}},
        {23, 9374, {12, 14, 17, 19, 22, 24, 27, 29}},
        {24, 9599, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {25, 9835, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {26, 10071, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {27, 10307, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {28, 10543, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {29, 10779, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {30, 11015, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {31, 11251, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {32, 11487, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {33, 11723, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {34, 11959, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {35, 12195, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {36, 12431, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {37, 12667, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {38, 12903, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {39, 13139, {15, 89, 90, 91, 92, 93, 94, 95, 96, 97}},
        {40, 13375, {82, 116, 117, 118}},
        {41, 13567, {82, 116, 117, 118}},
        {42, 13759, {82, 116, 117, 118}},
        {43, 13951, {82, 116, 117, 118}},
        {44, 14143, {82, 116, 117, 118}},
        {45, 14335, {82, 116, 117, 118}},
        {46, 14527, {82, 116, 117, 118}},
        {47, 14719, {82, 116, 117, 118}},
        {48, 14911, {82, 116, 117, 118}},
        {49, 15103, {82, 116, 117, 118}},
        {50, 15295, {82, 116, 117, 118}},
        {51, 15487, {82, 116, 117, 118}},
        {52, 15679, {82, 116, 117, 118}},
        {53, 15871, {82, 116, 117, 118}},
        {54, 16063, {82, 116, 117, 118}},
        {55, 16255, {82, 116, 117, 118}},
        {56, 16447, {9, 18, 36}},
        {57, 16524, {9, 18, 36}},
        {58, 16601, {9, 18, 36}},
        {59, 16678, {9, 18, 36}},
        {60, 16755, {9, 18, 36}},
        {61, 16832, {9, 18, 36}},
        {62, 16909, {9, 18, 36}},
        {63, 16986, {9, 18, 36}},
        {64, 17063, {9, 18, 36}},
        {65, 17140, {9, 18, 36}},
        {66, 17217, {9, 18, 36}},
        {67, 17294, {9, 18, 36}},
        {68, 17371, {9, 18, 36}},
        {69, 17448, {9, 18, 36}},
        {70, 17525, {9, 18, 36}},
        {71, 17602, {9, 18, 36}},
        {78, 18058, {55, 57}},
        {79, 18148, {55, 57}},
        {80, 18238, {55, 57}},
        {81, 18328, {55, 57}},
        {82, 18418, {55, 57}},
        {83, 18508, {55, 57}},
        {84, 18598, {55, 57}},
        {85, 18688, {55, 57}},
        {86, 18778, {55, 57}},
        {87, 18868, {55, 57}},
        {88, 18958, {55, 57}},
        {89, 19048, {55, 57}},
        {90, 19138, {55, 57}},
        {91, 19228, {55, 57}},
        {92, 19318, {55, 57}},
        {93, 19408, {55, 57}},
        {99, 20153, {14, 18}},
        {108, 20752, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {109, 21006, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {110, 21260, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {111, 21514, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {112, 21768, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {113, 22022, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {114, 22276, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {115, 22530, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {116, 22784, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {117, 23038, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {118, 23292, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {119, 23546, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {120, 23800, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {121, 24054, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {122, 24308, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {123, 24562, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {124, 24816, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {125, 25070, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {126, 25324, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {127, 25578, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {128, 25832, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {129, 26086, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {130, 26340, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
        {131, 26594, {3, 43, 83, 85, 88, 99, 100, 101, 102}},
    };

    GPA_PaddedCounterDesc cl_padded_counter_by_group_gfx103[] = {
    {}
    };

    GPA_SQCounterGroupDesc hw_cl_sq_groups_gfx103[] = {
        {15, 0, SQ_ALL},
        {16, 0, SQ_ES},
        {17, 0, SQ_GS},
        {18, 0, SQ_VS},
        {19, 0, SQ_PS},
        {20, 0, SQ_LS},
        {21, 0, SQ_HS},
        {22, 0, SQ_CS},
    };


    unsigned int hw_cl_sq_isolated_groups_gfx103[] = {
        24, // Ta
        25, // Ta
        26, // Ta
        27, // Ta
        28, // Ta
        29, // Ta
        30, // Ta
        31, // Ta
        32, // Ta
        33, // Ta
        34, // Ta
        35, // Ta
        36, // Ta
        37, // Ta
        38, // Ta
        39, // Ta
        40, // Td
        41, // Td
        42, // Td
        43, // Td
        44, // Td
        45, // Td
        46, // Td
        47, // Td
        48, // Td
        49, // Td
        50, // Td
        51, // Td
        52, // Td
        53, // Td
        54, // Td
        55, // Td
        56, // Tcp
        57, // Tcp
        58, // Tcp
        59, // Tcp
        60, // Tcp
        61, // Tcp
        62, // Tcp
        63, // Tcp
        64, // Tcp
        65, // Tcp
        66, // Tcp
        67, // Tcp
        68, // Tcp
        69, // Tcp
        70, // Tcp
        71, // Tcp
    };

    const std::set<unsigned int> hw_cl_timestamp_block_ids_gfx103 =       {}; ///< Timestamp block id's for CL for gfx103 family
    const std::set<unsigned int> hw_cl_time_counter_indices_gfx103 =      {}; ///< Timestamp counter indices for CL for gfx103 family
    const unsigned int           hw_cl_group_count_gfx103                = sizeof(hw_cl_groups_gfx103) / sizeof(GPA_CounterGroupDesc);
    const unsigned int           hw_cl_exposed_counters_group_count_gfx103 = 112;
    const unsigned int           cl_padded_counter_group_count_gfx103 = 0;
    const unsigned int           hw_cl_sq_group_count_gfx103              = sizeof(hw_cl_sq_groups_gfx103) / sizeof(GPA_SQCounterGroupDesc);
    const unsigned int           hw_cl_sq_isolated_group_count_gfx103      = sizeof(hw_cl_sq_isolated_groups_gfx103) / sizeof(unsigned int);
} //  namespace counter_cl_gfx103

// clang-format on
