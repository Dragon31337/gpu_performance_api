//==============================================================================
// Copyright (c) 2010-2020 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief  Hardware counter info for GFX8_ICELAND
//==============================================================================

// This file is autogenerated by the ConvertHWEnums project

#ifndef _GPA_HW_COUNTER_GFX8_ICELAND_H_
#define _GPA_HW_COUNTER_GFX8_ICELAND_H_

#include <set>

struct GPA_HardwareCounterDesc;
#include "gpa_hw_counter_gfx8.h"

namespace countergfx8iceland
{
/// Uses the input ASIC type to determine if this data provides an ASIC specific version.
/// \param asic_type The ASIC type that is currently in use.
/// \return True if the ASIC is matched by this file.
inline bool MatchAsic(GDT_HW_ASIC_TYPE asic_type)
{
    static std::set<GDT_HW_ASIC_TYPE> asics_supported = { GDT_ICELAND };

    if (asics_supported.find(asic_type) == asics_supported.end())
    {
        return false;
    }

    return true;
}

    extern GPA_HardwareCounterDesc vgt0_counters_gfx8_iceland[]; ///< Array of internal counters for vgt0 block for gfx8_iceland family
    extern GPA_HardwareCounterDesc vgt1_counters_gfx8_iceland[]; ///< Array of internal counters for vgt1 block for gfx8_iceland family
    extern GPA_HardwareCounterDesc vgt2_counters_gfx8_iceland[]; ///< Array of internal counters for vgt2 block for gfx8_iceland family
    extern GPA_HardwareCounterDesc vgt3_counters_gfx8_iceland[]; ///< Array of internal counters for vgt3 block for gfx8_iceland family

/// Replaces count number of block instance counters at the destination with the overriding source counters.
/// \param dest_counter Destination to update.
/// \param src_counter Source to update from.
/// \param count Number of counters to update.
inline void ReplaceBlockInstanceCounters(GPA_HardwareCounterDesc* dest_counter, GPA_HardwareCounterDesc* src_counter, uint32_t count)
{
    for (uint32_t i = 0; i < count; i++)
    {
        dest_counter[i] = src_counter[i];
    }
}

/// If the requested ASIC type is supported, then the global GPU generation block instance counters are updated.
/// \param asic_type The ASIC type that is currently in use.
/// \return True if the ASIC is matched by this file and block instances are updated, otherwise false.
inline bool OverrideBlockInstanceCounters(GDT_HW_ASIC_TYPE asic_type)
{
    if (!MatchAsic(asic_type))
    {
        return false;
    }

    ReplaceBlockInstanceCounters(countergfx8::vgt0_counters_gfx8, vgt0_counters_gfx8_iceland, 147);
    ReplaceBlockInstanceCounters(countergfx8::vgt1_counters_gfx8, vgt1_counters_gfx8_iceland, 147);
    ReplaceBlockInstanceCounters(countergfx8::vgt2_counters_gfx8, vgt2_counters_gfx8_iceland, 147);
    ReplaceBlockInstanceCounters(countergfx8::vgt3_counters_gfx8, vgt3_counters_gfx8_iceland, 147);

    return true;
}
} // countergfx8iceland

#endif  // _GPA_HW_COUNTER_GFX8_ICELAND_H_
