//==============================================================================
// Copyright (c) 2010-2020 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief Public Counter Definitions for DX11 GFX10 
//==============================================================================

#include "gpa_counter.h"
#include "public_counter_definitions_dx11_gfx10.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDX11Gfx10(GPA_DerivedCounters& c)
{
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(102684);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24);
        internalCounters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39830);
        internalCounters.push_back(40159);
        internalCounters.push_back(40488);
        internalCounters.push_back(40817);
        internalCounters.push_back(39842);
        internalCounters.push_back(40171);
        internalCounters.push_back(40500);
        internalCounters.push_back(40829);
        internalCounters.push_back(39523);
        internalCounters.push_back(39852);
        internalCounters.push_back(40181);
        internalCounters.push_back(40510);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,12,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39830);
        internalCounters.push_back(40159);
        internalCounters.push_back(40488);
        internalCounters.push_back(40817);
        internalCounters.push_back(39842);
        internalCounters.push_back(40171);
        internalCounters.push_back(40500);
        internalCounters.push_back(40829);
        internalCounters.push_back(39523);
        internalCounters.push_back(39852);
        internalCounters.push_back(40181);
        internalCounters.push_back(40510);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(102684);
        internalCounters.push_back(39830);
        internalCounters.push_back(40159);
        internalCounters.push_back(40488);
        internalCounters.push_back(40817);
        internalCounters.push_back(39842);
        internalCounters.push_back(40171);
        internalCounters.push_back(40500);
        internalCounters.push_back(40829);
        internalCounters.push_back(39523);
        internalCounters.push_back(39852);
        internalCounters.push_back(40181);
        internalCounters.push_back(40510);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,5,5,ifnotzero,9,9,ifnotzero,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,4,8,8,ifnotzero,12,12,ifnotzero,max,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39556);
        internalCounters.push_back(39885);
        internalCounters.push_back(40214);
        internalCounters.push_back(40543);
        internalCounters.push_back(39563);
        internalCounters.push_back(39892);
        internalCounters.push_back(40221);
        internalCounters.push_back(40550);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39556);
        internalCounters.push_back(39885);
        internalCounters.push_back(40214);
        internalCounters.push_back(40543);
        internalCounters.push_back(39563);
        internalCounters.push_back(39892);
        internalCounters.push_back(40221);
        internalCounters.push_back(40550);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(102684);
        internalCounters.push_back(39556);
        internalCounters.push_back(39885);
        internalCounters.push_back(40214);
        internalCounters.push_back(40543);
        internalCounters.push_back(39563);
        internalCounters.push_back(39892);
        internalCounters.push_back(40221);
        internalCounters.push_back(40550);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39523);
        internalCounters.push_back(39852);
        internalCounters.push_back(40181);
        internalCounters.push_back(40510);
        internalCounters.push_back(39830);
        internalCounters.push_back(40159);
        internalCounters.push_back(40488);
        internalCounters.push_back(40817);
        internalCounters.push_back(39836);
        internalCounters.push_back(40165);
        internalCounters.push_back(40494);
        internalCounters.push_back(40823);
        internalCounters.push_back(39848);
        internalCounters.push_back(40177);
        internalCounters.push_back(40506);
        internalCounters.push_back(40835);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DSBusy", "Timing", "The percentage of time the ShaderUnit has domain shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,16,/,(100),*,(100),min", "0c626e8a-9b82-b6d4-d9a3-578509316301");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39523);
        internalCounters.push_back(39852);
        internalCounters.push_back(40181);
        internalCounters.push_back(40510);
        internalCounters.push_back(39830);
        internalCounters.push_back(40159);
        internalCounters.push_back(40488);
        internalCounters.push_back(40817);
        internalCounters.push_back(39836);
        internalCounters.push_back(40165);
        internalCounters.push_back(40494);
        internalCounters.push_back(40823);
        internalCounters.push_back(39848);
        internalCounters.push_back(40177);
        internalCounters.push_back(40506);
        internalCounters.push_back(40835);

        c.DefineDerivedCounter("DSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has domain shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max", "2f3f7561-0549-2232-536d-129ffc5f7703");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(102684);
        internalCounters.push_back(39523);
        internalCounters.push_back(39852);
        internalCounters.push_back(40181);
        internalCounters.push_back(40510);
        internalCounters.push_back(39830);
        internalCounters.push_back(40159);
        internalCounters.push_back(40488);
        internalCounters.push_back(40817);
        internalCounters.push_back(39836);
        internalCounters.push_back(40165);
        internalCounters.push_back(40494);
        internalCounters.push_back(40823);
        internalCounters.push_back(39848);
        internalCounters.push_back(40177);
        internalCounters.push_back(40506);
        internalCounters.push_back(40835);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DSTime", "Timing", "Time domain shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,9,ifnotzero,13,ifnotzero,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,(0),4,8,12,ifnotzero,16,ifnotzero,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "bfe28947-c727-8a9f-aa59-c218e58bfba5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39582);
        internalCounters.push_back(39911);
        internalCounters.push_back(40240);
        internalCounters.push_back(40569);
        internalCounters.push_back(39602);
        internalCounters.push_back(39931);
        internalCounters.push_back(40260);
        internalCounters.push_back(40589);
        internalCounters.push_back(39583);
        internalCounters.push_back(39912);
        internalCounters.push_back(40241);
        internalCounters.push_back(40570);
        internalCounters.push_back(39603);
        internalCounters.push_back(39932);
        internalCounters.push_back(40261);
        internalCounters.push_back(40590);
        internalCounters.push_back(39584);
        internalCounters.push_back(39913);
        internalCounters.push_back(40242);
        internalCounters.push_back(40571);
        internalCounters.push_back(39604);
        internalCounters.push_back(39933);
        internalCounters.push_back(40262);
        internalCounters.push_back(40591);
        internalCounters.push_back(39585);
        internalCounters.push_back(39914);
        internalCounters.push_back(40243);
        internalCounters.push_back(40572);
        internalCounters.push_back(39605);
        internalCounters.push_back(39934);
        internalCounters.push_back(40263);
        internalCounters.push_back(40592);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4,32,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39582);
        internalCounters.push_back(39911);
        internalCounters.push_back(40240);
        internalCounters.push_back(40569);
        internalCounters.push_back(39602);
        internalCounters.push_back(39931);
        internalCounters.push_back(40260);
        internalCounters.push_back(40589);
        internalCounters.push_back(39583);
        internalCounters.push_back(39912);
        internalCounters.push_back(40241);
        internalCounters.push_back(40570);
        internalCounters.push_back(39603);
        internalCounters.push_back(39932);
        internalCounters.push_back(40261);
        internalCounters.push_back(40590);
        internalCounters.push_back(39584);
        internalCounters.push_back(39913);
        internalCounters.push_back(40242);
        internalCounters.push_back(40571);
        internalCounters.push_back(39604);
        internalCounters.push_back(39933);
        internalCounters.push_back(40262);
        internalCounters.push_back(40591);
        internalCounters.push_back(39585);
        internalCounters.push_back(39914);
        internalCounters.push_back(40243);
        internalCounters.push_back(40572);
        internalCounters.push_back(39605);
        internalCounters.push_back(39934);
        internalCounters.push_back(40263);
        internalCounters.push_back(40592);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(102684);
        internalCounters.push_back(39582);
        internalCounters.push_back(39911);
        internalCounters.push_back(40240);
        internalCounters.push_back(40569);
        internalCounters.push_back(39602);
        internalCounters.push_back(39931);
        internalCounters.push_back(40260);
        internalCounters.push_back(40589);
        internalCounters.push_back(39583);
        internalCounters.push_back(39912);
        internalCounters.push_back(40241);
        internalCounters.push_back(40570);
        internalCounters.push_back(39603);
        internalCounters.push_back(39932);
        internalCounters.push_back(40261);
        internalCounters.push_back(40590);
        internalCounters.push_back(39584);
        internalCounters.push_back(39913);
        internalCounters.push_back(40242);
        internalCounters.push_back(40571);
        internalCounters.push_back(39604);
        internalCounters.push_back(39933);
        internalCounters.push_back(40262);
        internalCounters.push_back(40591);
        internalCounters.push_back(39585);
        internalCounters.push_back(39914);
        internalCounters.push_back(40243);
        internalCounters.push_back(40572);
        internalCounters.push_back(39605);
        internalCounters.push_back(39934);
        internalCounters.push_back(40263);
        internalCounters.push_back(40592);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,(0),4,8,ifnotzero,max4,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,(0),12,16,ifnotzero,max4,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,(0),20,24,ifnotzero,max4,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,(0),28,32,ifnotzero,max4,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39567);
        internalCounters.push_back(39896);
        internalCounters.push_back(40225);
        internalCounters.push_back(40554);
        internalCounters.push_back(39571);
        internalCounters.push_back(39900);
        internalCounters.push_back(40229);
        internalCounters.push_back(40558);
        internalCounters.push_back(39573);
        internalCounters.push_back(39902);
        internalCounters.push_back(40231);
        internalCounters.push_back(40560);
        internalCounters.push_back(39577);
        internalCounters.push_back(39906);
        internalCounters.push_back(40235);
        internalCounters.push_back(40564);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39567);
        internalCounters.push_back(39896);
        internalCounters.push_back(40225);
        internalCounters.push_back(40554);
        internalCounters.push_back(39571);
        internalCounters.push_back(39900);
        internalCounters.push_back(40229);
        internalCounters.push_back(40558);
        internalCounters.push_back(39573);
        internalCounters.push_back(39902);
        internalCounters.push_back(40231);
        internalCounters.push_back(40560);
        internalCounters.push_back(39577);
        internalCounters.push_back(39906);
        internalCounters.push_back(40235);
        internalCounters.push_back(40564);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(102684);
        internalCounters.push_back(39567);
        internalCounters.push_back(39896);
        internalCounters.push_back(40225);
        internalCounters.push_back(40554);
        internalCounters.push_back(39571);
        internalCounters.push_back(39900);
        internalCounters.push_back(40229);
        internalCounters.push_back(40558);
        internalCounters.push_back(39573);
        internalCounters.push_back(39902);
        internalCounters.push_back(40231);
        internalCounters.push_back(40560);
        internalCounters.push_back(39577);
        internalCounters.push_back(39906);
        internalCounters.push_back(40235);
        internalCounters.push_back(40564);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(92791);
        internalCounters.push_back(92813);
        internalCounters.push_back(92855);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,1,ifnotzero,2,2,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(42950);
        internalCounters.push_back(43462);
        internalCounters.push_back(43974);
        internalCounters.push_back(44486);
        internalCounters.push_back(42890);
        internalCounters.push_back(43402);
        internalCounters.push_back(43914);
        internalCounters.push_back(44426);
        internalCounters.push_back(51142);
        internalCounters.push_back(51654);
        internalCounters.push_back(52166);
        internalCounters.push_back(52678);
        internalCounters.push_back(51082);
        internalCounters.push_back(51594);
        internalCounters.push_back(52106);
        internalCounters.push_back(52618);
        internalCounters.push_back(47046);
        internalCounters.push_back(47558);
        internalCounters.push_back(48070);
        internalCounters.push_back(48582);
        internalCounters.push_back(46986);
        internalCounters.push_back(47498);
        internalCounters.push_back(48010);
        internalCounters.push_back(48522);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(42946);
        internalCounters.push_back(43458);
        internalCounters.push_back(43970);
        internalCounters.push_back(44482);
        internalCounters.push_back(42890);
        internalCounters.push_back(43402);
        internalCounters.push_back(43914);
        internalCounters.push_back(44426);
        internalCounters.push_back(51138);
        internalCounters.push_back(51650);
        internalCounters.push_back(52162);
        internalCounters.push_back(52674);
        internalCounters.push_back(51082);
        internalCounters.push_back(51594);
        internalCounters.push_back(52106);
        internalCounters.push_back(52618);
        internalCounters.push_back(47042);
        internalCounters.push_back(47554);
        internalCounters.push_back(48066);
        internalCounters.push_back(48578);
        internalCounters.push_back(46986);
        internalCounters.push_back(47498);
        internalCounters.push_back(48010);
        internalCounters.push_back(48522);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43003);
        internalCounters.push_back(43515);
        internalCounters.push_back(44027);
        internalCounters.push_back(44539);
        internalCounters.push_back(51195);
        internalCounters.push_back(51707);
        internalCounters.push_back(52219);
        internalCounters.push_back(52731);
        internalCounters.push_back(47099);
        internalCounters.push_back(47611);
        internalCounters.push_back(48123);
        internalCounters.push_back(48635);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_SIMDS,/,12,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43003);
        internalCounters.push_back(43515);
        internalCounters.push_back(44027);
        internalCounters.push_back(44539);
        internalCounters.push_back(51195);
        internalCounters.push_back(51707);
        internalCounters.push_back(52219);
        internalCounters.push_back(52731);
        internalCounters.push_back(47099);
        internalCounters.push_back(47611);
        internalCounters.push_back(48123);
        internalCounters.push_back(48635);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(42946);
        internalCounters.push_back(43458);
        internalCounters.push_back(43970);
        internalCounters.push_back(44482);
        internalCounters.push_back(51138);
        internalCounters.push_back(51650);
        internalCounters.push_back(52162);
        internalCounters.push_back(52674);
        internalCounters.push_back(47042);
        internalCounters.push_back(47554);
        internalCounters.push_back(48066);
        internalCounters.push_back(48578);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/,12,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(42946);
        internalCounters.push_back(43458);
        internalCounters.push_back(43970);
        internalCounters.push_back(44482);
        internalCounters.push_back(51138);
        internalCounters.push_back(51650);
        internalCounters.push_back(52162);
        internalCounters.push_back(52674);
        internalCounters.push_back(47042);
        internalCounters.push_back(47554);
        internalCounters.push_back(48066);
        internalCounters.push_back(48578);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(92807);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53190);
        internalCounters.push_back(53702);
        internalCounters.push_back(54214);
        internalCounters.push_back(54726);
        internalCounters.push_back(53130);
        internalCounters.push_back(53642);
        internalCounters.push_back(54154);
        internalCounters.push_back(54666);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53186);
        internalCounters.push_back(53698);
        internalCounters.push_back(54210);
        internalCounters.push_back(54722);
        internalCounters.push_back(53130);
        internalCounters.push_back(53642);
        internalCounters.push_back(54154);
        internalCounters.push_back(54666);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53243);
        internalCounters.push_back(53755);
        internalCounters.push_back(54267);
        internalCounters.push_back(54779);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53243);
        internalCounters.push_back(53755);
        internalCounters.push_back(54267);
        internalCounters.push_back(54779);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53186);
        internalCounters.push_back(53698);
        internalCounters.push_back(54210);
        internalCounters.push_back(54722);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53186);
        internalCounters.push_back(53698);
        internalCounters.push_back(54210);
        internalCounters.push_back(54722);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(92855);
        internalCounters.push_back(92791);
        internalCounters.push_back(92813);

        c.DefineDerivedCounter("DSVerticesIn", "DomainShader", "The number of vertices processed by the DS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,1,ifnotzero,2,ifnotzero", "b88d9d05-2418-e639-4e3d-3a5815855f8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(47046);
        internalCounters.push_back(47558);
        internalCounters.push_back(48070);
        internalCounters.push_back(48582);
        internalCounters.push_back(46986);
        internalCounters.push_back(47498);
        internalCounters.push_back(48010);
        internalCounters.push_back(48522);
        internalCounters.push_back(42950);
        internalCounters.push_back(43462);
        internalCounters.push_back(43974);
        internalCounters.push_back(44486);
        internalCounters.push_back(42890);
        internalCounters.push_back(43402);
        internalCounters.push_back(43914);
        internalCounters.push_back(44426);
        internalCounters.push_back(42894);
        internalCounters.push_back(43406);
        internalCounters.push_back(43918);
        internalCounters.push_back(44430);
        internalCounters.push_back(51086);
        internalCounters.push_back(51598);
        internalCounters.push_back(52110);
        internalCounters.push_back(52622);

        c.DefineDerivedCounter("DSVALUInstCount", "DomainShader", "Average number of vector ALU instructions executed in the DS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "03a3e949-82f9-be4d-7228-5eb5ad80915a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(47042);
        internalCounters.push_back(47554);
        internalCounters.push_back(48066);
        internalCounters.push_back(48578);
        internalCounters.push_back(46986);
        internalCounters.push_back(47498);
        internalCounters.push_back(48010);
        internalCounters.push_back(48522);
        internalCounters.push_back(42946);
        internalCounters.push_back(43458);
        internalCounters.push_back(43970);
        internalCounters.push_back(44482);
        internalCounters.push_back(42890);
        internalCounters.push_back(43402);
        internalCounters.push_back(43914);
        internalCounters.push_back(44426);
        internalCounters.push_back(42894);
        internalCounters.push_back(43406);
        internalCounters.push_back(43918);
        internalCounters.push_back(44430);
        internalCounters.push_back(51086);
        internalCounters.push_back(51598);
        internalCounters.push_back(52110);
        internalCounters.push_back(52622);

        c.DefineDerivedCounter("DSSALUInstCount", "DomainShader", "Average number of scalar ALU instructions executed in the DS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "73daa728-483e-95d0-5b40-504719aadc1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26867);
        internalCounters.push_back(27133);
        internalCounters.push_back(27399);
        internalCounters.push_back(27665);
        internalCounters.push_back(26871);
        internalCounters.push_back(27137);
        internalCounters.push_back(27403);
        internalCounters.push_back(27669);
        internalCounters.push_back(26823);
        internalCounters.push_back(27089);
        internalCounters.push_back(27355);
        internalCounters.push_back(27621);
        internalCounters.push_back(26835);
        internalCounters.push_back(27101);
        internalCounters.push_back(27367);
        internalCounters.push_back(27633);
        internalCounters.push_back(26824);
        internalCounters.push_back(27090);
        internalCounters.push_back(27356);
        internalCounters.push_back(27622);
        internalCounters.push_back(26836);
        internalCounters.push_back(27102);
        internalCounters.push_back(27368);
        internalCounters.push_back(27634);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26867);
        internalCounters.push_back(27133);
        internalCounters.push_back(27399);
        internalCounters.push_back(27665);
        internalCounters.push_back(26871);
        internalCounters.push_back(27137);
        internalCounters.push_back(27403);
        internalCounters.push_back(27669);
        internalCounters.push_back(26823);
        internalCounters.push_back(27089);
        internalCounters.push_back(27355);
        internalCounters.push_back(27621);
        internalCounters.push_back(26835);
        internalCounters.push_back(27101);
        internalCounters.push_back(27367);
        internalCounters.push_back(27633);
        internalCounters.push_back(26824);
        internalCounters.push_back(27090);
        internalCounters.push_back(27356);
        internalCounters.push_back(27622);
        internalCounters.push_back(26836);
        internalCounters.push_back(27102);
        internalCounters.push_back(27368);
        internalCounters.push_back(27634);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26770);
        internalCounters.push_back(27036);
        internalCounters.push_back(27302);
        internalCounters.push_back(27568);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26776);
        internalCounters.push_back(27042);
        internalCounters.push_back(27308);
        internalCounters.push_back(27574);
        internalCounters.push_back(26816);
        internalCounters.push_back(27082);
        internalCounters.push_back(27348);
        internalCounters.push_back(27614);
        internalCounters.push_back(26817);
        internalCounters.push_back(27083);
        internalCounters.push_back(27349);
        internalCounters.push_back(27615);
        internalCounters.push_back(26818);
        internalCounters.push_back(27084);
        internalCounters.push_back(27350);
        internalCounters.push_back(27616);
        internalCounters.push_back(26819);
        internalCounters.push_back(27085);
        internalCounters.push_back(27351);
        internalCounters.push_back(27617);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,+,2,+,3,+,4,+,5,+,6,+,7,+,8,+,9,+,10,+,11,+,12,+,13,+,14,+,15,+,16,+,17,+,18,+,19,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26783);
        internalCounters.push_back(27049);
        internalCounters.push_back(27315);
        internalCounters.push_back(27581);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26871);
        internalCounters.push_back(27137);
        internalCounters.push_back(27403);
        internalCounters.push_back(27669);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26871);
        internalCounters.push_back(27137);
        internalCounters.push_back(27403);
        internalCounters.push_back(27669);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(37734);
        internalCounters.push_back(37959);
        internalCounters.push_back(38184);
        internalCounters.push_back(38409);
        internalCounters.push_back(38634);
        internalCounters.push_back(38859);
        internalCounters.push_back(39084);
        internalCounters.push_back(39309);
        internalCounters.push_back(37739);
        internalCounters.push_back(37964);
        internalCounters.push_back(38189);
        internalCounters.push_back(38414);
        internalCounters.push_back(38639);
        internalCounters.push_back(38864);
        internalCounters.push_back(39089);
        internalCounters.push_back(39314);
        internalCounters.push_back(37744);
        internalCounters.push_back(37969);
        internalCounters.push_back(38194);
        internalCounters.push_back(38419);
        internalCounters.push_back(38644);
        internalCounters.push_back(38869);
        internalCounters.push_back(39094);
        internalCounters.push_back(39319);
        internalCounters.push_back(37749);
        internalCounters.push_back(37974);
        internalCounters.push_back(38199);
        internalCounters.push_back(38424);
        internalCounters.push_back(38649);
        internalCounters.push_back(38874);
        internalCounters.push_back(39099);
        internalCounters.push_back(39324);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(37736);
        internalCounters.push_back(37961);
        internalCounters.push_back(38186);
        internalCounters.push_back(38411);
        internalCounters.push_back(38636);
        internalCounters.push_back(38861);
        internalCounters.push_back(39086);
        internalCounters.push_back(39311);
        internalCounters.push_back(37741);
        internalCounters.push_back(37966);
        internalCounters.push_back(38191);
        internalCounters.push_back(38416);
        internalCounters.push_back(38641);
        internalCounters.push_back(38866);
        internalCounters.push_back(39091);
        internalCounters.push_back(39316);
        internalCounters.push_back(37746);
        internalCounters.push_back(37971);
        internalCounters.push_back(38196);
        internalCounters.push_back(38421);
        internalCounters.push_back(38646);
        internalCounters.push_back(38871);
        internalCounters.push_back(39096);
        internalCounters.push_back(39321);
        internalCounters.push_back(37751);
        internalCounters.push_back(37976);
        internalCounters.push_back(38201);
        internalCounters.push_back(38426);
        internalCounters.push_back(38651);
        internalCounters.push_back(38876);
        internalCounters.push_back(39101);
        internalCounters.push_back(39326);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32,32,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(37736);
        internalCounters.push_back(37961);
        internalCounters.push_back(38186);
        internalCounters.push_back(38411);
        internalCounters.push_back(38636);
        internalCounters.push_back(38861);
        internalCounters.push_back(39086);
        internalCounters.push_back(39311);
        internalCounters.push_back(37741);
        internalCounters.push_back(37966);
        internalCounters.push_back(38191);
        internalCounters.push_back(38416);
        internalCounters.push_back(38641);
        internalCounters.push_back(38866);
        internalCounters.push_back(39091);
        internalCounters.push_back(39316);
        internalCounters.push_back(37746);
        internalCounters.push_back(37971);
        internalCounters.push_back(38196);
        internalCounters.push_back(38421);
        internalCounters.push_back(38646);
        internalCounters.push_back(38871);
        internalCounters.push_back(39096);
        internalCounters.push_back(39321);
        internalCounters.push_back(37751);
        internalCounters.push_back(37976);
        internalCounters.push_back(38201);
        internalCounters.push_back(38426);
        internalCounters.push_back(38651);
        internalCounters.push_back(38876);
        internalCounters.push_back(39101);
        internalCounters.push_back(39326);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(49094);
        internalCounters.push_back(49606);
        internalCounters.push_back(50118);
        internalCounters.push_back(50630);
        internalCounters.push_back(49034);
        internalCounters.push_back(49546);
        internalCounters.push_back(50058);
        internalCounters.push_back(50570);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(49090);
        internalCounters.push_back(49602);
        internalCounters.push_back(50114);
        internalCounters.push_back(50626);
        internalCounters.push_back(49034);
        internalCounters.push_back(49546);
        internalCounters.push_back(50058);
        internalCounters.push_back(50570);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(49147);
        internalCounters.push_back(49659);
        internalCounters.push_back(50171);
        internalCounters.push_back(50683);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(49147);
        internalCounters.push_back(49659);
        internalCounters.push_back(50171);
        internalCounters.push_back(50683);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(49090);
        internalCounters.push_back(49602);
        internalCounters.push_back(50114);
        internalCounters.push_back(50626);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(49090);
        internalCounters.push_back(49602);
        internalCounters.push_back(50114);
        internalCounters.push_back(50626);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39571);
        internalCounters.push_back(39900);
        internalCounters.push_back(40229);
        internalCounters.push_back(40558);
        internalCounters.push_back(39577);
        internalCounters.push_back(39906);
        internalCounters.push_back(40235);
        internalCounters.push_back(40564);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);
        internalCounters.push_back(55182);
        internalCounters.push_back(55694);
        internalCounters.push_back(56206);
        internalCounters.push_back(56718);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55238);
        internalCounters.push_back(55750);
        internalCounters.push_back(56262);
        internalCounters.push_back(56774);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55256);
        internalCounters.push_back(55768);
        internalCounters.push_back(56280);
        internalCounters.push_back(56792);
        internalCounters.push_back(55291);
        internalCounters.push_back(55803);
        internalCounters.push_back(56315);
        internalCounters.push_back(56827);
        internalCounters.push_back(55179);
        internalCounters.push_back(55691);
        internalCounters.push_back(56203);
        internalCounters.push_back(56715);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of the wave size. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),(32),8,9,10,11,sum4,ifnotzero,*,/,(100),*,4,5,6,7,sum4,ifnotzero,(100),min,12,13,14,15,16,17,18,19,sum8,ifnotzero", "ae943d2a-76e1-bb68-e1e2-0e06c9031611");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55234);
        internalCounters.push_back(55746);
        internalCounters.push_back(56258);
        internalCounters.push_back(56770);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55243);
        internalCounters.push_back(55755);
        internalCounters.push_back(56267);
        internalCounters.push_back(56779);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55235);
        internalCounters.push_back(55747);
        internalCounters.push_back(56259);
        internalCounters.push_back(56771);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55244);
        internalCounters.push_back(55756);
        internalCounters.push_back(56268);
        internalCounters.push_back(56780);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55291);
        internalCounters.push_back(55803);
        internalCounters.push_back(56315);
        internalCounters.push_back(56827);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55291);
        internalCounters.push_back(55803);
        internalCounters.push_back(56315);
        internalCounters.push_back(56827);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55234);
        internalCounters.push_back(55746);
        internalCounters.push_back(56258);
        internalCounters.push_back(56770);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55234);
        internalCounters.push_back(55746);
        internalCounters.push_back(56258);
        internalCounters.push_back(56770);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57237);
        internalCounters.push_back(57463);
        internalCounters.push_back(57689);
        internalCounters.push_back(57915);
        internalCounters.push_back(58141);
        internalCounters.push_back(58367);
        internalCounters.push_back(58593);
        internalCounters.push_back(58819);
        internalCounters.push_back(59045);
        internalCounters.push_back(59271);
        internalCounters.push_back(59497);
        internalCounters.push_back(59723);
        internalCounters.push_back(59949);
        internalCounters.push_back(60175);
        internalCounters.push_back(60401);
        internalCounters.push_back(60627);
        internalCounters.push_back(60853);
        internalCounters.push_back(61079);
        internalCounters.push_back(61305);
        internalCounters.push_back(61531);
        internalCounters.push_back(61757);
        internalCounters.push_back(61983);
        internalCounters.push_back(62209);
        internalCounters.push_back(62435);
        internalCounters.push_back(62661);
        internalCounters.push_back(62887);
        internalCounters.push_back(63113);
        internalCounters.push_back(63339);
        internalCounters.push_back(63565);
        internalCounters.push_back(63791);
        internalCounters.push_back(64017);
        internalCounters.push_back(64243);
        internalCounters.push_back(64469);
        internalCounters.push_back(64695);
        internalCounters.push_back(64921);
        internalCounters.push_back(65147);
        internalCounters.push_back(65373);
        internalCounters.push_back(65599);
        internalCounters.push_back(65825);
        internalCounters.push_back(66051);
        internalCounters.push_back(66277);
        internalCounters.push_back(66503);
        internalCounters.push_back(66729);
        internalCounters.push_back(66955);
        internalCounters.push_back(67181);
        internalCounters.push_back(67407);
        internalCounters.push_back(67633);
        internalCounters.push_back(67859);
        internalCounters.push_back(68085);
        internalCounters.push_back(68311);
        internalCounters.push_back(68537);
        internalCounters.push_back(68763);
        internalCounters.push_back(68989);
        internalCounters.push_back(69215);
        internalCounters.push_back(69441);
        internalCounters.push_back(69667);
        internalCounters.push_back(69893);
        internalCounters.push_back(70119);
        internalCounters.push_back(70345);
        internalCounters.push_back(70571);
        internalCounters.push_back(70797);
        internalCounters.push_back(71023);
        internalCounters.push_back(71249);
        internalCounters.push_back(71475);
        internalCounters.push_back(71701);
        internalCounters.push_back(71927);
        internalCounters.push_back(72153);
        internalCounters.push_back(72379);
        internalCounters.push_back(72605);
        internalCounters.push_back(72831);
        internalCounters.push_back(73057);
        internalCounters.push_back(73283);
        internalCounters.push_back(73509);
        internalCounters.push_back(73735);
        internalCounters.push_back(73961);
        internalCounters.push_back(74187);
        internalCounters.push_back(74413);
        internalCounters.push_back(74639);
        internalCounters.push_back(74865);
        internalCounters.push_back(75091);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57237);
        internalCounters.push_back(57463);
        internalCounters.push_back(57689);
        internalCounters.push_back(57915);
        internalCounters.push_back(58141);
        internalCounters.push_back(58367);
        internalCounters.push_back(58593);
        internalCounters.push_back(58819);
        internalCounters.push_back(59045);
        internalCounters.push_back(59271);
        internalCounters.push_back(59497);
        internalCounters.push_back(59723);
        internalCounters.push_back(59949);
        internalCounters.push_back(60175);
        internalCounters.push_back(60401);
        internalCounters.push_back(60627);
        internalCounters.push_back(60853);
        internalCounters.push_back(61079);
        internalCounters.push_back(61305);
        internalCounters.push_back(61531);
        internalCounters.push_back(61757);
        internalCounters.push_back(61983);
        internalCounters.push_back(62209);
        internalCounters.push_back(62435);
        internalCounters.push_back(62661);
        internalCounters.push_back(62887);
        internalCounters.push_back(63113);
        internalCounters.push_back(63339);
        internalCounters.push_back(63565);
        internalCounters.push_back(63791);
        internalCounters.push_back(64017);
        internalCounters.push_back(64243);
        internalCounters.push_back(64469);
        internalCounters.push_back(64695);
        internalCounters.push_back(64921);
        internalCounters.push_back(65147);
        internalCounters.push_back(65373);
        internalCounters.push_back(65599);
        internalCounters.push_back(65825);
        internalCounters.push_back(66051);
        internalCounters.push_back(66277);
        internalCounters.push_back(66503);
        internalCounters.push_back(66729);
        internalCounters.push_back(66955);
        internalCounters.push_back(67181);
        internalCounters.push_back(67407);
        internalCounters.push_back(67633);
        internalCounters.push_back(67859);
        internalCounters.push_back(68085);
        internalCounters.push_back(68311);
        internalCounters.push_back(68537);
        internalCounters.push_back(68763);
        internalCounters.push_back(68989);
        internalCounters.push_back(69215);
        internalCounters.push_back(69441);
        internalCounters.push_back(69667);
        internalCounters.push_back(69893);
        internalCounters.push_back(70119);
        internalCounters.push_back(70345);
        internalCounters.push_back(70571);
        internalCounters.push_back(70797);
        internalCounters.push_back(71023);
        internalCounters.push_back(71249);
        internalCounters.push_back(71475);
        internalCounters.push_back(71701);
        internalCounters.push_back(71927);
        internalCounters.push_back(72153);
        internalCounters.push_back(72379);
        internalCounters.push_back(72605);
        internalCounters.push_back(72831);
        internalCounters.push_back(73057);
        internalCounters.push_back(73283);
        internalCounters.push_back(73509);
        internalCounters.push_back(73735);
        internalCounters.push_back(73961);
        internalCounters.push_back(74187);
        internalCounters.push_back(74413);
        internalCounters.push_back(74639);
        internalCounters.push_back(74865);
        internalCounters.push_back(75091);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80218);
        internalCounters.push_back(80295);
        internalCounters.push_back(80372);
        internalCounters.push_back(80449);
        internalCounters.push_back(80526);
        internalCounters.push_back(80603);
        internalCounters.push_back(80680);
        internalCounters.push_back(80757);
        internalCounters.push_back(80834);
        internalCounters.push_back(80911);
        internalCounters.push_back(80988);
        internalCounters.push_back(81065);
        internalCounters.push_back(81142);
        internalCounters.push_back(81219);
        internalCounters.push_back(81296);
        internalCounters.push_back(81373);
        internalCounters.push_back(81450);
        internalCounters.push_back(81527);
        internalCounters.push_back(81604);
        internalCounters.push_back(81681);
        internalCounters.push_back(81758);
        internalCounters.push_back(81835);
        internalCounters.push_back(81912);
        internalCounters.push_back(81989);
        internalCounters.push_back(82066);
        internalCounters.push_back(82143);
        internalCounters.push_back(82220);
        internalCounters.push_back(82297);
        internalCounters.push_back(82374);
        internalCounters.push_back(82451);
        internalCounters.push_back(82528);
        internalCounters.push_back(82605);
        internalCounters.push_back(82682);
        internalCounters.push_back(82759);
        internalCounters.push_back(82836);
        internalCounters.push_back(82913);
        internalCounters.push_back(82990);
        internalCounters.push_back(83067);
        internalCounters.push_back(83144);
        internalCounters.push_back(83221);
        internalCounters.push_back(83298);
        internalCounters.push_back(83375);
        internalCounters.push_back(83452);
        internalCounters.push_back(83529);
        internalCounters.push_back(83606);
        internalCounters.push_back(83683);
        internalCounters.push_back(83760);
        internalCounters.push_back(83837);
        internalCounters.push_back(83914);
        internalCounters.push_back(83991);
        internalCounters.push_back(84068);
        internalCounters.push_back(84145);
        internalCounters.push_back(84222);
        internalCounters.push_back(84299);
        internalCounters.push_back(84376);
        internalCounters.push_back(84453);
        internalCounters.push_back(84530);
        internalCounters.push_back(84607);
        internalCounters.push_back(84684);
        internalCounters.push_back(84761);
        internalCounters.push_back(84838);
        internalCounters.push_back(84915);
        internalCounters.push_back(84992);
        internalCounters.push_back(85069);
        internalCounters.push_back(85146);
        internalCounters.push_back(85223);
        internalCounters.push_back(85300);
        internalCounters.push_back(85377);
        internalCounters.push_back(85454);
        internalCounters.push_back(85531);
        internalCounters.push_back(85608);
        internalCounters.push_back(85685);
        internalCounters.push_back(85762);
        internalCounters.push_back(85839);
        internalCounters.push_back(85916);
        internalCounters.push_back(85993);
        internalCounters.push_back(86070);
        internalCounters.push_back(86147);
        internalCounters.push_back(86224);
        internalCounters.push_back(86301);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80218);
        internalCounters.push_back(80295);
        internalCounters.push_back(80372);
        internalCounters.push_back(80449);
        internalCounters.push_back(80526);
        internalCounters.push_back(80603);
        internalCounters.push_back(80680);
        internalCounters.push_back(80757);
        internalCounters.push_back(80834);
        internalCounters.push_back(80911);
        internalCounters.push_back(80988);
        internalCounters.push_back(81065);
        internalCounters.push_back(81142);
        internalCounters.push_back(81219);
        internalCounters.push_back(81296);
        internalCounters.push_back(81373);
        internalCounters.push_back(81450);
        internalCounters.push_back(81527);
        internalCounters.push_back(81604);
        internalCounters.push_back(81681);
        internalCounters.push_back(81758);
        internalCounters.push_back(81835);
        internalCounters.push_back(81912);
        internalCounters.push_back(81989);
        internalCounters.push_back(82066);
        internalCounters.push_back(82143);
        internalCounters.push_back(82220);
        internalCounters.push_back(82297);
        internalCounters.push_back(82374);
        internalCounters.push_back(82451);
        internalCounters.push_back(82528);
        internalCounters.push_back(82605);
        internalCounters.push_back(82682);
        internalCounters.push_back(82759);
        internalCounters.push_back(82836);
        internalCounters.push_back(82913);
        internalCounters.push_back(82990);
        internalCounters.push_back(83067);
        internalCounters.push_back(83144);
        internalCounters.push_back(83221);
        internalCounters.push_back(83298);
        internalCounters.push_back(83375);
        internalCounters.push_back(83452);
        internalCounters.push_back(83529);
        internalCounters.push_back(83606);
        internalCounters.push_back(83683);
        internalCounters.push_back(83760);
        internalCounters.push_back(83837);
        internalCounters.push_back(83914);
        internalCounters.push_back(83991);
        internalCounters.push_back(84068);
        internalCounters.push_back(84145);
        internalCounters.push_back(84222);
        internalCounters.push_back(84299);
        internalCounters.push_back(84376);
        internalCounters.push_back(84453);
        internalCounters.push_back(84530);
        internalCounters.push_back(84607);
        internalCounters.push_back(84684);
        internalCounters.push_back(84761);
        internalCounters.push_back(84838);
        internalCounters.push_back(84915);
        internalCounters.push_back(84992);
        internalCounters.push_back(85069);
        internalCounters.push_back(85146);
        internalCounters.push_back(85223);
        internalCounters.push_back(85300);
        internalCounters.push_back(85377);
        internalCounters.push_back(85454);
        internalCounters.push_back(85531);
        internalCounters.push_back(85608);
        internalCounters.push_back(85685);
        internalCounters.push_back(85762);
        internalCounters.push_back(85839);
        internalCounters.push_back(85916);
        internalCounters.push_back(85993);
        internalCounters.push_back(86070);
        internalCounters.push_back(86147);
        internalCounters.push_back(86224);
        internalCounters.push_back(86301);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95866);
        internalCounters.push_back(96101);
        internalCounters.push_back(96336);
        internalCounters.push_back(96571);
        internalCounters.push_back(96806);
        internalCounters.push_back(97041);
        internalCounters.push_back(97276);
        internalCounters.push_back(97511);
        internalCounters.push_back(97746);
        internalCounters.push_back(97981);
        internalCounters.push_back(98216);
        internalCounters.push_back(98451);
        internalCounters.push_back(98686);
        internalCounters.push_back(98921);
        internalCounters.push_back(99156);
        internalCounters.push_back(99391);
        internalCounters.push_back(99626);
        internalCounters.push_back(99861);
        internalCounters.push_back(100096);
        internalCounters.push_back(100331);
        internalCounters.push_back(100566);
        internalCounters.push_back(100801);
        internalCounters.push_back(101036);
        internalCounters.push_back(101271);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*,25,26,27,28,29,30,31,32,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95866);
        internalCounters.push_back(96101);
        internalCounters.push_back(96336);
        internalCounters.push_back(96571);
        internalCounters.push_back(96806);
        internalCounters.push_back(97041);
        internalCounters.push_back(97276);
        internalCounters.push_back(97511);
        internalCounters.push_back(97746);
        internalCounters.push_back(97981);
        internalCounters.push_back(98216);
        internalCounters.push_back(98451);
        internalCounters.push_back(98686);
        internalCounters.push_back(98921);
        internalCounters.push_back(99156);
        internalCounters.push_back(99391);
        internalCounters.push_back(99626);
        internalCounters.push_back(99861);
        internalCounters.push_back(100096);
        internalCounters.push_back(100331);
        internalCounters.push_back(100566);
        internalCounters.push_back(100801);
        internalCounters.push_back(101036);
        internalCounters.push_back(101271);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,25,26,27,28,29,30,31,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55229);
        internalCounters.push_back(55741);
        internalCounters.push_back(56253);
        internalCounters.push_back(56765);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55233);
        internalCounters.push_back(55745);
        internalCounters.push_back(56257);
        internalCounters.push_back(56769);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55205);
        internalCounters.push_back(55717);
        internalCounters.push_back(56229);
        internalCounters.push_back(56741);
        internalCounters.push_back(55178);
        internalCounters.push_back(55690);
        internalCounters.push_back(56202);
        internalCounters.push_back(56714);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,4,5,6,7,sum4,ifnotzero,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55205);
        internalCounters.push_back(55717);
        internalCounters.push_back(56229);
        internalCounters.push_back(56741);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55459);
        internalCounters.push_back(55971);
        internalCounters.push_back(56483);
        internalCounters.push_back(56995);
        internalCounters.push_back(24);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55459);
        internalCounters.push_back(55971);
        internalCounters.push_back(56483);
        internalCounters.push_back(56995);
        internalCounters.push_back(39568);
        internalCounters.push_back(39897);
        internalCounters.push_back(40226);
        internalCounters.push_back(40555);
        internalCounters.push_back(39574);
        internalCounters.push_back(39903);
        internalCounters.push_back(40232);
        internalCounters.push_back(40561);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57237);
        internalCounters.push_back(57463);
        internalCounters.push_back(57689);
        internalCounters.push_back(57915);
        internalCounters.push_back(58141);
        internalCounters.push_back(58367);
        internalCounters.push_back(58593);
        internalCounters.push_back(58819);
        internalCounters.push_back(59045);
        internalCounters.push_back(59271);
        internalCounters.push_back(59497);
        internalCounters.push_back(59723);
        internalCounters.push_back(59949);
        internalCounters.push_back(60175);
        internalCounters.push_back(60401);
        internalCounters.push_back(60627);
        internalCounters.push_back(60853);
        internalCounters.push_back(61079);
        internalCounters.push_back(61305);
        internalCounters.push_back(61531);
        internalCounters.push_back(61757);
        internalCounters.push_back(61983);
        internalCounters.push_back(62209);
        internalCounters.push_back(62435);
        internalCounters.push_back(62661);
        internalCounters.push_back(62887);
        internalCounters.push_back(63113);
        internalCounters.push_back(63339);
        internalCounters.push_back(63565);
        internalCounters.push_back(63791);
        internalCounters.push_back(64017);
        internalCounters.push_back(64243);
        internalCounters.push_back(64469);
        internalCounters.push_back(64695);
        internalCounters.push_back(64921);
        internalCounters.push_back(65147);
        internalCounters.push_back(65373);
        internalCounters.push_back(65599);
        internalCounters.push_back(65825);
        internalCounters.push_back(66051);
        internalCounters.push_back(66277);
        internalCounters.push_back(66503);
        internalCounters.push_back(66729);
        internalCounters.push_back(66955);
        internalCounters.push_back(67181);
        internalCounters.push_back(67407);
        internalCounters.push_back(67633);
        internalCounters.push_back(67859);
        internalCounters.push_back(68085);
        internalCounters.push_back(68311);
        internalCounters.push_back(68537);
        internalCounters.push_back(68763);
        internalCounters.push_back(68989);
        internalCounters.push_back(69215);
        internalCounters.push_back(69441);
        internalCounters.push_back(69667);
        internalCounters.push_back(69893);
        internalCounters.push_back(70119);
        internalCounters.push_back(70345);
        internalCounters.push_back(70571);
        internalCounters.push_back(70797);
        internalCounters.push_back(71023);
        internalCounters.push_back(71249);
        internalCounters.push_back(71475);
        internalCounters.push_back(71701);
        internalCounters.push_back(71927);
        internalCounters.push_back(72153);
        internalCounters.push_back(72379);
        internalCounters.push_back(72605);
        internalCounters.push_back(72831);
        internalCounters.push_back(73057);
        internalCounters.push_back(73283);
        internalCounters.push_back(73509);
        internalCounters.push_back(73735);
        internalCounters.push_back(73961);
        internalCounters.push_back(74187);
        internalCounters.push_back(74413);
        internalCounters.push_back(74639);
        internalCounters.push_back(74865);
        internalCounters.push_back(75091);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57237);
        internalCounters.push_back(57463);
        internalCounters.push_back(57689);
        internalCounters.push_back(57915);
        internalCounters.push_back(58141);
        internalCounters.push_back(58367);
        internalCounters.push_back(58593);
        internalCounters.push_back(58819);
        internalCounters.push_back(59045);
        internalCounters.push_back(59271);
        internalCounters.push_back(59497);
        internalCounters.push_back(59723);
        internalCounters.push_back(59949);
        internalCounters.push_back(60175);
        internalCounters.push_back(60401);
        internalCounters.push_back(60627);
        internalCounters.push_back(60853);
        internalCounters.push_back(61079);
        internalCounters.push_back(61305);
        internalCounters.push_back(61531);
        internalCounters.push_back(61757);
        internalCounters.push_back(61983);
        internalCounters.push_back(62209);
        internalCounters.push_back(62435);
        internalCounters.push_back(62661);
        internalCounters.push_back(62887);
        internalCounters.push_back(63113);
        internalCounters.push_back(63339);
        internalCounters.push_back(63565);
        internalCounters.push_back(63791);
        internalCounters.push_back(64017);
        internalCounters.push_back(64243);
        internalCounters.push_back(64469);
        internalCounters.push_back(64695);
        internalCounters.push_back(64921);
        internalCounters.push_back(65147);
        internalCounters.push_back(65373);
        internalCounters.push_back(65599);
        internalCounters.push_back(65825);
        internalCounters.push_back(66051);
        internalCounters.push_back(66277);
        internalCounters.push_back(66503);
        internalCounters.push_back(66729);
        internalCounters.push_back(66955);
        internalCounters.push_back(67181);
        internalCounters.push_back(67407);
        internalCounters.push_back(67633);
        internalCounters.push_back(67859);
        internalCounters.push_back(68085);
        internalCounters.push_back(68311);
        internalCounters.push_back(68537);
        internalCounters.push_back(68763);
        internalCounters.push_back(68989);
        internalCounters.push_back(69215);
        internalCounters.push_back(69441);
        internalCounters.push_back(69667);
        internalCounters.push_back(69893);
        internalCounters.push_back(70119);
        internalCounters.push_back(70345);
        internalCounters.push_back(70571);
        internalCounters.push_back(70797);
        internalCounters.push_back(71023);
        internalCounters.push_back(71249);
        internalCounters.push_back(71475);
        internalCounters.push_back(71701);
        internalCounters.push_back(71927);
        internalCounters.push_back(72153);
        internalCounters.push_back(72379);
        internalCounters.push_back(72605);
        internalCounters.push_back(72831);
        internalCounters.push_back(73057);
        internalCounters.push_back(73283);
        internalCounters.push_back(73509);
        internalCounters.push_back(73735);
        internalCounters.push_back(73961);
        internalCounters.push_back(74187);
        internalCounters.push_back(74413);
        internalCounters.push_back(74639);
        internalCounters.push_back(74865);
        internalCounters.push_back(75091);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57291);
        internalCounters.push_back(57517);
        internalCounters.push_back(57743);
        internalCounters.push_back(57969);
        internalCounters.push_back(58195);
        internalCounters.push_back(58421);
        internalCounters.push_back(58647);
        internalCounters.push_back(58873);
        internalCounters.push_back(59099);
        internalCounters.push_back(59325);
        internalCounters.push_back(59551);
        internalCounters.push_back(59777);
        internalCounters.push_back(60003);
        internalCounters.push_back(60229);
        internalCounters.push_back(60455);
        internalCounters.push_back(60681);
        internalCounters.push_back(60907);
        internalCounters.push_back(61133);
        internalCounters.push_back(61359);
        internalCounters.push_back(61585);
        internalCounters.push_back(61811);
        internalCounters.push_back(62037);
        internalCounters.push_back(62263);
        internalCounters.push_back(62489);
        internalCounters.push_back(62715);
        internalCounters.push_back(62941);
        internalCounters.push_back(63167);
        internalCounters.push_back(63393);
        internalCounters.push_back(63619);
        internalCounters.push_back(63845);
        internalCounters.push_back(64071);
        internalCounters.push_back(64297);
        internalCounters.push_back(64523);
        internalCounters.push_back(64749);
        internalCounters.push_back(64975);
        internalCounters.push_back(65201);
        internalCounters.push_back(65427);
        internalCounters.push_back(65653);
        internalCounters.push_back(65879);
        internalCounters.push_back(66105);
        internalCounters.push_back(66331);
        internalCounters.push_back(66557);
        internalCounters.push_back(66783);
        internalCounters.push_back(67009);
        internalCounters.push_back(67235);
        internalCounters.push_back(67461);
        internalCounters.push_back(67687);
        internalCounters.push_back(67913);
        internalCounters.push_back(68139);
        internalCounters.push_back(68365);
        internalCounters.push_back(68591);
        internalCounters.push_back(68817);
        internalCounters.push_back(69043);
        internalCounters.push_back(69269);
        internalCounters.push_back(69495);
        internalCounters.push_back(69721);
        internalCounters.push_back(69947);
        internalCounters.push_back(70173);
        internalCounters.push_back(70399);
        internalCounters.push_back(70625);
        internalCounters.push_back(70851);
        internalCounters.push_back(71077);
        internalCounters.push_back(71303);
        internalCounters.push_back(71529);
        internalCounters.push_back(71755);
        internalCounters.push_back(71981);
        internalCounters.push_back(72207);
        internalCounters.push_back(72433);
        internalCounters.push_back(72659);
        internalCounters.push_back(72885);
        internalCounters.push_back(73111);
        internalCounters.push_back(73337);
        internalCounters.push_back(73563);
        internalCounters.push_back(73789);
        internalCounters.push_back(74015);
        internalCounters.push_back(74241);
        internalCounters.push_back(74467);
        internalCounters.push_back(74693);
        internalCounters.push_back(74919);
        internalCounters.push_back(75145);
        internalCounters.push_back(57290);
        internalCounters.push_back(57516);
        internalCounters.push_back(57742);
        internalCounters.push_back(57968);
        internalCounters.push_back(58194);
        internalCounters.push_back(58420);
        internalCounters.push_back(58646);
        internalCounters.push_back(58872);
        internalCounters.push_back(59098);
        internalCounters.push_back(59324);
        internalCounters.push_back(59550);
        internalCounters.push_back(59776);
        internalCounters.push_back(60002);
        internalCounters.push_back(60228);
        internalCounters.push_back(60454);
        internalCounters.push_back(60680);
        internalCounters.push_back(60906);
        internalCounters.push_back(61132);
        internalCounters.push_back(61358);
        internalCounters.push_back(61584);
        internalCounters.push_back(61810);
        internalCounters.push_back(62036);
        internalCounters.push_back(62262);
        internalCounters.push_back(62488);
        internalCounters.push_back(62714);
        internalCounters.push_back(62940);
        internalCounters.push_back(63166);
        internalCounters.push_back(63392);
        internalCounters.push_back(63618);
        internalCounters.push_back(63844);
        internalCounters.push_back(64070);
        internalCounters.push_back(64296);
        internalCounters.push_back(64522);
        internalCounters.push_back(64748);
        internalCounters.push_back(64974);
        internalCounters.push_back(65200);
        internalCounters.push_back(65426);
        internalCounters.push_back(65652);
        internalCounters.push_back(65878);
        internalCounters.push_back(66104);
        internalCounters.push_back(66330);
        internalCounters.push_back(66556);
        internalCounters.push_back(66782);
        internalCounters.push_back(67008);
        internalCounters.push_back(67234);
        internalCounters.push_back(67460);
        internalCounters.push_back(67686);
        internalCounters.push_back(67912);
        internalCounters.push_back(68138);
        internalCounters.push_back(68364);
        internalCounters.push_back(68590);
        internalCounters.push_back(68816);
        internalCounters.push_back(69042);
        internalCounters.push_back(69268);
        internalCounters.push_back(69494);
        internalCounters.push_back(69720);
        internalCounters.push_back(69946);
        internalCounters.push_back(70172);
        internalCounters.push_back(70398);
        internalCounters.push_back(70624);
        internalCounters.push_back(70850);
        internalCounters.push_back(71076);
        internalCounters.push_back(71302);
        internalCounters.push_back(71528);
        internalCounters.push_back(71754);
        internalCounters.push_back(71980);
        internalCounters.push_back(72206);
        internalCounters.push_back(72432);
        internalCounters.push_back(72658);
        internalCounters.push_back(72884);
        internalCounters.push_back(73110);
        internalCounters.push_back(73336);
        internalCounters.push_back(73562);
        internalCounters.push_back(73788);
        internalCounters.push_back(74014);
        internalCounters.push_back(74240);
        internalCounters.push_back(74466);
        internalCounters.push_back(74692);
        internalCounters.push_back(74918);
        internalCounters.push_back(75144);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57291);
        internalCounters.push_back(57517);
        internalCounters.push_back(57743);
        internalCounters.push_back(57969);
        internalCounters.push_back(58195);
        internalCounters.push_back(58421);
        internalCounters.push_back(58647);
        internalCounters.push_back(58873);
        internalCounters.push_back(59099);
        internalCounters.push_back(59325);
        internalCounters.push_back(59551);
        internalCounters.push_back(59777);
        internalCounters.push_back(60003);
        internalCounters.push_back(60229);
        internalCounters.push_back(60455);
        internalCounters.push_back(60681);
        internalCounters.push_back(60907);
        internalCounters.push_back(61133);
        internalCounters.push_back(61359);
        internalCounters.push_back(61585);
        internalCounters.push_back(61811);
        internalCounters.push_back(62037);
        internalCounters.push_back(62263);
        internalCounters.push_back(62489);
        internalCounters.push_back(62715);
        internalCounters.push_back(62941);
        internalCounters.push_back(63167);
        internalCounters.push_back(63393);
        internalCounters.push_back(63619);
        internalCounters.push_back(63845);
        internalCounters.push_back(64071);
        internalCounters.push_back(64297);
        internalCounters.push_back(64523);
        internalCounters.push_back(64749);
        internalCounters.push_back(64975);
        internalCounters.push_back(65201);
        internalCounters.push_back(65427);
        internalCounters.push_back(65653);
        internalCounters.push_back(65879);
        internalCounters.push_back(66105);
        internalCounters.push_back(66331);
        internalCounters.push_back(66557);
        internalCounters.push_back(66783);
        internalCounters.push_back(67009);
        internalCounters.push_back(67235);
        internalCounters.push_back(67461);
        internalCounters.push_back(67687);
        internalCounters.push_back(67913);
        internalCounters.push_back(68139);
        internalCounters.push_back(68365);
        internalCounters.push_back(68591);
        internalCounters.push_back(68817);
        internalCounters.push_back(69043);
        internalCounters.push_back(69269);
        internalCounters.push_back(69495);
        internalCounters.push_back(69721);
        internalCounters.push_back(69947);
        internalCounters.push_back(70173);
        internalCounters.push_back(70399);
        internalCounters.push_back(70625);
        internalCounters.push_back(70851);
        internalCounters.push_back(71077);
        internalCounters.push_back(71303);
        internalCounters.push_back(71529);
        internalCounters.push_back(71755);
        internalCounters.push_back(71981);
        internalCounters.push_back(72207);
        internalCounters.push_back(72433);
        internalCounters.push_back(72659);
        internalCounters.push_back(72885);
        internalCounters.push_back(73111);
        internalCounters.push_back(73337);
        internalCounters.push_back(73563);
        internalCounters.push_back(73789);
        internalCounters.push_back(74015);
        internalCounters.push_back(74241);
        internalCounters.push_back(74467);
        internalCounters.push_back(74693);
        internalCounters.push_back(74919);
        internalCounters.push_back(75145);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57290);
        internalCounters.push_back(57516);
        internalCounters.push_back(57742);
        internalCounters.push_back(57968);
        internalCounters.push_back(58194);
        internalCounters.push_back(58420);
        internalCounters.push_back(58646);
        internalCounters.push_back(58872);
        internalCounters.push_back(59098);
        internalCounters.push_back(59324);
        internalCounters.push_back(59550);
        internalCounters.push_back(59776);
        internalCounters.push_back(60002);
        internalCounters.push_back(60228);
        internalCounters.push_back(60454);
        internalCounters.push_back(60680);
        internalCounters.push_back(60906);
        internalCounters.push_back(61132);
        internalCounters.push_back(61358);
        internalCounters.push_back(61584);
        internalCounters.push_back(61810);
        internalCounters.push_back(62036);
        internalCounters.push_back(62262);
        internalCounters.push_back(62488);
        internalCounters.push_back(62714);
        internalCounters.push_back(62940);
        internalCounters.push_back(63166);
        internalCounters.push_back(63392);
        internalCounters.push_back(63618);
        internalCounters.push_back(63844);
        internalCounters.push_back(64070);
        internalCounters.push_back(64296);
        internalCounters.push_back(64522);
        internalCounters.push_back(64748);
        internalCounters.push_back(64974);
        internalCounters.push_back(65200);
        internalCounters.push_back(65426);
        internalCounters.push_back(65652);
        internalCounters.push_back(65878);
        internalCounters.push_back(66104);
        internalCounters.push_back(66330);
        internalCounters.push_back(66556);
        internalCounters.push_back(66782);
        internalCounters.push_back(67008);
        internalCounters.push_back(67234);
        internalCounters.push_back(67460);
        internalCounters.push_back(67686);
        internalCounters.push_back(67912);
        internalCounters.push_back(68138);
        internalCounters.push_back(68364);
        internalCounters.push_back(68590);
        internalCounters.push_back(68816);
        internalCounters.push_back(69042);
        internalCounters.push_back(69268);
        internalCounters.push_back(69494);
        internalCounters.push_back(69720);
        internalCounters.push_back(69946);
        internalCounters.push_back(70172);
        internalCounters.push_back(70398);
        internalCounters.push_back(70624);
        internalCounters.push_back(70850);
        internalCounters.push_back(71076);
        internalCounters.push_back(71302);
        internalCounters.push_back(71528);
        internalCounters.push_back(71754);
        internalCounters.push_back(71980);
        internalCounters.push_back(72206);
        internalCounters.push_back(72432);
        internalCounters.push_back(72658);
        internalCounters.push_back(72884);
        internalCounters.push_back(73110);
        internalCounters.push_back(73336);
        internalCounters.push_back(73562);
        internalCounters.push_back(73788);
        internalCounters.push_back(74014);
        internalCounters.push_back(74240);
        internalCounters.push_back(74466);
        internalCounters.push_back(74692);
        internalCounters.push_back(74918);
        internalCounters.push_back(75144);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57293);
        internalCounters.push_back(57519);
        internalCounters.push_back(57745);
        internalCounters.push_back(57971);
        internalCounters.push_back(58197);
        internalCounters.push_back(58423);
        internalCounters.push_back(58649);
        internalCounters.push_back(58875);
        internalCounters.push_back(59101);
        internalCounters.push_back(59327);
        internalCounters.push_back(59553);
        internalCounters.push_back(59779);
        internalCounters.push_back(60005);
        internalCounters.push_back(60231);
        internalCounters.push_back(60457);
        internalCounters.push_back(60683);
        internalCounters.push_back(60909);
        internalCounters.push_back(61135);
        internalCounters.push_back(61361);
        internalCounters.push_back(61587);
        internalCounters.push_back(61813);
        internalCounters.push_back(62039);
        internalCounters.push_back(62265);
        internalCounters.push_back(62491);
        internalCounters.push_back(62717);
        internalCounters.push_back(62943);
        internalCounters.push_back(63169);
        internalCounters.push_back(63395);
        internalCounters.push_back(63621);
        internalCounters.push_back(63847);
        internalCounters.push_back(64073);
        internalCounters.push_back(64299);
        internalCounters.push_back(64525);
        internalCounters.push_back(64751);
        internalCounters.push_back(64977);
        internalCounters.push_back(65203);
        internalCounters.push_back(65429);
        internalCounters.push_back(65655);
        internalCounters.push_back(65881);
        internalCounters.push_back(66107);
        internalCounters.push_back(66333);
        internalCounters.push_back(66559);
        internalCounters.push_back(66785);
        internalCounters.push_back(67011);
        internalCounters.push_back(67237);
        internalCounters.push_back(67463);
        internalCounters.push_back(67689);
        internalCounters.push_back(67915);
        internalCounters.push_back(68141);
        internalCounters.push_back(68367);
        internalCounters.push_back(68593);
        internalCounters.push_back(68819);
        internalCounters.push_back(69045);
        internalCounters.push_back(69271);
        internalCounters.push_back(69497);
        internalCounters.push_back(69723);
        internalCounters.push_back(69949);
        internalCounters.push_back(70175);
        internalCounters.push_back(70401);
        internalCounters.push_back(70627);
        internalCounters.push_back(70853);
        internalCounters.push_back(71079);
        internalCounters.push_back(71305);
        internalCounters.push_back(71531);
        internalCounters.push_back(71757);
        internalCounters.push_back(71983);
        internalCounters.push_back(72209);
        internalCounters.push_back(72435);
        internalCounters.push_back(72661);
        internalCounters.push_back(72887);
        internalCounters.push_back(73113);
        internalCounters.push_back(73339);
        internalCounters.push_back(73565);
        internalCounters.push_back(73791);
        internalCounters.push_back(74017);
        internalCounters.push_back(74243);
        internalCounters.push_back(74469);
        internalCounters.push_back(74695);
        internalCounters.push_back(74921);
        internalCounters.push_back(75147);
        internalCounters.push_back(57292);
        internalCounters.push_back(57518);
        internalCounters.push_back(57744);
        internalCounters.push_back(57970);
        internalCounters.push_back(58196);
        internalCounters.push_back(58422);
        internalCounters.push_back(58648);
        internalCounters.push_back(58874);
        internalCounters.push_back(59100);
        internalCounters.push_back(59326);
        internalCounters.push_back(59552);
        internalCounters.push_back(59778);
        internalCounters.push_back(60004);
        internalCounters.push_back(60230);
        internalCounters.push_back(60456);
        internalCounters.push_back(60682);
        internalCounters.push_back(60908);
        internalCounters.push_back(61134);
        internalCounters.push_back(61360);
        internalCounters.push_back(61586);
        internalCounters.push_back(61812);
        internalCounters.push_back(62038);
        internalCounters.push_back(62264);
        internalCounters.push_back(62490);
        internalCounters.push_back(62716);
        internalCounters.push_back(62942);
        internalCounters.push_back(63168);
        internalCounters.push_back(63394);
        internalCounters.push_back(63620);
        internalCounters.push_back(63846);
        internalCounters.push_back(64072);
        internalCounters.push_back(64298);
        internalCounters.push_back(64524);
        internalCounters.push_back(64750);
        internalCounters.push_back(64976);
        internalCounters.push_back(65202);
        internalCounters.push_back(65428);
        internalCounters.push_back(65654);
        internalCounters.push_back(65880);
        internalCounters.push_back(66106);
        internalCounters.push_back(66332);
        internalCounters.push_back(66558);
        internalCounters.push_back(66784);
        internalCounters.push_back(67010);
        internalCounters.push_back(67236);
        internalCounters.push_back(67462);
        internalCounters.push_back(67688);
        internalCounters.push_back(67914);
        internalCounters.push_back(68140);
        internalCounters.push_back(68366);
        internalCounters.push_back(68592);
        internalCounters.push_back(68818);
        internalCounters.push_back(69044);
        internalCounters.push_back(69270);
        internalCounters.push_back(69496);
        internalCounters.push_back(69722);
        internalCounters.push_back(69948);
        internalCounters.push_back(70174);
        internalCounters.push_back(70400);
        internalCounters.push_back(70626);
        internalCounters.push_back(70852);
        internalCounters.push_back(71078);
        internalCounters.push_back(71304);
        internalCounters.push_back(71530);
        internalCounters.push_back(71756);
        internalCounters.push_back(71982);
        internalCounters.push_back(72208);
        internalCounters.push_back(72434);
        internalCounters.push_back(72660);
        internalCounters.push_back(72886);
        internalCounters.push_back(73112);
        internalCounters.push_back(73338);
        internalCounters.push_back(73564);
        internalCounters.push_back(73790);
        internalCounters.push_back(74016);
        internalCounters.push_back(74242);
        internalCounters.push_back(74468);
        internalCounters.push_back(74694);
        internalCounters.push_back(74920);
        internalCounters.push_back(75146);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57293);
        internalCounters.push_back(57519);
        internalCounters.push_back(57745);
        internalCounters.push_back(57971);
        internalCounters.push_back(58197);
        internalCounters.push_back(58423);
        internalCounters.push_back(58649);
        internalCounters.push_back(58875);
        internalCounters.push_back(59101);
        internalCounters.push_back(59327);
        internalCounters.push_back(59553);
        internalCounters.push_back(59779);
        internalCounters.push_back(60005);
        internalCounters.push_back(60231);
        internalCounters.push_back(60457);
        internalCounters.push_back(60683);
        internalCounters.push_back(60909);
        internalCounters.push_back(61135);
        internalCounters.push_back(61361);
        internalCounters.push_back(61587);
        internalCounters.push_back(61813);
        internalCounters.push_back(62039);
        internalCounters.push_back(62265);
        internalCounters.push_back(62491);
        internalCounters.push_back(62717);
        internalCounters.push_back(62943);
        internalCounters.push_back(63169);
        internalCounters.push_back(63395);
        internalCounters.push_back(63621);
        internalCounters.push_back(63847);
        internalCounters.push_back(64073);
        internalCounters.push_back(64299);
        internalCounters.push_back(64525);
        internalCounters.push_back(64751);
        internalCounters.push_back(64977);
        internalCounters.push_back(65203);
        internalCounters.push_back(65429);
        internalCounters.push_back(65655);
        internalCounters.push_back(65881);
        internalCounters.push_back(66107);
        internalCounters.push_back(66333);
        internalCounters.push_back(66559);
        internalCounters.push_back(66785);
        internalCounters.push_back(67011);
        internalCounters.push_back(67237);
        internalCounters.push_back(67463);
        internalCounters.push_back(67689);
        internalCounters.push_back(67915);
        internalCounters.push_back(68141);
        internalCounters.push_back(68367);
        internalCounters.push_back(68593);
        internalCounters.push_back(68819);
        internalCounters.push_back(69045);
        internalCounters.push_back(69271);
        internalCounters.push_back(69497);
        internalCounters.push_back(69723);
        internalCounters.push_back(69949);
        internalCounters.push_back(70175);
        internalCounters.push_back(70401);
        internalCounters.push_back(70627);
        internalCounters.push_back(70853);
        internalCounters.push_back(71079);
        internalCounters.push_back(71305);
        internalCounters.push_back(71531);
        internalCounters.push_back(71757);
        internalCounters.push_back(71983);
        internalCounters.push_back(72209);
        internalCounters.push_back(72435);
        internalCounters.push_back(72661);
        internalCounters.push_back(72887);
        internalCounters.push_back(73113);
        internalCounters.push_back(73339);
        internalCounters.push_back(73565);
        internalCounters.push_back(73791);
        internalCounters.push_back(74017);
        internalCounters.push_back(74243);
        internalCounters.push_back(74469);
        internalCounters.push_back(74695);
        internalCounters.push_back(74921);
        internalCounters.push_back(75147);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57292);
        internalCounters.push_back(57518);
        internalCounters.push_back(57744);
        internalCounters.push_back(57970);
        internalCounters.push_back(58196);
        internalCounters.push_back(58422);
        internalCounters.push_back(58648);
        internalCounters.push_back(58874);
        internalCounters.push_back(59100);
        internalCounters.push_back(59326);
        internalCounters.push_back(59552);
        internalCounters.push_back(59778);
        internalCounters.push_back(60004);
        internalCounters.push_back(60230);
        internalCounters.push_back(60456);
        internalCounters.push_back(60682);
        internalCounters.push_back(60908);
        internalCounters.push_back(61134);
        internalCounters.push_back(61360);
        internalCounters.push_back(61586);
        internalCounters.push_back(61812);
        internalCounters.push_back(62038);
        internalCounters.push_back(62264);
        internalCounters.push_back(62490);
        internalCounters.push_back(62716);
        internalCounters.push_back(62942);
        internalCounters.push_back(63168);
        internalCounters.push_back(63394);
        internalCounters.push_back(63620);
        internalCounters.push_back(63846);
        internalCounters.push_back(64072);
        internalCounters.push_back(64298);
        internalCounters.push_back(64524);
        internalCounters.push_back(64750);
        internalCounters.push_back(64976);
        internalCounters.push_back(65202);
        internalCounters.push_back(65428);
        internalCounters.push_back(65654);
        internalCounters.push_back(65880);
        internalCounters.push_back(66106);
        internalCounters.push_back(66332);
        internalCounters.push_back(66558);
        internalCounters.push_back(66784);
        internalCounters.push_back(67010);
        internalCounters.push_back(67236);
        internalCounters.push_back(67462);
        internalCounters.push_back(67688);
        internalCounters.push_back(67914);
        internalCounters.push_back(68140);
        internalCounters.push_back(68366);
        internalCounters.push_back(68592);
        internalCounters.push_back(68818);
        internalCounters.push_back(69044);
        internalCounters.push_back(69270);
        internalCounters.push_back(69496);
        internalCounters.push_back(69722);
        internalCounters.push_back(69948);
        internalCounters.push_back(70174);
        internalCounters.push_back(70400);
        internalCounters.push_back(70626);
        internalCounters.push_back(70852);
        internalCounters.push_back(71078);
        internalCounters.push_back(71304);
        internalCounters.push_back(71530);
        internalCounters.push_back(71756);
        internalCounters.push_back(71982);
        internalCounters.push_back(72208);
        internalCounters.push_back(72434);
        internalCounters.push_back(72660);
        internalCounters.push_back(72886);
        internalCounters.push_back(73112);
        internalCounters.push_back(73338);
        internalCounters.push_back(73564);
        internalCounters.push_back(73790);
        internalCounters.push_back(74016);
        internalCounters.push_back(74242);
        internalCounters.push_back(74468);
        internalCounters.push_back(74694);
        internalCounters.push_back(74920);
        internalCounters.push_back(75146);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57311);
        internalCounters.push_back(57537);
        internalCounters.push_back(57763);
        internalCounters.push_back(57989);
        internalCounters.push_back(58215);
        internalCounters.push_back(58441);
        internalCounters.push_back(58667);
        internalCounters.push_back(58893);
        internalCounters.push_back(59119);
        internalCounters.push_back(59345);
        internalCounters.push_back(59571);
        internalCounters.push_back(59797);
        internalCounters.push_back(60023);
        internalCounters.push_back(60249);
        internalCounters.push_back(60475);
        internalCounters.push_back(60701);
        internalCounters.push_back(60927);
        internalCounters.push_back(61153);
        internalCounters.push_back(61379);
        internalCounters.push_back(61605);
        internalCounters.push_back(61831);
        internalCounters.push_back(62057);
        internalCounters.push_back(62283);
        internalCounters.push_back(62509);
        internalCounters.push_back(62735);
        internalCounters.push_back(62961);
        internalCounters.push_back(63187);
        internalCounters.push_back(63413);
        internalCounters.push_back(63639);
        internalCounters.push_back(63865);
        internalCounters.push_back(64091);
        internalCounters.push_back(64317);
        internalCounters.push_back(64543);
        internalCounters.push_back(64769);
        internalCounters.push_back(64995);
        internalCounters.push_back(65221);
        internalCounters.push_back(65447);
        internalCounters.push_back(65673);
        internalCounters.push_back(65899);
        internalCounters.push_back(66125);
        internalCounters.push_back(66351);
        internalCounters.push_back(66577);
        internalCounters.push_back(66803);
        internalCounters.push_back(67029);
        internalCounters.push_back(67255);
        internalCounters.push_back(67481);
        internalCounters.push_back(67707);
        internalCounters.push_back(67933);
        internalCounters.push_back(68159);
        internalCounters.push_back(68385);
        internalCounters.push_back(68611);
        internalCounters.push_back(68837);
        internalCounters.push_back(69063);
        internalCounters.push_back(69289);
        internalCounters.push_back(69515);
        internalCounters.push_back(69741);
        internalCounters.push_back(69967);
        internalCounters.push_back(70193);
        internalCounters.push_back(70419);
        internalCounters.push_back(70645);
        internalCounters.push_back(70871);
        internalCounters.push_back(71097);
        internalCounters.push_back(71323);
        internalCounters.push_back(71549);
        internalCounters.push_back(71775);
        internalCounters.push_back(72001);
        internalCounters.push_back(72227);
        internalCounters.push_back(72453);
        internalCounters.push_back(72679);
        internalCounters.push_back(72905);
        internalCounters.push_back(73131);
        internalCounters.push_back(73357);
        internalCounters.push_back(73583);
        internalCounters.push_back(73809);
        internalCounters.push_back(74035);
        internalCounters.push_back(74261);
        internalCounters.push_back(74487);
        internalCounters.push_back(74713);
        internalCounters.push_back(74939);
        internalCounters.push_back(75165);
        internalCounters.push_back(57312);
        internalCounters.push_back(57538);
        internalCounters.push_back(57764);
        internalCounters.push_back(57990);
        internalCounters.push_back(58216);
        internalCounters.push_back(58442);
        internalCounters.push_back(58668);
        internalCounters.push_back(58894);
        internalCounters.push_back(59120);
        internalCounters.push_back(59346);
        internalCounters.push_back(59572);
        internalCounters.push_back(59798);
        internalCounters.push_back(60024);
        internalCounters.push_back(60250);
        internalCounters.push_back(60476);
        internalCounters.push_back(60702);
        internalCounters.push_back(60928);
        internalCounters.push_back(61154);
        internalCounters.push_back(61380);
        internalCounters.push_back(61606);
        internalCounters.push_back(61832);
        internalCounters.push_back(62058);
        internalCounters.push_back(62284);
        internalCounters.push_back(62510);
        internalCounters.push_back(62736);
        internalCounters.push_back(62962);
        internalCounters.push_back(63188);
        internalCounters.push_back(63414);
        internalCounters.push_back(63640);
        internalCounters.push_back(63866);
        internalCounters.push_back(64092);
        internalCounters.push_back(64318);
        internalCounters.push_back(64544);
        internalCounters.push_back(64770);
        internalCounters.push_back(64996);
        internalCounters.push_back(65222);
        internalCounters.push_back(65448);
        internalCounters.push_back(65674);
        internalCounters.push_back(65900);
        internalCounters.push_back(66126);
        internalCounters.push_back(66352);
        internalCounters.push_back(66578);
        internalCounters.push_back(66804);
        internalCounters.push_back(67030);
        internalCounters.push_back(67256);
        internalCounters.push_back(67482);
        internalCounters.push_back(67708);
        internalCounters.push_back(67934);
        internalCounters.push_back(68160);
        internalCounters.push_back(68386);
        internalCounters.push_back(68612);
        internalCounters.push_back(68838);
        internalCounters.push_back(69064);
        internalCounters.push_back(69290);
        internalCounters.push_back(69516);
        internalCounters.push_back(69742);
        internalCounters.push_back(69968);
        internalCounters.push_back(70194);
        internalCounters.push_back(70420);
        internalCounters.push_back(70646);
        internalCounters.push_back(70872);
        internalCounters.push_back(71098);
        internalCounters.push_back(71324);
        internalCounters.push_back(71550);
        internalCounters.push_back(71776);
        internalCounters.push_back(72002);
        internalCounters.push_back(72228);
        internalCounters.push_back(72454);
        internalCounters.push_back(72680);
        internalCounters.push_back(72906);
        internalCounters.push_back(73132);
        internalCounters.push_back(73358);
        internalCounters.push_back(73584);
        internalCounters.push_back(73810);
        internalCounters.push_back(74036);
        internalCounters.push_back(74262);
        internalCounters.push_back(74488);
        internalCounters.push_back(74714);
        internalCounters.push_back(74940);
        internalCounters.push_back(75166);
        internalCounters.push_back(57313);
        internalCounters.push_back(57539);
        internalCounters.push_back(57765);
        internalCounters.push_back(57991);
        internalCounters.push_back(58217);
        internalCounters.push_back(58443);
        internalCounters.push_back(58669);
        internalCounters.push_back(58895);
        internalCounters.push_back(59121);
        internalCounters.push_back(59347);
        internalCounters.push_back(59573);
        internalCounters.push_back(59799);
        internalCounters.push_back(60025);
        internalCounters.push_back(60251);
        internalCounters.push_back(60477);
        internalCounters.push_back(60703);
        internalCounters.push_back(60929);
        internalCounters.push_back(61155);
        internalCounters.push_back(61381);
        internalCounters.push_back(61607);
        internalCounters.push_back(61833);
        internalCounters.push_back(62059);
        internalCounters.push_back(62285);
        internalCounters.push_back(62511);
        internalCounters.push_back(62737);
        internalCounters.push_back(62963);
        internalCounters.push_back(63189);
        internalCounters.push_back(63415);
        internalCounters.push_back(63641);
        internalCounters.push_back(63867);
        internalCounters.push_back(64093);
        internalCounters.push_back(64319);
        internalCounters.push_back(64545);
        internalCounters.push_back(64771);
        internalCounters.push_back(64997);
        internalCounters.push_back(65223);
        internalCounters.push_back(65449);
        internalCounters.push_back(65675);
        internalCounters.push_back(65901);
        internalCounters.push_back(66127);
        internalCounters.push_back(66353);
        internalCounters.push_back(66579);
        internalCounters.push_back(66805);
        internalCounters.push_back(67031);
        internalCounters.push_back(67257);
        internalCounters.push_back(67483);
        internalCounters.push_back(67709);
        internalCounters.push_back(67935);
        internalCounters.push_back(68161);
        internalCounters.push_back(68387);
        internalCounters.push_back(68613);
        internalCounters.push_back(68839);
        internalCounters.push_back(69065);
        internalCounters.push_back(69291);
        internalCounters.push_back(69517);
        internalCounters.push_back(69743);
        internalCounters.push_back(69969);
        internalCounters.push_back(70195);
        internalCounters.push_back(70421);
        internalCounters.push_back(70647);
        internalCounters.push_back(70873);
        internalCounters.push_back(71099);
        internalCounters.push_back(71325);
        internalCounters.push_back(71551);
        internalCounters.push_back(71777);
        internalCounters.push_back(72003);
        internalCounters.push_back(72229);
        internalCounters.push_back(72455);
        internalCounters.push_back(72681);
        internalCounters.push_back(72907);
        internalCounters.push_back(73133);
        internalCounters.push_back(73359);
        internalCounters.push_back(73585);
        internalCounters.push_back(73811);
        internalCounters.push_back(74037);
        internalCounters.push_back(74263);
        internalCounters.push_back(74489);
        internalCounters.push_back(74715);
        internalCounters.push_back(74941);
        internalCounters.push_back(75167);
        internalCounters.push_back(57314);
        internalCounters.push_back(57540);
        internalCounters.push_back(57766);
        internalCounters.push_back(57992);
        internalCounters.push_back(58218);
        internalCounters.push_back(58444);
        internalCounters.push_back(58670);
        internalCounters.push_back(58896);
        internalCounters.push_back(59122);
        internalCounters.push_back(59348);
        internalCounters.push_back(59574);
        internalCounters.push_back(59800);
        internalCounters.push_back(60026);
        internalCounters.push_back(60252);
        internalCounters.push_back(60478);
        internalCounters.push_back(60704);
        internalCounters.push_back(60930);
        internalCounters.push_back(61156);
        internalCounters.push_back(61382);
        internalCounters.push_back(61608);
        internalCounters.push_back(61834);
        internalCounters.push_back(62060);
        internalCounters.push_back(62286);
        internalCounters.push_back(62512);
        internalCounters.push_back(62738);
        internalCounters.push_back(62964);
        internalCounters.push_back(63190);
        internalCounters.push_back(63416);
        internalCounters.push_back(63642);
        internalCounters.push_back(63868);
        internalCounters.push_back(64094);
        internalCounters.push_back(64320);
        internalCounters.push_back(64546);
        internalCounters.push_back(64772);
        internalCounters.push_back(64998);
        internalCounters.push_back(65224);
        internalCounters.push_back(65450);
        internalCounters.push_back(65676);
        internalCounters.push_back(65902);
        internalCounters.push_back(66128);
        internalCounters.push_back(66354);
        internalCounters.push_back(66580);
        internalCounters.push_back(66806);
        internalCounters.push_back(67032);
        internalCounters.push_back(67258);
        internalCounters.push_back(67484);
        internalCounters.push_back(67710);
        internalCounters.push_back(67936);
        internalCounters.push_back(68162);
        internalCounters.push_back(68388);
        internalCounters.push_back(68614);
        internalCounters.push_back(68840);
        internalCounters.push_back(69066);
        internalCounters.push_back(69292);
        internalCounters.push_back(69518);
        internalCounters.push_back(69744);
        internalCounters.push_back(69970);
        internalCounters.push_back(70196);
        internalCounters.push_back(70422);
        internalCounters.push_back(70648);
        internalCounters.push_back(70874);
        internalCounters.push_back(71100);
        internalCounters.push_back(71326);
        internalCounters.push_back(71552);
        internalCounters.push_back(71778);
        internalCounters.push_back(72004);
        internalCounters.push_back(72230);
        internalCounters.push_back(72456);
        internalCounters.push_back(72682);
        internalCounters.push_back(72908);
        internalCounters.push_back(73134);
        internalCounters.push_back(73360);
        internalCounters.push_back(73586);
        internalCounters.push_back(73812);
        internalCounters.push_back(74038);
        internalCounters.push_back(74264);
        internalCounters.push_back(74490);
        internalCounters.push_back(74716);
        internalCounters.push_back(74942);
        internalCounters.push_back(75168);
        internalCounters.push_back(57315);
        internalCounters.push_back(57541);
        internalCounters.push_back(57767);
        internalCounters.push_back(57993);
        internalCounters.push_back(58219);
        internalCounters.push_back(58445);
        internalCounters.push_back(58671);
        internalCounters.push_back(58897);
        internalCounters.push_back(59123);
        internalCounters.push_back(59349);
        internalCounters.push_back(59575);
        internalCounters.push_back(59801);
        internalCounters.push_back(60027);
        internalCounters.push_back(60253);
        internalCounters.push_back(60479);
        internalCounters.push_back(60705);
        internalCounters.push_back(60931);
        internalCounters.push_back(61157);
        internalCounters.push_back(61383);
        internalCounters.push_back(61609);
        internalCounters.push_back(61835);
        internalCounters.push_back(62061);
        internalCounters.push_back(62287);
        internalCounters.push_back(62513);
        internalCounters.push_back(62739);
        internalCounters.push_back(62965);
        internalCounters.push_back(63191);
        internalCounters.push_back(63417);
        internalCounters.push_back(63643);
        internalCounters.push_back(63869);
        internalCounters.push_back(64095);
        internalCounters.push_back(64321);
        internalCounters.push_back(64547);
        internalCounters.push_back(64773);
        internalCounters.push_back(64999);
        internalCounters.push_back(65225);
        internalCounters.push_back(65451);
        internalCounters.push_back(65677);
        internalCounters.push_back(65903);
        internalCounters.push_back(66129);
        internalCounters.push_back(66355);
        internalCounters.push_back(66581);
        internalCounters.push_back(66807);
        internalCounters.push_back(67033);
        internalCounters.push_back(67259);
        internalCounters.push_back(67485);
        internalCounters.push_back(67711);
        internalCounters.push_back(67937);
        internalCounters.push_back(68163);
        internalCounters.push_back(68389);
        internalCounters.push_back(68615);
        internalCounters.push_back(68841);
        internalCounters.push_back(69067);
        internalCounters.push_back(69293);
        internalCounters.push_back(69519);
        internalCounters.push_back(69745);
        internalCounters.push_back(69971);
        internalCounters.push_back(70197);
        internalCounters.push_back(70423);
        internalCounters.push_back(70649);
        internalCounters.push_back(70875);
        internalCounters.push_back(71101);
        internalCounters.push_back(71327);
        internalCounters.push_back(71553);
        internalCounters.push_back(71779);
        internalCounters.push_back(72005);
        internalCounters.push_back(72231);
        internalCounters.push_back(72457);
        internalCounters.push_back(72683);
        internalCounters.push_back(72909);
        internalCounters.push_back(73135);
        internalCounters.push_back(73361);
        internalCounters.push_back(73587);
        internalCounters.push_back(73813);
        internalCounters.push_back(74039);
        internalCounters.push_back(74265);
        internalCounters.push_back(74491);
        internalCounters.push_back(74717);
        internalCounters.push_back(74943);
        internalCounters.push_back(75169);
        internalCounters.push_back(57316);
        internalCounters.push_back(57542);
        internalCounters.push_back(57768);
        internalCounters.push_back(57994);
        internalCounters.push_back(58220);
        internalCounters.push_back(58446);
        internalCounters.push_back(58672);
        internalCounters.push_back(58898);
        internalCounters.push_back(59124);
        internalCounters.push_back(59350);
        internalCounters.push_back(59576);
        internalCounters.push_back(59802);
        internalCounters.push_back(60028);
        internalCounters.push_back(60254);
        internalCounters.push_back(60480);
        internalCounters.push_back(60706);
        internalCounters.push_back(60932);
        internalCounters.push_back(61158);
        internalCounters.push_back(61384);
        internalCounters.push_back(61610);
        internalCounters.push_back(61836);
        internalCounters.push_back(62062);
        internalCounters.push_back(62288);
        internalCounters.push_back(62514);
        internalCounters.push_back(62740);
        internalCounters.push_back(62966);
        internalCounters.push_back(63192);
        internalCounters.push_back(63418);
        internalCounters.push_back(63644);
        internalCounters.push_back(63870);
        internalCounters.push_back(64096);
        internalCounters.push_back(64322);
        internalCounters.push_back(64548);
        internalCounters.push_back(64774);
        internalCounters.push_back(65000);
        internalCounters.push_back(65226);
        internalCounters.push_back(65452);
        internalCounters.push_back(65678);
        internalCounters.push_back(65904);
        internalCounters.push_back(66130);
        internalCounters.push_back(66356);
        internalCounters.push_back(66582);
        internalCounters.push_back(66808);
        internalCounters.push_back(67034);
        internalCounters.push_back(67260);
        internalCounters.push_back(67486);
        internalCounters.push_back(67712);
        internalCounters.push_back(67938);
        internalCounters.push_back(68164);
        internalCounters.push_back(68390);
        internalCounters.push_back(68616);
        internalCounters.push_back(68842);
        internalCounters.push_back(69068);
        internalCounters.push_back(69294);
        internalCounters.push_back(69520);
        internalCounters.push_back(69746);
        internalCounters.push_back(69972);
        internalCounters.push_back(70198);
        internalCounters.push_back(70424);
        internalCounters.push_back(70650);
        internalCounters.push_back(70876);
        internalCounters.push_back(71102);
        internalCounters.push_back(71328);
        internalCounters.push_back(71554);
        internalCounters.push_back(71780);
        internalCounters.push_back(72006);
        internalCounters.push_back(72232);
        internalCounters.push_back(72458);
        internalCounters.push_back(72684);
        internalCounters.push_back(72910);
        internalCounters.push_back(73136);
        internalCounters.push_back(73362);
        internalCounters.push_back(73588);
        internalCounters.push_back(73814);
        internalCounters.push_back(74040);
        internalCounters.push_back(74266);
        internalCounters.push_back(74492);
        internalCounters.push_back(74718);
        internalCounters.push_back(74944);
        internalCounters.push_back(75170);
        internalCounters.push_back(57317);
        internalCounters.push_back(57543);
        internalCounters.push_back(57769);
        internalCounters.push_back(57995);
        internalCounters.push_back(58221);
        internalCounters.push_back(58447);
        internalCounters.push_back(58673);
        internalCounters.push_back(58899);
        internalCounters.push_back(59125);
        internalCounters.push_back(59351);
        internalCounters.push_back(59577);
        internalCounters.push_back(59803);
        internalCounters.push_back(60029);
        internalCounters.push_back(60255);
        internalCounters.push_back(60481);
        internalCounters.push_back(60707);
        internalCounters.push_back(60933);
        internalCounters.push_back(61159);
        internalCounters.push_back(61385);
        internalCounters.push_back(61611);
        internalCounters.push_back(61837);
        internalCounters.push_back(62063);
        internalCounters.push_back(62289);
        internalCounters.push_back(62515);
        internalCounters.push_back(62741);
        internalCounters.push_back(62967);
        internalCounters.push_back(63193);
        internalCounters.push_back(63419);
        internalCounters.push_back(63645);
        internalCounters.push_back(63871);
        internalCounters.push_back(64097);
        internalCounters.push_back(64323);
        internalCounters.push_back(64549);
        internalCounters.push_back(64775);
        internalCounters.push_back(65001);
        internalCounters.push_back(65227);
        internalCounters.push_back(65453);
        internalCounters.push_back(65679);
        internalCounters.push_back(65905);
        internalCounters.push_back(66131);
        internalCounters.push_back(66357);
        internalCounters.push_back(66583);
        internalCounters.push_back(66809);
        internalCounters.push_back(67035);
        internalCounters.push_back(67261);
        internalCounters.push_back(67487);
        internalCounters.push_back(67713);
        internalCounters.push_back(67939);
        internalCounters.push_back(68165);
        internalCounters.push_back(68391);
        internalCounters.push_back(68617);
        internalCounters.push_back(68843);
        internalCounters.push_back(69069);
        internalCounters.push_back(69295);
        internalCounters.push_back(69521);
        internalCounters.push_back(69747);
        internalCounters.push_back(69973);
        internalCounters.push_back(70199);
        internalCounters.push_back(70425);
        internalCounters.push_back(70651);
        internalCounters.push_back(70877);
        internalCounters.push_back(71103);
        internalCounters.push_back(71329);
        internalCounters.push_back(71555);
        internalCounters.push_back(71781);
        internalCounters.push_back(72007);
        internalCounters.push_back(72233);
        internalCounters.push_back(72459);
        internalCounters.push_back(72685);
        internalCounters.push_back(72911);
        internalCounters.push_back(73137);
        internalCounters.push_back(73363);
        internalCounters.push_back(73589);
        internalCounters.push_back(73815);
        internalCounters.push_back(74041);
        internalCounters.push_back(74267);
        internalCounters.push_back(74493);
        internalCounters.push_back(74719);
        internalCounters.push_back(74945);
        internalCounters.push_back(75171);
        internalCounters.push_back(57318);
        internalCounters.push_back(57544);
        internalCounters.push_back(57770);
        internalCounters.push_back(57996);
        internalCounters.push_back(58222);
        internalCounters.push_back(58448);
        internalCounters.push_back(58674);
        internalCounters.push_back(58900);
        internalCounters.push_back(59126);
        internalCounters.push_back(59352);
        internalCounters.push_back(59578);
        internalCounters.push_back(59804);
        internalCounters.push_back(60030);
        internalCounters.push_back(60256);
        internalCounters.push_back(60482);
        internalCounters.push_back(60708);
        internalCounters.push_back(60934);
        internalCounters.push_back(61160);
        internalCounters.push_back(61386);
        internalCounters.push_back(61612);
        internalCounters.push_back(61838);
        internalCounters.push_back(62064);
        internalCounters.push_back(62290);
        internalCounters.push_back(62516);
        internalCounters.push_back(62742);
        internalCounters.push_back(62968);
        internalCounters.push_back(63194);
        internalCounters.push_back(63420);
        internalCounters.push_back(63646);
        internalCounters.push_back(63872);
        internalCounters.push_back(64098);
        internalCounters.push_back(64324);
        internalCounters.push_back(64550);
        internalCounters.push_back(64776);
        internalCounters.push_back(65002);
        internalCounters.push_back(65228);
        internalCounters.push_back(65454);
        internalCounters.push_back(65680);
        internalCounters.push_back(65906);
        internalCounters.push_back(66132);
        internalCounters.push_back(66358);
        internalCounters.push_back(66584);
        internalCounters.push_back(66810);
        internalCounters.push_back(67036);
        internalCounters.push_back(67262);
        internalCounters.push_back(67488);
        internalCounters.push_back(67714);
        internalCounters.push_back(67940);
        internalCounters.push_back(68166);
        internalCounters.push_back(68392);
        internalCounters.push_back(68618);
        internalCounters.push_back(68844);
        internalCounters.push_back(69070);
        internalCounters.push_back(69296);
        internalCounters.push_back(69522);
        internalCounters.push_back(69748);
        internalCounters.push_back(69974);
        internalCounters.push_back(70200);
        internalCounters.push_back(70426);
        internalCounters.push_back(70652);
        internalCounters.push_back(70878);
        internalCounters.push_back(71104);
        internalCounters.push_back(71330);
        internalCounters.push_back(71556);
        internalCounters.push_back(71782);
        internalCounters.push_back(72008);
        internalCounters.push_back(72234);
        internalCounters.push_back(72460);
        internalCounters.push_back(72686);
        internalCounters.push_back(72912);
        internalCounters.push_back(73138);
        internalCounters.push_back(73364);
        internalCounters.push_back(73590);
        internalCounters.push_back(73816);
        internalCounters.push_back(74042);
        internalCounters.push_back(74268);
        internalCounters.push_back(74494);
        internalCounters.push_back(74720);
        internalCounters.push_back(74946);
        internalCounters.push_back(75172);
        internalCounters.push_back(57319);
        internalCounters.push_back(57545);
        internalCounters.push_back(57771);
        internalCounters.push_back(57997);
        internalCounters.push_back(58223);
        internalCounters.push_back(58449);
        internalCounters.push_back(58675);
        internalCounters.push_back(58901);
        internalCounters.push_back(59127);
        internalCounters.push_back(59353);
        internalCounters.push_back(59579);
        internalCounters.push_back(59805);
        internalCounters.push_back(60031);
        internalCounters.push_back(60257);
        internalCounters.push_back(60483);
        internalCounters.push_back(60709);
        internalCounters.push_back(60935);
        internalCounters.push_back(61161);
        internalCounters.push_back(61387);
        internalCounters.push_back(61613);
        internalCounters.push_back(61839);
        internalCounters.push_back(62065);
        internalCounters.push_back(62291);
        internalCounters.push_back(62517);
        internalCounters.push_back(62743);
        internalCounters.push_back(62969);
        internalCounters.push_back(63195);
        internalCounters.push_back(63421);
        internalCounters.push_back(63647);
        internalCounters.push_back(63873);
        internalCounters.push_back(64099);
        internalCounters.push_back(64325);
        internalCounters.push_back(64551);
        internalCounters.push_back(64777);
        internalCounters.push_back(65003);
        internalCounters.push_back(65229);
        internalCounters.push_back(65455);
        internalCounters.push_back(65681);
        internalCounters.push_back(65907);
        internalCounters.push_back(66133);
        internalCounters.push_back(66359);
        internalCounters.push_back(66585);
        internalCounters.push_back(66811);
        internalCounters.push_back(67037);
        internalCounters.push_back(67263);
        internalCounters.push_back(67489);
        internalCounters.push_back(67715);
        internalCounters.push_back(67941);
        internalCounters.push_back(68167);
        internalCounters.push_back(68393);
        internalCounters.push_back(68619);
        internalCounters.push_back(68845);
        internalCounters.push_back(69071);
        internalCounters.push_back(69297);
        internalCounters.push_back(69523);
        internalCounters.push_back(69749);
        internalCounters.push_back(69975);
        internalCounters.push_back(70201);
        internalCounters.push_back(70427);
        internalCounters.push_back(70653);
        internalCounters.push_back(70879);
        internalCounters.push_back(71105);
        internalCounters.push_back(71331);
        internalCounters.push_back(71557);
        internalCounters.push_back(71783);
        internalCounters.push_back(72009);
        internalCounters.push_back(72235);
        internalCounters.push_back(72461);
        internalCounters.push_back(72687);
        internalCounters.push_back(72913);
        internalCounters.push_back(73139);
        internalCounters.push_back(73365);
        internalCounters.push_back(73591);
        internalCounters.push_back(73817);
        internalCounters.push_back(74043);
        internalCounters.push_back(74269);
        internalCounters.push_back(74495);
        internalCounters.push_back(74721);
        internalCounters.push_back(74947);
        internalCounters.push_back(75173);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,(2),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,*,+,(4),160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,*,+,(6),240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,*,+,(8),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,*,+,(10),400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,*,+,(12),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,*,+,(14),560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,*,+,(16),640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,+,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,+,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,+,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,+,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,+,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14936);
        internalCounters.push_back(15306);
        internalCounters.push_back(15676);
        internalCounters.push_back(16046);
        internalCounters.push_back(16416);
        internalCounters.push_back(16786);
        internalCounters.push_back(17156);
        internalCounters.push_back(17526);
        internalCounters.push_back(17896);
        internalCounters.push_back(18266);
        internalCounters.push_back(18636);
        internalCounters.push_back(19006);
        internalCounters.push_back(19376);
        internalCounters.push_back(19746);
        internalCounters.push_back(20116);
        internalCounters.push_back(20486);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14936);
        internalCounters.push_back(15306);
        internalCounters.push_back(15676);
        internalCounters.push_back(16046);
        internalCounters.push_back(16416);
        internalCounters.push_back(16786);
        internalCounters.push_back(17156);
        internalCounters.push_back(17526);
        internalCounters.push_back(17896);
        internalCounters.push_back(18266);
        internalCounters.push_back(18636);
        internalCounters.push_back(19006);
        internalCounters.push_back(19376);
        internalCounters.push_back(19746);
        internalCounters.push_back(20116);
        internalCounters.push_back(20486);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14807);
        internalCounters.push_back(15177);
        internalCounters.push_back(15547);
        internalCounters.push_back(15917);
        internalCounters.push_back(16287);
        internalCounters.push_back(16657);
        internalCounters.push_back(17027);
        internalCounters.push_back(17397);
        internalCounters.push_back(17767);
        internalCounters.push_back(18137);
        internalCounters.push_back(18507);
        internalCounters.push_back(18877);
        internalCounters.push_back(19247);
        internalCounters.push_back(19617);
        internalCounters.push_back(19987);
        internalCounters.push_back(20357);
        internalCounters.push_back(14796);
        internalCounters.push_back(15166);
        internalCounters.push_back(15536);
        internalCounters.push_back(15906);
        internalCounters.push_back(16276);
        internalCounters.push_back(16646);
        internalCounters.push_back(17016);
        internalCounters.push_back(17386);
        internalCounters.push_back(17756);
        internalCounters.push_back(18126);
        internalCounters.push_back(18496);
        internalCounters.push_back(18866);
        internalCounters.push_back(19236);
        internalCounters.push_back(19606);
        internalCounters.push_back(19976);
        internalCounters.push_back(20346);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14807);
        internalCounters.push_back(15177);
        internalCounters.push_back(15547);
        internalCounters.push_back(15917);
        internalCounters.push_back(16287);
        internalCounters.push_back(16657);
        internalCounters.push_back(17027);
        internalCounters.push_back(17397);
        internalCounters.push_back(17767);
        internalCounters.push_back(18137);
        internalCounters.push_back(18507);
        internalCounters.push_back(18877);
        internalCounters.push_back(19247);
        internalCounters.push_back(19617);
        internalCounters.push_back(19987);
        internalCounters.push_back(20357);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14796);
        internalCounters.push_back(15166);
        internalCounters.push_back(15536);
        internalCounters.push_back(15906);
        internalCounters.push_back(16276);
        internalCounters.push_back(16646);
        internalCounters.push_back(17016);
        internalCounters.push_back(17386);
        internalCounters.push_back(17756);
        internalCounters.push_back(18126);
        internalCounters.push_back(18496);
        internalCounters.push_back(18866);
        internalCounters.push_back(19236);
        internalCounters.push_back(19606);
        internalCounters.push_back(19976);
        internalCounters.push_back(20346);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14796);
        internalCounters.push_back(15166);
        internalCounters.push_back(15536);
        internalCounters.push_back(15906);
        internalCounters.push_back(16276);
        internalCounters.push_back(16646);
        internalCounters.push_back(17016);
        internalCounters.push_back(17386);
        internalCounters.push_back(17756);
        internalCounters.push_back(18126);
        internalCounters.push_back(18496);
        internalCounters.push_back(18866);
        internalCounters.push_back(19236);
        internalCounters.push_back(19606);
        internalCounters.push_back(19976);
        internalCounters.push_back(20346);
        internalCounters.push_back(14820);
        internalCounters.push_back(15190);
        internalCounters.push_back(15560);
        internalCounters.push_back(15930);
        internalCounters.push_back(16300);
        internalCounters.push_back(16670);
        internalCounters.push_back(17040);
        internalCounters.push_back(17410);
        internalCounters.push_back(17780);
        internalCounters.push_back(18150);
        internalCounters.push_back(18520);
        internalCounters.push_back(18890);
        internalCounters.push_back(19260);
        internalCounters.push_back(19630);
        internalCounters.push_back(20000);
        internalCounters.push_back(20370);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14820);
        internalCounters.push_back(15190);
        internalCounters.push_back(15560);
        internalCounters.push_back(15930);
        internalCounters.push_back(16300);
        internalCounters.push_back(16670);
        internalCounters.push_back(17040);
        internalCounters.push_back(17410);
        internalCounters.push_back(17780);
        internalCounters.push_back(18150);
        internalCounters.push_back(18520);
        internalCounters.push_back(18890);
        internalCounters.push_back(19260);
        internalCounters.push_back(19630);
        internalCounters.push_back(20000);
        internalCounters.push_back(20370);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14796);
        internalCounters.push_back(15166);
        internalCounters.push_back(15536);
        internalCounters.push_back(15906);
        internalCounters.push_back(16276);
        internalCounters.push_back(16646);
        internalCounters.push_back(17016);
        internalCounters.push_back(17386);
        internalCounters.push_back(17756);
        internalCounters.push_back(18126);
        internalCounters.push_back(18496);
        internalCounters.push_back(18866);
        internalCounters.push_back(19236);
        internalCounters.push_back(19606);
        internalCounters.push_back(19976);
        internalCounters.push_back(20346);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29049);
        internalCounters.push_back(29601);
        internalCounters.push_back(30153);
        internalCounters.push_back(30705);
        internalCounters.push_back(29050);
        internalCounters.push_back(29602);
        internalCounters.push_back(30154);
        internalCounters.push_back(30706);
        internalCounters.push_back(29051);
        internalCounters.push_back(29603);
        internalCounters.push_back(30155);
        internalCounters.push_back(30707);
        internalCounters.push_back(29052);
        internalCounters.push_back(29604);
        internalCounters.push_back(30156);
        internalCounters.push_back(30708);
        internalCounters.push_back(29125);
        internalCounters.push_back(29677);
        internalCounters.push_back(30229);
        internalCounters.push_back(30781);
        internalCounters.push_back(29126);
        internalCounters.push_back(29678);
        internalCounters.push_back(30230);
        internalCounters.push_back(30782);
        internalCounters.push_back(29127);
        internalCounters.push_back(29679);
        internalCounters.push_back(30231);
        internalCounters.push_back(30783);
        internalCounters.push_back(29128);
        internalCounters.push_back(29680);
        internalCounters.push_back(30232);
        internalCounters.push_back(30784);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29049);
        internalCounters.push_back(29601);
        internalCounters.push_back(30153);
        internalCounters.push_back(30705);
        internalCounters.push_back(29050);
        internalCounters.push_back(29602);
        internalCounters.push_back(30154);
        internalCounters.push_back(30706);
        internalCounters.push_back(29051);
        internalCounters.push_back(29603);
        internalCounters.push_back(30155);
        internalCounters.push_back(30707);
        internalCounters.push_back(29052);
        internalCounters.push_back(29604);
        internalCounters.push_back(30156);
        internalCounters.push_back(30708);
        internalCounters.push_back(29125);
        internalCounters.push_back(29677);
        internalCounters.push_back(30229);
        internalCounters.push_back(30781);
        internalCounters.push_back(29126);
        internalCounters.push_back(29678);
        internalCounters.push_back(30230);
        internalCounters.push_back(30782);
        internalCounters.push_back(29127);
        internalCounters.push_back(29679);
        internalCounters.push_back(30231);
        internalCounters.push_back(30783);
        internalCounters.push_back(29128);
        internalCounters.push_back(29680);
        internalCounters.push_back(30232);
        internalCounters.push_back(30784);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29125);
        internalCounters.push_back(29677);
        internalCounters.push_back(30229);
        internalCounters.push_back(30781);
        internalCounters.push_back(29126);
        internalCounters.push_back(29678);
        internalCounters.push_back(30230);
        internalCounters.push_back(30782);
        internalCounters.push_back(29127);
        internalCounters.push_back(29679);
        internalCounters.push_back(30231);
        internalCounters.push_back(30783);
        internalCounters.push_back(29128);
        internalCounters.push_back(29680);
        internalCounters.push_back(30232);
        internalCounters.push_back(30784);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29049);
        internalCounters.push_back(29601);
        internalCounters.push_back(30153);
        internalCounters.push_back(30705);
        internalCounters.push_back(29050);
        internalCounters.push_back(29602);
        internalCounters.push_back(30154);
        internalCounters.push_back(30706);
        internalCounters.push_back(29051);
        internalCounters.push_back(29603);
        internalCounters.push_back(30155);
        internalCounters.push_back(30707);
        internalCounters.push_back(29052);
        internalCounters.push_back(29604);
        internalCounters.push_back(30156);
        internalCounters.push_back(30708);
        internalCounters.push_back(29149);
        internalCounters.push_back(29701);
        internalCounters.push_back(30253);
        internalCounters.push_back(30805);
        internalCounters.push_back(29125);
        internalCounters.push_back(29677);
        internalCounters.push_back(30229);
        internalCounters.push_back(30781);
        internalCounters.push_back(29126);
        internalCounters.push_back(29678);
        internalCounters.push_back(30230);
        internalCounters.push_back(30782);
        internalCounters.push_back(29127);
        internalCounters.push_back(29679);
        internalCounters.push_back(30231);
        internalCounters.push_back(30783);
        internalCounters.push_back(29128);
        internalCounters.push_back(29680);
        internalCounters.push_back(30232);
        internalCounters.push_back(30784);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,16,17,18,19,sum4,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29049);
        internalCounters.push_back(29601);
        internalCounters.push_back(30153);
        internalCounters.push_back(30705);
        internalCounters.push_back(29050);
        internalCounters.push_back(29602);
        internalCounters.push_back(30154);
        internalCounters.push_back(30706);
        internalCounters.push_back(29051);
        internalCounters.push_back(29603);
        internalCounters.push_back(30155);
        internalCounters.push_back(30707);
        internalCounters.push_back(29052);
        internalCounters.push_back(29604);
        internalCounters.push_back(30156);
        internalCounters.push_back(30708);
        internalCounters.push_back(29149);
        internalCounters.push_back(29701);
        internalCounters.push_back(30253);
        internalCounters.push_back(30805);
        internalCounters.push_back(29125);
        internalCounters.push_back(29677);
        internalCounters.push_back(30229);
        internalCounters.push_back(30781);
        internalCounters.push_back(29126);
        internalCounters.push_back(29678);
        internalCounters.push_back(30230);
        internalCounters.push_back(30782);
        internalCounters.push_back(29127);
        internalCounters.push_back(29679);
        internalCounters.push_back(30231);
        internalCounters.push_back(30783);
        internalCounters.push_back(29128);
        internalCounters.push_back(29680);
        internalCounters.push_back(30232);
        internalCounters.push_back(30784);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,sum4,-,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29149);
        internalCounters.push_back(29701);
        internalCounters.push_back(30253);
        internalCounters.push_back(30805);
        internalCounters.push_back(29125);
        internalCounters.push_back(29677);
        internalCounters.push_back(30229);
        internalCounters.push_back(30781);
        internalCounters.push_back(29126);
        internalCounters.push_back(29678);
        internalCounters.push_back(30230);
        internalCounters.push_back(30782);
        internalCounters.push_back(29127);
        internalCounters.push_back(29679);
        internalCounters.push_back(30231);
        internalCounters.push_back(30783);
        internalCounters.push_back(29128);
        internalCounters.push_back(29680);
        internalCounters.push_back(30232);
        internalCounters.push_back(30784);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,0,1,2,3,sum4,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29149);
        internalCounters.push_back(29701);
        internalCounters.push_back(30253);
        internalCounters.push_back(30805);
        internalCounters.push_back(29049);
        internalCounters.push_back(29601);
        internalCounters.push_back(30153);
        internalCounters.push_back(30705);
        internalCounters.push_back(29050);
        internalCounters.push_back(29602);
        internalCounters.push_back(30154);
        internalCounters.push_back(30706);
        internalCounters.push_back(29051);
        internalCounters.push_back(29603);
        internalCounters.push_back(30155);
        internalCounters.push_back(30707);
        internalCounters.push_back(29052);
        internalCounters.push_back(29604);
        internalCounters.push_back(30156);
        internalCounters.push_back(30708);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29149);
        internalCounters.push_back(29701);
        internalCounters.push_back(30253);
        internalCounters.push_back(30805);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14969);
        internalCounters.push_back(15339);
        internalCounters.push_back(15709);
        internalCounters.push_back(16079);
        internalCounters.push_back(16449);
        internalCounters.push_back(16819);
        internalCounters.push_back(17189);
        internalCounters.push_back(17559);
        internalCounters.push_back(17929);
        internalCounters.push_back(18299);
        internalCounters.push_back(18669);
        internalCounters.push_back(19039);
        internalCounters.push_back(19409);
        internalCounters.push_back(19779);
        internalCounters.push_back(20149);
        internalCounters.push_back(20519);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14971);
        internalCounters.push_back(15341);
        internalCounters.push_back(15711);
        internalCounters.push_back(16081);
        internalCounters.push_back(16451);
        internalCounters.push_back(16821);
        internalCounters.push_back(17191);
        internalCounters.push_back(17561);
        internalCounters.push_back(17931);
        internalCounters.push_back(18301);
        internalCounters.push_back(18671);
        internalCounters.push_back(19041);
        internalCounters.push_back(19411);
        internalCounters.push_back(19781);
        internalCounters.push_back(20151);
        internalCounters.push_back(20521);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14970);
        internalCounters.push_back(15340);
        internalCounters.push_back(15710);
        internalCounters.push_back(16080);
        internalCounters.push_back(16450);
        internalCounters.push_back(16820);
        internalCounters.push_back(17190);
        internalCounters.push_back(17560);
        internalCounters.push_back(17930);
        internalCounters.push_back(18300);
        internalCounters.push_back(18670);
        internalCounters.push_back(19040);
        internalCounters.push_back(19410);
        internalCounters.push_back(19780);
        internalCounters.push_back(20150);
        internalCounters.push_back(20520);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14966);
        internalCounters.push_back(15336);
        internalCounters.push_back(15706);
        internalCounters.push_back(16076);
        internalCounters.push_back(16446);
        internalCounters.push_back(16816);
        internalCounters.push_back(17186);
        internalCounters.push_back(17556);
        internalCounters.push_back(17926);
        internalCounters.push_back(18296);
        internalCounters.push_back(18666);
        internalCounters.push_back(19036);
        internalCounters.push_back(19406);
        internalCounters.push_back(19776);
        internalCounters.push_back(20146);
        internalCounters.push_back(20516);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14968);
        internalCounters.push_back(15338);
        internalCounters.push_back(15708);
        internalCounters.push_back(16078);
        internalCounters.push_back(16448);
        internalCounters.push_back(16818);
        internalCounters.push_back(17188);
        internalCounters.push_back(17558);
        internalCounters.push_back(17928);
        internalCounters.push_back(18298);
        internalCounters.push_back(18668);
        internalCounters.push_back(19038);
        internalCounters.push_back(19408);
        internalCounters.push_back(19778);
        internalCounters.push_back(20148);
        internalCounters.push_back(20518);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14967);
        internalCounters.push_back(15337);
        internalCounters.push_back(15707);
        internalCounters.push_back(16077);
        internalCounters.push_back(16447);
        internalCounters.push_back(16817);
        internalCounters.push_back(17187);
        internalCounters.push_back(17557);
        internalCounters.push_back(17927);
        internalCounters.push_back(18297);
        internalCounters.push_back(18667);
        internalCounters.push_back(19037);
        internalCounters.push_back(19407);
        internalCounters.push_back(19777);
        internalCounters.push_back(20147);
        internalCounters.push_back(20517);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14838);
        internalCounters.push_back(15208);
        internalCounters.push_back(15578);
        internalCounters.push_back(15948);
        internalCounters.push_back(16318);
        internalCounters.push_back(16688);
        internalCounters.push_back(17058);
        internalCounters.push_back(17428);
        internalCounters.push_back(17798);
        internalCounters.push_back(18168);
        internalCounters.push_back(18538);
        internalCounters.push_back(18908);
        internalCounters.push_back(19278);
        internalCounters.push_back(19648);
        internalCounters.push_back(20018);
        internalCounters.push_back(20388);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14838);
        internalCounters.push_back(15208);
        internalCounters.push_back(15578);
        internalCounters.push_back(15948);
        internalCounters.push_back(16318);
        internalCounters.push_back(16688);
        internalCounters.push_back(17058);
        internalCounters.push_back(17428);
        internalCounters.push_back(17798);
        internalCounters.push_back(18168);
        internalCounters.push_back(18538);
        internalCounters.push_back(18908);
        internalCounters.push_back(19278);
        internalCounters.push_back(19648);
        internalCounters.push_back(20018);
        internalCounters.push_back(20388);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14840);
        internalCounters.push_back(15210);
        internalCounters.push_back(15580);
        internalCounters.push_back(15950);
        internalCounters.push_back(16320);
        internalCounters.push_back(16690);
        internalCounters.push_back(17060);
        internalCounters.push_back(17430);
        internalCounters.push_back(17800);
        internalCounters.push_back(18170);
        internalCounters.push_back(18540);
        internalCounters.push_back(18910);
        internalCounters.push_back(19280);
        internalCounters.push_back(19650);
        internalCounters.push_back(20020);
        internalCounters.push_back(20390);
        internalCounters.push_back(14847);
        internalCounters.push_back(15217);
        internalCounters.push_back(15587);
        internalCounters.push_back(15957);
        internalCounters.push_back(16327);
        internalCounters.push_back(16697);
        internalCounters.push_back(17067);
        internalCounters.push_back(17437);
        internalCounters.push_back(17807);
        internalCounters.push_back(18177);
        internalCounters.push_back(18547);
        internalCounters.push_back(18917);
        internalCounters.push_back(19287);
        internalCounters.push_back(19657);
        internalCounters.push_back(20027);
        internalCounters.push_back(20397);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14852);
        internalCounters.push_back(15222);
        internalCounters.push_back(15592);
        internalCounters.push_back(15962);
        internalCounters.push_back(16332);
        internalCounters.push_back(16702);
        internalCounters.push_back(17072);
        internalCounters.push_back(17442);
        internalCounters.push_back(17812);
        internalCounters.push_back(18182);
        internalCounters.push_back(18552);
        internalCounters.push_back(18922);
        internalCounters.push_back(19292);
        internalCounters.push_back(19662);
        internalCounters.push_back(20032);
        internalCounters.push_back(20402);
        internalCounters.push_back(14855);
        internalCounters.push_back(15225);
        internalCounters.push_back(15595);
        internalCounters.push_back(15965);
        internalCounters.push_back(16335);
        internalCounters.push_back(16705);
        internalCounters.push_back(17075);
        internalCounters.push_back(17445);
        internalCounters.push_back(17815);
        internalCounters.push_back(18185);
        internalCounters.push_back(18555);
        internalCounters.push_back(18925);
        internalCounters.push_back(19295);
        internalCounters.push_back(19665);
        internalCounters.push_back(20035);
        internalCounters.push_back(20405);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(168);
        internalCounters.push_back(629);
        internalCounters.push_back(1090);
        internalCounters.push_back(1551);
        internalCounters.push_back(2012);
        internalCounters.push_back(2473);
        internalCounters.push_back(2934);
        internalCounters.push_back(3395);
        internalCounters.push_back(3856);
        internalCounters.push_back(4317);
        internalCounters.push_back(4778);
        internalCounters.push_back(5239);
        internalCounters.push_back(5700);
        internalCounters.push_back(6161);
        internalCounters.push_back(6622);
        internalCounters.push_back(7083);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(299);
        internalCounters.push_back(760);
        internalCounters.push_back(1221);
        internalCounters.push_back(1682);
        internalCounters.push_back(2143);
        internalCounters.push_back(2604);
        internalCounters.push_back(3065);
        internalCounters.push_back(3526);
        internalCounters.push_back(3987);
        internalCounters.push_back(4448);
        internalCounters.push_back(4909);
        internalCounters.push_back(5370);
        internalCounters.push_back(5831);
        internalCounters.push_back(6292);
        internalCounters.push_back(6753);
        internalCounters.push_back(7214);
        internalCounters.push_back(166);
        internalCounters.push_back(627);
        internalCounters.push_back(1088);
        internalCounters.push_back(1549);
        internalCounters.push_back(2010);
        internalCounters.push_back(2471);
        internalCounters.push_back(2932);
        internalCounters.push_back(3393);
        internalCounters.push_back(3854);
        internalCounters.push_back(4315);
        internalCounters.push_back(4776);
        internalCounters.push_back(5237);
        internalCounters.push_back(5698);
        internalCounters.push_back(6159);
        internalCounters.push_back(6620);
        internalCounters.push_back(7081);
        internalCounters.push_back(167);
        internalCounters.push_back(628);
        internalCounters.push_back(1089);
        internalCounters.push_back(1550);
        internalCounters.push_back(2011);
        internalCounters.push_back(2472);
        internalCounters.push_back(2933);
        internalCounters.push_back(3394);
        internalCounters.push_back(3855);
        internalCounters.push_back(4316);
        internalCounters.push_back(4777);
        internalCounters.push_back(5238);
        internalCounters.push_back(5699);
        internalCounters.push_back(6160);
        internalCounters.push_back(6621);
        internalCounters.push_back(7082);
        internalCounters.push_back(168);
        internalCounters.push_back(629);
        internalCounters.push_back(1090);
        internalCounters.push_back(1551);
        internalCounters.push_back(2012);
        internalCounters.push_back(2473);
        internalCounters.push_back(2934);
        internalCounters.push_back(3395);
        internalCounters.push_back(3856);
        internalCounters.push_back(4317);
        internalCounters.push_back(4778);
        internalCounters.push_back(5239);
        internalCounters.push_back(5700);
        internalCounters.push_back(6161);
        internalCounters.push_back(6622);
        internalCounters.push_back(7083);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(158);
        internalCounters.push_back(619);
        internalCounters.push_back(1080);
        internalCounters.push_back(1541);
        internalCounters.push_back(2002);
        internalCounters.push_back(2463);
        internalCounters.push_back(2924);
        internalCounters.push_back(3385);
        internalCounters.push_back(3846);
        internalCounters.push_back(4307);
        internalCounters.push_back(4768);
        internalCounters.push_back(5229);
        internalCounters.push_back(5690);
        internalCounters.push_back(6151);
        internalCounters.push_back(6612);
        internalCounters.push_back(7073);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(297);
        internalCounters.push_back(758);
        internalCounters.push_back(1219);
        internalCounters.push_back(1680);
        internalCounters.push_back(2141);
        internalCounters.push_back(2602);
        internalCounters.push_back(3063);
        internalCounters.push_back(3524);
        internalCounters.push_back(3985);
        internalCounters.push_back(4446);
        internalCounters.push_back(4907);
        internalCounters.push_back(5368);
        internalCounters.push_back(5829);
        internalCounters.push_back(6290);
        internalCounters.push_back(6751);
        internalCounters.push_back(7212);
        internalCounters.push_back(156);
        internalCounters.push_back(617);
        internalCounters.push_back(1078);
        internalCounters.push_back(1539);
        internalCounters.push_back(2000);
        internalCounters.push_back(2461);
        internalCounters.push_back(2922);
        internalCounters.push_back(3383);
        internalCounters.push_back(3844);
        internalCounters.push_back(4305);
        internalCounters.push_back(4766);
        internalCounters.push_back(5227);
        internalCounters.push_back(5688);
        internalCounters.push_back(6149);
        internalCounters.push_back(6610);
        internalCounters.push_back(7071);
        internalCounters.push_back(157);
        internalCounters.push_back(618);
        internalCounters.push_back(1079);
        internalCounters.push_back(1540);
        internalCounters.push_back(2001);
        internalCounters.push_back(2462);
        internalCounters.push_back(2923);
        internalCounters.push_back(3384);
        internalCounters.push_back(3845);
        internalCounters.push_back(4306);
        internalCounters.push_back(4767);
        internalCounters.push_back(5228);
        internalCounters.push_back(5689);
        internalCounters.push_back(6150);
        internalCounters.push_back(6611);
        internalCounters.push_back(7072);
        internalCounters.push_back(158);
        internalCounters.push_back(619);
        internalCounters.push_back(1080);
        internalCounters.push_back(1541);
        internalCounters.push_back(2002);
        internalCounters.push_back(2463);
        internalCounters.push_back(2924);
        internalCounters.push_back(3385);
        internalCounters.push_back(3846);
        internalCounters.push_back(4307);
        internalCounters.push_back(4768);
        internalCounters.push_back(5229);
        internalCounters.push_back(5690);
        internalCounters.push_back(6151);
        internalCounters.push_back(6612);
        internalCounters.push_back(7073);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(202);
        internalCounters.push_back(663);
        internalCounters.push_back(1124);
        internalCounters.push_back(1585);
        internalCounters.push_back(2046);
        internalCounters.push_back(2507);
        internalCounters.push_back(2968);
        internalCounters.push_back(3429);
        internalCounters.push_back(3890);
        internalCounters.push_back(4351);
        internalCounters.push_back(4812);
        internalCounters.push_back(5273);
        internalCounters.push_back(5734);
        internalCounters.push_back(6195);
        internalCounters.push_back(6656);
        internalCounters.push_back(7117);
        internalCounters.push_back(47);
        internalCounters.push_back(508);
        internalCounters.push_back(969);
        internalCounters.push_back(1430);
        internalCounters.push_back(1891);
        internalCounters.push_back(2352);
        internalCounters.push_back(2813);
        internalCounters.push_back(3274);
        internalCounters.push_back(3735);
        internalCounters.push_back(4196);
        internalCounters.push_back(4657);
        internalCounters.push_back(5118);
        internalCounters.push_back(5579);
        internalCounters.push_back(6040);
        internalCounters.push_back(6501);
        internalCounters.push_back(6962);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(202);
        internalCounters.push_back(663);
        internalCounters.push_back(1124);
        internalCounters.push_back(1585);
        internalCounters.push_back(2046);
        internalCounters.push_back(2507);
        internalCounters.push_back(2968);
        internalCounters.push_back(3429);
        internalCounters.push_back(3890);
        internalCounters.push_back(4351);
        internalCounters.push_back(4812);
        internalCounters.push_back(5273);
        internalCounters.push_back(5734);
        internalCounters.push_back(6195);
        internalCounters.push_back(6656);
        internalCounters.push_back(7117);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80191);
        internalCounters.push_back(80268);
        internalCounters.push_back(80345);
        internalCounters.push_back(80422);
        internalCounters.push_back(80499);
        internalCounters.push_back(80576);
        internalCounters.push_back(80653);
        internalCounters.push_back(80730);
        internalCounters.push_back(80807);
        internalCounters.push_back(80884);
        internalCounters.push_back(80961);
        internalCounters.push_back(81038);
        internalCounters.push_back(81115);
        internalCounters.push_back(81192);
        internalCounters.push_back(81269);
        internalCounters.push_back(81346);
        internalCounters.push_back(81423);
        internalCounters.push_back(81500);
        internalCounters.push_back(81577);
        internalCounters.push_back(81654);
        internalCounters.push_back(81731);
        internalCounters.push_back(81808);
        internalCounters.push_back(81885);
        internalCounters.push_back(81962);
        internalCounters.push_back(82039);
        internalCounters.push_back(82116);
        internalCounters.push_back(82193);
        internalCounters.push_back(82270);
        internalCounters.push_back(82347);
        internalCounters.push_back(82424);
        internalCounters.push_back(82501);
        internalCounters.push_back(82578);
        internalCounters.push_back(82655);
        internalCounters.push_back(82732);
        internalCounters.push_back(82809);
        internalCounters.push_back(82886);
        internalCounters.push_back(82963);
        internalCounters.push_back(83040);
        internalCounters.push_back(83117);
        internalCounters.push_back(83194);
        internalCounters.push_back(83271);
        internalCounters.push_back(83348);
        internalCounters.push_back(83425);
        internalCounters.push_back(83502);
        internalCounters.push_back(83579);
        internalCounters.push_back(83656);
        internalCounters.push_back(83733);
        internalCounters.push_back(83810);
        internalCounters.push_back(83887);
        internalCounters.push_back(83964);
        internalCounters.push_back(84041);
        internalCounters.push_back(84118);
        internalCounters.push_back(84195);
        internalCounters.push_back(84272);
        internalCounters.push_back(84349);
        internalCounters.push_back(84426);
        internalCounters.push_back(84503);
        internalCounters.push_back(84580);
        internalCounters.push_back(84657);
        internalCounters.push_back(84734);
        internalCounters.push_back(84811);
        internalCounters.push_back(84888);
        internalCounters.push_back(84965);
        internalCounters.push_back(85042);
        internalCounters.push_back(85119);
        internalCounters.push_back(85196);
        internalCounters.push_back(85273);
        internalCounters.push_back(85350);
        internalCounters.push_back(85427);
        internalCounters.push_back(85504);
        internalCounters.push_back(85581);
        internalCounters.push_back(85658);
        internalCounters.push_back(85735);
        internalCounters.push_back(85812);
        internalCounters.push_back(85889);
        internalCounters.push_back(85966);
        internalCounters.push_back(86043);
        internalCounters.push_back(86120);
        internalCounters.push_back(86197);
        internalCounters.push_back(86274);
        internalCounters.push_back(80200);
        internalCounters.push_back(80277);
        internalCounters.push_back(80354);
        internalCounters.push_back(80431);
        internalCounters.push_back(80508);
        internalCounters.push_back(80585);
        internalCounters.push_back(80662);
        internalCounters.push_back(80739);
        internalCounters.push_back(80816);
        internalCounters.push_back(80893);
        internalCounters.push_back(80970);
        internalCounters.push_back(81047);
        internalCounters.push_back(81124);
        internalCounters.push_back(81201);
        internalCounters.push_back(81278);
        internalCounters.push_back(81355);
        internalCounters.push_back(81432);
        internalCounters.push_back(81509);
        internalCounters.push_back(81586);
        internalCounters.push_back(81663);
        internalCounters.push_back(81740);
        internalCounters.push_back(81817);
        internalCounters.push_back(81894);
        internalCounters.push_back(81971);
        internalCounters.push_back(82048);
        internalCounters.push_back(82125);
        internalCounters.push_back(82202);
        internalCounters.push_back(82279);
        internalCounters.push_back(82356);
        internalCounters.push_back(82433);
        internalCounters.push_back(82510);
        internalCounters.push_back(82587);
        internalCounters.push_back(82664);
        internalCounters.push_back(82741);
        internalCounters.push_back(82818);
        internalCounters.push_back(82895);
        internalCounters.push_back(82972);
        internalCounters.push_back(83049);
        internalCounters.push_back(83126);
        internalCounters.push_back(83203);
        internalCounters.push_back(83280);
        internalCounters.push_back(83357);
        internalCounters.push_back(83434);
        internalCounters.push_back(83511);
        internalCounters.push_back(83588);
        internalCounters.push_back(83665);
        internalCounters.push_back(83742);
        internalCounters.push_back(83819);
        internalCounters.push_back(83896);
        internalCounters.push_back(83973);
        internalCounters.push_back(84050);
        internalCounters.push_back(84127);
        internalCounters.push_back(84204);
        internalCounters.push_back(84281);
        internalCounters.push_back(84358);
        internalCounters.push_back(84435);
        internalCounters.push_back(84512);
        internalCounters.push_back(84589);
        internalCounters.push_back(84666);
        internalCounters.push_back(84743);
        internalCounters.push_back(84820);
        internalCounters.push_back(84897);
        internalCounters.push_back(84974);
        internalCounters.push_back(85051);
        internalCounters.push_back(85128);
        internalCounters.push_back(85205);
        internalCounters.push_back(85282);
        internalCounters.push_back(85359);
        internalCounters.push_back(85436);
        internalCounters.push_back(85513);
        internalCounters.push_back(85590);
        internalCounters.push_back(85667);
        internalCounters.push_back(85744);
        internalCounters.push_back(85821);
        internalCounters.push_back(85898);
        internalCounters.push_back(85975);
        internalCounters.push_back(86052);
        internalCounters.push_back(86129);
        internalCounters.push_back(86206);
        internalCounters.push_back(86283);

        c.DefineDerivedCounter("L0CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L0 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,ifnotzero", "be1e0578-82b8-ad7f-ba3f-3afce150937a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80191);
        internalCounters.push_back(80268);
        internalCounters.push_back(80345);
        internalCounters.push_back(80422);
        internalCounters.push_back(80499);
        internalCounters.push_back(80576);
        internalCounters.push_back(80653);
        internalCounters.push_back(80730);
        internalCounters.push_back(80807);
        internalCounters.push_back(80884);
        internalCounters.push_back(80961);
        internalCounters.push_back(81038);
        internalCounters.push_back(81115);
        internalCounters.push_back(81192);
        internalCounters.push_back(81269);
        internalCounters.push_back(81346);
        internalCounters.push_back(81423);
        internalCounters.push_back(81500);
        internalCounters.push_back(81577);
        internalCounters.push_back(81654);
        internalCounters.push_back(81731);
        internalCounters.push_back(81808);
        internalCounters.push_back(81885);
        internalCounters.push_back(81962);
        internalCounters.push_back(82039);
        internalCounters.push_back(82116);
        internalCounters.push_back(82193);
        internalCounters.push_back(82270);
        internalCounters.push_back(82347);
        internalCounters.push_back(82424);
        internalCounters.push_back(82501);
        internalCounters.push_back(82578);
        internalCounters.push_back(82655);
        internalCounters.push_back(82732);
        internalCounters.push_back(82809);
        internalCounters.push_back(82886);
        internalCounters.push_back(82963);
        internalCounters.push_back(83040);
        internalCounters.push_back(83117);
        internalCounters.push_back(83194);
        internalCounters.push_back(83271);
        internalCounters.push_back(83348);
        internalCounters.push_back(83425);
        internalCounters.push_back(83502);
        internalCounters.push_back(83579);
        internalCounters.push_back(83656);
        internalCounters.push_back(83733);
        internalCounters.push_back(83810);
        internalCounters.push_back(83887);
        internalCounters.push_back(83964);
        internalCounters.push_back(84041);
        internalCounters.push_back(84118);
        internalCounters.push_back(84195);
        internalCounters.push_back(84272);
        internalCounters.push_back(84349);
        internalCounters.push_back(84426);
        internalCounters.push_back(84503);
        internalCounters.push_back(84580);
        internalCounters.push_back(84657);
        internalCounters.push_back(84734);
        internalCounters.push_back(84811);
        internalCounters.push_back(84888);
        internalCounters.push_back(84965);
        internalCounters.push_back(85042);
        internalCounters.push_back(85119);
        internalCounters.push_back(85196);
        internalCounters.push_back(85273);
        internalCounters.push_back(85350);
        internalCounters.push_back(85427);
        internalCounters.push_back(85504);
        internalCounters.push_back(85581);
        internalCounters.push_back(85658);
        internalCounters.push_back(85735);
        internalCounters.push_back(85812);
        internalCounters.push_back(85889);
        internalCounters.push_back(85966);
        internalCounters.push_back(86043);
        internalCounters.push_back(86120);
        internalCounters.push_back(86197);
        internalCounters.push_back(86274);
        internalCounters.push_back(80200);
        internalCounters.push_back(80277);
        internalCounters.push_back(80354);
        internalCounters.push_back(80431);
        internalCounters.push_back(80508);
        internalCounters.push_back(80585);
        internalCounters.push_back(80662);
        internalCounters.push_back(80739);
        internalCounters.push_back(80816);
        internalCounters.push_back(80893);
        internalCounters.push_back(80970);
        internalCounters.push_back(81047);
        internalCounters.push_back(81124);
        internalCounters.push_back(81201);
        internalCounters.push_back(81278);
        internalCounters.push_back(81355);
        internalCounters.push_back(81432);
        internalCounters.push_back(81509);
        internalCounters.push_back(81586);
        internalCounters.push_back(81663);
        internalCounters.push_back(81740);
        internalCounters.push_back(81817);
        internalCounters.push_back(81894);
        internalCounters.push_back(81971);
        internalCounters.push_back(82048);
        internalCounters.push_back(82125);
        internalCounters.push_back(82202);
        internalCounters.push_back(82279);
        internalCounters.push_back(82356);
        internalCounters.push_back(82433);
        internalCounters.push_back(82510);
        internalCounters.push_back(82587);
        internalCounters.push_back(82664);
        internalCounters.push_back(82741);
        internalCounters.push_back(82818);
        internalCounters.push_back(82895);
        internalCounters.push_back(82972);
        internalCounters.push_back(83049);
        internalCounters.push_back(83126);
        internalCounters.push_back(83203);
        internalCounters.push_back(83280);
        internalCounters.push_back(83357);
        internalCounters.push_back(83434);
        internalCounters.push_back(83511);
        internalCounters.push_back(83588);
        internalCounters.push_back(83665);
        internalCounters.push_back(83742);
        internalCounters.push_back(83819);
        internalCounters.push_back(83896);
        internalCounters.push_back(83973);
        internalCounters.push_back(84050);
        internalCounters.push_back(84127);
        internalCounters.push_back(84204);
        internalCounters.push_back(84281);
        internalCounters.push_back(84358);
        internalCounters.push_back(84435);
        internalCounters.push_back(84512);
        internalCounters.push_back(84589);
        internalCounters.push_back(84666);
        internalCounters.push_back(84743);
        internalCounters.push_back(84820);
        internalCounters.push_back(84897);
        internalCounters.push_back(84974);
        internalCounters.push_back(85051);
        internalCounters.push_back(85128);
        internalCounters.push_back(85205);
        internalCounters.push_back(85282);
        internalCounters.push_back(85359);
        internalCounters.push_back(85436);
        internalCounters.push_back(85513);
        internalCounters.push_back(85590);
        internalCounters.push_back(85667);
        internalCounters.push_back(85744);
        internalCounters.push_back(85821);
        internalCounters.push_back(85898);
        internalCounters.push_back(85975);
        internalCounters.push_back(86052);
        internalCounters.push_back(86129);
        internalCounters.push_back(86206);
        internalCounters.push_back(86283);

        c.DefineDerivedCounter("L0CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L0 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,-", "467f8740-98f0-2211-b8e2-3d60c40d9921");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80200);
        internalCounters.push_back(80277);
        internalCounters.push_back(80354);
        internalCounters.push_back(80431);
        internalCounters.push_back(80508);
        internalCounters.push_back(80585);
        internalCounters.push_back(80662);
        internalCounters.push_back(80739);
        internalCounters.push_back(80816);
        internalCounters.push_back(80893);
        internalCounters.push_back(80970);
        internalCounters.push_back(81047);
        internalCounters.push_back(81124);
        internalCounters.push_back(81201);
        internalCounters.push_back(81278);
        internalCounters.push_back(81355);
        internalCounters.push_back(81432);
        internalCounters.push_back(81509);
        internalCounters.push_back(81586);
        internalCounters.push_back(81663);
        internalCounters.push_back(81740);
        internalCounters.push_back(81817);
        internalCounters.push_back(81894);
        internalCounters.push_back(81971);
        internalCounters.push_back(82048);
        internalCounters.push_back(82125);
        internalCounters.push_back(82202);
        internalCounters.push_back(82279);
        internalCounters.push_back(82356);
        internalCounters.push_back(82433);
        internalCounters.push_back(82510);
        internalCounters.push_back(82587);
        internalCounters.push_back(82664);
        internalCounters.push_back(82741);
        internalCounters.push_back(82818);
        internalCounters.push_back(82895);
        internalCounters.push_back(82972);
        internalCounters.push_back(83049);
        internalCounters.push_back(83126);
        internalCounters.push_back(83203);
        internalCounters.push_back(83280);
        internalCounters.push_back(83357);
        internalCounters.push_back(83434);
        internalCounters.push_back(83511);
        internalCounters.push_back(83588);
        internalCounters.push_back(83665);
        internalCounters.push_back(83742);
        internalCounters.push_back(83819);
        internalCounters.push_back(83896);
        internalCounters.push_back(83973);
        internalCounters.push_back(84050);
        internalCounters.push_back(84127);
        internalCounters.push_back(84204);
        internalCounters.push_back(84281);
        internalCounters.push_back(84358);
        internalCounters.push_back(84435);
        internalCounters.push_back(84512);
        internalCounters.push_back(84589);
        internalCounters.push_back(84666);
        internalCounters.push_back(84743);
        internalCounters.push_back(84820);
        internalCounters.push_back(84897);
        internalCounters.push_back(84974);
        internalCounters.push_back(85051);
        internalCounters.push_back(85128);
        internalCounters.push_back(85205);
        internalCounters.push_back(85282);
        internalCounters.push_back(85359);
        internalCounters.push_back(85436);
        internalCounters.push_back(85513);
        internalCounters.push_back(85590);
        internalCounters.push_back(85667);
        internalCounters.push_back(85744);
        internalCounters.push_back(85821);
        internalCounters.push_back(85898);
        internalCounters.push_back(85975);
        internalCounters.push_back(86052);
        internalCounters.push_back(86129);
        internalCounters.push_back(86206);
        internalCounters.push_back(86283);

        c.DefineDerivedCounter("L0CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L0 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "db23a1fd-a359-64d4-7283-f6a02bd8db64");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93197);
        internalCounters.push_back(93261);
        internalCounters.push_back(93325);
        internalCounters.push_back(93389);
        internalCounters.push_back(93453);
        internalCounters.push_back(93517);
        internalCounters.push_back(93581);
        internalCounters.push_back(93645);
        internalCounters.push_back(93709);
        internalCounters.push_back(93773);
        internalCounters.push_back(93837);
        internalCounters.push_back(93901);
        internalCounters.push_back(93965);
        internalCounters.push_back(94029);
        internalCounters.push_back(94093);
        internalCounters.push_back(94157);
        internalCounters.push_back(93201);
        internalCounters.push_back(93265);
        internalCounters.push_back(93329);
        internalCounters.push_back(93393);
        internalCounters.push_back(93457);
        internalCounters.push_back(93521);
        internalCounters.push_back(93585);
        internalCounters.push_back(93649);
        internalCounters.push_back(93713);
        internalCounters.push_back(93777);
        internalCounters.push_back(93841);
        internalCounters.push_back(93905);
        internalCounters.push_back(93969);
        internalCounters.push_back(94033);
        internalCounters.push_back(94097);
        internalCounters.push_back(94161);

        c.DefineDerivedCounter("L1CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L1 cache. Writes and atomics always miss this cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,ifnotzero", "b10c589c-f7a5-b8f2-46c2-e0aed4a84105");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93197);
        internalCounters.push_back(93261);
        internalCounters.push_back(93325);
        internalCounters.push_back(93389);
        internalCounters.push_back(93453);
        internalCounters.push_back(93517);
        internalCounters.push_back(93581);
        internalCounters.push_back(93645);
        internalCounters.push_back(93709);
        internalCounters.push_back(93773);
        internalCounters.push_back(93837);
        internalCounters.push_back(93901);
        internalCounters.push_back(93965);
        internalCounters.push_back(94029);
        internalCounters.push_back(94093);
        internalCounters.push_back(94157);
        internalCounters.push_back(93201);
        internalCounters.push_back(93265);
        internalCounters.push_back(93329);
        internalCounters.push_back(93393);
        internalCounters.push_back(93457);
        internalCounters.push_back(93521);
        internalCounters.push_back(93585);
        internalCounters.push_back(93649);
        internalCounters.push_back(93713);
        internalCounters.push_back(93777);
        internalCounters.push_back(93841);
        internalCounters.push_back(93905);
        internalCounters.push_back(93969);
        internalCounters.push_back(94033);
        internalCounters.push_back(94097);
        internalCounters.push_back(94161);

        c.DefineDerivedCounter("L1CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L1 cache. Writes and atomics always miss this cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-", "e58da8e8-3c2d-723d-9e95-97888210155b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93201);
        internalCounters.push_back(93265);
        internalCounters.push_back(93329);
        internalCounters.push_back(93393);
        internalCounters.push_back(93457);
        internalCounters.push_back(93521);
        internalCounters.push_back(93585);
        internalCounters.push_back(93649);
        internalCounters.push_back(93713);
        internalCounters.push_back(93777);
        internalCounters.push_back(93841);
        internalCounters.push_back(93905);
        internalCounters.push_back(93969);
        internalCounters.push_back(94033);
        internalCounters.push_back(94097);
        internalCounters.push_back(94161);

        c.DefineDerivedCounter("L1CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L1 cache. Writes and atomics always miss this cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b9ee1c8c-9c9b-8b7e-6d9b-a7a94053a0ee");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95790);
        internalCounters.push_back(96025);
        internalCounters.push_back(96260);
        internalCounters.push_back(96495);
        internalCounters.push_back(96730);
        internalCounters.push_back(96965);
        internalCounters.push_back(97200);
        internalCounters.push_back(97435);
        internalCounters.push_back(97670);
        internalCounters.push_back(97905);
        internalCounters.push_back(98140);
        internalCounters.push_back(98375);
        internalCounters.push_back(98610);
        internalCounters.push_back(98845);
        internalCounters.push_back(99080);
        internalCounters.push_back(99315);
        internalCounters.push_back(99550);
        internalCounters.push_back(99785);
        internalCounters.push_back(100020);
        internalCounters.push_back(100255);
        internalCounters.push_back(100490);
        internalCounters.push_back(100725);
        internalCounters.push_back(100960);
        internalCounters.push_back(101195);
        internalCounters.push_back(95822);
        internalCounters.push_back(96057);
        internalCounters.push_back(96292);
        internalCounters.push_back(96527);
        internalCounters.push_back(96762);
        internalCounters.push_back(96997);
        internalCounters.push_back(97232);
        internalCounters.push_back(97467);
        internalCounters.push_back(97702);
        internalCounters.push_back(97937);
        internalCounters.push_back(98172);
        internalCounters.push_back(98407);
        internalCounters.push_back(98642);
        internalCounters.push_back(98877);
        internalCounters.push_back(99112);
        internalCounters.push_back(99347);
        internalCounters.push_back(99582);
        internalCounters.push_back(99817);
        internalCounters.push_back(100052);
        internalCounters.push_back(100287);
        internalCounters.push_back(100522);
        internalCounters.push_back(100757);
        internalCounters.push_back(100992);
        internalCounters.push_back(101227);

        c.DefineDerivedCounter("L2CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the L2 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,ifnotzero", "d78fdf66-104f-8372-02c1-91d07d7dc62e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95822);
        internalCounters.push_back(96057);
        internalCounters.push_back(96292);
        internalCounters.push_back(96527);
        internalCounters.push_back(96762);
        internalCounters.push_back(96997);
        internalCounters.push_back(97232);
        internalCounters.push_back(97467);
        internalCounters.push_back(97702);
        internalCounters.push_back(97937);
        internalCounters.push_back(98172);
        internalCounters.push_back(98407);
        internalCounters.push_back(98642);
        internalCounters.push_back(98877);
        internalCounters.push_back(99112);
        internalCounters.push_back(99347);
        internalCounters.push_back(99582);
        internalCounters.push_back(99817);
        internalCounters.push_back(100052);
        internalCounters.push_back(100287);
        internalCounters.push_back(100522);
        internalCounters.push_back(100757);
        internalCounters.push_back(100992);
        internalCounters.push_back(101227);
        internalCounters.push_back(95790);
        internalCounters.push_back(96025);
        internalCounters.push_back(96260);
        internalCounters.push_back(96495);
        internalCounters.push_back(96730);
        internalCounters.push_back(96965);
        internalCounters.push_back(97200);
        internalCounters.push_back(97435);
        internalCounters.push_back(97670);
        internalCounters.push_back(97905);
        internalCounters.push_back(98140);
        internalCounters.push_back(98375);
        internalCounters.push_back(98610);
        internalCounters.push_back(98845);
        internalCounters.push_back(99080);
        internalCounters.push_back(99315);
        internalCounters.push_back(99550);
        internalCounters.push_back(99785);
        internalCounters.push_back(100020);
        internalCounters.push_back(100255);
        internalCounters.push_back(100490);
        internalCounters.push_back(100725);
        internalCounters.push_back(100960);
        internalCounters.push_back(101195);

        c.DefineDerivedCounter("L2CacheMiss", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that miss the L2 cache. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "4cd70885-41b3-25cd-92db-c76a0decc634");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95790);
        internalCounters.push_back(96025);
        internalCounters.push_back(96260);
        internalCounters.push_back(96495);
        internalCounters.push_back(96730);
        internalCounters.push_back(96965);
        internalCounters.push_back(97200);
        internalCounters.push_back(97435);
        internalCounters.push_back(97670);
        internalCounters.push_back(97905);
        internalCounters.push_back(98140);
        internalCounters.push_back(98375);
        internalCounters.push_back(98610);
        internalCounters.push_back(98845);
        internalCounters.push_back(99080);
        internalCounters.push_back(99315);
        internalCounters.push_back(99550);
        internalCounters.push_back(99785);
        internalCounters.push_back(100020);
        internalCounters.push_back(100255);
        internalCounters.push_back(100490);
        internalCounters.push_back(100725);
        internalCounters.push_back(100960);
        internalCounters.push_back(101195);
        internalCounters.push_back(95822);
        internalCounters.push_back(96057);
        internalCounters.push_back(96292);
        internalCounters.push_back(96527);
        internalCounters.push_back(96762);
        internalCounters.push_back(96997);
        internalCounters.push_back(97232);
        internalCounters.push_back(97467);
        internalCounters.push_back(97702);
        internalCounters.push_back(97937);
        internalCounters.push_back(98172);
        internalCounters.push_back(98407);
        internalCounters.push_back(98642);
        internalCounters.push_back(98877);
        internalCounters.push_back(99112);
        internalCounters.push_back(99347);
        internalCounters.push_back(99582);
        internalCounters.push_back(99817);
        internalCounters.push_back(100052);
        internalCounters.push_back(100287);
        internalCounters.push_back(100522);
        internalCounters.push_back(100757);
        internalCounters.push_back(100992);
        internalCounters.push_back(101227);

        c.DefineDerivedCounter("L2CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-", "d0bce171-560c-1895-66b3-bc56abccb077");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95822);
        internalCounters.push_back(96057);
        internalCounters.push_back(96292);
        internalCounters.push_back(96527);
        internalCounters.push_back(96762);
        internalCounters.push_back(96997);
        internalCounters.push_back(97232);
        internalCounters.push_back(97467);
        internalCounters.push_back(97702);
        internalCounters.push_back(97937);
        internalCounters.push_back(98172);
        internalCounters.push_back(98407);
        internalCounters.push_back(98642);
        internalCounters.push_back(98877);
        internalCounters.push_back(99112);
        internalCounters.push_back(99347);
        internalCounters.push_back(99582);
        internalCounters.push_back(99817);
        internalCounters.push_back(100052);
        internalCounters.push_back(100287);
        internalCounters.push_back(100522);
        internalCounters.push_back(100757);
        internalCounters.push_back(100992);
        internalCounters.push_back(101227);

        c.DefineDerivedCounter("L2CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "f2ab3a1a-ead6-9893-961b-88ba2a758807");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95876);
        internalCounters.push_back(96111);
        internalCounters.push_back(96346);
        internalCounters.push_back(96581);
        internalCounters.push_back(96816);
        internalCounters.push_back(97051);
        internalCounters.push_back(97286);
        internalCounters.push_back(97521);
        internalCounters.push_back(97756);
        internalCounters.push_back(97991);
        internalCounters.push_back(98226);
        internalCounters.push_back(98461);
        internalCounters.push_back(98696);
        internalCounters.push_back(98931);
        internalCounters.push_back(99166);
        internalCounters.push_back(99401);
        internalCounters.push_back(99636);
        internalCounters.push_back(99871);
        internalCounters.push_back(100106);
        internalCounters.push_back(100341);
        internalCounters.push_back(100576);
        internalCounters.push_back(100811);
        internalCounters.push_back(101046);
        internalCounters.push_back(101281);
        internalCounters.push_back(95877);
        internalCounters.push_back(96112);
        internalCounters.push_back(96347);
        internalCounters.push_back(96582);
        internalCounters.push_back(96817);
        internalCounters.push_back(97052);
        internalCounters.push_back(97287);
        internalCounters.push_back(97522);
        internalCounters.push_back(97757);
        internalCounters.push_back(97992);
        internalCounters.push_back(98227);
        internalCounters.push_back(98462);
        internalCounters.push_back(98697);
        internalCounters.push_back(98932);
        internalCounters.push_back(99167);
        internalCounters.push_back(99402);
        internalCounters.push_back(99637);
        internalCounters.push_back(99872);
        internalCounters.push_back(100107);
        internalCounters.push_back(100342);
        internalCounters.push_back(100577);
        internalCounters.push_back(100812);
        internalCounters.push_back(101047);
        internalCounters.push_back(101282);
        internalCounters.push_back(95878);
        internalCounters.push_back(96113);
        internalCounters.push_back(96348);
        internalCounters.push_back(96583);
        internalCounters.push_back(96818);
        internalCounters.push_back(97053);
        internalCounters.push_back(97288);
        internalCounters.push_back(97523);
        internalCounters.push_back(97758);
        internalCounters.push_back(97993);
        internalCounters.push_back(98228);
        internalCounters.push_back(98463);
        internalCounters.push_back(98698);
        internalCounters.push_back(98933);
        internalCounters.push_back(99168);
        internalCounters.push_back(99403);
        internalCounters.push_back(99638);
        internalCounters.push_back(99873);
        internalCounters.push_back(100108);
        internalCounters.push_back(100343);
        internalCounters.push_back(100578);
        internalCounters.push_back(100813);
        internalCounters.push_back(101048);
        internalCounters.push_back(101283);
        internalCounters.push_back(95879);
        internalCounters.push_back(96114);
        internalCounters.push_back(96349);
        internalCounters.push_back(96584);
        internalCounters.push_back(96819);
        internalCounters.push_back(97054);
        internalCounters.push_back(97289);
        internalCounters.push_back(97524);
        internalCounters.push_back(97759);
        internalCounters.push_back(97994);
        internalCounters.push_back(98229);
        internalCounters.push_back(98464);
        internalCounters.push_back(98699);
        internalCounters.push_back(98934);
        internalCounters.push_back(99169);
        internalCounters.push_back(99404);
        internalCounters.push_back(99639);
        internalCounters.push_back(99874);
        internalCounters.push_back(100109);
        internalCounters.push_back(100344);
        internalCounters.push_back(100579);
        internalCounters.push_back(100814);
        internalCounters.push_back(101049);
        internalCounters.push_back(101284);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,(96),*,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum24,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95862);
        internalCounters.push_back(96097);
        internalCounters.push_back(96332);
        internalCounters.push_back(96567);
        internalCounters.push_back(96802);
        internalCounters.push_back(97037);
        internalCounters.push_back(97272);
        internalCounters.push_back(97507);
        internalCounters.push_back(97742);
        internalCounters.push_back(97977);
        internalCounters.push_back(98212);
        internalCounters.push_back(98447);
        internalCounters.push_back(98682);
        internalCounters.push_back(98917);
        internalCounters.push_back(99152);
        internalCounters.push_back(99387);
        internalCounters.push_back(99622);
        internalCounters.push_back(99857);
        internalCounters.push_back(100092);
        internalCounters.push_back(100327);
        internalCounters.push_back(100562);
        internalCounters.push_back(100797);
        internalCounters.push_back(101032);
        internalCounters.push_back(101267);
        internalCounters.push_back(95863);
        internalCounters.push_back(96098);
        internalCounters.push_back(96333);
        internalCounters.push_back(96568);
        internalCounters.push_back(96803);
        internalCounters.push_back(97038);
        internalCounters.push_back(97273);
        internalCounters.push_back(97508);
        internalCounters.push_back(97743);
        internalCounters.push_back(97978);
        internalCounters.push_back(98213);
        internalCounters.push_back(98448);
        internalCounters.push_back(98683);
        internalCounters.push_back(98918);
        internalCounters.push_back(99153);
        internalCounters.push_back(99388);
        internalCounters.push_back(99623);
        internalCounters.push_back(99858);
        internalCounters.push_back(100093);
        internalCounters.push_back(100328);
        internalCounters.push_back(100563);
        internalCounters.push_back(100798);
        internalCounters.push_back(101033);
        internalCounters.push_back(101268);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57237);
        internalCounters.push_back(57463);
        internalCounters.push_back(57689);
        internalCounters.push_back(57915);
        internalCounters.push_back(58141);
        internalCounters.push_back(58367);
        internalCounters.push_back(58593);
        internalCounters.push_back(58819);
        internalCounters.push_back(59045);
        internalCounters.push_back(59271);
        internalCounters.push_back(59497);
        internalCounters.push_back(59723);
        internalCounters.push_back(59949);
        internalCounters.push_back(60175);
        internalCounters.push_back(60401);
        internalCounters.push_back(60627);
        internalCounters.push_back(60853);
        internalCounters.push_back(61079);
        internalCounters.push_back(61305);
        internalCounters.push_back(61531);
        internalCounters.push_back(61757);
        internalCounters.push_back(61983);
        internalCounters.push_back(62209);
        internalCounters.push_back(62435);
        internalCounters.push_back(62661);
        internalCounters.push_back(62887);
        internalCounters.push_back(63113);
        internalCounters.push_back(63339);
        internalCounters.push_back(63565);
        internalCounters.push_back(63791);
        internalCounters.push_back(64017);
        internalCounters.push_back(64243);
        internalCounters.push_back(64469);
        internalCounters.push_back(64695);
        internalCounters.push_back(64921);
        internalCounters.push_back(65147);
        internalCounters.push_back(65373);
        internalCounters.push_back(65599);
        internalCounters.push_back(65825);
        internalCounters.push_back(66051);
        internalCounters.push_back(66277);
        internalCounters.push_back(66503);
        internalCounters.push_back(66729);
        internalCounters.push_back(66955);
        internalCounters.push_back(67181);
        internalCounters.push_back(67407);
        internalCounters.push_back(67633);
        internalCounters.push_back(67859);
        internalCounters.push_back(68085);
        internalCounters.push_back(68311);
        internalCounters.push_back(68537);
        internalCounters.push_back(68763);
        internalCounters.push_back(68989);
        internalCounters.push_back(69215);
        internalCounters.push_back(69441);
        internalCounters.push_back(69667);
        internalCounters.push_back(69893);
        internalCounters.push_back(70119);
        internalCounters.push_back(70345);
        internalCounters.push_back(70571);
        internalCounters.push_back(70797);
        internalCounters.push_back(71023);
        internalCounters.push_back(71249);
        internalCounters.push_back(71475);
        internalCounters.push_back(71701);
        internalCounters.push_back(71927);
        internalCounters.push_back(72153);
        internalCounters.push_back(72379);
        internalCounters.push_back(72605);
        internalCounters.push_back(72831);
        internalCounters.push_back(73057);
        internalCounters.push_back(73283);
        internalCounters.push_back(73509);
        internalCounters.push_back(73735);
        internalCounters.push_back(73961);
        internalCounters.push_back(74187);
        internalCounters.push_back(74413);
        internalCounters.push_back(74639);
        internalCounters.push_back(74865);
        internalCounters.push_back(75091);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(57237);
        internalCounters.push_back(57463);
        internalCounters.push_back(57689);
        internalCounters.push_back(57915);
        internalCounters.push_back(58141);
        internalCounters.push_back(58367);
        internalCounters.push_back(58593);
        internalCounters.push_back(58819);
        internalCounters.push_back(59045);
        internalCounters.push_back(59271);
        internalCounters.push_back(59497);
        internalCounters.push_back(59723);
        internalCounters.push_back(59949);
        internalCounters.push_back(60175);
        internalCounters.push_back(60401);
        internalCounters.push_back(60627);
        internalCounters.push_back(60853);
        internalCounters.push_back(61079);
        internalCounters.push_back(61305);
        internalCounters.push_back(61531);
        internalCounters.push_back(61757);
        internalCounters.push_back(61983);
        internalCounters.push_back(62209);
        internalCounters.push_back(62435);
        internalCounters.push_back(62661);
        internalCounters.push_back(62887);
        internalCounters.push_back(63113);
        internalCounters.push_back(63339);
        internalCounters.push_back(63565);
        internalCounters.push_back(63791);
        internalCounters.push_back(64017);
        internalCounters.push_back(64243);
        internalCounters.push_back(64469);
        internalCounters.push_back(64695);
        internalCounters.push_back(64921);
        internalCounters.push_back(65147);
        internalCounters.push_back(65373);
        internalCounters.push_back(65599);
        internalCounters.push_back(65825);
        internalCounters.push_back(66051);
        internalCounters.push_back(66277);
        internalCounters.push_back(66503);
        internalCounters.push_back(66729);
        internalCounters.push_back(66955);
        internalCounters.push_back(67181);
        internalCounters.push_back(67407);
        internalCounters.push_back(67633);
        internalCounters.push_back(67859);
        internalCounters.push_back(68085);
        internalCounters.push_back(68311);
        internalCounters.push_back(68537);
        internalCounters.push_back(68763);
        internalCounters.push_back(68989);
        internalCounters.push_back(69215);
        internalCounters.push_back(69441);
        internalCounters.push_back(69667);
        internalCounters.push_back(69893);
        internalCounters.push_back(70119);
        internalCounters.push_back(70345);
        internalCounters.push_back(70571);
        internalCounters.push_back(70797);
        internalCounters.push_back(71023);
        internalCounters.push_back(71249);
        internalCounters.push_back(71475);
        internalCounters.push_back(71701);
        internalCounters.push_back(71927);
        internalCounters.push_back(72153);
        internalCounters.push_back(72379);
        internalCounters.push_back(72605);
        internalCounters.push_back(72831);
        internalCounters.push_back(73057);
        internalCounters.push_back(73283);
        internalCounters.push_back(73509);
        internalCounters.push_back(73735);
        internalCounters.push_back(73961);
        internalCounters.push_back(74187);
        internalCounters.push_back(74413);
        internalCounters.push_back(74639);
        internalCounters.push_back(74865);
        internalCounters.push_back(75091);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80218);
        internalCounters.push_back(80295);
        internalCounters.push_back(80372);
        internalCounters.push_back(80449);
        internalCounters.push_back(80526);
        internalCounters.push_back(80603);
        internalCounters.push_back(80680);
        internalCounters.push_back(80757);
        internalCounters.push_back(80834);
        internalCounters.push_back(80911);
        internalCounters.push_back(80988);
        internalCounters.push_back(81065);
        internalCounters.push_back(81142);
        internalCounters.push_back(81219);
        internalCounters.push_back(81296);
        internalCounters.push_back(81373);
        internalCounters.push_back(81450);
        internalCounters.push_back(81527);
        internalCounters.push_back(81604);
        internalCounters.push_back(81681);
        internalCounters.push_back(81758);
        internalCounters.push_back(81835);
        internalCounters.push_back(81912);
        internalCounters.push_back(81989);
        internalCounters.push_back(82066);
        internalCounters.push_back(82143);
        internalCounters.push_back(82220);
        internalCounters.push_back(82297);
        internalCounters.push_back(82374);
        internalCounters.push_back(82451);
        internalCounters.push_back(82528);
        internalCounters.push_back(82605);
        internalCounters.push_back(82682);
        internalCounters.push_back(82759);
        internalCounters.push_back(82836);
        internalCounters.push_back(82913);
        internalCounters.push_back(82990);
        internalCounters.push_back(83067);
        internalCounters.push_back(83144);
        internalCounters.push_back(83221);
        internalCounters.push_back(83298);
        internalCounters.push_back(83375);
        internalCounters.push_back(83452);
        internalCounters.push_back(83529);
        internalCounters.push_back(83606);
        internalCounters.push_back(83683);
        internalCounters.push_back(83760);
        internalCounters.push_back(83837);
        internalCounters.push_back(83914);
        internalCounters.push_back(83991);
        internalCounters.push_back(84068);
        internalCounters.push_back(84145);
        internalCounters.push_back(84222);
        internalCounters.push_back(84299);
        internalCounters.push_back(84376);
        internalCounters.push_back(84453);
        internalCounters.push_back(84530);
        internalCounters.push_back(84607);
        internalCounters.push_back(84684);
        internalCounters.push_back(84761);
        internalCounters.push_back(84838);
        internalCounters.push_back(84915);
        internalCounters.push_back(84992);
        internalCounters.push_back(85069);
        internalCounters.push_back(85146);
        internalCounters.push_back(85223);
        internalCounters.push_back(85300);
        internalCounters.push_back(85377);
        internalCounters.push_back(85454);
        internalCounters.push_back(85531);
        internalCounters.push_back(85608);
        internalCounters.push_back(85685);
        internalCounters.push_back(85762);
        internalCounters.push_back(85839);
        internalCounters.push_back(85916);
        internalCounters.push_back(85993);
        internalCounters.push_back(86070);
        internalCounters.push_back(86147);
        internalCounters.push_back(86224);
        internalCounters.push_back(86301);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(80218);
        internalCounters.push_back(80295);
        internalCounters.push_back(80372);
        internalCounters.push_back(80449);
        internalCounters.push_back(80526);
        internalCounters.push_back(80603);
        internalCounters.push_back(80680);
        internalCounters.push_back(80757);
        internalCounters.push_back(80834);
        internalCounters.push_back(80911);
        internalCounters.push_back(80988);
        internalCounters.push_back(81065);
        internalCounters.push_back(81142);
        internalCounters.push_back(81219);
        internalCounters.push_back(81296);
        internalCounters.push_back(81373);
        internalCounters.push_back(81450);
        internalCounters.push_back(81527);
        internalCounters.push_back(81604);
        internalCounters.push_back(81681);
        internalCounters.push_back(81758);
        internalCounters.push_back(81835);
        internalCounters.push_back(81912);
        internalCounters.push_back(81989);
        internalCounters.push_back(82066);
        internalCounters.push_back(82143);
        internalCounters.push_back(82220);
        internalCounters.push_back(82297);
        internalCounters.push_back(82374);
        internalCounters.push_back(82451);
        internalCounters.push_back(82528);
        internalCounters.push_back(82605);
        internalCounters.push_back(82682);
        internalCounters.push_back(82759);
        internalCounters.push_back(82836);
        internalCounters.push_back(82913);
        internalCounters.push_back(82990);
        internalCounters.push_back(83067);
        internalCounters.push_back(83144);
        internalCounters.push_back(83221);
        internalCounters.push_back(83298);
        internalCounters.push_back(83375);
        internalCounters.push_back(83452);
        internalCounters.push_back(83529);
        internalCounters.push_back(83606);
        internalCounters.push_back(83683);
        internalCounters.push_back(83760);
        internalCounters.push_back(83837);
        internalCounters.push_back(83914);
        internalCounters.push_back(83991);
        internalCounters.push_back(84068);
        internalCounters.push_back(84145);
        internalCounters.push_back(84222);
        internalCounters.push_back(84299);
        internalCounters.push_back(84376);
        internalCounters.push_back(84453);
        internalCounters.push_back(84530);
        internalCounters.push_back(84607);
        internalCounters.push_back(84684);
        internalCounters.push_back(84761);
        internalCounters.push_back(84838);
        internalCounters.push_back(84915);
        internalCounters.push_back(84992);
        internalCounters.push_back(85069);
        internalCounters.push_back(85146);
        internalCounters.push_back(85223);
        internalCounters.push_back(85300);
        internalCounters.push_back(85377);
        internalCounters.push_back(85454);
        internalCounters.push_back(85531);
        internalCounters.push_back(85608);
        internalCounters.push_back(85685);
        internalCounters.push_back(85762);
        internalCounters.push_back(85839);
        internalCounters.push_back(85916);
        internalCounters.push_back(85993);
        internalCounters.push_back(86070);
        internalCounters.push_back(86147);
        internalCounters.push_back(86224);
        internalCounters.push_back(86301);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95866);
        internalCounters.push_back(96101);
        internalCounters.push_back(96336);
        internalCounters.push_back(96571);
        internalCounters.push_back(96806);
        internalCounters.push_back(97041);
        internalCounters.push_back(97276);
        internalCounters.push_back(97511);
        internalCounters.push_back(97746);
        internalCounters.push_back(97981);
        internalCounters.push_back(98216);
        internalCounters.push_back(98451);
        internalCounters.push_back(98686);
        internalCounters.push_back(98921);
        internalCounters.push_back(99156);
        internalCounters.push_back(99391);
        internalCounters.push_back(99626);
        internalCounters.push_back(99861);
        internalCounters.push_back(100096);
        internalCounters.push_back(100331);
        internalCounters.push_back(100566);
        internalCounters.push_back(100801);
        internalCounters.push_back(101036);
        internalCounters.push_back(101271);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(95866);
        internalCounters.push_back(96101);
        internalCounters.push_back(96336);
        internalCounters.push_back(96571);
        internalCounters.push_back(96806);
        internalCounters.push_back(97041);
        internalCounters.push_back(97276);
        internalCounters.push_back(97511);
        internalCounters.push_back(97746);
        internalCounters.push_back(97981);
        internalCounters.push_back(98216);
        internalCounters.push_back(98451);
        internalCounters.push_back(98686);
        internalCounters.push_back(98921);
        internalCounters.push_back(99156);
        internalCounters.push_back(99391);
        internalCounters.push_back(99626);
        internalCounters.push_back(99861);
        internalCounters.push_back(100096);
        internalCounters.push_back(100331);
        internalCounters.push_back(100566);
        internalCounters.push_back(100801);
        internalCounters.push_back(101036);
        internalCounters.push_back(101271);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

