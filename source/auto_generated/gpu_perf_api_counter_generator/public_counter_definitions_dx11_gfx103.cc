//==============================================================================
// Copyright (c) 2010-2020 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief Public Counter Definitions for DX11 GFX103 
//==============================================================================

#include "gpa_counter.h"
#include "public_counter_definitions_dx11_gfx103.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDX11_Gfx103(GPA_DerivedCounters& c)
{
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105175);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24);
        internalCounters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26262);
        internalCounters.push_back(26594);
        internalCounters.push_back(26926);
        internalCounters.push_back(27258);
        internalCounters.push_back(26274);
        internalCounters.push_back(26606);
        internalCounters.push_back(26938);
        internalCounters.push_back(27270);
        internalCounters.push_back(25955);
        internalCounters.push_back(26287);
        internalCounters.push_back(26619);
        internalCounters.push_back(26951);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,12,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26262);
        internalCounters.push_back(26594);
        internalCounters.push_back(26926);
        internalCounters.push_back(27258);
        internalCounters.push_back(26274);
        internalCounters.push_back(26606);
        internalCounters.push_back(26938);
        internalCounters.push_back(27270);
        internalCounters.push_back(25955);
        internalCounters.push_back(26287);
        internalCounters.push_back(26619);
        internalCounters.push_back(26951);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105175);
        internalCounters.push_back(26262);
        internalCounters.push_back(26594);
        internalCounters.push_back(26926);
        internalCounters.push_back(27258);
        internalCounters.push_back(26274);
        internalCounters.push_back(26606);
        internalCounters.push_back(26938);
        internalCounters.push_back(27270);
        internalCounters.push_back(25955);
        internalCounters.push_back(26287);
        internalCounters.push_back(26619);
        internalCounters.push_back(26951);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,5,5,ifnotzero,9,9,ifnotzero,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,4,8,8,ifnotzero,12,12,ifnotzero,max,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(25988);
        internalCounters.push_back(26320);
        internalCounters.push_back(26652);
        internalCounters.push_back(26984);
        internalCounters.push_back(25995);
        internalCounters.push_back(26327);
        internalCounters.push_back(26659);
        internalCounters.push_back(26991);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(25988);
        internalCounters.push_back(26320);
        internalCounters.push_back(26652);
        internalCounters.push_back(26984);
        internalCounters.push_back(25995);
        internalCounters.push_back(26327);
        internalCounters.push_back(26659);
        internalCounters.push_back(26991);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105175);
        internalCounters.push_back(25988);
        internalCounters.push_back(26320);
        internalCounters.push_back(26652);
        internalCounters.push_back(26984);
        internalCounters.push_back(25995);
        internalCounters.push_back(26327);
        internalCounters.push_back(26659);
        internalCounters.push_back(26991);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(25955);
        internalCounters.push_back(26287);
        internalCounters.push_back(26619);
        internalCounters.push_back(26951);
        internalCounters.push_back(26262);
        internalCounters.push_back(26594);
        internalCounters.push_back(26926);
        internalCounters.push_back(27258);
        internalCounters.push_back(26268);
        internalCounters.push_back(26600);
        internalCounters.push_back(26932);
        internalCounters.push_back(27264);
        internalCounters.push_back(26280);
        internalCounters.push_back(26612);
        internalCounters.push_back(26944);
        internalCounters.push_back(27276);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DSBusy", "Timing", "The percentage of time the ShaderUnit has domain shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,16,/,(100),*,(100),min", "0c626e8a-9b82-b6d4-d9a3-578509316301");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(25955);
        internalCounters.push_back(26287);
        internalCounters.push_back(26619);
        internalCounters.push_back(26951);
        internalCounters.push_back(26262);
        internalCounters.push_back(26594);
        internalCounters.push_back(26926);
        internalCounters.push_back(27258);
        internalCounters.push_back(26268);
        internalCounters.push_back(26600);
        internalCounters.push_back(26932);
        internalCounters.push_back(27264);
        internalCounters.push_back(26280);
        internalCounters.push_back(26612);
        internalCounters.push_back(26944);
        internalCounters.push_back(27276);

        c.DefineDerivedCounter("DSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has domain shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max", "2f3f7561-0549-2232-536d-129ffc5f7703");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105175);
        internalCounters.push_back(25955);
        internalCounters.push_back(26287);
        internalCounters.push_back(26619);
        internalCounters.push_back(26951);
        internalCounters.push_back(26262);
        internalCounters.push_back(26594);
        internalCounters.push_back(26926);
        internalCounters.push_back(27258);
        internalCounters.push_back(26268);
        internalCounters.push_back(26600);
        internalCounters.push_back(26932);
        internalCounters.push_back(27264);
        internalCounters.push_back(26280);
        internalCounters.push_back(26612);
        internalCounters.push_back(26944);
        internalCounters.push_back(27276);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DSTime", "Timing", "Time domain shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,9,ifnotzero,13,ifnotzero,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,(0),4,8,12,ifnotzero,16,ifnotzero,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "bfe28947-c727-8a9f-aa59-c218e58bfba5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26014);
        internalCounters.push_back(26346);
        internalCounters.push_back(26678);
        internalCounters.push_back(27010);
        internalCounters.push_back(26034);
        internalCounters.push_back(26366);
        internalCounters.push_back(26698);
        internalCounters.push_back(27030);
        internalCounters.push_back(26015);
        internalCounters.push_back(26347);
        internalCounters.push_back(26679);
        internalCounters.push_back(27011);
        internalCounters.push_back(26035);
        internalCounters.push_back(26367);
        internalCounters.push_back(26699);
        internalCounters.push_back(27031);
        internalCounters.push_back(26016);
        internalCounters.push_back(26348);
        internalCounters.push_back(26680);
        internalCounters.push_back(27012);
        internalCounters.push_back(26036);
        internalCounters.push_back(26368);
        internalCounters.push_back(26700);
        internalCounters.push_back(27032);
        internalCounters.push_back(26017);
        internalCounters.push_back(26349);
        internalCounters.push_back(26681);
        internalCounters.push_back(27013);
        internalCounters.push_back(26037);
        internalCounters.push_back(26369);
        internalCounters.push_back(26701);
        internalCounters.push_back(27033);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4,32,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26014);
        internalCounters.push_back(26346);
        internalCounters.push_back(26678);
        internalCounters.push_back(27010);
        internalCounters.push_back(26034);
        internalCounters.push_back(26366);
        internalCounters.push_back(26698);
        internalCounters.push_back(27030);
        internalCounters.push_back(26015);
        internalCounters.push_back(26347);
        internalCounters.push_back(26679);
        internalCounters.push_back(27011);
        internalCounters.push_back(26035);
        internalCounters.push_back(26367);
        internalCounters.push_back(26699);
        internalCounters.push_back(27031);
        internalCounters.push_back(26016);
        internalCounters.push_back(26348);
        internalCounters.push_back(26680);
        internalCounters.push_back(27012);
        internalCounters.push_back(26036);
        internalCounters.push_back(26368);
        internalCounters.push_back(26700);
        internalCounters.push_back(27032);
        internalCounters.push_back(26017);
        internalCounters.push_back(26349);
        internalCounters.push_back(26681);
        internalCounters.push_back(27013);
        internalCounters.push_back(26037);
        internalCounters.push_back(26369);
        internalCounters.push_back(26701);
        internalCounters.push_back(27033);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105175);
        internalCounters.push_back(26014);
        internalCounters.push_back(26346);
        internalCounters.push_back(26678);
        internalCounters.push_back(27010);
        internalCounters.push_back(26034);
        internalCounters.push_back(26366);
        internalCounters.push_back(26698);
        internalCounters.push_back(27030);
        internalCounters.push_back(26015);
        internalCounters.push_back(26347);
        internalCounters.push_back(26679);
        internalCounters.push_back(27011);
        internalCounters.push_back(26035);
        internalCounters.push_back(26367);
        internalCounters.push_back(26699);
        internalCounters.push_back(27031);
        internalCounters.push_back(26016);
        internalCounters.push_back(26348);
        internalCounters.push_back(26680);
        internalCounters.push_back(27012);
        internalCounters.push_back(26036);
        internalCounters.push_back(26368);
        internalCounters.push_back(26700);
        internalCounters.push_back(27032);
        internalCounters.push_back(26017);
        internalCounters.push_back(26349);
        internalCounters.push_back(26681);
        internalCounters.push_back(27013);
        internalCounters.push_back(26037);
        internalCounters.push_back(26369);
        internalCounters.push_back(26701);
        internalCounters.push_back(27033);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,(0),4,8,ifnotzero,max4,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,(0),12,16,ifnotzero,max4,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,(0),20,24,ifnotzero,max4,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,(0),28,32,ifnotzero,max4,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(25999);
        internalCounters.push_back(26331);
        internalCounters.push_back(26663);
        internalCounters.push_back(26995);
        internalCounters.push_back(26003);
        internalCounters.push_back(26335);
        internalCounters.push_back(26667);
        internalCounters.push_back(26999);
        internalCounters.push_back(26005);
        internalCounters.push_back(26337);
        internalCounters.push_back(26669);
        internalCounters.push_back(27001);
        internalCounters.push_back(26009);
        internalCounters.push_back(26341);
        internalCounters.push_back(26673);
        internalCounters.push_back(27005);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(25999);
        internalCounters.push_back(26331);
        internalCounters.push_back(26663);
        internalCounters.push_back(26995);
        internalCounters.push_back(26003);
        internalCounters.push_back(26335);
        internalCounters.push_back(26667);
        internalCounters.push_back(26999);
        internalCounters.push_back(26005);
        internalCounters.push_back(26337);
        internalCounters.push_back(26669);
        internalCounters.push_back(27001);
        internalCounters.push_back(26009);
        internalCounters.push_back(26341);
        internalCounters.push_back(26673);
        internalCounters.push_back(27005);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(105175);
        internalCounters.push_back(25999);
        internalCounters.push_back(26331);
        internalCounters.push_back(26663);
        internalCounters.push_back(26995);
        internalCounters.push_back(26003);
        internalCounters.push_back(26335);
        internalCounters.push_back(26667);
        internalCounters.push_back(26999);
        internalCounters.push_back(26005);
        internalCounters.push_back(26337);
        internalCounters.push_back(26669);
        internalCounters.push_back(27001);
        internalCounters.push_back(26009);
        internalCounters.push_back(26341);
        internalCounters.push_back(26673);
        internalCounters.push_back(27005);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(104691);
        internalCounters.push_back(104830);
        internalCounters.push_back(104969);
        internalCounters.push_back(105108);
        internalCounters.push_back(104710);
        internalCounters.push_back(104849);
        internalCounters.push_back(104988);
        internalCounters.push_back(105127);
        internalCounters.push_back(104729);
        internalCounters.push_back(104868);
        internalCounters.push_back(105007);
        internalCounters.push_back(105146);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29394);
        internalCounters.push_back(29906);
        internalCounters.push_back(30418);
        internalCounters.push_back(30930);
        internalCounters.push_back(29334);
        internalCounters.push_back(29846);
        internalCounters.push_back(30358);
        internalCounters.push_back(30870);
        internalCounters.push_back(37586);
        internalCounters.push_back(38098);
        internalCounters.push_back(38610);
        internalCounters.push_back(39122);
        internalCounters.push_back(37526);
        internalCounters.push_back(38038);
        internalCounters.push_back(38550);
        internalCounters.push_back(39062);
        internalCounters.push_back(33490);
        internalCounters.push_back(34002);
        internalCounters.push_back(34514);
        internalCounters.push_back(35026);
        internalCounters.push_back(33430);
        internalCounters.push_back(33942);
        internalCounters.push_back(34454);
        internalCounters.push_back(34966);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29390);
        internalCounters.push_back(29902);
        internalCounters.push_back(30414);
        internalCounters.push_back(30926);
        internalCounters.push_back(29334);
        internalCounters.push_back(29846);
        internalCounters.push_back(30358);
        internalCounters.push_back(30870);
        internalCounters.push_back(37582);
        internalCounters.push_back(38094);
        internalCounters.push_back(38606);
        internalCounters.push_back(39118);
        internalCounters.push_back(37526);
        internalCounters.push_back(38038);
        internalCounters.push_back(38550);
        internalCounters.push_back(39062);
        internalCounters.push_back(33486);
        internalCounters.push_back(33998);
        internalCounters.push_back(34510);
        internalCounters.push_back(35022);
        internalCounters.push_back(33430);
        internalCounters.push_back(33942);
        internalCounters.push_back(34454);
        internalCounters.push_back(34966);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29447);
        internalCounters.push_back(29959);
        internalCounters.push_back(30471);
        internalCounters.push_back(30983);
        internalCounters.push_back(37639);
        internalCounters.push_back(38151);
        internalCounters.push_back(38663);
        internalCounters.push_back(39175);
        internalCounters.push_back(33543);
        internalCounters.push_back(34055);
        internalCounters.push_back(34567);
        internalCounters.push_back(35079);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_SIMDS,/,12,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29447);
        internalCounters.push_back(29959);
        internalCounters.push_back(30471);
        internalCounters.push_back(30983);
        internalCounters.push_back(37639);
        internalCounters.push_back(38151);
        internalCounters.push_back(38663);
        internalCounters.push_back(39175);
        internalCounters.push_back(33543);
        internalCounters.push_back(34055);
        internalCounters.push_back(34567);
        internalCounters.push_back(35079);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29390);
        internalCounters.push_back(29902);
        internalCounters.push_back(30414);
        internalCounters.push_back(30926);
        internalCounters.push_back(37582);
        internalCounters.push_back(38094);
        internalCounters.push_back(38606);
        internalCounters.push_back(39118);
        internalCounters.push_back(33486);
        internalCounters.push_back(33998);
        internalCounters.push_back(34510);
        internalCounters.push_back(35022);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/,12,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29390);
        internalCounters.push_back(29902);
        internalCounters.push_back(30414);
        internalCounters.push_back(30926);
        internalCounters.push_back(37582);
        internalCounters.push_back(38094);
        internalCounters.push_back(38606);
        internalCounters.push_back(39118);
        internalCounters.push_back(33486);
        internalCounters.push_back(33998);
        internalCounters.push_back(34510);
        internalCounters.push_back(35022);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(104704);
        internalCounters.push_back(104843);
        internalCounters.push_back(104982);
        internalCounters.push_back(105121);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39634);
        internalCounters.push_back(40146);
        internalCounters.push_back(40658);
        internalCounters.push_back(41170);
        internalCounters.push_back(39574);
        internalCounters.push_back(40086);
        internalCounters.push_back(40598);
        internalCounters.push_back(41110);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39630);
        internalCounters.push_back(40142);
        internalCounters.push_back(40654);
        internalCounters.push_back(41166);
        internalCounters.push_back(39574);
        internalCounters.push_back(40086);
        internalCounters.push_back(40598);
        internalCounters.push_back(41110);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39687);
        internalCounters.push_back(40199);
        internalCounters.push_back(40711);
        internalCounters.push_back(41223);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39687);
        internalCounters.push_back(40199);
        internalCounters.push_back(40711);
        internalCounters.push_back(41223);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39630);
        internalCounters.push_back(40142);
        internalCounters.push_back(40654);
        internalCounters.push_back(41166);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(39630);
        internalCounters.push_back(40142);
        internalCounters.push_back(40654);
        internalCounters.push_back(41166);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(104729);
        internalCounters.push_back(104868);
        internalCounters.push_back(105007);
        internalCounters.push_back(105146);
        internalCounters.push_back(104691);
        internalCounters.push_back(104830);
        internalCounters.push_back(104969);
        internalCounters.push_back(105108);
        internalCounters.push_back(104710);
        internalCounters.push_back(104849);
        internalCounters.push_back(104988);
        internalCounters.push_back(105127);

        c.DefineDerivedCounter("DSVerticesIn", "DomainShader", "The number of vertices processed by the DS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,ifnotzero", "b88d9d05-2418-e639-4e3d-3a5815855f8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(33490);
        internalCounters.push_back(34002);
        internalCounters.push_back(34514);
        internalCounters.push_back(35026);
        internalCounters.push_back(33430);
        internalCounters.push_back(33942);
        internalCounters.push_back(34454);
        internalCounters.push_back(34966);
        internalCounters.push_back(29394);
        internalCounters.push_back(29906);
        internalCounters.push_back(30418);
        internalCounters.push_back(30930);
        internalCounters.push_back(29334);
        internalCounters.push_back(29846);
        internalCounters.push_back(30358);
        internalCounters.push_back(30870);
        internalCounters.push_back(29338);
        internalCounters.push_back(29850);
        internalCounters.push_back(30362);
        internalCounters.push_back(30874);
        internalCounters.push_back(37530);
        internalCounters.push_back(38042);
        internalCounters.push_back(38554);
        internalCounters.push_back(39066);

        c.DefineDerivedCounter("DSVALUInstCount", "DomainShader", "Average number of vector ALU instructions executed in the DS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "03a3e949-82f9-be4d-7228-5eb5ad80915a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(33486);
        internalCounters.push_back(33998);
        internalCounters.push_back(34510);
        internalCounters.push_back(35022);
        internalCounters.push_back(33430);
        internalCounters.push_back(33942);
        internalCounters.push_back(34454);
        internalCounters.push_back(34966);
        internalCounters.push_back(29390);
        internalCounters.push_back(29902);
        internalCounters.push_back(30414);
        internalCounters.push_back(30926);
        internalCounters.push_back(29334);
        internalCounters.push_back(29846);
        internalCounters.push_back(30358);
        internalCounters.push_back(30870);
        internalCounters.push_back(29338);
        internalCounters.push_back(29850);
        internalCounters.push_back(30362);
        internalCounters.push_back(30874);
        internalCounters.push_back(37530);
        internalCounters.push_back(38042);
        internalCounters.push_back(38554);
        internalCounters.push_back(39066);

        c.DefineDerivedCounter("DSSALUInstCount", "DomainShader", "Average number of scalar ALU instructions executed in the DS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "73daa728-483e-95d0-5b40-504719aadc1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13907);
        internalCounters.push_back(14183);
        internalCounters.push_back(14459);
        internalCounters.push_back(14735);
        internalCounters.push_back(13911);
        internalCounters.push_back(14187);
        internalCounters.push_back(14463);
        internalCounters.push_back(14739);
        internalCounters.push_back(13863);
        internalCounters.push_back(14139);
        internalCounters.push_back(14415);
        internalCounters.push_back(14691);
        internalCounters.push_back(13875);
        internalCounters.push_back(14151);
        internalCounters.push_back(14427);
        internalCounters.push_back(14703);
        internalCounters.push_back(13864);
        internalCounters.push_back(14140);
        internalCounters.push_back(14416);
        internalCounters.push_back(14692);
        internalCounters.push_back(13876);
        internalCounters.push_back(14152);
        internalCounters.push_back(14428);
        internalCounters.push_back(14704);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13907);
        internalCounters.push_back(14183);
        internalCounters.push_back(14459);
        internalCounters.push_back(14735);
        internalCounters.push_back(13911);
        internalCounters.push_back(14187);
        internalCounters.push_back(14463);
        internalCounters.push_back(14739);
        internalCounters.push_back(13863);
        internalCounters.push_back(14139);
        internalCounters.push_back(14415);
        internalCounters.push_back(14691);
        internalCounters.push_back(13875);
        internalCounters.push_back(14151);
        internalCounters.push_back(14427);
        internalCounters.push_back(14703);
        internalCounters.push_back(13864);
        internalCounters.push_back(14140);
        internalCounters.push_back(14416);
        internalCounters.push_back(14692);
        internalCounters.push_back(13876);
        internalCounters.push_back(14152);
        internalCounters.push_back(14428);
        internalCounters.push_back(14704);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13810);
        internalCounters.push_back(14086);
        internalCounters.push_back(14362);
        internalCounters.push_back(14638);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13816);
        internalCounters.push_back(14092);
        internalCounters.push_back(14368);
        internalCounters.push_back(14644);
        internalCounters.push_back(13856);
        internalCounters.push_back(14132);
        internalCounters.push_back(14408);
        internalCounters.push_back(14684);
        internalCounters.push_back(13857);
        internalCounters.push_back(14133);
        internalCounters.push_back(14409);
        internalCounters.push_back(14685);
        internalCounters.push_back(13858);
        internalCounters.push_back(14134);
        internalCounters.push_back(14410);
        internalCounters.push_back(14686);
        internalCounters.push_back(13859);
        internalCounters.push_back(14135);
        internalCounters.push_back(14411);
        internalCounters.push_back(14687);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum20", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13823);
        internalCounters.push_back(14099);
        internalCounters.push_back(14375);
        internalCounters.push_back(14651);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13911);
        internalCounters.push_back(14187);
        internalCounters.push_back(14463);
        internalCounters.push_back(14739);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,max4,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(13911);
        internalCounters.push_back(14187);
        internalCounters.push_back(14463);
        internalCounters.push_back(14739);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,max4", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24166);
        internalCounters.push_back(24391);
        internalCounters.push_back(24616);
        internalCounters.push_back(24841);
        internalCounters.push_back(25066);
        internalCounters.push_back(25291);
        internalCounters.push_back(25516);
        internalCounters.push_back(25741);
        internalCounters.push_back(24171);
        internalCounters.push_back(24396);
        internalCounters.push_back(24621);
        internalCounters.push_back(24846);
        internalCounters.push_back(25071);
        internalCounters.push_back(25296);
        internalCounters.push_back(25521);
        internalCounters.push_back(25746);
        internalCounters.push_back(24176);
        internalCounters.push_back(24401);
        internalCounters.push_back(24626);
        internalCounters.push_back(24851);
        internalCounters.push_back(25076);
        internalCounters.push_back(25301);
        internalCounters.push_back(25526);
        internalCounters.push_back(25751);
        internalCounters.push_back(24181);
        internalCounters.push_back(24406);
        internalCounters.push_back(24631);
        internalCounters.push_back(24856);
        internalCounters.push_back(25081);
        internalCounters.push_back(25306);
        internalCounters.push_back(25531);
        internalCounters.push_back(25756);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24168);
        internalCounters.push_back(24393);
        internalCounters.push_back(24618);
        internalCounters.push_back(24843);
        internalCounters.push_back(25068);
        internalCounters.push_back(25293);
        internalCounters.push_back(25518);
        internalCounters.push_back(25743);
        internalCounters.push_back(24173);
        internalCounters.push_back(24398);
        internalCounters.push_back(24623);
        internalCounters.push_back(24848);
        internalCounters.push_back(25073);
        internalCounters.push_back(25298);
        internalCounters.push_back(25523);
        internalCounters.push_back(25748);
        internalCounters.push_back(24178);
        internalCounters.push_back(24403);
        internalCounters.push_back(24628);
        internalCounters.push_back(24853);
        internalCounters.push_back(25078);
        internalCounters.push_back(25303);
        internalCounters.push_back(25528);
        internalCounters.push_back(25753);
        internalCounters.push_back(24183);
        internalCounters.push_back(24408);
        internalCounters.push_back(24633);
        internalCounters.push_back(24858);
        internalCounters.push_back(25083);
        internalCounters.push_back(25308);
        internalCounters.push_back(25533);
        internalCounters.push_back(25758);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32,32,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24168);
        internalCounters.push_back(24393);
        internalCounters.push_back(24618);
        internalCounters.push_back(24843);
        internalCounters.push_back(25068);
        internalCounters.push_back(25293);
        internalCounters.push_back(25518);
        internalCounters.push_back(25743);
        internalCounters.push_back(24173);
        internalCounters.push_back(24398);
        internalCounters.push_back(24623);
        internalCounters.push_back(24848);
        internalCounters.push_back(25073);
        internalCounters.push_back(25298);
        internalCounters.push_back(25523);
        internalCounters.push_back(25748);
        internalCounters.push_back(24178);
        internalCounters.push_back(24403);
        internalCounters.push_back(24628);
        internalCounters.push_back(24853);
        internalCounters.push_back(25078);
        internalCounters.push_back(25303);
        internalCounters.push_back(25528);
        internalCounters.push_back(25753);
        internalCounters.push_back(24183);
        internalCounters.push_back(24408);
        internalCounters.push_back(24633);
        internalCounters.push_back(24858);
        internalCounters.push_back(25083);
        internalCounters.push_back(25308);
        internalCounters.push_back(25533);
        internalCounters.push_back(25758);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(35538);
        internalCounters.push_back(36050);
        internalCounters.push_back(36562);
        internalCounters.push_back(37074);
        internalCounters.push_back(35478);
        internalCounters.push_back(35990);
        internalCounters.push_back(36502);
        internalCounters.push_back(37014);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(35534);
        internalCounters.push_back(36046);
        internalCounters.push_back(36558);
        internalCounters.push_back(37070);
        internalCounters.push_back(35478);
        internalCounters.push_back(35990);
        internalCounters.push_back(36502);
        internalCounters.push_back(37014);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(35591);
        internalCounters.push_back(36103);
        internalCounters.push_back(36615);
        internalCounters.push_back(37127);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(35591);
        internalCounters.push_back(36103);
        internalCounters.push_back(36615);
        internalCounters.push_back(37127);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(35534);
        internalCounters.push_back(36046);
        internalCounters.push_back(36558);
        internalCounters.push_back(37070);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(35534);
        internalCounters.push_back(36046);
        internalCounters.push_back(36558);
        internalCounters.push_back(37070);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26003);
        internalCounters.push_back(26335);
        internalCounters.push_back(26667);
        internalCounters.push_back(26999);
        internalCounters.push_back(26009);
        internalCounters.push_back(26341);
        internalCounters.push_back(26673);
        internalCounters.push_back(27005);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);
        internalCounters.push_back(41626);
        internalCounters.push_back(42138);
        internalCounters.push_back(42650);
        internalCounters.push_back(43162);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41682);
        internalCounters.push_back(42194);
        internalCounters.push_back(42706);
        internalCounters.push_back(43218);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41700);
        internalCounters.push_back(42212);
        internalCounters.push_back(42724);
        internalCounters.push_back(43236);
        internalCounters.push_back(41735);
        internalCounters.push_back(42247);
        internalCounters.push_back(42759);
        internalCounters.push_back(43271);
        internalCounters.push_back(41623);
        internalCounters.push_back(42135);
        internalCounters.push_back(42647);
        internalCounters.push_back(43159);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of the wave size. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),(32),8,9,10,11,sum4,ifnotzero,*,/,(100),*,4,5,6,7,sum4,ifnotzero,(100),min,12,13,14,15,16,17,18,19,sum8,ifnotzero", "ae943d2a-76e1-bb68-e1e2-0e06c9031611");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41678);
        internalCounters.push_back(42190);
        internalCounters.push_back(42702);
        internalCounters.push_back(43214);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41687);
        internalCounters.push_back(42199);
        internalCounters.push_back(42711);
        internalCounters.push_back(43223);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41679);
        internalCounters.push_back(42191);
        internalCounters.push_back(42703);
        internalCounters.push_back(43215);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41688);
        internalCounters.push_back(42200);
        internalCounters.push_back(42712);
        internalCounters.push_back(43224);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41735);
        internalCounters.push_back(42247);
        internalCounters.push_back(42759);
        internalCounters.push_back(43271);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41735);
        internalCounters.push_back(42247);
        internalCounters.push_back(42759);
        internalCounters.push_back(43271);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41678);
        internalCounters.push_back(42190);
        internalCounters.push_back(42702);
        internalCounters.push_back(43214);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41678);
        internalCounters.push_back(42190);
        internalCounters.push_back(42702);
        internalCounters.push_back(43214);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43681);
        internalCounters.push_back(43917);
        internalCounters.push_back(44153);
        internalCounters.push_back(44389);
        internalCounters.push_back(44625);
        internalCounters.push_back(44861);
        internalCounters.push_back(45097);
        internalCounters.push_back(45333);
        internalCounters.push_back(45569);
        internalCounters.push_back(45805);
        internalCounters.push_back(46041);
        internalCounters.push_back(46277);
        internalCounters.push_back(46513);
        internalCounters.push_back(46749);
        internalCounters.push_back(46985);
        internalCounters.push_back(47221);
        internalCounters.push_back(47457);
        internalCounters.push_back(47693);
        internalCounters.push_back(47929);
        internalCounters.push_back(48165);
        internalCounters.push_back(48401);
        internalCounters.push_back(48637);
        internalCounters.push_back(48873);
        internalCounters.push_back(49109);
        internalCounters.push_back(49345);
        internalCounters.push_back(49581);
        internalCounters.push_back(49817);
        internalCounters.push_back(50053);
        internalCounters.push_back(50289);
        internalCounters.push_back(50525);
        internalCounters.push_back(50761);
        internalCounters.push_back(50997);
        internalCounters.push_back(51233);
        internalCounters.push_back(51469);
        internalCounters.push_back(51705);
        internalCounters.push_back(51941);
        internalCounters.push_back(52177);
        internalCounters.push_back(52413);
        internalCounters.push_back(52649);
        internalCounters.push_back(52885);
        internalCounters.push_back(53121);
        internalCounters.push_back(53357);
        internalCounters.push_back(53593);
        internalCounters.push_back(53829);
        internalCounters.push_back(54065);
        internalCounters.push_back(54301);
        internalCounters.push_back(54537);
        internalCounters.push_back(54773);
        internalCounters.push_back(55009);
        internalCounters.push_back(55245);
        internalCounters.push_back(55481);
        internalCounters.push_back(55717);
        internalCounters.push_back(55953);
        internalCounters.push_back(56189);
        internalCounters.push_back(56425);
        internalCounters.push_back(56661);
        internalCounters.push_back(56897);
        internalCounters.push_back(57133);
        internalCounters.push_back(57369);
        internalCounters.push_back(57605);
        internalCounters.push_back(57841);
        internalCounters.push_back(58077);
        internalCounters.push_back(58313);
        internalCounters.push_back(58549);
        internalCounters.push_back(58785);
        internalCounters.push_back(59021);
        internalCounters.push_back(59257);
        internalCounters.push_back(59493);
        internalCounters.push_back(59729);
        internalCounters.push_back(59965);
        internalCounters.push_back(60201);
        internalCounters.push_back(60437);
        internalCounters.push_back(60673);
        internalCounters.push_back(60909);
        internalCounters.push_back(61145);
        internalCounters.push_back(61381);
        internalCounters.push_back(61617);
        internalCounters.push_back(61853);
        internalCounters.push_back(62089);
        internalCounters.push_back(62325);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43681);
        internalCounters.push_back(43917);
        internalCounters.push_back(44153);
        internalCounters.push_back(44389);
        internalCounters.push_back(44625);
        internalCounters.push_back(44861);
        internalCounters.push_back(45097);
        internalCounters.push_back(45333);
        internalCounters.push_back(45569);
        internalCounters.push_back(45805);
        internalCounters.push_back(46041);
        internalCounters.push_back(46277);
        internalCounters.push_back(46513);
        internalCounters.push_back(46749);
        internalCounters.push_back(46985);
        internalCounters.push_back(47221);
        internalCounters.push_back(47457);
        internalCounters.push_back(47693);
        internalCounters.push_back(47929);
        internalCounters.push_back(48165);
        internalCounters.push_back(48401);
        internalCounters.push_back(48637);
        internalCounters.push_back(48873);
        internalCounters.push_back(49109);
        internalCounters.push_back(49345);
        internalCounters.push_back(49581);
        internalCounters.push_back(49817);
        internalCounters.push_back(50053);
        internalCounters.push_back(50289);
        internalCounters.push_back(50525);
        internalCounters.push_back(50761);
        internalCounters.push_back(50997);
        internalCounters.push_back(51233);
        internalCounters.push_back(51469);
        internalCounters.push_back(51705);
        internalCounters.push_back(51941);
        internalCounters.push_back(52177);
        internalCounters.push_back(52413);
        internalCounters.push_back(52649);
        internalCounters.push_back(52885);
        internalCounters.push_back(53121);
        internalCounters.push_back(53357);
        internalCounters.push_back(53593);
        internalCounters.push_back(53829);
        internalCounters.push_back(54065);
        internalCounters.push_back(54301);
        internalCounters.push_back(54537);
        internalCounters.push_back(54773);
        internalCounters.push_back(55009);
        internalCounters.push_back(55245);
        internalCounters.push_back(55481);
        internalCounters.push_back(55717);
        internalCounters.push_back(55953);
        internalCounters.push_back(56189);
        internalCounters.push_back(56425);
        internalCounters.push_back(56661);
        internalCounters.push_back(56897);
        internalCounters.push_back(57133);
        internalCounters.push_back(57369);
        internalCounters.push_back(57605);
        internalCounters.push_back(57841);
        internalCounters.push_back(58077);
        internalCounters.push_back(58313);
        internalCounters.push_back(58549);
        internalCounters.push_back(58785);
        internalCounters.push_back(59021);
        internalCounters.push_back(59257);
        internalCounters.push_back(59493);
        internalCounters.push_back(59729);
        internalCounters.push_back(59965);
        internalCounters.push_back(60201);
        internalCounters.push_back(60437);
        internalCounters.push_back(60673);
        internalCounters.push_back(60909);
        internalCounters.push_back(61145);
        internalCounters.push_back(61381);
        internalCounters.push_back(61617);
        internalCounters.push_back(61853);
        internalCounters.push_back(62089);
        internalCounters.push_back(62325);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77942);
        internalCounters.push_back(78019);
        internalCounters.push_back(78096);
        internalCounters.push_back(78173);
        internalCounters.push_back(78250);
        internalCounters.push_back(78327);
        internalCounters.push_back(78404);
        internalCounters.push_back(78481);
        internalCounters.push_back(78558);
        internalCounters.push_back(78635);
        internalCounters.push_back(78712);
        internalCounters.push_back(78789);
        internalCounters.push_back(78866);
        internalCounters.push_back(78943);
        internalCounters.push_back(79020);
        internalCounters.push_back(79097);
        internalCounters.push_back(79174);
        internalCounters.push_back(79251);
        internalCounters.push_back(79328);
        internalCounters.push_back(79405);
        internalCounters.push_back(79482);
        internalCounters.push_back(79559);
        internalCounters.push_back(79636);
        internalCounters.push_back(79713);
        internalCounters.push_back(79790);
        internalCounters.push_back(79867);
        internalCounters.push_back(79944);
        internalCounters.push_back(80021);
        internalCounters.push_back(80098);
        internalCounters.push_back(80175);
        internalCounters.push_back(80252);
        internalCounters.push_back(80329);
        internalCounters.push_back(80406);
        internalCounters.push_back(80483);
        internalCounters.push_back(80560);
        internalCounters.push_back(80637);
        internalCounters.push_back(80714);
        internalCounters.push_back(80791);
        internalCounters.push_back(80868);
        internalCounters.push_back(80945);
        internalCounters.push_back(81022);
        internalCounters.push_back(81099);
        internalCounters.push_back(81176);
        internalCounters.push_back(81253);
        internalCounters.push_back(81330);
        internalCounters.push_back(81407);
        internalCounters.push_back(81484);
        internalCounters.push_back(81561);
        internalCounters.push_back(81638);
        internalCounters.push_back(81715);
        internalCounters.push_back(81792);
        internalCounters.push_back(81869);
        internalCounters.push_back(81946);
        internalCounters.push_back(82023);
        internalCounters.push_back(82100);
        internalCounters.push_back(82177);
        internalCounters.push_back(82254);
        internalCounters.push_back(82331);
        internalCounters.push_back(82408);
        internalCounters.push_back(82485);
        internalCounters.push_back(82562);
        internalCounters.push_back(82639);
        internalCounters.push_back(82716);
        internalCounters.push_back(82793);
        internalCounters.push_back(82870);
        internalCounters.push_back(82947);
        internalCounters.push_back(83024);
        internalCounters.push_back(83101);
        internalCounters.push_back(83178);
        internalCounters.push_back(83255);
        internalCounters.push_back(83332);
        internalCounters.push_back(83409);
        internalCounters.push_back(83486);
        internalCounters.push_back(83563);
        internalCounters.push_back(83640);
        internalCounters.push_back(83717);
        internalCounters.push_back(83794);
        internalCounters.push_back(83871);
        internalCounters.push_back(83948);
        internalCounters.push_back(84025);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77942);
        internalCounters.push_back(78019);
        internalCounters.push_back(78096);
        internalCounters.push_back(78173);
        internalCounters.push_back(78250);
        internalCounters.push_back(78327);
        internalCounters.push_back(78404);
        internalCounters.push_back(78481);
        internalCounters.push_back(78558);
        internalCounters.push_back(78635);
        internalCounters.push_back(78712);
        internalCounters.push_back(78789);
        internalCounters.push_back(78866);
        internalCounters.push_back(78943);
        internalCounters.push_back(79020);
        internalCounters.push_back(79097);
        internalCounters.push_back(79174);
        internalCounters.push_back(79251);
        internalCounters.push_back(79328);
        internalCounters.push_back(79405);
        internalCounters.push_back(79482);
        internalCounters.push_back(79559);
        internalCounters.push_back(79636);
        internalCounters.push_back(79713);
        internalCounters.push_back(79790);
        internalCounters.push_back(79867);
        internalCounters.push_back(79944);
        internalCounters.push_back(80021);
        internalCounters.push_back(80098);
        internalCounters.push_back(80175);
        internalCounters.push_back(80252);
        internalCounters.push_back(80329);
        internalCounters.push_back(80406);
        internalCounters.push_back(80483);
        internalCounters.push_back(80560);
        internalCounters.push_back(80637);
        internalCounters.push_back(80714);
        internalCounters.push_back(80791);
        internalCounters.push_back(80868);
        internalCounters.push_back(80945);
        internalCounters.push_back(81022);
        internalCounters.push_back(81099);
        internalCounters.push_back(81176);
        internalCounters.push_back(81253);
        internalCounters.push_back(81330);
        internalCounters.push_back(81407);
        internalCounters.push_back(81484);
        internalCounters.push_back(81561);
        internalCounters.push_back(81638);
        internalCounters.push_back(81715);
        internalCounters.push_back(81792);
        internalCounters.push_back(81869);
        internalCounters.push_back(81946);
        internalCounters.push_back(82023);
        internalCounters.push_back(82100);
        internalCounters.push_back(82177);
        internalCounters.push_back(82254);
        internalCounters.push_back(82331);
        internalCounters.push_back(82408);
        internalCounters.push_back(82485);
        internalCounters.push_back(82562);
        internalCounters.push_back(82639);
        internalCounters.push_back(82716);
        internalCounters.push_back(82793);
        internalCounters.push_back(82870);
        internalCounters.push_back(82947);
        internalCounters.push_back(83024);
        internalCounters.push_back(83101);
        internalCounters.push_back(83178);
        internalCounters.push_back(83255);
        internalCounters.push_back(83332);
        internalCounters.push_back(83409);
        internalCounters.push_back(83486);
        internalCounters.push_back(83563);
        internalCounters.push_back(83640);
        internalCounters.push_back(83717);
        internalCounters.push_back(83794);
        internalCounters.push_back(83871);
        internalCounters.push_back(83948);
        internalCounters.push_back(84025);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99243);
        internalCounters.push_back(99497);
        internalCounters.push_back(99751);
        internalCounters.push_back(100005);
        internalCounters.push_back(100259);
        internalCounters.push_back(100513);
        internalCounters.push_back(100767);
        internalCounters.push_back(101021);
        internalCounters.push_back(101275);
        internalCounters.push_back(101529);
        internalCounters.push_back(101783);
        internalCounters.push_back(102037);
        internalCounters.push_back(102291);
        internalCounters.push_back(102545);
        internalCounters.push_back(102799);
        internalCounters.push_back(103053);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*,17,18,19,20,21,22,23,24,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99243);
        internalCounters.push_back(99497);
        internalCounters.push_back(99751);
        internalCounters.push_back(100005);
        internalCounters.push_back(100259);
        internalCounters.push_back(100513);
        internalCounters.push_back(100767);
        internalCounters.push_back(101021);
        internalCounters.push_back(101275);
        internalCounters.push_back(101529);
        internalCounters.push_back(101783);
        internalCounters.push_back(102037);
        internalCounters.push_back(102291);
        internalCounters.push_back(102545);
        internalCounters.push_back(102799);
        internalCounters.push_back(103053);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,17,18,19,20,21,22,23,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41673);
        internalCounters.push_back(42185);
        internalCounters.push_back(42697);
        internalCounters.push_back(43209);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41677);
        internalCounters.push_back(42189);
        internalCounters.push_back(42701);
        internalCounters.push_back(43213);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41649);
        internalCounters.push_back(42161);
        internalCounters.push_back(42673);
        internalCounters.push_back(43185);
        internalCounters.push_back(41622);
        internalCounters.push_back(42134);
        internalCounters.push_back(42646);
        internalCounters.push_back(43158);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,4,5,6,7,sum4,ifnotzero,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41649);
        internalCounters.push_back(42161);
        internalCounters.push_back(42673);
        internalCounters.push_back(43185);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41903);
        internalCounters.push_back(42415);
        internalCounters.push_back(42927);
        internalCounters.push_back(43439);
        internalCounters.push_back(24);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(41903);
        internalCounters.push_back(42415);
        internalCounters.push_back(42927);
        internalCounters.push_back(43439);
        internalCounters.push_back(26000);
        internalCounters.push_back(26332);
        internalCounters.push_back(26664);
        internalCounters.push_back(26996);
        internalCounters.push_back(26006);
        internalCounters.push_back(26338);
        internalCounters.push_back(26670);
        internalCounters.push_back(27002);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43681);
        internalCounters.push_back(43917);
        internalCounters.push_back(44153);
        internalCounters.push_back(44389);
        internalCounters.push_back(44625);
        internalCounters.push_back(44861);
        internalCounters.push_back(45097);
        internalCounters.push_back(45333);
        internalCounters.push_back(45569);
        internalCounters.push_back(45805);
        internalCounters.push_back(46041);
        internalCounters.push_back(46277);
        internalCounters.push_back(46513);
        internalCounters.push_back(46749);
        internalCounters.push_back(46985);
        internalCounters.push_back(47221);
        internalCounters.push_back(47457);
        internalCounters.push_back(47693);
        internalCounters.push_back(47929);
        internalCounters.push_back(48165);
        internalCounters.push_back(48401);
        internalCounters.push_back(48637);
        internalCounters.push_back(48873);
        internalCounters.push_back(49109);
        internalCounters.push_back(49345);
        internalCounters.push_back(49581);
        internalCounters.push_back(49817);
        internalCounters.push_back(50053);
        internalCounters.push_back(50289);
        internalCounters.push_back(50525);
        internalCounters.push_back(50761);
        internalCounters.push_back(50997);
        internalCounters.push_back(51233);
        internalCounters.push_back(51469);
        internalCounters.push_back(51705);
        internalCounters.push_back(51941);
        internalCounters.push_back(52177);
        internalCounters.push_back(52413);
        internalCounters.push_back(52649);
        internalCounters.push_back(52885);
        internalCounters.push_back(53121);
        internalCounters.push_back(53357);
        internalCounters.push_back(53593);
        internalCounters.push_back(53829);
        internalCounters.push_back(54065);
        internalCounters.push_back(54301);
        internalCounters.push_back(54537);
        internalCounters.push_back(54773);
        internalCounters.push_back(55009);
        internalCounters.push_back(55245);
        internalCounters.push_back(55481);
        internalCounters.push_back(55717);
        internalCounters.push_back(55953);
        internalCounters.push_back(56189);
        internalCounters.push_back(56425);
        internalCounters.push_back(56661);
        internalCounters.push_back(56897);
        internalCounters.push_back(57133);
        internalCounters.push_back(57369);
        internalCounters.push_back(57605);
        internalCounters.push_back(57841);
        internalCounters.push_back(58077);
        internalCounters.push_back(58313);
        internalCounters.push_back(58549);
        internalCounters.push_back(58785);
        internalCounters.push_back(59021);
        internalCounters.push_back(59257);
        internalCounters.push_back(59493);
        internalCounters.push_back(59729);
        internalCounters.push_back(59965);
        internalCounters.push_back(60201);
        internalCounters.push_back(60437);
        internalCounters.push_back(60673);
        internalCounters.push_back(60909);
        internalCounters.push_back(61145);
        internalCounters.push_back(61381);
        internalCounters.push_back(61617);
        internalCounters.push_back(61853);
        internalCounters.push_back(62089);
        internalCounters.push_back(62325);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43681);
        internalCounters.push_back(43917);
        internalCounters.push_back(44153);
        internalCounters.push_back(44389);
        internalCounters.push_back(44625);
        internalCounters.push_back(44861);
        internalCounters.push_back(45097);
        internalCounters.push_back(45333);
        internalCounters.push_back(45569);
        internalCounters.push_back(45805);
        internalCounters.push_back(46041);
        internalCounters.push_back(46277);
        internalCounters.push_back(46513);
        internalCounters.push_back(46749);
        internalCounters.push_back(46985);
        internalCounters.push_back(47221);
        internalCounters.push_back(47457);
        internalCounters.push_back(47693);
        internalCounters.push_back(47929);
        internalCounters.push_back(48165);
        internalCounters.push_back(48401);
        internalCounters.push_back(48637);
        internalCounters.push_back(48873);
        internalCounters.push_back(49109);
        internalCounters.push_back(49345);
        internalCounters.push_back(49581);
        internalCounters.push_back(49817);
        internalCounters.push_back(50053);
        internalCounters.push_back(50289);
        internalCounters.push_back(50525);
        internalCounters.push_back(50761);
        internalCounters.push_back(50997);
        internalCounters.push_back(51233);
        internalCounters.push_back(51469);
        internalCounters.push_back(51705);
        internalCounters.push_back(51941);
        internalCounters.push_back(52177);
        internalCounters.push_back(52413);
        internalCounters.push_back(52649);
        internalCounters.push_back(52885);
        internalCounters.push_back(53121);
        internalCounters.push_back(53357);
        internalCounters.push_back(53593);
        internalCounters.push_back(53829);
        internalCounters.push_back(54065);
        internalCounters.push_back(54301);
        internalCounters.push_back(54537);
        internalCounters.push_back(54773);
        internalCounters.push_back(55009);
        internalCounters.push_back(55245);
        internalCounters.push_back(55481);
        internalCounters.push_back(55717);
        internalCounters.push_back(55953);
        internalCounters.push_back(56189);
        internalCounters.push_back(56425);
        internalCounters.push_back(56661);
        internalCounters.push_back(56897);
        internalCounters.push_back(57133);
        internalCounters.push_back(57369);
        internalCounters.push_back(57605);
        internalCounters.push_back(57841);
        internalCounters.push_back(58077);
        internalCounters.push_back(58313);
        internalCounters.push_back(58549);
        internalCounters.push_back(58785);
        internalCounters.push_back(59021);
        internalCounters.push_back(59257);
        internalCounters.push_back(59493);
        internalCounters.push_back(59729);
        internalCounters.push_back(59965);
        internalCounters.push_back(60201);
        internalCounters.push_back(60437);
        internalCounters.push_back(60673);
        internalCounters.push_back(60909);
        internalCounters.push_back(61145);
        internalCounters.push_back(61381);
        internalCounters.push_back(61617);
        internalCounters.push_back(61853);
        internalCounters.push_back(62089);
        internalCounters.push_back(62325);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43755);
        internalCounters.push_back(43991);
        internalCounters.push_back(44227);
        internalCounters.push_back(44463);
        internalCounters.push_back(44699);
        internalCounters.push_back(44935);
        internalCounters.push_back(45171);
        internalCounters.push_back(45407);
        internalCounters.push_back(45643);
        internalCounters.push_back(45879);
        internalCounters.push_back(46115);
        internalCounters.push_back(46351);
        internalCounters.push_back(46587);
        internalCounters.push_back(46823);
        internalCounters.push_back(47059);
        internalCounters.push_back(47295);
        internalCounters.push_back(47531);
        internalCounters.push_back(47767);
        internalCounters.push_back(48003);
        internalCounters.push_back(48239);
        internalCounters.push_back(48475);
        internalCounters.push_back(48711);
        internalCounters.push_back(48947);
        internalCounters.push_back(49183);
        internalCounters.push_back(49419);
        internalCounters.push_back(49655);
        internalCounters.push_back(49891);
        internalCounters.push_back(50127);
        internalCounters.push_back(50363);
        internalCounters.push_back(50599);
        internalCounters.push_back(50835);
        internalCounters.push_back(51071);
        internalCounters.push_back(51307);
        internalCounters.push_back(51543);
        internalCounters.push_back(51779);
        internalCounters.push_back(52015);
        internalCounters.push_back(52251);
        internalCounters.push_back(52487);
        internalCounters.push_back(52723);
        internalCounters.push_back(52959);
        internalCounters.push_back(53195);
        internalCounters.push_back(53431);
        internalCounters.push_back(53667);
        internalCounters.push_back(53903);
        internalCounters.push_back(54139);
        internalCounters.push_back(54375);
        internalCounters.push_back(54611);
        internalCounters.push_back(54847);
        internalCounters.push_back(55083);
        internalCounters.push_back(55319);
        internalCounters.push_back(55555);
        internalCounters.push_back(55791);
        internalCounters.push_back(56027);
        internalCounters.push_back(56263);
        internalCounters.push_back(56499);
        internalCounters.push_back(56735);
        internalCounters.push_back(56971);
        internalCounters.push_back(57207);
        internalCounters.push_back(57443);
        internalCounters.push_back(57679);
        internalCounters.push_back(57915);
        internalCounters.push_back(58151);
        internalCounters.push_back(58387);
        internalCounters.push_back(58623);
        internalCounters.push_back(58859);
        internalCounters.push_back(59095);
        internalCounters.push_back(59331);
        internalCounters.push_back(59567);
        internalCounters.push_back(59803);
        internalCounters.push_back(60039);
        internalCounters.push_back(60275);
        internalCounters.push_back(60511);
        internalCounters.push_back(60747);
        internalCounters.push_back(60983);
        internalCounters.push_back(61219);
        internalCounters.push_back(61455);
        internalCounters.push_back(61691);
        internalCounters.push_back(61927);
        internalCounters.push_back(62163);
        internalCounters.push_back(62399);
        internalCounters.push_back(43756);
        internalCounters.push_back(43992);
        internalCounters.push_back(44228);
        internalCounters.push_back(44464);
        internalCounters.push_back(44700);
        internalCounters.push_back(44936);
        internalCounters.push_back(45172);
        internalCounters.push_back(45408);
        internalCounters.push_back(45644);
        internalCounters.push_back(45880);
        internalCounters.push_back(46116);
        internalCounters.push_back(46352);
        internalCounters.push_back(46588);
        internalCounters.push_back(46824);
        internalCounters.push_back(47060);
        internalCounters.push_back(47296);
        internalCounters.push_back(47532);
        internalCounters.push_back(47768);
        internalCounters.push_back(48004);
        internalCounters.push_back(48240);
        internalCounters.push_back(48476);
        internalCounters.push_back(48712);
        internalCounters.push_back(48948);
        internalCounters.push_back(49184);
        internalCounters.push_back(49420);
        internalCounters.push_back(49656);
        internalCounters.push_back(49892);
        internalCounters.push_back(50128);
        internalCounters.push_back(50364);
        internalCounters.push_back(50600);
        internalCounters.push_back(50836);
        internalCounters.push_back(51072);
        internalCounters.push_back(51308);
        internalCounters.push_back(51544);
        internalCounters.push_back(51780);
        internalCounters.push_back(52016);
        internalCounters.push_back(52252);
        internalCounters.push_back(52488);
        internalCounters.push_back(52724);
        internalCounters.push_back(52960);
        internalCounters.push_back(53196);
        internalCounters.push_back(53432);
        internalCounters.push_back(53668);
        internalCounters.push_back(53904);
        internalCounters.push_back(54140);
        internalCounters.push_back(54376);
        internalCounters.push_back(54612);
        internalCounters.push_back(54848);
        internalCounters.push_back(55084);
        internalCounters.push_back(55320);
        internalCounters.push_back(55556);
        internalCounters.push_back(55792);
        internalCounters.push_back(56028);
        internalCounters.push_back(56264);
        internalCounters.push_back(56500);
        internalCounters.push_back(56736);
        internalCounters.push_back(56972);
        internalCounters.push_back(57208);
        internalCounters.push_back(57444);
        internalCounters.push_back(57680);
        internalCounters.push_back(57916);
        internalCounters.push_back(58152);
        internalCounters.push_back(58388);
        internalCounters.push_back(58624);
        internalCounters.push_back(58860);
        internalCounters.push_back(59096);
        internalCounters.push_back(59332);
        internalCounters.push_back(59568);
        internalCounters.push_back(59804);
        internalCounters.push_back(60040);
        internalCounters.push_back(60276);
        internalCounters.push_back(60512);
        internalCounters.push_back(60748);
        internalCounters.push_back(60984);
        internalCounters.push_back(61220);
        internalCounters.push_back(61456);
        internalCounters.push_back(61692);
        internalCounters.push_back(61928);
        internalCounters.push_back(62164);
        internalCounters.push_back(62400);
        internalCounters.push_back(43757);
        internalCounters.push_back(43993);
        internalCounters.push_back(44229);
        internalCounters.push_back(44465);
        internalCounters.push_back(44701);
        internalCounters.push_back(44937);
        internalCounters.push_back(45173);
        internalCounters.push_back(45409);
        internalCounters.push_back(45645);
        internalCounters.push_back(45881);
        internalCounters.push_back(46117);
        internalCounters.push_back(46353);
        internalCounters.push_back(46589);
        internalCounters.push_back(46825);
        internalCounters.push_back(47061);
        internalCounters.push_back(47297);
        internalCounters.push_back(47533);
        internalCounters.push_back(47769);
        internalCounters.push_back(48005);
        internalCounters.push_back(48241);
        internalCounters.push_back(48477);
        internalCounters.push_back(48713);
        internalCounters.push_back(48949);
        internalCounters.push_back(49185);
        internalCounters.push_back(49421);
        internalCounters.push_back(49657);
        internalCounters.push_back(49893);
        internalCounters.push_back(50129);
        internalCounters.push_back(50365);
        internalCounters.push_back(50601);
        internalCounters.push_back(50837);
        internalCounters.push_back(51073);
        internalCounters.push_back(51309);
        internalCounters.push_back(51545);
        internalCounters.push_back(51781);
        internalCounters.push_back(52017);
        internalCounters.push_back(52253);
        internalCounters.push_back(52489);
        internalCounters.push_back(52725);
        internalCounters.push_back(52961);
        internalCounters.push_back(53197);
        internalCounters.push_back(53433);
        internalCounters.push_back(53669);
        internalCounters.push_back(53905);
        internalCounters.push_back(54141);
        internalCounters.push_back(54377);
        internalCounters.push_back(54613);
        internalCounters.push_back(54849);
        internalCounters.push_back(55085);
        internalCounters.push_back(55321);
        internalCounters.push_back(55557);
        internalCounters.push_back(55793);
        internalCounters.push_back(56029);
        internalCounters.push_back(56265);
        internalCounters.push_back(56501);
        internalCounters.push_back(56737);
        internalCounters.push_back(56973);
        internalCounters.push_back(57209);
        internalCounters.push_back(57445);
        internalCounters.push_back(57681);
        internalCounters.push_back(57917);
        internalCounters.push_back(58153);
        internalCounters.push_back(58389);
        internalCounters.push_back(58625);
        internalCounters.push_back(58861);
        internalCounters.push_back(59097);
        internalCounters.push_back(59333);
        internalCounters.push_back(59569);
        internalCounters.push_back(59805);
        internalCounters.push_back(60041);
        internalCounters.push_back(60277);
        internalCounters.push_back(60513);
        internalCounters.push_back(60749);
        internalCounters.push_back(60985);
        internalCounters.push_back(61221);
        internalCounters.push_back(61457);
        internalCounters.push_back(61693);
        internalCounters.push_back(61929);
        internalCounters.push_back(62165);
        internalCounters.push_back(62401);
        internalCounters.push_back(43758);
        internalCounters.push_back(43994);
        internalCounters.push_back(44230);
        internalCounters.push_back(44466);
        internalCounters.push_back(44702);
        internalCounters.push_back(44938);
        internalCounters.push_back(45174);
        internalCounters.push_back(45410);
        internalCounters.push_back(45646);
        internalCounters.push_back(45882);
        internalCounters.push_back(46118);
        internalCounters.push_back(46354);
        internalCounters.push_back(46590);
        internalCounters.push_back(46826);
        internalCounters.push_back(47062);
        internalCounters.push_back(47298);
        internalCounters.push_back(47534);
        internalCounters.push_back(47770);
        internalCounters.push_back(48006);
        internalCounters.push_back(48242);
        internalCounters.push_back(48478);
        internalCounters.push_back(48714);
        internalCounters.push_back(48950);
        internalCounters.push_back(49186);
        internalCounters.push_back(49422);
        internalCounters.push_back(49658);
        internalCounters.push_back(49894);
        internalCounters.push_back(50130);
        internalCounters.push_back(50366);
        internalCounters.push_back(50602);
        internalCounters.push_back(50838);
        internalCounters.push_back(51074);
        internalCounters.push_back(51310);
        internalCounters.push_back(51546);
        internalCounters.push_back(51782);
        internalCounters.push_back(52018);
        internalCounters.push_back(52254);
        internalCounters.push_back(52490);
        internalCounters.push_back(52726);
        internalCounters.push_back(52962);
        internalCounters.push_back(53198);
        internalCounters.push_back(53434);
        internalCounters.push_back(53670);
        internalCounters.push_back(53906);
        internalCounters.push_back(54142);
        internalCounters.push_back(54378);
        internalCounters.push_back(54614);
        internalCounters.push_back(54850);
        internalCounters.push_back(55086);
        internalCounters.push_back(55322);
        internalCounters.push_back(55558);
        internalCounters.push_back(55794);
        internalCounters.push_back(56030);
        internalCounters.push_back(56266);
        internalCounters.push_back(56502);
        internalCounters.push_back(56738);
        internalCounters.push_back(56974);
        internalCounters.push_back(57210);
        internalCounters.push_back(57446);
        internalCounters.push_back(57682);
        internalCounters.push_back(57918);
        internalCounters.push_back(58154);
        internalCounters.push_back(58390);
        internalCounters.push_back(58626);
        internalCounters.push_back(58862);
        internalCounters.push_back(59098);
        internalCounters.push_back(59334);
        internalCounters.push_back(59570);
        internalCounters.push_back(59806);
        internalCounters.push_back(60042);
        internalCounters.push_back(60278);
        internalCounters.push_back(60514);
        internalCounters.push_back(60750);
        internalCounters.push_back(60986);
        internalCounters.push_back(61222);
        internalCounters.push_back(61458);
        internalCounters.push_back(61694);
        internalCounters.push_back(61930);
        internalCounters.push_back(62166);
        internalCounters.push_back(62402);
        internalCounters.push_back(43759);
        internalCounters.push_back(43995);
        internalCounters.push_back(44231);
        internalCounters.push_back(44467);
        internalCounters.push_back(44703);
        internalCounters.push_back(44939);
        internalCounters.push_back(45175);
        internalCounters.push_back(45411);
        internalCounters.push_back(45647);
        internalCounters.push_back(45883);
        internalCounters.push_back(46119);
        internalCounters.push_back(46355);
        internalCounters.push_back(46591);
        internalCounters.push_back(46827);
        internalCounters.push_back(47063);
        internalCounters.push_back(47299);
        internalCounters.push_back(47535);
        internalCounters.push_back(47771);
        internalCounters.push_back(48007);
        internalCounters.push_back(48243);
        internalCounters.push_back(48479);
        internalCounters.push_back(48715);
        internalCounters.push_back(48951);
        internalCounters.push_back(49187);
        internalCounters.push_back(49423);
        internalCounters.push_back(49659);
        internalCounters.push_back(49895);
        internalCounters.push_back(50131);
        internalCounters.push_back(50367);
        internalCounters.push_back(50603);
        internalCounters.push_back(50839);
        internalCounters.push_back(51075);
        internalCounters.push_back(51311);
        internalCounters.push_back(51547);
        internalCounters.push_back(51783);
        internalCounters.push_back(52019);
        internalCounters.push_back(52255);
        internalCounters.push_back(52491);
        internalCounters.push_back(52727);
        internalCounters.push_back(52963);
        internalCounters.push_back(53199);
        internalCounters.push_back(53435);
        internalCounters.push_back(53671);
        internalCounters.push_back(53907);
        internalCounters.push_back(54143);
        internalCounters.push_back(54379);
        internalCounters.push_back(54615);
        internalCounters.push_back(54851);
        internalCounters.push_back(55087);
        internalCounters.push_back(55323);
        internalCounters.push_back(55559);
        internalCounters.push_back(55795);
        internalCounters.push_back(56031);
        internalCounters.push_back(56267);
        internalCounters.push_back(56503);
        internalCounters.push_back(56739);
        internalCounters.push_back(56975);
        internalCounters.push_back(57211);
        internalCounters.push_back(57447);
        internalCounters.push_back(57683);
        internalCounters.push_back(57919);
        internalCounters.push_back(58155);
        internalCounters.push_back(58391);
        internalCounters.push_back(58627);
        internalCounters.push_back(58863);
        internalCounters.push_back(59099);
        internalCounters.push_back(59335);
        internalCounters.push_back(59571);
        internalCounters.push_back(59807);
        internalCounters.push_back(60043);
        internalCounters.push_back(60279);
        internalCounters.push_back(60515);
        internalCounters.push_back(60751);
        internalCounters.push_back(60987);
        internalCounters.push_back(61223);
        internalCounters.push_back(61459);
        internalCounters.push_back(61695);
        internalCounters.push_back(61931);
        internalCounters.push_back(62167);
        internalCounters.push_back(62403);
        internalCounters.push_back(43760);
        internalCounters.push_back(43996);
        internalCounters.push_back(44232);
        internalCounters.push_back(44468);
        internalCounters.push_back(44704);
        internalCounters.push_back(44940);
        internalCounters.push_back(45176);
        internalCounters.push_back(45412);
        internalCounters.push_back(45648);
        internalCounters.push_back(45884);
        internalCounters.push_back(46120);
        internalCounters.push_back(46356);
        internalCounters.push_back(46592);
        internalCounters.push_back(46828);
        internalCounters.push_back(47064);
        internalCounters.push_back(47300);
        internalCounters.push_back(47536);
        internalCounters.push_back(47772);
        internalCounters.push_back(48008);
        internalCounters.push_back(48244);
        internalCounters.push_back(48480);
        internalCounters.push_back(48716);
        internalCounters.push_back(48952);
        internalCounters.push_back(49188);
        internalCounters.push_back(49424);
        internalCounters.push_back(49660);
        internalCounters.push_back(49896);
        internalCounters.push_back(50132);
        internalCounters.push_back(50368);
        internalCounters.push_back(50604);
        internalCounters.push_back(50840);
        internalCounters.push_back(51076);
        internalCounters.push_back(51312);
        internalCounters.push_back(51548);
        internalCounters.push_back(51784);
        internalCounters.push_back(52020);
        internalCounters.push_back(52256);
        internalCounters.push_back(52492);
        internalCounters.push_back(52728);
        internalCounters.push_back(52964);
        internalCounters.push_back(53200);
        internalCounters.push_back(53436);
        internalCounters.push_back(53672);
        internalCounters.push_back(53908);
        internalCounters.push_back(54144);
        internalCounters.push_back(54380);
        internalCounters.push_back(54616);
        internalCounters.push_back(54852);
        internalCounters.push_back(55088);
        internalCounters.push_back(55324);
        internalCounters.push_back(55560);
        internalCounters.push_back(55796);
        internalCounters.push_back(56032);
        internalCounters.push_back(56268);
        internalCounters.push_back(56504);
        internalCounters.push_back(56740);
        internalCounters.push_back(56976);
        internalCounters.push_back(57212);
        internalCounters.push_back(57448);
        internalCounters.push_back(57684);
        internalCounters.push_back(57920);
        internalCounters.push_back(58156);
        internalCounters.push_back(58392);
        internalCounters.push_back(58628);
        internalCounters.push_back(58864);
        internalCounters.push_back(59100);
        internalCounters.push_back(59336);
        internalCounters.push_back(59572);
        internalCounters.push_back(59808);
        internalCounters.push_back(60044);
        internalCounters.push_back(60280);
        internalCounters.push_back(60516);
        internalCounters.push_back(60752);
        internalCounters.push_back(60988);
        internalCounters.push_back(61224);
        internalCounters.push_back(61460);
        internalCounters.push_back(61696);
        internalCounters.push_back(61932);
        internalCounters.push_back(62168);
        internalCounters.push_back(62404);
        internalCounters.push_back(43761);
        internalCounters.push_back(43997);
        internalCounters.push_back(44233);
        internalCounters.push_back(44469);
        internalCounters.push_back(44705);
        internalCounters.push_back(44941);
        internalCounters.push_back(45177);
        internalCounters.push_back(45413);
        internalCounters.push_back(45649);
        internalCounters.push_back(45885);
        internalCounters.push_back(46121);
        internalCounters.push_back(46357);
        internalCounters.push_back(46593);
        internalCounters.push_back(46829);
        internalCounters.push_back(47065);
        internalCounters.push_back(47301);
        internalCounters.push_back(47537);
        internalCounters.push_back(47773);
        internalCounters.push_back(48009);
        internalCounters.push_back(48245);
        internalCounters.push_back(48481);
        internalCounters.push_back(48717);
        internalCounters.push_back(48953);
        internalCounters.push_back(49189);
        internalCounters.push_back(49425);
        internalCounters.push_back(49661);
        internalCounters.push_back(49897);
        internalCounters.push_back(50133);
        internalCounters.push_back(50369);
        internalCounters.push_back(50605);
        internalCounters.push_back(50841);
        internalCounters.push_back(51077);
        internalCounters.push_back(51313);
        internalCounters.push_back(51549);
        internalCounters.push_back(51785);
        internalCounters.push_back(52021);
        internalCounters.push_back(52257);
        internalCounters.push_back(52493);
        internalCounters.push_back(52729);
        internalCounters.push_back(52965);
        internalCounters.push_back(53201);
        internalCounters.push_back(53437);
        internalCounters.push_back(53673);
        internalCounters.push_back(53909);
        internalCounters.push_back(54145);
        internalCounters.push_back(54381);
        internalCounters.push_back(54617);
        internalCounters.push_back(54853);
        internalCounters.push_back(55089);
        internalCounters.push_back(55325);
        internalCounters.push_back(55561);
        internalCounters.push_back(55797);
        internalCounters.push_back(56033);
        internalCounters.push_back(56269);
        internalCounters.push_back(56505);
        internalCounters.push_back(56741);
        internalCounters.push_back(56977);
        internalCounters.push_back(57213);
        internalCounters.push_back(57449);
        internalCounters.push_back(57685);
        internalCounters.push_back(57921);
        internalCounters.push_back(58157);
        internalCounters.push_back(58393);
        internalCounters.push_back(58629);
        internalCounters.push_back(58865);
        internalCounters.push_back(59101);
        internalCounters.push_back(59337);
        internalCounters.push_back(59573);
        internalCounters.push_back(59809);
        internalCounters.push_back(60045);
        internalCounters.push_back(60281);
        internalCounters.push_back(60517);
        internalCounters.push_back(60753);
        internalCounters.push_back(60989);
        internalCounters.push_back(61225);
        internalCounters.push_back(61461);
        internalCounters.push_back(61697);
        internalCounters.push_back(61933);
        internalCounters.push_back(62169);
        internalCounters.push_back(62405);
        internalCounters.push_back(43762);
        internalCounters.push_back(43998);
        internalCounters.push_back(44234);
        internalCounters.push_back(44470);
        internalCounters.push_back(44706);
        internalCounters.push_back(44942);
        internalCounters.push_back(45178);
        internalCounters.push_back(45414);
        internalCounters.push_back(45650);
        internalCounters.push_back(45886);
        internalCounters.push_back(46122);
        internalCounters.push_back(46358);
        internalCounters.push_back(46594);
        internalCounters.push_back(46830);
        internalCounters.push_back(47066);
        internalCounters.push_back(47302);
        internalCounters.push_back(47538);
        internalCounters.push_back(47774);
        internalCounters.push_back(48010);
        internalCounters.push_back(48246);
        internalCounters.push_back(48482);
        internalCounters.push_back(48718);
        internalCounters.push_back(48954);
        internalCounters.push_back(49190);
        internalCounters.push_back(49426);
        internalCounters.push_back(49662);
        internalCounters.push_back(49898);
        internalCounters.push_back(50134);
        internalCounters.push_back(50370);
        internalCounters.push_back(50606);
        internalCounters.push_back(50842);
        internalCounters.push_back(51078);
        internalCounters.push_back(51314);
        internalCounters.push_back(51550);
        internalCounters.push_back(51786);
        internalCounters.push_back(52022);
        internalCounters.push_back(52258);
        internalCounters.push_back(52494);
        internalCounters.push_back(52730);
        internalCounters.push_back(52966);
        internalCounters.push_back(53202);
        internalCounters.push_back(53438);
        internalCounters.push_back(53674);
        internalCounters.push_back(53910);
        internalCounters.push_back(54146);
        internalCounters.push_back(54382);
        internalCounters.push_back(54618);
        internalCounters.push_back(54854);
        internalCounters.push_back(55090);
        internalCounters.push_back(55326);
        internalCounters.push_back(55562);
        internalCounters.push_back(55798);
        internalCounters.push_back(56034);
        internalCounters.push_back(56270);
        internalCounters.push_back(56506);
        internalCounters.push_back(56742);
        internalCounters.push_back(56978);
        internalCounters.push_back(57214);
        internalCounters.push_back(57450);
        internalCounters.push_back(57686);
        internalCounters.push_back(57922);
        internalCounters.push_back(58158);
        internalCounters.push_back(58394);
        internalCounters.push_back(58630);
        internalCounters.push_back(58866);
        internalCounters.push_back(59102);
        internalCounters.push_back(59338);
        internalCounters.push_back(59574);
        internalCounters.push_back(59810);
        internalCounters.push_back(60046);
        internalCounters.push_back(60282);
        internalCounters.push_back(60518);
        internalCounters.push_back(60754);
        internalCounters.push_back(60990);
        internalCounters.push_back(61226);
        internalCounters.push_back(61462);
        internalCounters.push_back(61698);
        internalCounters.push_back(61934);
        internalCounters.push_back(62170);
        internalCounters.push_back(62406);
        internalCounters.push_back(43763);
        internalCounters.push_back(43999);
        internalCounters.push_back(44235);
        internalCounters.push_back(44471);
        internalCounters.push_back(44707);
        internalCounters.push_back(44943);
        internalCounters.push_back(45179);
        internalCounters.push_back(45415);
        internalCounters.push_back(45651);
        internalCounters.push_back(45887);
        internalCounters.push_back(46123);
        internalCounters.push_back(46359);
        internalCounters.push_back(46595);
        internalCounters.push_back(46831);
        internalCounters.push_back(47067);
        internalCounters.push_back(47303);
        internalCounters.push_back(47539);
        internalCounters.push_back(47775);
        internalCounters.push_back(48011);
        internalCounters.push_back(48247);
        internalCounters.push_back(48483);
        internalCounters.push_back(48719);
        internalCounters.push_back(48955);
        internalCounters.push_back(49191);
        internalCounters.push_back(49427);
        internalCounters.push_back(49663);
        internalCounters.push_back(49899);
        internalCounters.push_back(50135);
        internalCounters.push_back(50371);
        internalCounters.push_back(50607);
        internalCounters.push_back(50843);
        internalCounters.push_back(51079);
        internalCounters.push_back(51315);
        internalCounters.push_back(51551);
        internalCounters.push_back(51787);
        internalCounters.push_back(52023);
        internalCounters.push_back(52259);
        internalCounters.push_back(52495);
        internalCounters.push_back(52731);
        internalCounters.push_back(52967);
        internalCounters.push_back(53203);
        internalCounters.push_back(53439);
        internalCounters.push_back(53675);
        internalCounters.push_back(53911);
        internalCounters.push_back(54147);
        internalCounters.push_back(54383);
        internalCounters.push_back(54619);
        internalCounters.push_back(54855);
        internalCounters.push_back(55091);
        internalCounters.push_back(55327);
        internalCounters.push_back(55563);
        internalCounters.push_back(55799);
        internalCounters.push_back(56035);
        internalCounters.push_back(56271);
        internalCounters.push_back(56507);
        internalCounters.push_back(56743);
        internalCounters.push_back(56979);
        internalCounters.push_back(57215);
        internalCounters.push_back(57451);
        internalCounters.push_back(57687);
        internalCounters.push_back(57923);
        internalCounters.push_back(58159);
        internalCounters.push_back(58395);
        internalCounters.push_back(58631);
        internalCounters.push_back(58867);
        internalCounters.push_back(59103);
        internalCounters.push_back(59339);
        internalCounters.push_back(59575);
        internalCounters.push_back(59811);
        internalCounters.push_back(60047);
        internalCounters.push_back(60283);
        internalCounters.push_back(60519);
        internalCounters.push_back(60755);
        internalCounters.push_back(60991);
        internalCounters.push_back(61227);
        internalCounters.push_back(61463);
        internalCounters.push_back(61699);
        internalCounters.push_back(61935);
        internalCounters.push_back(62171);
        internalCounters.push_back(62407);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,(2),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,*,+,(4),160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,*,+,(6),240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,*,+,(8),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,*,+,(10),400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,*,+,(12),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,*,+,(14),560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,*,+,(16),640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,+,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,+,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,+,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,+,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,+,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7560);
        internalCounters.push_back(7951);
        internalCounters.push_back(8342);
        internalCounters.push_back(8733);
        internalCounters.push_back(9124);
        internalCounters.push_back(9515);
        internalCounters.push_back(9906);
        internalCounters.push_back(10297);
        internalCounters.push_back(10688);
        internalCounters.push_back(11079);
        internalCounters.push_back(11470);
        internalCounters.push_back(11861);
        internalCounters.push_back(12252);
        internalCounters.push_back(12643);
        internalCounters.push_back(13034);
        internalCounters.push_back(13425);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7560);
        internalCounters.push_back(7951);
        internalCounters.push_back(8342);
        internalCounters.push_back(8733);
        internalCounters.push_back(9124);
        internalCounters.push_back(9515);
        internalCounters.push_back(9906);
        internalCounters.push_back(10297);
        internalCounters.push_back(10688);
        internalCounters.push_back(11079);
        internalCounters.push_back(11470);
        internalCounters.push_back(11861);
        internalCounters.push_back(12252);
        internalCounters.push_back(12643);
        internalCounters.push_back(13034);
        internalCounters.push_back(13425);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7431);
        internalCounters.push_back(7822);
        internalCounters.push_back(8213);
        internalCounters.push_back(8604);
        internalCounters.push_back(8995);
        internalCounters.push_back(9386);
        internalCounters.push_back(9777);
        internalCounters.push_back(10168);
        internalCounters.push_back(10559);
        internalCounters.push_back(10950);
        internalCounters.push_back(11341);
        internalCounters.push_back(11732);
        internalCounters.push_back(12123);
        internalCounters.push_back(12514);
        internalCounters.push_back(12905);
        internalCounters.push_back(13296);
        internalCounters.push_back(7420);
        internalCounters.push_back(7811);
        internalCounters.push_back(8202);
        internalCounters.push_back(8593);
        internalCounters.push_back(8984);
        internalCounters.push_back(9375);
        internalCounters.push_back(9766);
        internalCounters.push_back(10157);
        internalCounters.push_back(10548);
        internalCounters.push_back(10939);
        internalCounters.push_back(11330);
        internalCounters.push_back(11721);
        internalCounters.push_back(12112);
        internalCounters.push_back(12503);
        internalCounters.push_back(12894);
        internalCounters.push_back(13285);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7431);
        internalCounters.push_back(7822);
        internalCounters.push_back(8213);
        internalCounters.push_back(8604);
        internalCounters.push_back(8995);
        internalCounters.push_back(9386);
        internalCounters.push_back(9777);
        internalCounters.push_back(10168);
        internalCounters.push_back(10559);
        internalCounters.push_back(10950);
        internalCounters.push_back(11341);
        internalCounters.push_back(11732);
        internalCounters.push_back(12123);
        internalCounters.push_back(12514);
        internalCounters.push_back(12905);
        internalCounters.push_back(13296);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7420);
        internalCounters.push_back(7811);
        internalCounters.push_back(8202);
        internalCounters.push_back(8593);
        internalCounters.push_back(8984);
        internalCounters.push_back(9375);
        internalCounters.push_back(9766);
        internalCounters.push_back(10157);
        internalCounters.push_back(10548);
        internalCounters.push_back(10939);
        internalCounters.push_back(11330);
        internalCounters.push_back(11721);
        internalCounters.push_back(12112);
        internalCounters.push_back(12503);
        internalCounters.push_back(12894);
        internalCounters.push_back(13285);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7420);
        internalCounters.push_back(7811);
        internalCounters.push_back(8202);
        internalCounters.push_back(8593);
        internalCounters.push_back(8984);
        internalCounters.push_back(9375);
        internalCounters.push_back(9766);
        internalCounters.push_back(10157);
        internalCounters.push_back(10548);
        internalCounters.push_back(10939);
        internalCounters.push_back(11330);
        internalCounters.push_back(11721);
        internalCounters.push_back(12112);
        internalCounters.push_back(12503);
        internalCounters.push_back(12894);
        internalCounters.push_back(13285);
        internalCounters.push_back(7444);
        internalCounters.push_back(7835);
        internalCounters.push_back(8226);
        internalCounters.push_back(8617);
        internalCounters.push_back(9008);
        internalCounters.push_back(9399);
        internalCounters.push_back(9790);
        internalCounters.push_back(10181);
        internalCounters.push_back(10572);
        internalCounters.push_back(10963);
        internalCounters.push_back(11354);
        internalCounters.push_back(11745);
        internalCounters.push_back(12136);
        internalCounters.push_back(12527);
        internalCounters.push_back(12918);
        internalCounters.push_back(13309);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7444);
        internalCounters.push_back(7835);
        internalCounters.push_back(8226);
        internalCounters.push_back(8617);
        internalCounters.push_back(9008);
        internalCounters.push_back(9399);
        internalCounters.push_back(9790);
        internalCounters.push_back(10181);
        internalCounters.push_back(10572);
        internalCounters.push_back(10963);
        internalCounters.push_back(11354);
        internalCounters.push_back(11745);
        internalCounters.push_back(12136);
        internalCounters.push_back(12527);
        internalCounters.push_back(12918);
        internalCounters.push_back(13309);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7420);
        internalCounters.push_back(7811);
        internalCounters.push_back(8202);
        internalCounters.push_back(8593);
        internalCounters.push_back(8984);
        internalCounters.push_back(9375);
        internalCounters.push_back(9766);
        internalCounters.push_back(10157);
        internalCounters.push_back(10548);
        internalCounters.push_back(10939);
        internalCounters.push_back(11330);
        internalCounters.push_back(11721);
        internalCounters.push_back(12112);
        internalCounters.push_back(12503);
        internalCounters.push_back(12894);
        internalCounters.push_back(13285);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15065);
        internalCounters.push_back(15643);
        internalCounters.push_back(16221);
        internalCounters.push_back(16799);
        internalCounters.push_back(17377);
        internalCounters.push_back(17955);
        internalCounters.push_back(18533);
        internalCounters.push_back(19111);
        internalCounters.push_back(19689);
        internalCounters.push_back(20267);
        internalCounters.push_back(20845);
        internalCounters.push_back(21423);
        internalCounters.push_back(22001);
        internalCounters.push_back(22579);
        internalCounters.push_back(23157);
        internalCounters.push_back(23735);
        internalCounters.push_back(15066);
        internalCounters.push_back(15644);
        internalCounters.push_back(16222);
        internalCounters.push_back(16800);
        internalCounters.push_back(17378);
        internalCounters.push_back(17956);
        internalCounters.push_back(18534);
        internalCounters.push_back(19112);
        internalCounters.push_back(19690);
        internalCounters.push_back(20268);
        internalCounters.push_back(20846);
        internalCounters.push_back(21424);
        internalCounters.push_back(22002);
        internalCounters.push_back(22580);
        internalCounters.push_back(23158);
        internalCounters.push_back(23736);
        internalCounters.push_back(15067);
        internalCounters.push_back(15645);
        internalCounters.push_back(16223);
        internalCounters.push_back(16801);
        internalCounters.push_back(17379);
        internalCounters.push_back(17957);
        internalCounters.push_back(18535);
        internalCounters.push_back(19113);
        internalCounters.push_back(19691);
        internalCounters.push_back(20269);
        internalCounters.push_back(20847);
        internalCounters.push_back(21425);
        internalCounters.push_back(22003);
        internalCounters.push_back(22581);
        internalCounters.push_back(23159);
        internalCounters.push_back(23737);
        internalCounters.push_back(15068);
        internalCounters.push_back(15646);
        internalCounters.push_back(16224);
        internalCounters.push_back(16802);
        internalCounters.push_back(17380);
        internalCounters.push_back(17958);
        internalCounters.push_back(18536);
        internalCounters.push_back(19114);
        internalCounters.push_back(19692);
        internalCounters.push_back(20270);
        internalCounters.push_back(20848);
        internalCounters.push_back(21426);
        internalCounters.push_back(22004);
        internalCounters.push_back(22582);
        internalCounters.push_back(23160);
        internalCounters.push_back(23738);
        internalCounters.push_back(15141);
        internalCounters.push_back(15719);
        internalCounters.push_back(16297);
        internalCounters.push_back(16875);
        internalCounters.push_back(17453);
        internalCounters.push_back(18031);
        internalCounters.push_back(18609);
        internalCounters.push_back(19187);
        internalCounters.push_back(19765);
        internalCounters.push_back(20343);
        internalCounters.push_back(20921);
        internalCounters.push_back(21499);
        internalCounters.push_back(22077);
        internalCounters.push_back(22655);
        internalCounters.push_back(23233);
        internalCounters.push_back(23811);
        internalCounters.push_back(15142);
        internalCounters.push_back(15720);
        internalCounters.push_back(16298);
        internalCounters.push_back(16876);
        internalCounters.push_back(17454);
        internalCounters.push_back(18032);
        internalCounters.push_back(18610);
        internalCounters.push_back(19188);
        internalCounters.push_back(19766);
        internalCounters.push_back(20344);
        internalCounters.push_back(20922);
        internalCounters.push_back(21500);
        internalCounters.push_back(22078);
        internalCounters.push_back(22656);
        internalCounters.push_back(23234);
        internalCounters.push_back(23812);
        internalCounters.push_back(15143);
        internalCounters.push_back(15721);
        internalCounters.push_back(16299);
        internalCounters.push_back(16877);
        internalCounters.push_back(17455);
        internalCounters.push_back(18033);
        internalCounters.push_back(18611);
        internalCounters.push_back(19189);
        internalCounters.push_back(19767);
        internalCounters.push_back(20345);
        internalCounters.push_back(20923);
        internalCounters.push_back(21501);
        internalCounters.push_back(22079);
        internalCounters.push_back(22657);
        internalCounters.push_back(23235);
        internalCounters.push_back(23813);
        internalCounters.push_back(15144);
        internalCounters.push_back(15722);
        internalCounters.push_back(16300);
        internalCounters.push_back(16878);
        internalCounters.push_back(17456);
        internalCounters.push_back(18034);
        internalCounters.push_back(18612);
        internalCounters.push_back(19190);
        internalCounters.push_back(19768);
        internalCounters.push_back(20346);
        internalCounters.push_back(20924);
        internalCounters.push_back(21502);
        internalCounters.push_back(22080);
        internalCounters.push_back(22658);
        internalCounters.push_back(23236);
        internalCounters.push_back(23814);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15065);
        internalCounters.push_back(15643);
        internalCounters.push_back(16221);
        internalCounters.push_back(16799);
        internalCounters.push_back(17377);
        internalCounters.push_back(17955);
        internalCounters.push_back(18533);
        internalCounters.push_back(19111);
        internalCounters.push_back(19689);
        internalCounters.push_back(20267);
        internalCounters.push_back(20845);
        internalCounters.push_back(21423);
        internalCounters.push_back(22001);
        internalCounters.push_back(22579);
        internalCounters.push_back(23157);
        internalCounters.push_back(23735);
        internalCounters.push_back(15066);
        internalCounters.push_back(15644);
        internalCounters.push_back(16222);
        internalCounters.push_back(16800);
        internalCounters.push_back(17378);
        internalCounters.push_back(17956);
        internalCounters.push_back(18534);
        internalCounters.push_back(19112);
        internalCounters.push_back(19690);
        internalCounters.push_back(20268);
        internalCounters.push_back(20846);
        internalCounters.push_back(21424);
        internalCounters.push_back(22002);
        internalCounters.push_back(22580);
        internalCounters.push_back(23158);
        internalCounters.push_back(23736);
        internalCounters.push_back(15067);
        internalCounters.push_back(15645);
        internalCounters.push_back(16223);
        internalCounters.push_back(16801);
        internalCounters.push_back(17379);
        internalCounters.push_back(17957);
        internalCounters.push_back(18535);
        internalCounters.push_back(19113);
        internalCounters.push_back(19691);
        internalCounters.push_back(20269);
        internalCounters.push_back(20847);
        internalCounters.push_back(21425);
        internalCounters.push_back(22003);
        internalCounters.push_back(22581);
        internalCounters.push_back(23159);
        internalCounters.push_back(23737);
        internalCounters.push_back(15068);
        internalCounters.push_back(15646);
        internalCounters.push_back(16224);
        internalCounters.push_back(16802);
        internalCounters.push_back(17380);
        internalCounters.push_back(17958);
        internalCounters.push_back(18536);
        internalCounters.push_back(19114);
        internalCounters.push_back(19692);
        internalCounters.push_back(20270);
        internalCounters.push_back(20848);
        internalCounters.push_back(21426);
        internalCounters.push_back(22004);
        internalCounters.push_back(22582);
        internalCounters.push_back(23160);
        internalCounters.push_back(23738);
        internalCounters.push_back(15141);
        internalCounters.push_back(15719);
        internalCounters.push_back(16297);
        internalCounters.push_back(16875);
        internalCounters.push_back(17453);
        internalCounters.push_back(18031);
        internalCounters.push_back(18609);
        internalCounters.push_back(19187);
        internalCounters.push_back(19765);
        internalCounters.push_back(20343);
        internalCounters.push_back(20921);
        internalCounters.push_back(21499);
        internalCounters.push_back(22077);
        internalCounters.push_back(22655);
        internalCounters.push_back(23233);
        internalCounters.push_back(23811);
        internalCounters.push_back(15142);
        internalCounters.push_back(15720);
        internalCounters.push_back(16298);
        internalCounters.push_back(16876);
        internalCounters.push_back(17454);
        internalCounters.push_back(18032);
        internalCounters.push_back(18610);
        internalCounters.push_back(19188);
        internalCounters.push_back(19766);
        internalCounters.push_back(20344);
        internalCounters.push_back(20922);
        internalCounters.push_back(21500);
        internalCounters.push_back(22078);
        internalCounters.push_back(22656);
        internalCounters.push_back(23234);
        internalCounters.push_back(23812);
        internalCounters.push_back(15143);
        internalCounters.push_back(15721);
        internalCounters.push_back(16299);
        internalCounters.push_back(16877);
        internalCounters.push_back(17455);
        internalCounters.push_back(18033);
        internalCounters.push_back(18611);
        internalCounters.push_back(19189);
        internalCounters.push_back(19767);
        internalCounters.push_back(20345);
        internalCounters.push_back(20923);
        internalCounters.push_back(21501);
        internalCounters.push_back(22079);
        internalCounters.push_back(22657);
        internalCounters.push_back(23235);
        internalCounters.push_back(23813);
        internalCounters.push_back(15144);
        internalCounters.push_back(15722);
        internalCounters.push_back(16300);
        internalCounters.push_back(16878);
        internalCounters.push_back(17456);
        internalCounters.push_back(18034);
        internalCounters.push_back(18612);
        internalCounters.push_back(19190);
        internalCounters.push_back(19768);
        internalCounters.push_back(20346);
        internalCounters.push_back(20924);
        internalCounters.push_back(21502);
        internalCounters.push_back(22080);
        internalCounters.push_back(22658);
        internalCounters.push_back(23236);
        internalCounters.push_back(23814);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15141);
        internalCounters.push_back(15719);
        internalCounters.push_back(16297);
        internalCounters.push_back(16875);
        internalCounters.push_back(17453);
        internalCounters.push_back(18031);
        internalCounters.push_back(18609);
        internalCounters.push_back(19187);
        internalCounters.push_back(19765);
        internalCounters.push_back(20343);
        internalCounters.push_back(20921);
        internalCounters.push_back(21499);
        internalCounters.push_back(22077);
        internalCounters.push_back(22655);
        internalCounters.push_back(23233);
        internalCounters.push_back(23811);
        internalCounters.push_back(15142);
        internalCounters.push_back(15720);
        internalCounters.push_back(16298);
        internalCounters.push_back(16876);
        internalCounters.push_back(17454);
        internalCounters.push_back(18032);
        internalCounters.push_back(18610);
        internalCounters.push_back(19188);
        internalCounters.push_back(19766);
        internalCounters.push_back(20344);
        internalCounters.push_back(20922);
        internalCounters.push_back(21500);
        internalCounters.push_back(22078);
        internalCounters.push_back(22656);
        internalCounters.push_back(23234);
        internalCounters.push_back(23812);
        internalCounters.push_back(15143);
        internalCounters.push_back(15721);
        internalCounters.push_back(16299);
        internalCounters.push_back(16877);
        internalCounters.push_back(17455);
        internalCounters.push_back(18033);
        internalCounters.push_back(18611);
        internalCounters.push_back(19189);
        internalCounters.push_back(19767);
        internalCounters.push_back(20345);
        internalCounters.push_back(20923);
        internalCounters.push_back(21501);
        internalCounters.push_back(22079);
        internalCounters.push_back(22657);
        internalCounters.push_back(23235);
        internalCounters.push_back(23813);
        internalCounters.push_back(15144);
        internalCounters.push_back(15722);
        internalCounters.push_back(16300);
        internalCounters.push_back(16878);
        internalCounters.push_back(17456);
        internalCounters.push_back(18034);
        internalCounters.push_back(18612);
        internalCounters.push_back(19190);
        internalCounters.push_back(19768);
        internalCounters.push_back(20346);
        internalCounters.push_back(20924);
        internalCounters.push_back(21502);
        internalCounters.push_back(22080);
        internalCounters.push_back(22658);
        internalCounters.push_back(23236);
        internalCounters.push_back(23814);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15065);
        internalCounters.push_back(15643);
        internalCounters.push_back(16221);
        internalCounters.push_back(16799);
        internalCounters.push_back(17377);
        internalCounters.push_back(17955);
        internalCounters.push_back(18533);
        internalCounters.push_back(19111);
        internalCounters.push_back(19689);
        internalCounters.push_back(20267);
        internalCounters.push_back(20845);
        internalCounters.push_back(21423);
        internalCounters.push_back(22001);
        internalCounters.push_back(22579);
        internalCounters.push_back(23157);
        internalCounters.push_back(23735);
        internalCounters.push_back(15066);
        internalCounters.push_back(15644);
        internalCounters.push_back(16222);
        internalCounters.push_back(16800);
        internalCounters.push_back(17378);
        internalCounters.push_back(17956);
        internalCounters.push_back(18534);
        internalCounters.push_back(19112);
        internalCounters.push_back(19690);
        internalCounters.push_back(20268);
        internalCounters.push_back(20846);
        internalCounters.push_back(21424);
        internalCounters.push_back(22002);
        internalCounters.push_back(22580);
        internalCounters.push_back(23158);
        internalCounters.push_back(23736);
        internalCounters.push_back(15067);
        internalCounters.push_back(15645);
        internalCounters.push_back(16223);
        internalCounters.push_back(16801);
        internalCounters.push_back(17379);
        internalCounters.push_back(17957);
        internalCounters.push_back(18535);
        internalCounters.push_back(19113);
        internalCounters.push_back(19691);
        internalCounters.push_back(20269);
        internalCounters.push_back(20847);
        internalCounters.push_back(21425);
        internalCounters.push_back(22003);
        internalCounters.push_back(22581);
        internalCounters.push_back(23159);
        internalCounters.push_back(23737);
        internalCounters.push_back(15068);
        internalCounters.push_back(15646);
        internalCounters.push_back(16224);
        internalCounters.push_back(16802);
        internalCounters.push_back(17380);
        internalCounters.push_back(17958);
        internalCounters.push_back(18536);
        internalCounters.push_back(19114);
        internalCounters.push_back(19692);
        internalCounters.push_back(20270);
        internalCounters.push_back(20848);
        internalCounters.push_back(21426);
        internalCounters.push_back(22004);
        internalCounters.push_back(22582);
        internalCounters.push_back(23160);
        internalCounters.push_back(23738);
        internalCounters.push_back(15165);
        internalCounters.push_back(15743);
        internalCounters.push_back(16321);
        internalCounters.push_back(16899);
        internalCounters.push_back(17477);
        internalCounters.push_back(18055);
        internalCounters.push_back(18633);
        internalCounters.push_back(19211);
        internalCounters.push_back(19789);
        internalCounters.push_back(20367);
        internalCounters.push_back(20945);
        internalCounters.push_back(21523);
        internalCounters.push_back(22101);
        internalCounters.push_back(22679);
        internalCounters.push_back(23257);
        internalCounters.push_back(23835);
        internalCounters.push_back(15141);
        internalCounters.push_back(15719);
        internalCounters.push_back(16297);
        internalCounters.push_back(16875);
        internalCounters.push_back(17453);
        internalCounters.push_back(18031);
        internalCounters.push_back(18609);
        internalCounters.push_back(19187);
        internalCounters.push_back(19765);
        internalCounters.push_back(20343);
        internalCounters.push_back(20921);
        internalCounters.push_back(21499);
        internalCounters.push_back(22077);
        internalCounters.push_back(22655);
        internalCounters.push_back(23233);
        internalCounters.push_back(23811);
        internalCounters.push_back(15142);
        internalCounters.push_back(15720);
        internalCounters.push_back(16298);
        internalCounters.push_back(16876);
        internalCounters.push_back(17454);
        internalCounters.push_back(18032);
        internalCounters.push_back(18610);
        internalCounters.push_back(19188);
        internalCounters.push_back(19766);
        internalCounters.push_back(20344);
        internalCounters.push_back(20922);
        internalCounters.push_back(21500);
        internalCounters.push_back(22078);
        internalCounters.push_back(22656);
        internalCounters.push_back(23234);
        internalCounters.push_back(23812);
        internalCounters.push_back(15143);
        internalCounters.push_back(15721);
        internalCounters.push_back(16299);
        internalCounters.push_back(16877);
        internalCounters.push_back(17455);
        internalCounters.push_back(18033);
        internalCounters.push_back(18611);
        internalCounters.push_back(19189);
        internalCounters.push_back(19767);
        internalCounters.push_back(20345);
        internalCounters.push_back(20923);
        internalCounters.push_back(21501);
        internalCounters.push_back(22079);
        internalCounters.push_back(22657);
        internalCounters.push_back(23235);
        internalCounters.push_back(23813);
        internalCounters.push_back(15144);
        internalCounters.push_back(15722);
        internalCounters.push_back(16300);
        internalCounters.push_back(16878);
        internalCounters.push_back(17456);
        internalCounters.push_back(18034);
        internalCounters.push_back(18612);
        internalCounters.push_back(19190);
        internalCounters.push_back(19768);
        internalCounters.push_back(20346);
        internalCounters.push_back(20924);
        internalCounters.push_back(21502);
        internalCounters.push_back(22080);
        internalCounters.push_back(22658);
        internalCounters.push_back(23236);
        internalCounters.push_back(23814);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15065);
        internalCounters.push_back(15643);
        internalCounters.push_back(16221);
        internalCounters.push_back(16799);
        internalCounters.push_back(17377);
        internalCounters.push_back(17955);
        internalCounters.push_back(18533);
        internalCounters.push_back(19111);
        internalCounters.push_back(19689);
        internalCounters.push_back(20267);
        internalCounters.push_back(20845);
        internalCounters.push_back(21423);
        internalCounters.push_back(22001);
        internalCounters.push_back(22579);
        internalCounters.push_back(23157);
        internalCounters.push_back(23735);
        internalCounters.push_back(15066);
        internalCounters.push_back(15644);
        internalCounters.push_back(16222);
        internalCounters.push_back(16800);
        internalCounters.push_back(17378);
        internalCounters.push_back(17956);
        internalCounters.push_back(18534);
        internalCounters.push_back(19112);
        internalCounters.push_back(19690);
        internalCounters.push_back(20268);
        internalCounters.push_back(20846);
        internalCounters.push_back(21424);
        internalCounters.push_back(22002);
        internalCounters.push_back(22580);
        internalCounters.push_back(23158);
        internalCounters.push_back(23736);
        internalCounters.push_back(15067);
        internalCounters.push_back(15645);
        internalCounters.push_back(16223);
        internalCounters.push_back(16801);
        internalCounters.push_back(17379);
        internalCounters.push_back(17957);
        internalCounters.push_back(18535);
        internalCounters.push_back(19113);
        internalCounters.push_back(19691);
        internalCounters.push_back(20269);
        internalCounters.push_back(20847);
        internalCounters.push_back(21425);
        internalCounters.push_back(22003);
        internalCounters.push_back(22581);
        internalCounters.push_back(23159);
        internalCounters.push_back(23737);
        internalCounters.push_back(15068);
        internalCounters.push_back(15646);
        internalCounters.push_back(16224);
        internalCounters.push_back(16802);
        internalCounters.push_back(17380);
        internalCounters.push_back(17958);
        internalCounters.push_back(18536);
        internalCounters.push_back(19114);
        internalCounters.push_back(19692);
        internalCounters.push_back(20270);
        internalCounters.push_back(20848);
        internalCounters.push_back(21426);
        internalCounters.push_back(22004);
        internalCounters.push_back(22582);
        internalCounters.push_back(23160);
        internalCounters.push_back(23738);
        internalCounters.push_back(15165);
        internalCounters.push_back(15743);
        internalCounters.push_back(16321);
        internalCounters.push_back(16899);
        internalCounters.push_back(17477);
        internalCounters.push_back(18055);
        internalCounters.push_back(18633);
        internalCounters.push_back(19211);
        internalCounters.push_back(19789);
        internalCounters.push_back(20367);
        internalCounters.push_back(20945);
        internalCounters.push_back(21523);
        internalCounters.push_back(22101);
        internalCounters.push_back(22679);
        internalCounters.push_back(23257);
        internalCounters.push_back(23835);
        internalCounters.push_back(15141);
        internalCounters.push_back(15719);
        internalCounters.push_back(16297);
        internalCounters.push_back(16875);
        internalCounters.push_back(17453);
        internalCounters.push_back(18031);
        internalCounters.push_back(18609);
        internalCounters.push_back(19187);
        internalCounters.push_back(19765);
        internalCounters.push_back(20343);
        internalCounters.push_back(20921);
        internalCounters.push_back(21499);
        internalCounters.push_back(22077);
        internalCounters.push_back(22655);
        internalCounters.push_back(23233);
        internalCounters.push_back(23811);
        internalCounters.push_back(15142);
        internalCounters.push_back(15720);
        internalCounters.push_back(16298);
        internalCounters.push_back(16876);
        internalCounters.push_back(17454);
        internalCounters.push_back(18032);
        internalCounters.push_back(18610);
        internalCounters.push_back(19188);
        internalCounters.push_back(19766);
        internalCounters.push_back(20344);
        internalCounters.push_back(20922);
        internalCounters.push_back(21500);
        internalCounters.push_back(22078);
        internalCounters.push_back(22656);
        internalCounters.push_back(23234);
        internalCounters.push_back(23812);
        internalCounters.push_back(15143);
        internalCounters.push_back(15721);
        internalCounters.push_back(16299);
        internalCounters.push_back(16877);
        internalCounters.push_back(17455);
        internalCounters.push_back(18033);
        internalCounters.push_back(18611);
        internalCounters.push_back(19189);
        internalCounters.push_back(19767);
        internalCounters.push_back(20345);
        internalCounters.push_back(20923);
        internalCounters.push_back(21501);
        internalCounters.push_back(22079);
        internalCounters.push_back(22657);
        internalCounters.push_back(23235);
        internalCounters.push_back(23813);
        internalCounters.push_back(15144);
        internalCounters.push_back(15722);
        internalCounters.push_back(16300);
        internalCounters.push_back(16878);
        internalCounters.push_back(17456);
        internalCounters.push_back(18034);
        internalCounters.push_back(18612);
        internalCounters.push_back(19190);
        internalCounters.push_back(19768);
        internalCounters.push_back(20346);
        internalCounters.push_back(20924);
        internalCounters.push_back(21502);
        internalCounters.push_back(22080);
        internalCounters.push_back(22658);
        internalCounters.push_back(23236);
        internalCounters.push_back(23814);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum16,-,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,sum64,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15165);
        internalCounters.push_back(15743);
        internalCounters.push_back(16321);
        internalCounters.push_back(16899);
        internalCounters.push_back(17477);
        internalCounters.push_back(18055);
        internalCounters.push_back(18633);
        internalCounters.push_back(19211);
        internalCounters.push_back(19789);
        internalCounters.push_back(20367);
        internalCounters.push_back(20945);
        internalCounters.push_back(21523);
        internalCounters.push_back(22101);
        internalCounters.push_back(22679);
        internalCounters.push_back(23257);
        internalCounters.push_back(23835);
        internalCounters.push_back(15141);
        internalCounters.push_back(15719);
        internalCounters.push_back(16297);
        internalCounters.push_back(16875);
        internalCounters.push_back(17453);
        internalCounters.push_back(18031);
        internalCounters.push_back(18609);
        internalCounters.push_back(19187);
        internalCounters.push_back(19765);
        internalCounters.push_back(20343);
        internalCounters.push_back(20921);
        internalCounters.push_back(21499);
        internalCounters.push_back(22077);
        internalCounters.push_back(22655);
        internalCounters.push_back(23233);
        internalCounters.push_back(23811);
        internalCounters.push_back(15142);
        internalCounters.push_back(15720);
        internalCounters.push_back(16298);
        internalCounters.push_back(16876);
        internalCounters.push_back(17454);
        internalCounters.push_back(18032);
        internalCounters.push_back(18610);
        internalCounters.push_back(19188);
        internalCounters.push_back(19766);
        internalCounters.push_back(20344);
        internalCounters.push_back(20922);
        internalCounters.push_back(21500);
        internalCounters.push_back(22078);
        internalCounters.push_back(22656);
        internalCounters.push_back(23234);
        internalCounters.push_back(23812);
        internalCounters.push_back(15143);
        internalCounters.push_back(15721);
        internalCounters.push_back(16299);
        internalCounters.push_back(16877);
        internalCounters.push_back(17455);
        internalCounters.push_back(18033);
        internalCounters.push_back(18611);
        internalCounters.push_back(19189);
        internalCounters.push_back(19767);
        internalCounters.push_back(20345);
        internalCounters.push_back(20923);
        internalCounters.push_back(21501);
        internalCounters.push_back(22079);
        internalCounters.push_back(22657);
        internalCounters.push_back(23235);
        internalCounters.push_back(23813);
        internalCounters.push_back(15144);
        internalCounters.push_back(15722);
        internalCounters.push_back(16300);
        internalCounters.push_back(16878);
        internalCounters.push_back(17456);
        internalCounters.push_back(18034);
        internalCounters.push_back(18612);
        internalCounters.push_back(19190);
        internalCounters.push_back(19768);
        internalCounters.push_back(20346);
        internalCounters.push_back(20924);
        internalCounters.push_back(21502);
        internalCounters.push_back(22080);
        internalCounters.push_back(22658);
        internalCounters.push_back(23236);
        internalCounters.push_back(23814);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15165);
        internalCounters.push_back(15743);
        internalCounters.push_back(16321);
        internalCounters.push_back(16899);
        internalCounters.push_back(17477);
        internalCounters.push_back(18055);
        internalCounters.push_back(18633);
        internalCounters.push_back(19211);
        internalCounters.push_back(19789);
        internalCounters.push_back(20367);
        internalCounters.push_back(20945);
        internalCounters.push_back(21523);
        internalCounters.push_back(22101);
        internalCounters.push_back(22679);
        internalCounters.push_back(23257);
        internalCounters.push_back(23835);
        internalCounters.push_back(15065);
        internalCounters.push_back(15643);
        internalCounters.push_back(16221);
        internalCounters.push_back(16799);
        internalCounters.push_back(17377);
        internalCounters.push_back(17955);
        internalCounters.push_back(18533);
        internalCounters.push_back(19111);
        internalCounters.push_back(19689);
        internalCounters.push_back(20267);
        internalCounters.push_back(20845);
        internalCounters.push_back(21423);
        internalCounters.push_back(22001);
        internalCounters.push_back(22579);
        internalCounters.push_back(23157);
        internalCounters.push_back(23735);
        internalCounters.push_back(15066);
        internalCounters.push_back(15644);
        internalCounters.push_back(16222);
        internalCounters.push_back(16800);
        internalCounters.push_back(17378);
        internalCounters.push_back(17956);
        internalCounters.push_back(18534);
        internalCounters.push_back(19112);
        internalCounters.push_back(19690);
        internalCounters.push_back(20268);
        internalCounters.push_back(20846);
        internalCounters.push_back(21424);
        internalCounters.push_back(22002);
        internalCounters.push_back(22580);
        internalCounters.push_back(23158);
        internalCounters.push_back(23736);
        internalCounters.push_back(15067);
        internalCounters.push_back(15645);
        internalCounters.push_back(16223);
        internalCounters.push_back(16801);
        internalCounters.push_back(17379);
        internalCounters.push_back(17957);
        internalCounters.push_back(18535);
        internalCounters.push_back(19113);
        internalCounters.push_back(19691);
        internalCounters.push_back(20269);
        internalCounters.push_back(20847);
        internalCounters.push_back(21425);
        internalCounters.push_back(22003);
        internalCounters.push_back(22581);
        internalCounters.push_back(23159);
        internalCounters.push_back(23737);
        internalCounters.push_back(15068);
        internalCounters.push_back(15646);
        internalCounters.push_back(16224);
        internalCounters.push_back(16802);
        internalCounters.push_back(17380);
        internalCounters.push_back(17958);
        internalCounters.push_back(18536);
        internalCounters.push_back(19114);
        internalCounters.push_back(19692);
        internalCounters.push_back(20270);
        internalCounters.push_back(20848);
        internalCounters.push_back(21426);
        internalCounters.push_back(22004);
        internalCounters.push_back(22582);
        internalCounters.push_back(23160);
        internalCounters.push_back(23738);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum64,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15165);
        internalCounters.push_back(15743);
        internalCounters.push_back(16321);
        internalCounters.push_back(16899);
        internalCounters.push_back(17477);
        internalCounters.push_back(18055);
        internalCounters.push_back(18633);
        internalCounters.push_back(19211);
        internalCounters.push_back(19789);
        internalCounters.push_back(20367);
        internalCounters.push_back(20945);
        internalCounters.push_back(21523);
        internalCounters.push_back(22101);
        internalCounters.push_back(22679);
        internalCounters.push_back(23257);
        internalCounters.push_back(23835);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7593);
        internalCounters.push_back(7984);
        internalCounters.push_back(8375);
        internalCounters.push_back(8766);
        internalCounters.push_back(9157);
        internalCounters.push_back(9548);
        internalCounters.push_back(9939);
        internalCounters.push_back(10330);
        internalCounters.push_back(10721);
        internalCounters.push_back(11112);
        internalCounters.push_back(11503);
        internalCounters.push_back(11894);
        internalCounters.push_back(12285);
        internalCounters.push_back(12676);
        internalCounters.push_back(13067);
        internalCounters.push_back(13458);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7595);
        internalCounters.push_back(7986);
        internalCounters.push_back(8377);
        internalCounters.push_back(8768);
        internalCounters.push_back(9159);
        internalCounters.push_back(9550);
        internalCounters.push_back(9941);
        internalCounters.push_back(10332);
        internalCounters.push_back(10723);
        internalCounters.push_back(11114);
        internalCounters.push_back(11505);
        internalCounters.push_back(11896);
        internalCounters.push_back(12287);
        internalCounters.push_back(12678);
        internalCounters.push_back(13069);
        internalCounters.push_back(13460);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7594);
        internalCounters.push_back(7985);
        internalCounters.push_back(8376);
        internalCounters.push_back(8767);
        internalCounters.push_back(9158);
        internalCounters.push_back(9549);
        internalCounters.push_back(9940);
        internalCounters.push_back(10331);
        internalCounters.push_back(10722);
        internalCounters.push_back(11113);
        internalCounters.push_back(11504);
        internalCounters.push_back(11895);
        internalCounters.push_back(12286);
        internalCounters.push_back(12677);
        internalCounters.push_back(13068);
        internalCounters.push_back(13459);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7590);
        internalCounters.push_back(7981);
        internalCounters.push_back(8372);
        internalCounters.push_back(8763);
        internalCounters.push_back(9154);
        internalCounters.push_back(9545);
        internalCounters.push_back(9936);
        internalCounters.push_back(10327);
        internalCounters.push_back(10718);
        internalCounters.push_back(11109);
        internalCounters.push_back(11500);
        internalCounters.push_back(11891);
        internalCounters.push_back(12282);
        internalCounters.push_back(12673);
        internalCounters.push_back(13064);
        internalCounters.push_back(13455);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7592);
        internalCounters.push_back(7983);
        internalCounters.push_back(8374);
        internalCounters.push_back(8765);
        internalCounters.push_back(9156);
        internalCounters.push_back(9547);
        internalCounters.push_back(9938);
        internalCounters.push_back(10329);
        internalCounters.push_back(10720);
        internalCounters.push_back(11111);
        internalCounters.push_back(11502);
        internalCounters.push_back(11893);
        internalCounters.push_back(12284);
        internalCounters.push_back(12675);
        internalCounters.push_back(13066);
        internalCounters.push_back(13457);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7591);
        internalCounters.push_back(7982);
        internalCounters.push_back(8373);
        internalCounters.push_back(8764);
        internalCounters.push_back(9155);
        internalCounters.push_back(9546);
        internalCounters.push_back(9937);
        internalCounters.push_back(10328);
        internalCounters.push_back(10719);
        internalCounters.push_back(11110);
        internalCounters.push_back(11501);
        internalCounters.push_back(11892);
        internalCounters.push_back(12283);
        internalCounters.push_back(12674);
        internalCounters.push_back(13065);
        internalCounters.push_back(13456);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7462);
        internalCounters.push_back(7853);
        internalCounters.push_back(8244);
        internalCounters.push_back(8635);
        internalCounters.push_back(9026);
        internalCounters.push_back(9417);
        internalCounters.push_back(9808);
        internalCounters.push_back(10199);
        internalCounters.push_back(10590);
        internalCounters.push_back(10981);
        internalCounters.push_back(11372);
        internalCounters.push_back(11763);
        internalCounters.push_back(12154);
        internalCounters.push_back(12545);
        internalCounters.push_back(12936);
        internalCounters.push_back(13327);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7462);
        internalCounters.push_back(7853);
        internalCounters.push_back(8244);
        internalCounters.push_back(8635);
        internalCounters.push_back(9026);
        internalCounters.push_back(9417);
        internalCounters.push_back(9808);
        internalCounters.push_back(10199);
        internalCounters.push_back(10590);
        internalCounters.push_back(10981);
        internalCounters.push_back(11372);
        internalCounters.push_back(11763);
        internalCounters.push_back(12154);
        internalCounters.push_back(12545);
        internalCounters.push_back(12936);
        internalCounters.push_back(13327);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7464);
        internalCounters.push_back(7855);
        internalCounters.push_back(8246);
        internalCounters.push_back(8637);
        internalCounters.push_back(9028);
        internalCounters.push_back(9419);
        internalCounters.push_back(9810);
        internalCounters.push_back(10201);
        internalCounters.push_back(10592);
        internalCounters.push_back(10983);
        internalCounters.push_back(11374);
        internalCounters.push_back(11765);
        internalCounters.push_back(12156);
        internalCounters.push_back(12547);
        internalCounters.push_back(12938);
        internalCounters.push_back(13329);
        internalCounters.push_back(7471);
        internalCounters.push_back(7862);
        internalCounters.push_back(8253);
        internalCounters.push_back(8644);
        internalCounters.push_back(9035);
        internalCounters.push_back(9426);
        internalCounters.push_back(9817);
        internalCounters.push_back(10208);
        internalCounters.push_back(10599);
        internalCounters.push_back(10990);
        internalCounters.push_back(11381);
        internalCounters.push_back(11772);
        internalCounters.push_back(12163);
        internalCounters.push_back(12554);
        internalCounters.push_back(12945);
        internalCounters.push_back(13336);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7476);
        internalCounters.push_back(7867);
        internalCounters.push_back(8258);
        internalCounters.push_back(8649);
        internalCounters.push_back(9040);
        internalCounters.push_back(9431);
        internalCounters.push_back(9822);
        internalCounters.push_back(10213);
        internalCounters.push_back(10604);
        internalCounters.push_back(10995);
        internalCounters.push_back(11386);
        internalCounters.push_back(11777);
        internalCounters.push_back(12168);
        internalCounters.push_back(12559);
        internalCounters.push_back(12950);
        internalCounters.push_back(13341);
        internalCounters.push_back(7479);
        internalCounters.push_back(7870);
        internalCounters.push_back(8261);
        internalCounters.push_back(8652);
        internalCounters.push_back(9043);
        internalCounters.push_back(9434);
        internalCounters.push_back(9825);
        internalCounters.push_back(10216);
        internalCounters.push_back(10607);
        internalCounters.push_back(10998);
        internalCounters.push_back(11389);
        internalCounters.push_back(11780);
        internalCounters.push_back(12171);
        internalCounters.push_back(12562);
        internalCounters.push_back(12953);
        internalCounters.push_back(13344);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(168);
        internalCounters.push_back(629);
        internalCounters.push_back(1090);
        internalCounters.push_back(1551);
        internalCounters.push_back(2012);
        internalCounters.push_back(2473);
        internalCounters.push_back(2934);
        internalCounters.push_back(3395);
        internalCounters.push_back(3856);
        internalCounters.push_back(4317);
        internalCounters.push_back(4778);
        internalCounters.push_back(5239);
        internalCounters.push_back(5700);
        internalCounters.push_back(6161);
        internalCounters.push_back(6622);
        internalCounters.push_back(7083);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(299);
        internalCounters.push_back(760);
        internalCounters.push_back(1221);
        internalCounters.push_back(1682);
        internalCounters.push_back(2143);
        internalCounters.push_back(2604);
        internalCounters.push_back(3065);
        internalCounters.push_back(3526);
        internalCounters.push_back(3987);
        internalCounters.push_back(4448);
        internalCounters.push_back(4909);
        internalCounters.push_back(5370);
        internalCounters.push_back(5831);
        internalCounters.push_back(6292);
        internalCounters.push_back(6753);
        internalCounters.push_back(7214);
        internalCounters.push_back(166);
        internalCounters.push_back(627);
        internalCounters.push_back(1088);
        internalCounters.push_back(1549);
        internalCounters.push_back(2010);
        internalCounters.push_back(2471);
        internalCounters.push_back(2932);
        internalCounters.push_back(3393);
        internalCounters.push_back(3854);
        internalCounters.push_back(4315);
        internalCounters.push_back(4776);
        internalCounters.push_back(5237);
        internalCounters.push_back(5698);
        internalCounters.push_back(6159);
        internalCounters.push_back(6620);
        internalCounters.push_back(7081);
        internalCounters.push_back(167);
        internalCounters.push_back(628);
        internalCounters.push_back(1089);
        internalCounters.push_back(1550);
        internalCounters.push_back(2011);
        internalCounters.push_back(2472);
        internalCounters.push_back(2933);
        internalCounters.push_back(3394);
        internalCounters.push_back(3855);
        internalCounters.push_back(4316);
        internalCounters.push_back(4777);
        internalCounters.push_back(5238);
        internalCounters.push_back(5699);
        internalCounters.push_back(6160);
        internalCounters.push_back(6621);
        internalCounters.push_back(7082);
        internalCounters.push_back(168);
        internalCounters.push_back(629);
        internalCounters.push_back(1090);
        internalCounters.push_back(1551);
        internalCounters.push_back(2012);
        internalCounters.push_back(2473);
        internalCounters.push_back(2934);
        internalCounters.push_back(3395);
        internalCounters.push_back(3856);
        internalCounters.push_back(4317);
        internalCounters.push_back(4778);
        internalCounters.push_back(5239);
        internalCounters.push_back(5700);
        internalCounters.push_back(6161);
        internalCounters.push_back(6622);
        internalCounters.push_back(7083);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(158);
        internalCounters.push_back(619);
        internalCounters.push_back(1080);
        internalCounters.push_back(1541);
        internalCounters.push_back(2002);
        internalCounters.push_back(2463);
        internalCounters.push_back(2924);
        internalCounters.push_back(3385);
        internalCounters.push_back(3846);
        internalCounters.push_back(4307);
        internalCounters.push_back(4768);
        internalCounters.push_back(5229);
        internalCounters.push_back(5690);
        internalCounters.push_back(6151);
        internalCounters.push_back(6612);
        internalCounters.push_back(7073);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(297);
        internalCounters.push_back(758);
        internalCounters.push_back(1219);
        internalCounters.push_back(1680);
        internalCounters.push_back(2141);
        internalCounters.push_back(2602);
        internalCounters.push_back(3063);
        internalCounters.push_back(3524);
        internalCounters.push_back(3985);
        internalCounters.push_back(4446);
        internalCounters.push_back(4907);
        internalCounters.push_back(5368);
        internalCounters.push_back(5829);
        internalCounters.push_back(6290);
        internalCounters.push_back(6751);
        internalCounters.push_back(7212);
        internalCounters.push_back(156);
        internalCounters.push_back(617);
        internalCounters.push_back(1078);
        internalCounters.push_back(1539);
        internalCounters.push_back(2000);
        internalCounters.push_back(2461);
        internalCounters.push_back(2922);
        internalCounters.push_back(3383);
        internalCounters.push_back(3844);
        internalCounters.push_back(4305);
        internalCounters.push_back(4766);
        internalCounters.push_back(5227);
        internalCounters.push_back(5688);
        internalCounters.push_back(6149);
        internalCounters.push_back(6610);
        internalCounters.push_back(7071);
        internalCounters.push_back(157);
        internalCounters.push_back(618);
        internalCounters.push_back(1079);
        internalCounters.push_back(1540);
        internalCounters.push_back(2001);
        internalCounters.push_back(2462);
        internalCounters.push_back(2923);
        internalCounters.push_back(3384);
        internalCounters.push_back(3845);
        internalCounters.push_back(4306);
        internalCounters.push_back(4767);
        internalCounters.push_back(5228);
        internalCounters.push_back(5689);
        internalCounters.push_back(6150);
        internalCounters.push_back(6611);
        internalCounters.push_back(7072);
        internalCounters.push_back(158);
        internalCounters.push_back(619);
        internalCounters.push_back(1080);
        internalCounters.push_back(1541);
        internalCounters.push_back(2002);
        internalCounters.push_back(2463);
        internalCounters.push_back(2924);
        internalCounters.push_back(3385);
        internalCounters.push_back(3846);
        internalCounters.push_back(4307);
        internalCounters.push_back(4768);
        internalCounters.push_back(5229);
        internalCounters.push_back(5690);
        internalCounters.push_back(6151);
        internalCounters.push_back(6612);
        internalCounters.push_back(7073);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(202);
        internalCounters.push_back(663);
        internalCounters.push_back(1124);
        internalCounters.push_back(1585);
        internalCounters.push_back(2046);
        internalCounters.push_back(2507);
        internalCounters.push_back(2968);
        internalCounters.push_back(3429);
        internalCounters.push_back(3890);
        internalCounters.push_back(4351);
        internalCounters.push_back(4812);
        internalCounters.push_back(5273);
        internalCounters.push_back(5734);
        internalCounters.push_back(6195);
        internalCounters.push_back(6656);
        internalCounters.push_back(7117);
        internalCounters.push_back(47);
        internalCounters.push_back(508);
        internalCounters.push_back(969);
        internalCounters.push_back(1430);
        internalCounters.push_back(1891);
        internalCounters.push_back(2352);
        internalCounters.push_back(2813);
        internalCounters.push_back(3274);
        internalCounters.push_back(3735);
        internalCounters.push_back(4196);
        internalCounters.push_back(4657);
        internalCounters.push_back(5118);
        internalCounters.push_back(5579);
        internalCounters.push_back(6040);
        internalCounters.push_back(6501);
        internalCounters.push_back(6962);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(202);
        internalCounters.push_back(663);
        internalCounters.push_back(1124);
        internalCounters.push_back(1585);
        internalCounters.push_back(2046);
        internalCounters.push_back(2507);
        internalCounters.push_back(2968);
        internalCounters.push_back(3429);
        internalCounters.push_back(3890);
        internalCounters.push_back(4351);
        internalCounters.push_back(4812);
        internalCounters.push_back(5273);
        internalCounters.push_back(5734);
        internalCounters.push_back(6195);
        internalCounters.push_back(6656);
        internalCounters.push_back(7117);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77915);
        internalCounters.push_back(77992);
        internalCounters.push_back(78069);
        internalCounters.push_back(78146);
        internalCounters.push_back(78223);
        internalCounters.push_back(78300);
        internalCounters.push_back(78377);
        internalCounters.push_back(78454);
        internalCounters.push_back(78531);
        internalCounters.push_back(78608);
        internalCounters.push_back(78685);
        internalCounters.push_back(78762);
        internalCounters.push_back(78839);
        internalCounters.push_back(78916);
        internalCounters.push_back(78993);
        internalCounters.push_back(79070);
        internalCounters.push_back(79147);
        internalCounters.push_back(79224);
        internalCounters.push_back(79301);
        internalCounters.push_back(79378);
        internalCounters.push_back(79455);
        internalCounters.push_back(79532);
        internalCounters.push_back(79609);
        internalCounters.push_back(79686);
        internalCounters.push_back(79763);
        internalCounters.push_back(79840);
        internalCounters.push_back(79917);
        internalCounters.push_back(79994);
        internalCounters.push_back(80071);
        internalCounters.push_back(80148);
        internalCounters.push_back(80225);
        internalCounters.push_back(80302);
        internalCounters.push_back(80379);
        internalCounters.push_back(80456);
        internalCounters.push_back(80533);
        internalCounters.push_back(80610);
        internalCounters.push_back(80687);
        internalCounters.push_back(80764);
        internalCounters.push_back(80841);
        internalCounters.push_back(80918);
        internalCounters.push_back(80995);
        internalCounters.push_back(81072);
        internalCounters.push_back(81149);
        internalCounters.push_back(81226);
        internalCounters.push_back(81303);
        internalCounters.push_back(81380);
        internalCounters.push_back(81457);
        internalCounters.push_back(81534);
        internalCounters.push_back(81611);
        internalCounters.push_back(81688);
        internalCounters.push_back(81765);
        internalCounters.push_back(81842);
        internalCounters.push_back(81919);
        internalCounters.push_back(81996);
        internalCounters.push_back(82073);
        internalCounters.push_back(82150);
        internalCounters.push_back(82227);
        internalCounters.push_back(82304);
        internalCounters.push_back(82381);
        internalCounters.push_back(82458);
        internalCounters.push_back(82535);
        internalCounters.push_back(82612);
        internalCounters.push_back(82689);
        internalCounters.push_back(82766);
        internalCounters.push_back(82843);
        internalCounters.push_back(82920);
        internalCounters.push_back(82997);
        internalCounters.push_back(83074);
        internalCounters.push_back(83151);
        internalCounters.push_back(83228);
        internalCounters.push_back(83305);
        internalCounters.push_back(83382);
        internalCounters.push_back(83459);
        internalCounters.push_back(83536);
        internalCounters.push_back(83613);
        internalCounters.push_back(83690);
        internalCounters.push_back(83767);
        internalCounters.push_back(83844);
        internalCounters.push_back(83921);
        internalCounters.push_back(83998);
        internalCounters.push_back(77924);
        internalCounters.push_back(78001);
        internalCounters.push_back(78078);
        internalCounters.push_back(78155);
        internalCounters.push_back(78232);
        internalCounters.push_back(78309);
        internalCounters.push_back(78386);
        internalCounters.push_back(78463);
        internalCounters.push_back(78540);
        internalCounters.push_back(78617);
        internalCounters.push_back(78694);
        internalCounters.push_back(78771);
        internalCounters.push_back(78848);
        internalCounters.push_back(78925);
        internalCounters.push_back(79002);
        internalCounters.push_back(79079);
        internalCounters.push_back(79156);
        internalCounters.push_back(79233);
        internalCounters.push_back(79310);
        internalCounters.push_back(79387);
        internalCounters.push_back(79464);
        internalCounters.push_back(79541);
        internalCounters.push_back(79618);
        internalCounters.push_back(79695);
        internalCounters.push_back(79772);
        internalCounters.push_back(79849);
        internalCounters.push_back(79926);
        internalCounters.push_back(80003);
        internalCounters.push_back(80080);
        internalCounters.push_back(80157);
        internalCounters.push_back(80234);
        internalCounters.push_back(80311);
        internalCounters.push_back(80388);
        internalCounters.push_back(80465);
        internalCounters.push_back(80542);
        internalCounters.push_back(80619);
        internalCounters.push_back(80696);
        internalCounters.push_back(80773);
        internalCounters.push_back(80850);
        internalCounters.push_back(80927);
        internalCounters.push_back(81004);
        internalCounters.push_back(81081);
        internalCounters.push_back(81158);
        internalCounters.push_back(81235);
        internalCounters.push_back(81312);
        internalCounters.push_back(81389);
        internalCounters.push_back(81466);
        internalCounters.push_back(81543);
        internalCounters.push_back(81620);
        internalCounters.push_back(81697);
        internalCounters.push_back(81774);
        internalCounters.push_back(81851);
        internalCounters.push_back(81928);
        internalCounters.push_back(82005);
        internalCounters.push_back(82082);
        internalCounters.push_back(82159);
        internalCounters.push_back(82236);
        internalCounters.push_back(82313);
        internalCounters.push_back(82390);
        internalCounters.push_back(82467);
        internalCounters.push_back(82544);
        internalCounters.push_back(82621);
        internalCounters.push_back(82698);
        internalCounters.push_back(82775);
        internalCounters.push_back(82852);
        internalCounters.push_back(82929);
        internalCounters.push_back(83006);
        internalCounters.push_back(83083);
        internalCounters.push_back(83160);
        internalCounters.push_back(83237);
        internalCounters.push_back(83314);
        internalCounters.push_back(83391);
        internalCounters.push_back(83468);
        internalCounters.push_back(83545);
        internalCounters.push_back(83622);
        internalCounters.push_back(83699);
        internalCounters.push_back(83776);
        internalCounters.push_back(83853);
        internalCounters.push_back(83930);
        internalCounters.push_back(84007);

        c.DefineDerivedCounter("L0CacheHit", "MemoryCache", "The percentage of read requests that hit the data in the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,ifnotzero", "286c786e-9a42-3371-9dea-dd54e6e612e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77915);
        internalCounters.push_back(77992);
        internalCounters.push_back(78069);
        internalCounters.push_back(78146);
        internalCounters.push_back(78223);
        internalCounters.push_back(78300);
        internalCounters.push_back(78377);
        internalCounters.push_back(78454);
        internalCounters.push_back(78531);
        internalCounters.push_back(78608);
        internalCounters.push_back(78685);
        internalCounters.push_back(78762);
        internalCounters.push_back(78839);
        internalCounters.push_back(78916);
        internalCounters.push_back(78993);
        internalCounters.push_back(79070);
        internalCounters.push_back(79147);
        internalCounters.push_back(79224);
        internalCounters.push_back(79301);
        internalCounters.push_back(79378);
        internalCounters.push_back(79455);
        internalCounters.push_back(79532);
        internalCounters.push_back(79609);
        internalCounters.push_back(79686);
        internalCounters.push_back(79763);
        internalCounters.push_back(79840);
        internalCounters.push_back(79917);
        internalCounters.push_back(79994);
        internalCounters.push_back(80071);
        internalCounters.push_back(80148);
        internalCounters.push_back(80225);
        internalCounters.push_back(80302);
        internalCounters.push_back(80379);
        internalCounters.push_back(80456);
        internalCounters.push_back(80533);
        internalCounters.push_back(80610);
        internalCounters.push_back(80687);
        internalCounters.push_back(80764);
        internalCounters.push_back(80841);
        internalCounters.push_back(80918);
        internalCounters.push_back(80995);
        internalCounters.push_back(81072);
        internalCounters.push_back(81149);
        internalCounters.push_back(81226);
        internalCounters.push_back(81303);
        internalCounters.push_back(81380);
        internalCounters.push_back(81457);
        internalCounters.push_back(81534);
        internalCounters.push_back(81611);
        internalCounters.push_back(81688);
        internalCounters.push_back(81765);
        internalCounters.push_back(81842);
        internalCounters.push_back(81919);
        internalCounters.push_back(81996);
        internalCounters.push_back(82073);
        internalCounters.push_back(82150);
        internalCounters.push_back(82227);
        internalCounters.push_back(82304);
        internalCounters.push_back(82381);
        internalCounters.push_back(82458);
        internalCounters.push_back(82535);
        internalCounters.push_back(82612);
        internalCounters.push_back(82689);
        internalCounters.push_back(82766);
        internalCounters.push_back(82843);
        internalCounters.push_back(82920);
        internalCounters.push_back(82997);
        internalCounters.push_back(83074);
        internalCounters.push_back(83151);
        internalCounters.push_back(83228);
        internalCounters.push_back(83305);
        internalCounters.push_back(83382);
        internalCounters.push_back(83459);
        internalCounters.push_back(83536);
        internalCounters.push_back(83613);
        internalCounters.push_back(83690);
        internalCounters.push_back(83767);
        internalCounters.push_back(83844);
        internalCounters.push_back(83921);
        internalCounters.push_back(83998);

        c.DefineDerivedCounter("L0CacheRequestCount", "MemoryCache", "The number of read requests made to the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "74983cae-ee57-2e1b-d990-5128fef84e1f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77915);
        internalCounters.push_back(77992);
        internalCounters.push_back(78069);
        internalCounters.push_back(78146);
        internalCounters.push_back(78223);
        internalCounters.push_back(78300);
        internalCounters.push_back(78377);
        internalCounters.push_back(78454);
        internalCounters.push_back(78531);
        internalCounters.push_back(78608);
        internalCounters.push_back(78685);
        internalCounters.push_back(78762);
        internalCounters.push_back(78839);
        internalCounters.push_back(78916);
        internalCounters.push_back(78993);
        internalCounters.push_back(79070);
        internalCounters.push_back(79147);
        internalCounters.push_back(79224);
        internalCounters.push_back(79301);
        internalCounters.push_back(79378);
        internalCounters.push_back(79455);
        internalCounters.push_back(79532);
        internalCounters.push_back(79609);
        internalCounters.push_back(79686);
        internalCounters.push_back(79763);
        internalCounters.push_back(79840);
        internalCounters.push_back(79917);
        internalCounters.push_back(79994);
        internalCounters.push_back(80071);
        internalCounters.push_back(80148);
        internalCounters.push_back(80225);
        internalCounters.push_back(80302);
        internalCounters.push_back(80379);
        internalCounters.push_back(80456);
        internalCounters.push_back(80533);
        internalCounters.push_back(80610);
        internalCounters.push_back(80687);
        internalCounters.push_back(80764);
        internalCounters.push_back(80841);
        internalCounters.push_back(80918);
        internalCounters.push_back(80995);
        internalCounters.push_back(81072);
        internalCounters.push_back(81149);
        internalCounters.push_back(81226);
        internalCounters.push_back(81303);
        internalCounters.push_back(81380);
        internalCounters.push_back(81457);
        internalCounters.push_back(81534);
        internalCounters.push_back(81611);
        internalCounters.push_back(81688);
        internalCounters.push_back(81765);
        internalCounters.push_back(81842);
        internalCounters.push_back(81919);
        internalCounters.push_back(81996);
        internalCounters.push_back(82073);
        internalCounters.push_back(82150);
        internalCounters.push_back(82227);
        internalCounters.push_back(82304);
        internalCounters.push_back(82381);
        internalCounters.push_back(82458);
        internalCounters.push_back(82535);
        internalCounters.push_back(82612);
        internalCounters.push_back(82689);
        internalCounters.push_back(82766);
        internalCounters.push_back(82843);
        internalCounters.push_back(82920);
        internalCounters.push_back(82997);
        internalCounters.push_back(83074);
        internalCounters.push_back(83151);
        internalCounters.push_back(83228);
        internalCounters.push_back(83305);
        internalCounters.push_back(83382);
        internalCounters.push_back(83459);
        internalCounters.push_back(83536);
        internalCounters.push_back(83613);
        internalCounters.push_back(83690);
        internalCounters.push_back(83767);
        internalCounters.push_back(83844);
        internalCounters.push_back(83921);
        internalCounters.push_back(83998);
        internalCounters.push_back(77924);
        internalCounters.push_back(78001);
        internalCounters.push_back(78078);
        internalCounters.push_back(78155);
        internalCounters.push_back(78232);
        internalCounters.push_back(78309);
        internalCounters.push_back(78386);
        internalCounters.push_back(78463);
        internalCounters.push_back(78540);
        internalCounters.push_back(78617);
        internalCounters.push_back(78694);
        internalCounters.push_back(78771);
        internalCounters.push_back(78848);
        internalCounters.push_back(78925);
        internalCounters.push_back(79002);
        internalCounters.push_back(79079);
        internalCounters.push_back(79156);
        internalCounters.push_back(79233);
        internalCounters.push_back(79310);
        internalCounters.push_back(79387);
        internalCounters.push_back(79464);
        internalCounters.push_back(79541);
        internalCounters.push_back(79618);
        internalCounters.push_back(79695);
        internalCounters.push_back(79772);
        internalCounters.push_back(79849);
        internalCounters.push_back(79926);
        internalCounters.push_back(80003);
        internalCounters.push_back(80080);
        internalCounters.push_back(80157);
        internalCounters.push_back(80234);
        internalCounters.push_back(80311);
        internalCounters.push_back(80388);
        internalCounters.push_back(80465);
        internalCounters.push_back(80542);
        internalCounters.push_back(80619);
        internalCounters.push_back(80696);
        internalCounters.push_back(80773);
        internalCounters.push_back(80850);
        internalCounters.push_back(80927);
        internalCounters.push_back(81004);
        internalCounters.push_back(81081);
        internalCounters.push_back(81158);
        internalCounters.push_back(81235);
        internalCounters.push_back(81312);
        internalCounters.push_back(81389);
        internalCounters.push_back(81466);
        internalCounters.push_back(81543);
        internalCounters.push_back(81620);
        internalCounters.push_back(81697);
        internalCounters.push_back(81774);
        internalCounters.push_back(81851);
        internalCounters.push_back(81928);
        internalCounters.push_back(82005);
        internalCounters.push_back(82082);
        internalCounters.push_back(82159);
        internalCounters.push_back(82236);
        internalCounters.push_back(82313);
        internalCounters.push_back(82390);
        internalCounters.push_back(82467);
        internalCounters.push_back(82544);
        internalCounters.push_back(82621);
        internalCounters.push_back(82698);
        internalCounters.push_back(82775);
        internalCounters.push_back(82852);
        internalCounters.push_back(82929);
        internalCounters.push_back(83006);
        internalCounters.push_back(83083);
        internalCounters.push_back(83160);
        internalCounters.push_back(83237);
        internalCounters.push_back(83314);
        internalCounters.push_back(83391);
        internalCounters.push_back(83468);
        internalCounters.push_back(83545);
        internalCounters.push_back(83622);
        internalCounters.push_back(83699);
        internalCounters.push_back(83776);
        internalCounters.push_back(83853);
        internalCounters.push_back(83930);
        internalCounters.push_back(84007);

        c.DefineDerivedCounter("L0CacheHitCount", "MemoryCache", "The number of read requests which result in a cache hit from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,-", "c0de7338-069b-c5ba-ead3-c65e030cd2ac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77924);
        internalCounters.push_back(78001);
        internalCounters.push_back(78078);
        internalCounters.push_back(78155);
        internalCounters.push_back(78232);
        internalCounters.push_back(78309);
        internalCounters.push_back(78386);
        internalCounters.push_back(78463);
        internalCounters.push_back(78540);
        internalCounters.push_back(78617);
        internalCounters.push_back(78694);
        internalCounters.push_back(78771);
        internalCounters.push_back(78848);
        internalCounters.push_back(78925);
        internalCounters.push_back(79002);
        internalCounters.push_back(79079);
        internalCounters.push_back(79156);
        internalCounters.push_back(79233);
        internalCounters.push_back(79310);
        internalCounters.push_back(79387);
        internalCounters.push_back(79464);
        internalCounters.push_back(79541);
        internalCounters.push_back(79618);
        internalCounters.push_back(79695);
        internalCounters.push_back(79772);
        internalCounters.push_back(79849);
        internalCounters.push_back(79926);
        internalCounters.push_back(80003);
        internalCounters.push_back(80080);
        internalCounters.push_back(80157);
        internalCounters.push_back(80234);
        internalCounters.push_back(80311);
        internalCounters.push_back(80388);
        internalCounters.push_back(80465);
        internalCounters.push_back(80542);
        internalCounters.push_back(80619);
        internalCounters.push_back(80696);
        internalCounters.push_back(80773);
        internalCounters.push_back(80850);
        internalCounters.push_back(80927);
        internalCounters.push_back(81004);
        internalCounters.push_back(81081);
        internalCounters.push_back(81158);
        internalCounters.push_back(81235);
        internalCounters.push_back(81312);
        internalCounters.push_back(81389);
        internalCounters.push_back(81466);
        internalCounters.push_back(81543);
        internalCounters.push_back(81620);
        internalCounters.push_back(81697);
        internalCounters.push_back(81774);
        internalCounters.push_back(81851);
        internalCounters.push_back(81928);
        internalCounters.push_back(82005);
        internalCounters.push_back(82082);
        internalCounters.push_back(82159);
        internalCounters.push_back(82236);
        internalCounters.push_back(82313);
        internalCounters.push_back(82390);
        internalCounters.push_back(82467);
        internalCounters.push_back(82544);
        internalCounters.push_back(82621);
        internalCounters.push_back(82698);
        internalCounters.push_back(82775);
        internalCounters.push_back(82852);
        internalCounters.push_back(82929);
        internalCounters.push_back(83006);
        internalCounters.push_back(83083);
        internalCounters.push_back(83160);
        internalCounters.push_back(83237);
        internalCounters.push_back(83314);
        internalCounters.push_back(83391);
        internalCounters.push_back(83468);
        internalCounters.push_back(83545);
        internalCounters.push_back(83622);
        internalCounters.push_back(83699);
        internalCounters.push_back(83776);
        internalCounters.push_back(83853);
        internalCounters.push_back(83930);
        internalCounters.push_back(84007);

        c.DefineDerivedCounter("L0CacheMissCount", "MemoryCache", "The number of read requests which result in a cache miss from the L0 cache. The L0 cache contains vector data, which is data that may vary in each thread across the wavefront. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "a2f08766-ea1b-6eae-6eaf-faa04125d3e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(94933);
        internalCounters.push_back(95016);
        internalCounters.push_back(95099);
        internalCounters.push_back(95182);
        internalCounters.push_back(95265);
        internalCounters.push_back(95348);
        internalCounters.push_back(95431);
        internalCounters.push_back(95514);
        internalCounters.push_back(95597);
        internalCounters.push_back(95680);
        internalCounters.push_back(95763);
        internalCounters.push_back(95846);
        internalCounters.push_back(95929);
        internalCounters.push_back(96012);
        internalCounters.push_back(96095);
        internalCounters.push_back(96178);
        internalCounters.push_back(96261);
        internalCounters.push_back(96344);
        internalCounters.push_back(96427);
        internalCounters.push_back(96510);
        internalCounters.push_back(96593);
        internalCounters.push_back(96676);
        internalCounters.push_back(96759);
        internalCounters.push_back(96842);
        internalCounters.push_back(96925);
        internalCounters.push_back(97008);
        internalCounters.push_back(97091);
        internalCounters.push_back(97174);
        internalCounters.push_back(97257);
        internalCounters.push_back(97340);
        internalCounters.push_back(97423);
        internalCounters.push_back(97506);
        internalCounters.push_back(94937);
        internalCounters.push_back(95020);
        internalCounters.push_back(95103);
        internalCounters.push_back(95186);
        internalCounters.push_back(95269);
        internalCounters.push_back(95352);
        internalCounters.push_back(95435);
        internalCounters.push_back(95518);
        internalCounters.push_back(95601);
        internalCounters.push_back(95684);
        internalCounters.push_back(95767);
        internalCounters.push_back(95850);
        internalCounters.push_back(95933);
        internalCounters.push_back(96016);
        internalCounters.push_back(96099);
        internalCounters.push_back(96182);
        internalCounters.push_back(96265);
        internalCounters.push_back(96348);
        internalCounters.push_back(96431);
        internalCounters.push_back(96514);
        internalCounters.push_back(96597);
        internalCounters.push_back(96680);
        internalCounters.push_back(96763);
        internalCounters.push_back(96846);
        internalCounters.push_back(96929);
        internalCounters.push_back(97012);
        internalCounters.push_back(97095);
        internalCounters.push_back(97178);
        internalCounters.push_back(97261);
        internalCounters.push_back(97344);
        internalCounters.push_back(97427);
        internalCounters.push_back(97510);

        c.DefineDerivedCounter("L1CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,ifnotzero", "5a34915a-24b8-8baf-2bf8-5878e7894ae3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(94933);
        internalCounters.push_back(95016);
        internalCounters.push_back(95099);
        internalCounters.push_back(95182);
        internalCounters.push_back(95265);
        internalCounters.push_back(95348);
        internalCounters.push_back(95431);
        internalCounters.push_back(95514);
        internalCounters.push_back(95597);
        internalCounters.push_back(95680);
        internalCounters.push_back(95763);
        internalCounters.push_back(95846);
        internalCounters.push_back(95929);
        internalCounters.push_back(96012);
        internalCounters.push_back(96095);
        internalCounters.push_back(96178);
        internalCounters.push_back(96261);
        internalCounters.push_back(96344);
        internalCounters.push_back(96427);
        internalCounters.push_back(96510);
        internalCounters.push_back(96593);
        internalCounters.push_back(96676);
        internalCounters.push_back(96759);
        internalCounters.push_back(96842);
        internalCounters.push_back(96925);
        internalCounters.push_back(97008);
        internalCounters.push_back(97091);
        internalCounters.push_back(97174);
        internalCounters.push_back(97257);
        internalCounters.push_back(97340);
        internalCounters.push_back(97423);
        internalCounters.push_back(97506);

        c.DefineDerivedCounter("L1CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "29c76c67-4611-205d-0b88-d08668df03c5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(94933);
        internalCounters.push_back(95016);
        internalCounters.push_back(95099);
        internalCounters.push_back(95182);
        internalCounters.push_back(95265);
        internalCounters.push_back(95348);
        internalCounters.push_back(95431);
        internalCounters.push_back(95514);
        internalCounters.push_back(95597);
        internalCounters.push_back(95680);
        internalCounters.push_back(95763);
        internalCounters.push_back(95846);
        internalCounters.push_back(95929);
        internalCounters.push_back(96012);
        internalCounters.push_back(96095);
        internalCounters.push_back(96178);
        internalCounters.push_back(96261);
        internalCounters.push_back(96344);
        internalCounters.push_back(96427);
        internalCounters.push_back(96510);
        internalCounters.push_back(96593);
        internalCounters.push_back(96676);
        internalCounters.push_back(96759);
        internalCounters.push_back(96842);
        internalCounters.push_back(96925);
        internalCounters.push_back(97008);
        internalCounters.push_back(97091);
        internalCounters.push_back(97174);
        internalCounters.push_back(97257);
        internalCounters.push_back(97340);
        internalCounters.push_back(97423);
        internalCounters.push_back(97506);
        internalCounters.push_back(94937);
        internalCounters.push_back(95020);
        internalCounters.push_back(95103);
        internalCounters.push_back(95186);
        internalCounters.push_back(95269);
        internalCounters.push_back(95352);
        internalCounters.push_back(95435);
        internalCounters.push_back(95518);
        internalCounters.push_back(95601);
        internalCounters.push_back(95684);
        internalCounters.push_back(95767);
        internalCounters.push_back(95850);
        internalCounters.push_back(95933);
        internalCounters.push_back(96016);
        internalCounters.push_back(96099);
        internalCounters.push_back(96182);
        internalCounters.push_back(96265);
        internalCounters.push_back(96348);
        internalCounters.push_back(96431);
        internalCounters.push_back(96514);
        internalCounters.push_back(96597);
        internalCounters.push_back(96680);
        internalCounters.push_back(96763);
        internalCounters.push_back(96846);
        internalCounters.push_back(96929);
        internalCounters.push_back(97012);
        internalCounters.push_back(97095);
        internalCounters.push_back(97178);
        internalCounters.push_back(97261);
        internalCounters.push_back(97344);
        internalCounters.push_back(97427);
        internalCounters.push_back(97510);

        c.DefineDerivedCounter("L1CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum32,-", "1ae150c3-f2d0-82c6-a51b-a77fd8d5fc33");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(94937);
        internalCounters.push_back(95020);
        internalCounters.push_back(95103);
        internalCounters.push_back(95186);
        internalCounters.push_back(95269);
        internalCounters.push_back(95352);
        internalCounters.push_back(95435);
        internalCounters.push_back(95518);
        internalCounters.push_back(95601);
        internalCounters.push_back(95684);
        internalCounters.push_back(95767);
        internalCounters.push_back(95850);
        internalCounters.push_back(95933);
        internalCounters.push_back(96016);
        internalCounters.push_back(96099);
        internalCounters.push_back(96182);
        internalCounters.push_back(96265);
        internalCounters.push_back(96348);
        internalCounters.push_back(96431);
        internalCounters.push_back(96514);
        internalCounters.push_back(96597);
        internalCounters.push_back(96680);
        internalCounters.push_back(96763);
        internalCounters.push_back(96846);
        internalCounters.push_back(96929);
        internalCounters.push_back(97012);
        internalCounters.push_back(97095);
        internalCounters.push_back(97178);
        internalCounters.push_back(97261);
        internalCounters.push_back(97344);
        internalCounters.push_back(97427);
        internalCounters.push_back(97510);

        c.DefineDerivedCounter("L1CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L1 cache. The L1 cache is shared across all WGPs in a single shader engine. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "71bfec6d-257b-849d-e212-cdf5c1b1de65");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99158);
        internalCounters.push_back(99412);
        internalCounters.push_back(99666);
        internalCounters.push_back(99920);
        internalCounters.push_back(100174);
        internalCounters.push_back(100428);
        internalCounters.push_back(100682);
        internalCounters.push_back(100936);
        internalCounters.push_back(101190);
        internalCounters.push_back(101444);
        internalCounters.push_back(101698);
        internalCounters.push_back(101952);
        internalCounters.push_back(102206);
        internalCounters.push_back(102460);
        internalCounters.push_back(102714);
        internalCounters.push_back(102968);
        internalCounters.push_back(99198);
        internalCounters.push_back(99452);
        internalCounters.push_back(99706);
        internalCounters.push_back(99960);
        internalCounters.push_back(100214);
        internalCounters.push_back(100468);
        internalCounters.push_back(100722);
        internalCounters.push_back(100976);
        internalCounters.push_back(101230);
        internalCounters.push_back(101484);
        internalCounters.push_back(101738);
        internalCounters.push_back(101992);
        internalCounters.push_back(102246);
        internalCounters.push_back(102500);
        internalCounters.push_back(102754);
        internalCounters.push_back(103008);

        c.DefineDerivedCounter("L2CacheHit", "MemoryCache", "The percentage of read or write requests that hit the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,ifnotzero", "47694e4d-6ce6-f387-080d-b1f3d00b73ac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99198);
        internalCounters.push_back(99452);
        internalCounters.push_back(99706);
        internalCounters.push_back(99960);
        internalCounters.push_back(100214);
        internalCounters.push_back(100468);
        internalCounters.push_back(100722);
        internalCounters.push_back(100976);
        internalCounters.push_back(101230);
        internalCounters.push_back(101484);
        internalCounters.push_back(101738);
        internalCounters.push_back(101992);
        internalCounters.push_back(102246);
        internalCounters.push_back(102500);
        internalCounters.push_back(102754);
        internalCounters.push_back(103008);
        internalCounters.push_back(99158);
        internalCounters.push_back(99412);
        internalCounters.push_back(99666);
        internalCounters.push_back(99920);
        internalCounters.push_back(100174);
        internalCounters.push_back(100428);
        internalCounters.push_back(100682);
        internalCounters.push_back(100936);
        internalCounters.push_back(101190);
        internalCounters.push_back(101444);
        internalCounters.push_back(101698);
        internalCounters.push_back(101952);
        internalCounters.push_back(102206);
        internalCounters.push_back(102460);
        internalCounters.push_back(102714);
        internalCounters.push_back(102968);

        c.DefineDerivedCounter("L2CacheMiss", "MemoryCache", "The percentage of read or write requests that miss the data in the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "8aee5458-a58e-11b6-5131-7f19ed070117");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99158);
        internalCounters.push_back(99412);
        internalCounters.push_back(99666);
        internalCounters.push_back(99920);
        internalCounters.push_back(100174);
        internalCounters.push_back(100428);
        internalCounters.push_back(100682);
        internalCounters.push_back(100936);
        internalCounters.push_back(101190);
        internalCounters.push_back(101444);
        internalCounters.push_back(101698);
        internalCounters.push_back(101952);
        internalCounters.push_back(102206);
        internalCounters.push_back(102460);
        internalCounters.push_back(102714);
        internalCounters.push_back(102968);

        c.DefineDerivedCounter("L2CacheRequestCount", "MemoryCache", "The number of read or write requests made to the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "21e9219c-e725-0d96-06b1-b21698b736b2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99158);
        internalCounters.push_back(99412);
        internalCounters.push_back(99666);
        internalCounters.push_back(99920);
        internalCounters.push_back(100174);
        internalCounters.push_back(100428);
        internalCounters.push_back(100682);
        internalCounters.push_back(100936);
        internalCounters.push_back(101190);
        internalCounters.push_back(101444);
        internalCounters.push_back(101698);
        internalCounters.push_back(101952);
        internalCounters.push_back(102206);
        internalCounters.push_back(102460);
        internalCounters.push_back(102714);
        internalCounters.push_back(102968);
        internalCounters.push_back(99198);
        internalCounters.push_back(99452);
        internalCounters.push_back(99706);
        internalCounters.push_back(99960);
        internalCounters.push_back(100214);
        internalCounters.push_back(100468);
        internalCounters.push_back(100722);
        internalCounters.push_back(100976);
        internalCounters.push_back(101230);
        internalCounters.push_back(101484);
        internalCounters.push_back(101738);
        internalCounters.push_back(101992);
        internalCounters.push_back(102246);
        internalCounters.push_back(102500);
        internalCounters.push_back(102754);
        internalCounters.push_back(103008);

        c.DefineDerivedCounter("L2CacheHitCount", "MemoryCache", "The number of read or write requests which result in a cache hit from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-", "29ddcb92-d3dd-951b-1b23-efe52e4eeee4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99198);
        internalCounters.push_back(99452);
        internalCounters.push_back(99706);
        internalCounters.push_back(99960);
        internalCounters.push_back(100214);
        internalCounters.push_back(100468);
        internalCounters.push_back(100722);
        internalCounters.push_back(100976);
        internalCounters.push_back(101230);
        internalCounters.push_back(101484);
        internalCounters.push_back(101738);
        internalCounters.push_back(101992);
        internalCounters.push_back(102246);
        internalCounters.push_back(102500);
        internalCounters.push_back(102754);
        internalCounters.push_back(103008);

        c.DefineDerivedCounter("L2CacheMissCount", "MemoryCache", "The number of read or write requests which result in a cache miss from the L2 cache. The L2 cache is shared by many blocks across the GPU, including the Command Processor, Geometry Engine, all WGPs, all Render Backends, and others. Each request is 128 bytes in size.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "376eec7b-ab25-9012-06b5-63291a17fd47");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99254);
        internalCounters.push_back(99508);
        internalCounters.push_back(99762);
        internalCounters.push_back(100016);
        internalCounters.push_back(100270);
        internalCounters.push_back(100524);
        internalCounters.push_back(100778);
        internalCounters.push_back(101032);
        internalCounters.push_back(101286);
        internalCounters.push_back(101540);
        internalCounters.push_back(101794);
        internalCounters.push_back(102048);
        internalCounters.push_back(102302);
        internalCounters.push_back(102556);
        internalCounters.push_back(102810);
        internalCounters.push_back(103064);
        internalCounters.push_back(99255);
        internalCounters.push_back(99509);
        internalCounters.push_back(99763);
        internalCounters.push_back(100017);
        internalCounters.push_back(100271);
        internalCounters.push_back(100525);
        internalCounters.push_back(100779);
        internalCounters.push_back(101033);
        internalCounters.push_back(101287);
        internalCounters.push_back(101541);
        internalCounters.push_back(101795);
        internalCounters.push_back(102049);
        internalCounters.push_back(102303);
        internalCounters.push_back(102557);
        internalCounters.push_back(102811);
        internalCounters.push_back(103065);
        internalCounters.push_back(99256);
        internalCounters.push_back(99510);
        internalCounters.push_back(99764);
        internalCounters.push_back(100018);
        internalCounters.push_back(100272);
        internalCounters.push_back(100526);
        internalCounters.push_back(100780);
        internalCounters.push_back(101034);
        internalCounters.push_back(101288);
        internalCounters.push_back(101542);
        internalCounters.push_back(101796);
        internalCounters.push_back(102050);
        internalCounters.push_back(102304);
        internalCounters.push_back(102558);
        internalCounters.push_back(102812);
        internalCounters.push_back(103066);
        internalCounters.push_back(99257);
        internalCounters.push_back(99511);
        internalCounters.push_back(99765);
        internalCounters.push_back(100019);
        internalCounters.push_back(100273);
        internalCounters.push_back(100527);
        internalCounters.push_back(100781);
        internalCounters.push_back(101035);
        internalCounters.push_back(101289);
        internalCounters.push_back(101543);
        internalCounters.push_back(101797);
        internalCounters.push_back(102051);
        internalCounters.push_back(102305);
        internalCounters.push_back(102559);
        internalCounters.push_back(102813);
        internalCounters.push_back(103067);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum16,(96),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum16,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99238);
        internalCounters.push_back(99492);
        internalCounters.push_back(99746);
        internalCounters.push_back(100000);
        internalCounters.push_back(100254);
        internalCounters.push_back(100508);
        internalCounters.push_back(100762);
        internalCounters.push_back(101016);
        internalCounters.push_back(101270);
        internalCounters.push_back(101524);
        internalCounters.push_back(101778);
        internalCounters.push_back(102032);
        internalCounters.push_back(102286);
        internalCounters.push_back(102540);
        internalCounters.push_back(102794);
        internalCounters.push_back(103048);
        internalCounters.push_back(99240);
        internalCounters.push_back(99494);
        internalCounters.push_back(99748);
        internalCounters.push_back(100002);
        internalCounters.push_back(100256);
        internalCounters.push_back(100510);
        internalCounters.push_back(100764);
        internalCounters.push_back(101018);
        internalCounters.push_back(101272);
        internalCounters.push_back(101526);
        internalCounters.push_back(101780);
        internalCounters.push_back(102034);
        internalCounters.push_back(102288);
        internalCounters.push_back(102542);
        internalCounters.push_back(102796);
        internalCounters.push_back(103050);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43681);
        internalCounters.push_back(43917);
        internalCounters.push_back(44153);
        internalCounters.push_back(44389);
        internalCounters.push_back(44625);
        internalCounters.push_back(44861);
        internalCounters.push_back(45097);
        internalCounters.push_back(45333);
        internalCounters.push_back(45569);
        internalCounters.push_back(45805);
        internalCounters.push_back(46041);
        internalCounters.push_back(46277);
        internalCounters.push_back(46513);
        internalCounters.push_back(46749);
        internalCounters.push_back(46985);
        internalCounters.push_back(47221);
        internalCounters.push_back(47457);
        internalCounters.push_back(47693);
        internalCounters.push_back(47929);
        internalCounters.push_back(48165);
        internalCounters.push_back(48401);
        internalCounters.push_back(48637);
        internalCounters.push_back(48873);
        internalCounters.push_back(49109);
        internalCounters.push_back(49345);
        internalCounters.push_back(49581);
        internalCounters.push_back(49817);
        internalCounters.push_back(50053);
        internalCounters.push_back(50289);
        internalCounters.push_back(50525);
        internalCounters.push_back(50761);
        internalCounters.push_back(50997);
        internalCounters.push_back(51233);
        internalCounters.push_back(51469);
        internalCounters.push_back(51705);
        internalCounters.push_back(51941);
        internalCounters.push_back(52177);
        internalCounters.push_back(52413);
        internalCounters.push_back(52649);
        internalCounters.push_back(52885);
        internalCounters.push_back(53121);
        internalCounters.push_back(53357);
        internalCounters.push_back(53593);
        internalCounters.push_back(53829);
        internalCounters.push_back(54065);
        internalCounters.push_back(54301);
        internalCounters.push_back(54537);
        internalCounters.push_back(54773);
        internalCounters.push_back(55009);
        internalCounters.push_back(55245);
        internalCounters.push_back(55481);
        internalCounters.push_back(55717);
        internalCounters.push_back(55953);
        internalCounters.push_back(56189);
        internalCounters.push_back(56425);
        internalCounters.push_back(56661);
        internalCounters.push_back(56897);
        internalCounters.push_back(57133);
        internalCounters.push_back(57369);
        internalCounters.push_back(57605);
        internalCounters.push_back(57841);
        internalCounters.push_back(58077);
        internalCounters.push_back(58313);
        internalCounters.push_back(58549);
        internalCounters.push_back(58785);
        internalCounters.push_back(59021);
        internalCounters.push_back(59257);
        internalCounters.push_back(59493);
        internalCounters.push_back(59729);
        internalCounters.push_back(59965);
        internalCounters.push_back(60201);
        internalCounters.push_back(60437);
        internalCounters.push_back(60673);
        internalCounters.push_back(60909);
        internalCounters.push_back(61145);
        internalCounters.push_back(61381);
        internalCounters.push_back(61617);
        internalCounters.push_back(61853);
        internalCounters.push_back(62089);
        internalCounters.push_back(62325);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(43681);
        internalCounters.push_back(43917);
        internalCounters.push_back(44153);
        internalCounters.push_back(44389);
        internalCounters.push_back(44625);
        internalCounters.push_back(44861);
        internalCounters.push_back(45097);
        internalCounters.push_back(45333);
        internalCounters.push_back(45569);
        internalCounters.push_back(45805);
        internalCounters.push_back(46041);
        internalCounters.push_back(46277);
        internalCounters.push_back(46513);
        internalCounters.push_back(46749);
        internalCounters.push_back(46985);
        internalCounters.push_back(47221);
        internalCounters.push_back(47457);
        internalCounters.push_back(47693);
        internalCounters.push_back(47929);
        internalCounters.push_back(48165);
        internalCounters.push_back(48401);
        internalCounters.push_back(48637);
        internalCounters.push_back(48873);
        internalCounters.push_back(49109);
        internalCounters.push_back(49345);
        internalCounters.push_back(49581);
        internalCounters.push_back(49817);
        internalCounters.push_back(50053);
        internalCounters.push_back(50289);
        internalCounters.push_back(50525);
        internalCounters.push_back(50761);
        internalCounters.push_back(50997);
        internalCounters.push_back(51233);
        internalCounters.push_back(51469);
        internalCounters.push_back(51705);
        internalCounters.push_back(51941);
        internalCounters.push_back(52177);
        internalCounters.push_back(52413);
        internalCounters.push_back(52649);
        internalCounters.push_back(52885);
        internalCounters.push_back(53121);
        internalCounters.push_back(53357);
        internalCounters.push_back(53593);
        internalCounters.push_back(53829);
        internalCounters.push_back(54065);
        internalCounters.push_back(54301);
        internalCounters.push_back(54537);
        internalCounters.push_back(54773);
        internalCounters.push_back(55009);
        internalCounters.push_back(55245);
        internalCounters.push_back(55481);
        internalCounters.push_back(55717);
        internalCounters.push_back(55953);
        internalCounters.push_back(56189);
        internalCounters.push_back(56425);
        internalCounters.push_back(56661);
        internalCounters.push_back(56897);
        internalCounters.push_back(57133);
        internalCounters.push_back(57369);
        internalCounters.push_back(57605);
        internalCounters.push_back(57841);
        internalCounters.push_back(58077);
        internalCounters.push_back(58313);
        internalCounters.push_back(58549);
        internalCounters.push_back(58785);
        internalCounters.push_back(59021);
        internalCounters.push_back(59257);
        internalCounters.push_back(59493);
        internalCounters.push_back(59729);
        internalCounters.push_back(59965);
        internalCounters.push_back(60201);
        internalCounters.push_back(60437);
        internalCounters.push_back(60673);
        internalCounters.push_back(60909);
        internalCounters.push_back(61145);
        internalCounters.push_back(61381);
        internalCounters.push_back(61617);
        internalCounters.push_back(61853);
        internalCounters.push_back(62089);
        internalCounters.push_back(62325);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77942);
        internalCounters.push_back(78019);
        internalCounters.push_back(78096);
        internalCounters.push_back(78173);
        internalCounters.push_back(78250);
        internalCounters.push_back(78327);
        internalCounters.push_back(78404);
        internalCounters.push_back(78481);
        internalCounters.push_back(78558);
        internalCounters.push_back(78635);
        internalCounters.push_back(78712);
        internalCounters.push_back(78789);
        internalCounters.push_back(78866);
        internalCounters.push_back(78943);
        internalCounters.push_back(79020);
        internalCounters.push_back(79097);
        internalCounters.push_back(79174);
        internalCounters.push_back(79251);
        internalCounters.push_back(79328);
        internalCounters.push_back(79405);
        internalCounters.push_back(79482);
        internalCounters.push_back(79559);
        internalCounters.push_back(79636);
        internalCounters.push_back(79713);
        internalCounters.push_back(79790);
        internalCounters.push_back(79867);
        internalCounters.push_back(79944);
        internalCounters.push_back(80021);
        internalCounters.push_back(80098);
        internalCounters.push_back(80175);
        internalCounters.push_back(80252);
        internalCounters.push_back(80329);
        internalCounters.push_back(80406);
        internalCounters.push_back(80483);
        internalCounters.push_back(80560);
        internalCounters.push_back(80637);
        internalCounters.push_back(80714);
        internalCounters.push_back(80791);
        internalCounters.push_back(80868);
        internalCounters.push_back(80945);
        internalCounters.push_back(81022);
        internalCounters.push_back(81099);
        internalCounters.push_back(81176);
        internalCounters.push_back(81253);
        internalCounters.push_back(81330);
        internalCounters.push_back(81407);
        internalCounters.push_back(81484);
        internalCounters.push_back(81561);
        internalCounters.push_back(81638);
        internalCounters.push_back(81715);
        internalCounters.push_back(81792);
        internalCounters.push_back(81869);
        internalCounters.push_back(81946);
        internalCounters.push_back(82023);
        internalCounters.push_back(82100);
        internalCounters.push_back(82177);
        internalCounters.push_back(82254);
        internalCounters.push_back(82331);
        internalCounters.push_back(82408);
        internalCounters.push_back(82485);
        internalCounters.push_back(82562);
        internalCounters.push_back(82639);
        internalCounters.push_back(82716);
        internalCounters.push_back(82793);
        internalCounters.push_back(82870);
        internalCounters.push_back(82947);
        internalCounters.push_back(83024);
        internalCounters.push_back(83101);
        internalCounters.push_back(83178);
        internalCounters.push_back(83255);
        internalCounters.push_back(83332);
        internalCounters.push_back(83409);
        internalCounters.push_back(83486);
        internalCounters.push_back(83563);
        internalCounters.push_back(83640);
        internalCounters.push_back(83717);
        internalCounters.push_back(83794);
        internalCounters.push_back(83871);
        internalCounters.push_back(83948);
        internalCounters.push_back(84025);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(77942);
        internalCounters.push_back(78019);
        internalCounters.push_back(78096);
        internalCounters.push_back(78173);
        internalCounters.push_back(78250);
        internalCounters.push_back(78327);
        internalCounters.push_back(78404);
        internalCounters.push_back(78481);
        internalCounters.push_back(78558);
        internalCounters.push_back(78635);
        internalCounters.push_back(78712);
        internalCounters.push_back(78789);
        internalCounters.push_back(78866);
        internalCounters.push_back(78943);
        internalCounters.push_back(79020);
        internalCounters.push_back(79097);
        internalCounters.push_back(79174);
        internalCounters.push_back(79251);
        internalCounters.push_back(79328);
        internalCounters.push_back(79405);
        internalCounters.push_back(79482);
        internalCounters.push_back(79559);
        internalCounters.push_back(79636);
        internalCounters.push_back(79713);
        internalCounters.push_back(79790);
        internalCounters.push_back(79867);
        internalCounters.push_back(79944);
        internalCounters.push_back(80021);
        internalCounters.push_back(80098);
        internalCounters.push_back(80175);
        internalCounters.push_back(80252);
        internalCounters.push_back(80329);
        internalCounters.push_back(80406);
        internalCounters.push_back(80483);
        internalCounters.push_back(80560);
        internalCounters.push_back(80637);
        internalCounters.push_back(80714);
        internalCounters.push_back(80791);
        internalCounters.push_back(80868);
        internalCounters.push_back(80945);
        internalCounters.push_back(81022);
        internalCounters.push_back(81099);
        internalCounters.push_back(81176);
        internalCounters.push_back(81253);
        internalCounters.push_back(81330);
        internalCounters.push_back(81407);
        internalCounters.push_back(81484);
        internalCounters.push_back(81561);
        internalCounters.push_back(81638);
        internalCounters.push_back(81715);
        internalCounters.push_back(81792);
        internalCounters.push_back(81869);
        internalCounters.push_back(81946);
        internalCounters.push_back(82023);
        internalCounters.push_back(82100);
        internalCounters.push_back(82177);
        internalCounters.push_back(82254);
        internalCounters.push_back(82331);
        internalCounters.push_back(82408);
        internalCounters.push_back(82485);
        internalCounters.push_back(82562);
        internalCounters.push_back(82639);
        internalCounters.push_back(82716);
        internalCounters.push_back(82793);
        internalCounters.push_back(82870);
        internalCounters.push_back(82947);
        internalCounters.push_back(83024);
        internalCounters.push_back(83101);
        internalCounters.push_back(83178);
        internalCounters.push_back(83255);
        internalCounters.push_back(83332);
        internalCounters.push_back(83409);
        internalCounters.push_back(83486);
        internalCounters.push_back(83563);
        internalCounters.push_back(83640);
        internalCounters.push_back(83717);
        internalCounters.push_back(83794);
        internalCounters.push_back(83871);
        internalCounters.push_back(83948);
        internalCounters.push_back(84025);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99243);
        internalCounters.push_back(99497);
        internalCounters.push_back(99751);
        internalCounters.push_back(100005);
        internalCounters.push_back(100259);
        internalCounters.push_back(100513);
        internalCounters.push_back(100767);
        internalCounters.push_back(101021);
        internalCounters.push_back(101275);
        internalCounters.push_back(101529);
        internalCounters.push_back(101783);
        internalCounters.push_back(102037);
        internalCounters.push_back(102291);
        internalCounters.push_back(102545);
        internalCounters.push_back(102799);
        internalCounters.push_back(103053);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(99243);
        internalCounters.push_back(99497);
        internalCounters.push_back(99751);
        internalCounters.push_back(100005);
        internalCounters.push_back(100259);
        internalCounters.push_back(100513);
        internalCounters.push_back(100767);
        internalCounters.push_back(101021);
        internalCounters.push_back(101275);
        internalCounters.push_back(101529);
        internalCounters.push_back(101783);
        internalCounters.push_back(102037);
        internalCounters.push_back(102291);
        internalCounters.push_back(102545);
        internalCounters.push_back(102799);
        internalCounters.push_back(103053);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

