//==============================================================================
// Copyright (c) 2010-2020 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief Public Counter Definitions for DX11 GFX9 
//==============================================================================

#include "gpa_counter.h"
#include "public_counter_definitions_dx11_gfx9.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersDX11_Gfx9(GPA_DerivedCounters& c)
{
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55198);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23);
        internalCounters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(51045);
        internalCounters.push_back(51193);
        internalCounters.push_back(51341);
        internalCounters.push_back(51489);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("TessellatorBusy", "Timing", "The percentage of time the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "36af6c72-dcfb-8102-4fd4-ce8ddc573365");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(51045);
        internalCounters.push_back(51193);
        internalCounters.push_back(51341);
        internalCounters.push_back(51489);

        c.DefineDerivedCounter("TessellatorBusyCycles", "Timing", "Number of GPU cycles that the tessellation engine is busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "60289dcb-7b33-46e7-26d1-8a2121605543");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16698);
        internalCounters.push_back(16894);
        internalCounters.push_back(17090);
        internalCounters.push_back(17286);
        internalCounters.push_back(16707);
        internalCounters.push_back(16903);
        internalCounters.push_back(17099);
        internalCounters.push_back(17295);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16698);
        internalCounters.push_back(16894);
        internalCounters.push_back(17090);
        internalCounters.push_back(17286);
        internalCounters.push_back(16707);
        internalCounters.push_back(16903);
        internalCounters.push_back(17099);
        internalCounters.push_back(17295);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55198);
        internalCounters.push_back(16698);
        internalCounters.push_back(16894);
        internalCounters.push_back(17090);
        internalCounters.push_back(17286);
        internalCounters.push_back(16707);
        internalCounters.push_back(16903);
        internalCounters.push_back(17099);
        internalCounters.push_back(17295);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16729);
        internalCounters.push_back(16925);
        internalCounters.push_back(17121);
        internalCounters.push_back(17317);
        internalCounters.push_back(16735);
        internalCounters.push_back(16931);
        internalCounters.push_back(17127);
        internalCounters.push_back(17323);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16729);
        internalCounters.push_back(16925);
        internalCounters.push_back(17121);
        internalCounters.push_back(17317);
        internalCounters.push_back(16735);
        internalCounters.push_back(16931);
        internalCounters.push_back(17127);
        internalCounters.push_back(17323);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55198);
        internalCounters.push_back(16729);
        internalCounters.push_back(16925);
        internalCounters.push_back(17121);
        internalCounters.push_back(17317);
        internalCounters.push_back(16735);
        internalCounters.push_back(16931);
        internalCounters.push_back(17127);
        internalCounters.push_back(17323);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16717);
        internalCounters.push_back(16913);
        internalCounters.push_back(17109);
        internalCounters.push_back(17305);
        internalCounters.push_back(16720);
        internalCounters.push_back(16916);
        internalCounters.push_back(17112);
        internalCounters.push_back(17308);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSBusy", "Timing", "The percentage of time the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "876f36d8-d046-833f-7832-673cbffd0a45");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16717);
        internalCounters.push_back(16913);
        internalCounters.push_back(17109);
        internalCounters.push_back(17305);
        internalCounters.push_back(16720);
        internalCounters.push_back(16916);
        internalCounters.push_back(17112);
        internalCounters.push_back(17308);

        c.DefineDerivedCounter("GSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has geometry shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "48203b6b-8983-c067-d63e-05da8be5111b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55198);
        internalCounters.push_back(16717);
        internalCounters.push_back(16913);
        internalCounters.push_back(17109);
        internalCounters.push_back(17305);
        internalCounters.push_back(16720);
        internalCounters.push_back(16916);
        internalCounters.push_back(17112);
        internalCounters.push_back(17308);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSTime", "Timing", "Time geometry shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "c73e715f-59af-76e8-9e22-097b94c066c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16751);
        internalCounters.push_back(16947);
        internalCounters.push_back(17143);
        internalCounters.push_back(17339);
        internalCounters.push_back(16756);
        internalCounters.push_back(16952);
        internalCounters.push_back(17148);
        internalCounters.push_back(17344);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16751);
        internalCounters.push_back(16947);
        internalCounters.push_back(17143);
        internalCounters.push_back(17339);
        internalCounters.push_back(16756);
        internalCounters.push_back(16952);
        internalCounters.push_back(17148);
        internalCounters.push_back(17344);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55198);
        internalCounters.push_back(16751);
        internalCounters.push_back(16947);
        internalCounters.push_back(17143);
        internalCounters.push_back(17339);
        internalCounters.push_back(16756);
        internalCounters.push_back(16952);
        internalCounters.push_back(17148);
        internalCounters.push_back(17344);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16739);
        internalCounters.push_back(16935);
        internalCounters.push_back(17131);
        internalCounters.push_back(17327);
        internalCounters.push_back(16743);
        internalCounters.push_back(16939);
        internalCounters.push_back(17135);
        internalCounters.push_back(17331);
        internalCounters.push_back(16745);
        internalCounters.push_back(16941);
        internalCounters.push_back(17137);
        internalCounters.push_back(17333);
        internalCounters.push_back(16749);
        internalCounters.push_back(16945);
        internalCounters.push_back(17141);
        internalCounters.push_back(17337);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16739);
        internalCounters.push_back(16935);
        internalCounters.push_back(17131);
        internalCounters.push_back(17327);
        internalCounters.push_back(16743);
        internalCounters.push_back(16939);
        internalCounters.push_back(17135);
        internalCounters.push_back(17331);
        internalCounters.push_back(16745);
        internalCounters.push_back(16941);
        internalCounters.push_back(17137);
        internalCounters.push_back(17333);
        internalCounters.push_back(16749);
        internalCounters.push_back(16945);
        internalCounters.push_back(17141);
        internalCounters.push_back(17337);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(55198);
        internalCounters.push_back(16739);
        internalCounters.push_back(16935);
        internalCounters.push_back(17131);
        internalCounters.push_back(17327);
        internalCounters.push_back(16743);
        internalCounters.push_back(16939);
        internalCounters.push_back(17135);
        internalCounters.push_back(17331);
        internalCounters.push_back(16745);
        internalCounters.push_back(16941);
        internalCounters.push_back(17137);
        internalCounters.push_back(17333);
        internalCounters.push_back(16749);
        internalCounters.push_back(16945);
        internalCounters.push_back(17141);
        internalCounters.push_back(17337);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50940);
        internalCounters.push_back(51088);
        internalCounters.push_back(51236);
        internalCounters.push_back(51384);
        internalCounters.push_back(50921);
        internalCounters.push_back(51069);
        internalCounters.push_back(51217);
        internalCounters.push_back(51365);
        internalCounters.push_back(51016);
        internalCounters.push_back(51164);
        internalCounters.push_back(51312);
        internalCounters.push_back(51460);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21995);
        internalCounters.push_back(22369);
        internalCounters.push_back(22743);
        internalCounters.push_back(23117);
        internalCounters.push_back(21973);
        internalCounters.push_back(22347);
        internalCounters.push_back(22721);
        internalCounters.push_back(23095);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(21999);
        internalCounters.push_back(22373);
        internalCounters.push_back(22747);
        internalCounters.push_back(23121);
        internalCounters.push_back(21973);
        internalCounters.push_back(22347);
        internalCounters.push_back(22721);
        internalCounters.push_back(23095);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(22040);
        internalCounters.push_back(22414);
        internalCounters.push_back(22788);
        internalCounters.push_back(23162);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(22040);
        internalCounters.push_back(22414);
        internalCounters.push_back(22788);
        internalCounters.push_back(23162);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(22053);
        internalCounters.push_back(22427);
        internalCounters.push_back(22801);
        internalCounters.push_back(23175);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(22053);
        internalCounters.push_back(22427);
        internalCounters.push_back(22801);
        internalCounters.push_back(23175);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(51025);
        internalCounters.push_back(51173);
        internalCounters.push_back(51321);
        internalCounters.push_back(51469);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26483);
        internalCounters.push_back(26857);
        internalCounters.push_back(27231);
        internalCounters.push_back(27605);
        internalCounters.push_back(26461);
        internalCounters.push_back(26835);
        internalCounters.push_back(27209);
        internalCounters.push_back(27583);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26487);
        internalCounters.push_back(26861);
        internalCounters.push_back(27235);
        internalCounters.push_back(27609);
        internalCounters.push_back(26461);
        internalCounters.push_back(26835);
        internalCounters.push_back(27209);
        internalCounters.push_back(27583);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26528);
        internalCounters.push_back(26902);
        internalCounters.push_back(27276);
        internalCounters.push_back(27650);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26528);
        internalCounters.push_back(26902);
        internalCounters.push_back(27276);
        internalCounters.push_back(27650);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26541);
        internalCounters.push_back(26915);
        internalCounters.push_back(27289);
        internalCounters.push_back(27663);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26541);
        internalCounters.push_back(26915);
        internalCounters.push_back(27289);
        internalCounters.push_back(27663);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50929);
        internalCounters.push_back(51077);
        internalCounters.push_back(51225);
        internalCounters.push_back(51373);

        c.DefineDerivedCounter("GSPrimsIn", "GeometryShader", "The number of primitives passed into the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "20c29866-509a-aaab-2697-6b2c38f79953");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(50940);
        internalCounters.push_back(51088);
        internalCounters.push_back(51236);
        internalCounters.push_back(51384);
        internalCounters.push_back(50921);
        internalCounters.push_back(51069);
        internalCounters.push_back(51217);
        internalCounters.push_back(51365);

        c.DefineDerivedCounter("GSVerticesOut", "GeometryShader", "The number of vertices output by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,ifnotzero", "775b9736-319a-bd8a-48c9-68db9c91d978");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20499);
        internalCounters.push_back(20873);
        internalCounters.push_back(21247);
        internalCounters.push_back(21621);
        internalCounters.push_back(20477);
        internalCounters.push_back(20851);
        internalCounters.push_back(21225);
        internalCounters.push_back(21599);

        c.DefineDerivedCounter("GSVALUInstCount", "GeometryShader", "Average number of vector ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "21b12bfa-b8cd-2e71-a2d5-f9e9f1d65d61");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20503);
        internalCounters.push_back(20877);
        internalCounters.push_back(21251);
        internalCounters.push_back(21625);
        internalCounters.push_back(20477);
        internalCounters.push_back(20851);
        internalCounters.push_back(21225);
        internalCounters.push_back(21599);

        c.DefineDerivedCounter("GSSALUInstCount", "GeometryShader", "Average number of scalar ALU instructions executed in the GS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "a8562594-d335-ca43-61bf-03b72d2b98a5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20544);
        internalCounters.push_back(20918);
        internalCounters.push_back(21292);
        internalCounters.push_back(21666);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSVALUBusy", "GeometryShader", "The percentage of GPUTime vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "228a4818-1e56-cebb-0720-3b2cdc057a6f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20544);
        internalCounters.push_back(20918);
        internalCounters.push_back(21292);
        internalCounters.push_back(21666);

        c.DefineDerivedCounter("GSVALUBusyCycles", "GeometryShader", "Number of GPU cycles where vector ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "be217edd-226f-bd97-9a48-46e2809b1933");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20557);
        internalCounters.push_back(20931);
        internalCounters.push_back(21305);
        internalCounters.push_back(21679);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("GSSALUBusy", "GeometryShader", "The percentage of GPUTime scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "f28ce300-800e-9822-39e4-f48528bdb935");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20557);
        internalCounters.push_back(20931);
        internalCounters.push_back(21305);
        internalCounters.push_back(21679);

        c.DefineDerivedCounter("GSSALUBusyCycles", "GeometryShader", "Number of GPU cycles where scalar ALU instructions are being processed by the GS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "b3eace7c-3bc4-0107-887f-923851dc8ea7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12598);
        internalCounters.push_back(12949);
        internalCounters.push_back(13300);
        internalCounters.push_back(13651);
        internalCounters.push_back(12602);
        internalCounters.push_back(12953);
        internalCounters.push_back(13304);
        internalCounters.push_back(13655);
        internalCounters.push_back(12554);
        internalCounters.push_back(12905);
        internalCounters.push_back(13256);
        internalCounters.push_back(13607);
        internalCounters.push_back(12566);
        internalCounters.push_back(12917);
        internalCounters.push_back(13268);
        internalCounters.push_back(13619);
        internalCounters.push_back(12555);
        internalCounters.push_back(12906);
        internalCounters.push_back(13257);
        internalCounters.push_back(13608);
        internalCounters.push_back(12567);
        internalCounters.push_back(12918);
        internalCounters.push_back(13269);
        internalCounters.push_back(13620);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12598);
        internalCounters.push_back(12949);
        internalCounters.push_back(13300);
        internalCounters.push_back(13651);
        internalCounters.push_back(12602);
        internalCounters.push_back(12953);
        internalCounters.push_back(13304);
        internalCounters.push_back(13655);
        internalCounters.push_back(12554);
        internalCounters.push_back(12905);
        internalCounters.push_back(13256);
        internalCounters.push_back(13607);
        internalCounters.push_back(12566);
        internalCounters.push_back(12917);
        internalCounters.push_back(13268);
        internalCounters.push_back(13619);
        internalCounters.push_back(12555);
        internalCounters.push_back(12906);
        internalCounters.push_back(13257);
        internalCounters.push_back(13608);
        internalCounters.push_back(12567);
        internalCounters.push_back(12918);
        internalCounters.push_back(13269);
        internalCounters.push_back(13620);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12501);
        internalCounters.push_back(12852);
        internalCounters.push_back(13203);
        internalCounters.push_back(13554);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12507);
        internalCounters.push_back(12858);
        internalCounters.push_back(13209);
        internalCounters.push_back(13560);
        internalCounters.push_back(12547);
        internalCounters.push_back(12898);
        internalCounters.push_back(13249);
        internalCounters.push_back(13600);
        internalCounters.push_back(12548);
        internalCounters.push_back(12899);
        internalCounters.push_back(13250);
        internalCounters.push_back(13601);
        internalCounters.push_back(12549);
        internalCounters.push_back(12900);
        internalCounters.push_back(13251);
        internalCounters.push_back(13602);
        internalCounters.push_back(12550);
        internalCounters.push_back(12901);
        internalCounters.push_back(13252);
        internalCounters.push_back(13603);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,+,2,+,3,+,4,+,5,+,6,+,7,+,8,+,9,+,10,+,11,+,12,+,13,+,14,+,15,+,16,+,17,+,18,+,19,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12514);
        internalCounters.push_back(12865);
        internalCounters.push_back(13216);
        internalCounters.push_back(13567);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12602);
        internalCounters.push_back(12953);
        internalCounters.push_back(13304);
        internalCounters.push_back(13655);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(12602);
        internalCounters.push_back(12953);
        internalCounters.push_back(13304);
        internalCounters.push_back(13655);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15877);
        internalCounters.push_back(16085);
        internalCounters.push_back(16293);
        internalCounters.push_back(16501);
        internalCounters.push_back(15882);
        internalCounters.push_back(16090);
        internalCounters.push_back(16298);
        internalCounters.push_back(16506);
        internalCounters.push_back(15887);
        internalCounters.push_back(16095);
        internalCounters.push_back(16303);
        internalCounters.push_back(16511);
        internalCounters.push_back(15892);
        internalCounters.push_back(16100);
        internalCounters.push_back(16308);
        internalCounters.push_back(16516);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,8,9,10,11,sum4,12,13,14,15,sum4,sum4", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15879);
        internalCounters.push_back(16087);
        internalCounters.push_back(16295);
        internalCounters.push_back(16503);
        internalCounters.push_back(15884);
        internalCounters.push_back(16092);
        internalCounters.push_back(16300);
        internalCounters.push_back(16508);
        internalCounters.push_back(15889);
        internalCounters.push_back(16097);
        internalCounters.push_back(16305);
        internalCounters.push_back(16513);
        internalCounters.push_back(15894);
        internalCounters.push_back(16102);
        internalCounters.push_back(16310);
        internalCounters.push_back(16518);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max,16,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(15879);
        internalCounters.push_back(16087);
        internalCounters.push_back(16295);
        internalCounters.push_back(16503);
        internalCounters.push_back(15884);
        internalCounters.push_back(16092);
        internalCounters.push_back(16300);
        internalCounters.push_back(16508);
        internalCounters.push_back(15889);
        internalCounters.push_back(16097);
        internalCounters.push_back(16305);
        internalCounters.push_back(16513);
        internalCounters.push_back(15894);
        internalCounters.push_back(16102);
        internalCounters.push_back(16310);
        internalCounters.push_back(16518);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max,4,max,5,max,6,max,7,max,8,max,9,max,10,max,11,max,12,max,13,max,14,max,15,max", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23491);
        internalCounters.push_back(23865);
        internalCounters.push_back(24239);
        internalCounters.push_back(24613);
        internalCounters.push_back(23469);
        internalCounters.push_back(23843);
        internalCounters.push_back(24217);
        internalCounters.push_back(24591);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23495);
        internalCounters.push_back(23869);
        internalCounters.push_back(24243);
        internalCounters.push_back(24617);
        internalCounters.push_back(23469);
        internalCounters.push_back(23843);
        internalCounters.push_back(24217);
        internalCounters.push_back(24591);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23536);
        internalCounters.push_back(23910);
        internalCounters.push_back(24284);
        internalCounters.push_back(24658);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23536);
        internalCounters.push_back(23910);
        internalCounters.push_back(24284);
        internalCounters.push_back(24658);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,(4),*,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23549);
        internalCounters.push_back(23923);
        internalCounters.push_back(24297);
        internalCounters.push_back(24671);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(23549);
        internalCounters.push_back(23923);
        internalCounters.push_back(24297);
        internalCounters.push_back(24671);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16743);
        internalCounters.push_back(16939);
        internalCounters.push_back(17135);
        internalCounters.push_back(17331);
        internalCounters.push_back(16749);
        internalCounters.push_back(16945);
        internalCounters.push_back(17141);
        internalCounters.push_back(17337);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);
        internalCounters.push_back(27967);
        internalCounters.push_back(28341);
        internalCounters.push_back(28715);
        internalCounters.push_back(29089);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27979);
        internalCounters.push_back(28353);
        internalCounters.push_back(28727);
        internalCounters.push_back(29101);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28038);
        internalCounters.push_back(28412);
        internalCounters.push_back(28786);
        internalCounters.push_back(29160);
        internalCounters.push_back(28024);
        internalCounters.push_back(28398);
        internalCounters.push_back(28772);
        internalCounters.push_back(29146);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of 64. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),*,/,(100),*,8,9,10,11,12,13,14,15,sum8,ifnotzero,(100),min", "4476879e-cdc0-d602-b24e-9b4a8d38438f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27983);
        internalCounters.push_back(28357);
        internalCounters.push_back(28731);
        internalCounters.push_back(29105);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27981);
        internalCounters.push_back(28355);
        internalCounters.push_back(28729);
        internalCounters.push_back(29103);
        internalCounters.push_back(29550);
        internalCounters.push_back(29669);
        internalCounters.push_back(29788);
        internalCounters.push_back(29907);
        internalCounters.push_back(30026);
        internalCounters.push_back(30145);
        internalCounters.push_back(30264);
        internalCounters.push_back(30383);
        internalCounters.push_back(30502);
        internalCounters.push_back(30621);
        internalCounters.push_back(30740);
        internalCounters.push_back(30859);
        internalCounters.push_back(30978);
        internalCounters.push_back(31097);
        internalCounters.push_back(31216);
        internalCounters.push_back(31335);
        internalCounters.push_back(31454);
        internalCounters.push_back(31573);
        internalCounters.push_back(31692);
        internalCounters.push_back(31811);
        internalCounters.push_back(31930);
        internalCounters.push_back(32049);
        internalCounters.push_back(32168);
        internalCounters.push_back(32287);
        internalCounters.push_back(32406);
        internalCounters.push_back(32525);
        internalCounters.push_back(32644);
        internalCounters.push_back(32763);
        internalCounters.push_back(32882);
        internalCounters.push_back(33001);
        internalCounters.push_back(33120);
        internalCounters.push_back(33239);
        internalCounters.push_back(33358);
        internalCounters.push_back(33477);
        internalCounters.push_back(33596);
        internalCounters.push_back(33715);
        internalCounters.push_back(33834);
        internalCounters.push_back(33953);
        internalCounters.push_back(34072);
        internalCounters.push_back(34191);
        internalCounters.push_back(34310);
        internalCounters.push_back(34429);
        internalCounters.push_back(34548);
        internalCounters.push_back(34667);
        internalCounters.push_back(34786);
        internalCounters.push_back(34905);
        internalCounters.push_back(35024);
        internalCounters.push_back(35143);
        internalCounters.push_back(35262);
        internalCounters.push_back(35381);
        internalCounters.push_back(35500);
        internalCounters.push_back(35619);
        internalCounters.push_back(35738);
        internalCounters.push_back(35857);
        internalCounters.push_back(35976);
        internalCounters.push_back(36095);
        internalCounters.push_back(36214);
        internalCounters.push_back(36333);
        internalCounters.push_back(36452);
        internalCounters.push_back(36571);
        internalCounters.push_back(36690);
        internalCounters.push_back(36809);
        internalCounters.push_back(36928);
        internalCounters.push_back(37047);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27984);
        internalCounters.push_back(28358);
        internalCounters.push_back(28732);
        internalCounters.push_back(29106);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27980);
        internalCounters.push_back(28354);
        internalCounters.push_back(28728);
        internalCounters.push_back(29102);
        internalCounters.push_back(29551);
        internalCounters.push_back(29670);
        internalCounters.push_back(29789);
        internalCounters.push_back(29908);
        internalCounters.push_back(30027);
        internalCounters.push_back(30146);
        internalCounters.push_back(30265);
        internalCounters.push_back(30384);
        internalCounters.push_back(30503);
        internalCounters.push_back(30622);
        internalCounters.push_back(30741);
        internalCounters.push_back(30860);
        internalCounters.push_back(30979);
        internalCounters.push_back(31098);
        internalCounters.push_back(31217);
        internalCounters.push_back(31336);
        internalCounters.push_back(31455);
        internalCounters.push_back(31574);
        internalCounters.push_back(31693);
        internalCounters.push_back(31812);
        internalCounters.push_back(31931);
        internalCounters.push_back(32050);
        internalCounters.push_back(32169);
        internalCounters.push_back(32288);
        internalCounters.push_back(32407);
        internalCounters.push_back(32526);
        internalCounters.push_back(32645);
        internalCounters.push_back(32764);
        internalCounters.push_back(32883);
        internalCounters.push_back(33002);
        internalCounters.push_back(33121);
        internalCounters.push_back(33240);
        internalCounters.push_back(33359);
        internalCounters.push_back(33478);
        internalCounters.push_back(33597);
        internalCounters.push_back(33716);
        internalCounters.push_back(33835);
        internalCounters.push_back(33954);
        internalCounters.push_back(34073);
        internalCounters.push_back(34192);
        internalCounters.push_back(34311);
        internalCounters.push_back(34430);
        internalCounters.push_back(34549);
        internalCounters.push_back(34668);
        internalCounters.push_back(34787);
        internalCounters.push_back(34906);
        internalCounters.push_back(35025);
        internalCounters.push_back(35144);
        internalCounters.push_back(35263);
        internalCounters.push_back(35382);
        internalCounters.push_back(35501);
        internalCounters.push_back(35620);
        internalCounters.push_back(35739);
        internalCounters.push_back(35858);
        internalCounters.push_back(35977);
        internalCounters.push_back(36096);
        internalCounters.push_back(36215);
        internalCounters.push_back(36334);
        internalCounters.push_back(36453);
        internalCounters.push_back(36572);
        internalCounters.push_back(36691);
        internalCounters.push_back(36810);
        internalCounters.push_back(36929);
        internalCounters.push_back(37048);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,sum64,-,68,69,70,71,sum4,/,72,73,74,75,76,77,78,79,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27985);
        internalCounters.push_back(28359);
        internalCounters.push_back(28733);
        internalCounters.push_back(29107);
        internalCounters.push_back(27986);
        internalCounters.push_back(28360);
        internalCounters.push_back(28734);
        internalCounters.push_back(29108);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSFlatVMemInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to the video memory executed per work item (affected by flow control). Includes FLAT instructions that read from or write to scratch.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "2570b477-13e3-f5b6-e6ff-7159373bc74d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28024);
        internalCounters.push_back(28398);
        internalCounters.push_back(28772);
        internalCounters.push_back(29146);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28024);
        internalCounters.push_back(28398);
        internalCounters.push_back(28772);
        internalCounters.push_back(29146);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,(4),*,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28037);
        internalCounters.push_back(28411);
        internalCounters.push_back(28785);
        internalCounters.push_back(29159);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28037);
        internalCounters.push_back(28411);
        internalCounters.push_back(28785);
        internalCounters.push_back(29159);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29464);
        internalCounters.push_back(29583);
        internalCounters.push_back(29702);
        internalCounters.push_back(29821);
        internalCounters.push_back(29940);
        internalCounters.push_back(30059);
        internalCounters.push_back(30178);
        internalCounters.push_back(30297);
        internalCounters.push_back(30416);
        internalCounters.push_back(30535);
        internalCounters.push_back(30654);
        internalCounters.push_back(30773);
        internalCounters.push_back(30892);
        internalCounters.push_back(31011);
        internalCounters.push_back(31130);
        internalCounters.push_back(31249);
        internalCounters.push_back(31368);
        internalCounters.push_back(31487);
        internalCounters.push_back(31606);
        internalCounters.push_back(31725);
        internalCounters.push_back(31844);
        internalCounters.push_back(31963);
        internalCounters.push_back(32082);
        internalCounters.push_back(32201);
        internalCounters.push_back(32320);
        internalCounters.push_back(32439);
        internalCounters.push_back(32558);
        internalCounters.push_back(32677);
        internalCounters.push_back(32796);
        internalCounters.push_back(32915);
        internalCounters.push_back(33034);
        internalCounters.push_back(33153);
        internalCounters.push_back(33272);
        internalCounters.push_back(33391);
        internalCounters.push_back(33510);
        internalCounters.push_back(33629);
        internalCounters.push_back(33748);
        internalCounters.push_back(33867);
        internalCounters.push_back(33986);
        internalCounters.push_back(34105);
        internalCounters.push_back(34224);
        internalCounters.push_back(34343);
        internalCounters.push_back(34462);
        internalCounters.push_back(34581);
        internalCounters.push_back(34700);
        internalCounters.push_back(34819);
        internalCounters.push_back(34938);
        internalCounters.push_back(35057);
        internalCounters.push_back(35176);
        internalCounters.push_back(35295);
        internalCounters.push_back(35414);
        internalCounters.push_back(35533);
        internalCounters.push_back(35652);
        internalCounters.push_back(35771);
        internalCounters.push_back(35890);
        internalCounters.push_back(36009);
        internalCounters.push_back(36128);
        internalCounters.push_back(36247);
        internalCounters.push_back(36366);
        internalCounters.push_back(36485);
        internalCounters.push_back(36604);
        internalCounters.push_back(36723);
        internalCounters.push_back(36842);
        internalCounters.push_back(36961);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29464);
        internalCounters.push_back(29583);
        internalCounters.push_back(29702);
        internalCounters.push_back(29821);
        internalCounters.push_back(29940);
        internalCounters.push_back(30059);
        internalCounters.push_back(30178);
        internalCounters.push_back(30297);
        internalCounters.push_back(30416);
        internalCounters.push_back(30535);
        internalCounters.push_back(30654);
        internalCounters.push_back(30773);
        internalCounters.push_back(30892);
        internalCounters.push_back(31011);
        internalCounters.push_back(31130);
        internalCounters.push_back(31249);
        internalCounters.push_back(31368);
        internalCounters.push_back(31487);
        internalCounters.push_back(31606);
        internalCounters.push_back(31725);
        internalCounters.push_back(31844);
        internalCounters.push_back(31963);
        internalCounters.push_back(32082);
        internalCounters.push_back(32201);
        internalCounters.push_back(32320);
        internalCounters.push_back(32439);
        internalCounters.push_back(32558);
        internalCounters.push_back(32677);
        internalCounters.push_back(32796);
        internalCounters.push_back(32915);
        internalCounters.push_back(33034);
        internalCounters.push_back(33153);
        internalCounters.push_back(33272);
        internalCounters.push_back(33391);
        internalCounters.push_back(33510);
        internalCounters.push_back(33629);
        internalCounters.push_back(33748);
        internalCounters.push_back(33867);
        internalCounters.push_back(33986);
        internalCounters.push_back(34105);
        internalCounters.push_back(34224);
        internalCounters.push_back(34343);
        internalCounters.push_back(34462);
        internalCounters.push_back(34581);
        internalCounters.push_back(34700);
        internalCounters.push_back(34819);
        internalCounters.push_back(34938);
        internalCounters.push_back(35057);
        internalCounters.push_back(35176);
        internalCounters.push_back(35295);
        internalCounters.push_back(35414);
        internalCounters.push_back(35533);
        internalCounters.push_back(35652);
        internalCounters.push_back(35771);
        internalCounters.push_back(35890);
        internalCounters.push_back(36009);
        internalCounters.push_back(36128);
        internalCounters.push_back(36247);
        internalCounters.push_back(36366);
        internalCounters.push_back(36485);
        internalCounters.push_back(36604);
        internalCounters.push_back(36723);
        internalCounters.push_back(36842);
        internalCounters.push_back(36961);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,65,66,67,68,69,70,71,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40719);
        internalCounters.push_back(40804);
        internalCounters.push_back(40889);
        internalCounters.push_back(40974);
        internalCounters.push_back(41059);
        internalCounters.push_back(41144);
        internalCounters.push_back(41229);
        internalCounters.push_back(41314);
        internalCounters.push_back(41399);
        internalCounters.push_back(41484);
        internalCounters.push_back(41569);
        internalCounters.push_back(41654);
        internalCounters.push_back(41739);
        internalCounters.push_back(41824);
        internalCounters.push_back(41909);
        internalCounters.push_back(41994);
        internalCounters.push_back(42079);
        internalCounters.push_back(42164);
        internalCounters.push_back(42249);
        internalCounters.push_back(42334);
        internalCounters.push_back(42419);
        internalCounters.push_back(42504);
        internalCounters.push_back(42589);
        internalCounters.push_back(42674);
        internalCounters.push_back(42759);
        internalCounters.push_back(42844);
        internalCounters.push_back(42929);
        internalCounters.push_back(43014);
        internalCounters.push_back(43099);
        internalCounters.push_back(43184);
        internalCounters.push_back(43269);
        internalCounters.push_back(43354);
        internalCounters.push_back(43439);
        internalCounters.push_back(43524);
        internalCounters.push_back(43609);
        internalCounters.push_back(43694);
        internalCounters.push_back(43779);
        internalCounters.push_back(43864);
        internalCounters.push_back(43949);
        internalCounters.push_back(44034);
        internalCounters.push_back(44119);
        internalCounters.push_back(44204);
        internalCounters.push_back(44289);
        internalCounters.push_back(44374);
        internalCounters.push_back(44459);
        internalCounters.push_back(44544);
        internalCounters.push_back(44629);
        internalCounters.push_back(44714);
        internalCounters.push_back(44799);
        internalCounters.push_back(44884);
        internalCounters.push_back(44969);
        internalCounters.push_back(45054);
        internalCounters.push_back(45139);
        internalCounters.push_back(45224);
        internalCounters.push_back(45309);
        internalCounters.push_back(45394);
        internalCounters.push_back(45479);
        internalCounters.push_back(45564);
        internalCounters.push_back(45649);
        internalCounters.push_back(45734);
        internalCounters.push_back(45819);
        internalCounters.push_back(45904);
        internalCounters.push_back(45989);
        internalCounters.push_back(46074);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*,65,66,67,68,69,70,71,72,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40719);
        internalCounters.push_back(40804);
        internalCounters.push_back(40889);
        internalCounters.push_back(40974);
        internalCounters.push_back(41059);
        internalCounters.push_back(41144);
        internalCounters.push_back(41229);
        internalCounters.push_back(41314);
        internalCounters.push_back(41399);
        internalCounters.push_back(41484);
        internalCounters.push_back(41569);
        internalCounters.push_back(41654);
        internalCounters.push_back(41739);
        internalCounters.push_back(41824);
        internalCounters.push_back(41909);
        internalCounters.push_back(41994);
        internalCounters.push_back(42079);
        internalCounters.push_back(42164);
        internalCounters.push_back(42249);
        internalCounters.push_back(42334);
        internalCounters.push_back(42419);
        internalCounters.push_back(42504);
        internalCounters.push_back(42589);
        internalCounters.push_back(42674);
        internalCounters.push_back(42759);
        internalCounters.push_back(42844);
        internalCounters.push_back(42929);
        internalCounters.push_back(43014);
        internalCounters.push_back(43099);
        internalCounters.push_back(43184);
        internalCounters.push_back(43269);
        internalCounters.push_back(43354);
        internalCounters.push_back(43439);
        internalCounters.push_back(43524);
        internalCounters.push_back(43609);
        internalCounters.push_back(43694);
        internalCounters.push_back(43779);
        internalCounters.push_back(43864);
        internalCounters.push_back(43949);
        internalCounters.push_back(44034);
        internalCounters.push_back(44119);
        internalCounters.push_back(44204);
        internalCounters.push_back(44289);
        internalCounters.push_back(44374);
        internalCounters.push_back(44459);
        internalCounters.push_back(44544);
        internalCounters.push_back(44629);
        internalCounters.push_back(44714);
        internalCounters.push_back(44799);
        internalCounters.push_back(44884);
        internalCounters.push_back(44969);
        internalCounters.push_back(45054);
        internalCounters.push_back(45139);
        internalCounters.push_back(45224);
        internalCounters.push_back(45309);
        internalCounters.push_back(45394);
        internalCounters.push_back(45479);
        internalCounters.push_back(45564);
        internalCounters.push_back(45649);
        internalCounters.push_back(45734);
        internalCounters.push_back(45819);
        internalCounters.push_back(45904);
        internalCounters.push_back(45989);
        internalCounters.push_back(46074);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,65,66,67,68,69,70,71,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46186);
        internalCounters.push_back(46468);
        internalCounters.push_back(46750);
        internalCounters.push_back(47032);
        internalCounters.push_back(47314);
        internalCounters.push_back(47596);
        internalCounters.push_back(47878);
        internalCounters.push_back(48160);
        internalCounters.push_back(48442);
        internalCounters.push_back(48724);
        internalCounters.push_back(49006);
        internalCounters.push_back(49288);
        internalCounters.push_back(49570);
        internalCounters.push_back(49852);
        internalCounters.push_back(50134);
        internalCounters.push_back(50416);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*,17,18,19,20,21,22,23,24,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46186);
        internalCounters.push_back(46468);
        internalCounters.push_back(46750);
        internalCounters.push_back(47032);
        internalCounters.push_back(47314);
        internalCounters.push_back(47596);
        internalCounters.push_back(47878);
        internalCounters.push_back(48160);
        internalCounters.push_back(48442);
        internalCounters.push_back(48724);
        internalCounters.push_back(49006);
        internalCounters.push_back(49288);
        internalCounters.push_back(49570);
        internalCounters.push_back(49852);
        internalCounters.push_back(50134);
        internalCounters.push_back(50416);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,17,18,19,20,21,22,23,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27988);
        internalCounters.push_back(28362);
        internalCounters.push_back(28736);
        internalCounters.push_back(29110);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27987);
        internalCounters.push_back(28361);
        internalCounters.push_back(28735);
        internalCounters.push_back(29109);
        internalCounters.push_back(27986);
        internalCounters.push_back(28360);
        internalCounters.push_back(28734);
        internalCounters.push_back(29108);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,-,8,9,10,11,sum4,/,12,13,14,15,16,17,18,19,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(27986);
        internalCounters.push_back(28360);
        internalCounters.push_back(28734);
        internalCounters.push_back(29108);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSFlatLDSInsts", "ComputeShader", "The average number of FLAT instructions that read from or write to LDS executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "99672cda-de2b-014c-482e-cf73b90068d5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28016);
        internalCounters.push_back(28390);
        internalCounters.push_back(28764);
        internalCounters.push_back(29138);
        internalCounters.push_back(27957);
        internalCounters.push_back(28331);
        internalCounters.push_back(28705);
        internalCounters.push_back(29079);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28016);
        internalCounters.push_back(28390);
        internalCounters.push_back(28764);
        internalCounters.push_back(29138);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28046);
        internalCounters.push_back(28420);
        internalCounters.push_back(28794);
        internalCounters.push_back(29168);
        internalCounters.push_back(23);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28046);
        internalCounters.push_back(28420);
        internalCounters.push_back(28794);
        internalCounters.push_back(29168);
        internalCounters.push_back(16740);
        internalCounters.push_back(16936);
        internalCounters.push_back(17132);
        internalCounters.push_back(17328);
        internalCounters.push_back(16746);
        internalCounters.push_back(16942);
        internalCounters.push_back(17138);
        internalCounters.push_back(17334);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29464);
        internalCounters.push_back(29583);
        internalCounters.push_back(29702);
        internalCounters.push_back(29821);
        internalCounters.push_back(29940);
        internalCounters.push_back(30059);
        internalCounters.push_back(30178);
        internalCounters.push_back(30297);
        internalCounters.push_back(30416);
        internalCounters.push_back(30535);
        internalCounters.push_back(30654);
        internalCounters.push_back(30773);
        internalCounters.push_back(30892);
        internalCounters.push_back(31011);
        internalCounters.push_back(31130);
        internalCounters.push_back(31249);
        internalCounters.push_back(31368);
        internalCounters.push_back(31487);
        internalCounters.push_back(31606);
        internalCounters.push_back(31725);
        internalCounters.push_back(31844);
        internalCounters.push_back(31963);
        internalCounters.push_back(32082);
        internalCounters.push_back(32201);
        internalCounters.push_back(32320);
        internalCounters.push_back(32439);
        internalCounters.push_back(32558);
        internalCounters.push_back(32677);
        internalCounters.push_back(32796);
        internalCounters.push_back(32915);
        internalCounters.push_back(33034);
        internalCounters.push_back(33153);
        internalCounters.push_back(33272);
        internalCounters.push_back(33391);
        internalCounters.push_back(33510);
        internalCounters.push_back(33629);
        internalCounters.push_back(33748);
        internalCounters.push_back(33867);
        internalCounters.push_back(33986);
        internalCounters.push_back(34105);
        internalCounters.push_back(34224);
        internalCounters.push_back(34343);
        internalCounters.push_back(34462);
        internalCounters.push_back(34581);
        internalCounters.push_back(34700);
        internalCounters.push_back(34819);
        internalCounters.push_back(34938);
        internalCounters.push_back(35057);
        internalCounters.push_back(35176);
        internalCounters.push_back(35295);
        internalCounters.push_back(35414);
        internalCounters.push_back(35533);
        internalCounters.push_back(35652);
        internalCounters.push_back(35771);
        internalCounters.push_back(35890);
        internalCounters.push_back(36009);
        internalCounters.push_back(36128);
        internalCounters.push_back(36247);
        internalCounters.push_back(36366);
        internalCounters.push_back(36485);
        internalCounters.push_back(36604);
        internalCounters.push_back(36723);
        internalCounters.push_back(36842);
        internalCounters.push_back(36961);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29464);
        internalCounters.push_back(29583);
        internalCounters.push_back(29702);
        internalCounters.push_back(29821);
        internalCounters.push_back(29940);
        internalCounters.push_back(30059);
        internalCounters.push_back(30178);
        internalCounters.push_back(30297);
        internalCounters.push_back(30416);
        internalCounters.push_back(30535);
        internalCounters.push_back(30654);
        internalCounters.push_back(30773);
        internalCounters.push_back(30892);
        internalCounters.push_back(31011);
        internalCounters.push_back(31130);
        internalCounters.push_back(31249);
        internalCounters.push_back(31368);
        internalCounters.push_back(31487);
        internalCounters.push_back(31606);
        internalCounters.push_back(31725);
        internalCounters.push_back(31844);
        internalCounters.push_back(31963);
        internalCounters.push_back(32082);
        internalCounters.push_back(32201);
        internalCounters.push_back(32320);
        internalCounters.push_back(32439);
        internalCounters.push_back(32558);
        internalCounters.push_back(32677);
        internalCounters.push_back(32796);
        internalCounters.push_back(32915);
        internalCounters.push_back(33034);
        internalCounters.push_back(33153);
        internalCounters.push_back(33272);
        internalCounters.push_back(33391);
        internalCounters.push_back(33510);
        internalCounters.push_back(33629);
        internalCounters.push_back(33748);
        internalCounters.push_back(33867);
        internalCounters.push_back(33986);
        internalCounters.push_back(34105);
        internalCounters.push_back(34224);
        internalCounters.push_back(34343);
        internalCounters.push_back(34462);
        internalCounters.push_back(34581);
        internalCounters.push_back(34700);
        internalCounters.push_back(34819);
        internalCounters.push_back(34938);
        internalCounters.push_back(35057);
        internalCounters.push_back(35176);
        internalCounters.push_back(35295);
        internalCounters.push_back(35414);
        internalCounters.push_back(35533);
        internalCounters.push_back(35652);
        internalCounters.push_back(35771);
        internalCounters.push_back(35890);
        internalCounters.push_back(36009);
        internalCounters.push_back(36128);
        internalCounters.push_back(36247);
        internalCounters.push_back(36366);
        internalCounters.push_back(36485);
        internalCounters.push_back(36604);
        internalCounters.push_back(36723);
        internalCounters.push_back(36842);
        internalCounters.push_back(36961);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29518);
        internalCounters.push_back(29637);
        internalCounters.push_back(29756);
        internalCounters.push_back(29875);
        internalCounters.push_back(29994);
        internalCounters.push_back(30113);
        internalCounters.push_back(30232);
        internalCounters.push_back(30351);
        internalCounters.push_back(30470);
        internalCounters.push_back(30589);
        internalCounters.push_back(30708);
        internalCounters.push_back(30827);
        internalCounters.push_back(30946);
        internalCounters.push_back(31065);
        internalCounters.push_back(31184);
        internalCounters.push_back(31303);
        internalCounters.push_back(31422);
        internalCounters.push_back(31541);
        internalCounters.push_back(31660);
        internalCounters.push_back(31779);
        internalCounters.push_back(31898);
        internalCounters.push_back(32017);
        internalCounters.push_back(32136);
        internalCounters.push_back(32255);
        internalCounters.push_back(32374);
        internalCounters.push_back(32493);
        internalCounters.push_back(32612);
        internalCounters.push_back(32731);
        internalCounters.push_back(32850);
        internalCounters.push_back(32969);
        internalCounters.push_back(33088);
        internalCounters.push_back(33207);
        internalCounters.push_back(33326);
        internalCounters.push_back(33445);
        internalCounters.push_back(33564);
        internalCounters.push_back(33683);
        internalCounters.push_back(33802);
        internalCounters.push_back(33921);
        internalCounters.push_back(34040);
        internalCounters.push_back(34159);
        internalCounters.push_back(34278);
        internalCounters.push_back(34397);
        internalCounters.push_back(34516);
        internalCounters.push_back(34635);
        internalCounters.push_back(34754);
        internalCounters.push_back(34873);
        internalCounters.push_back(34992);
        internalCounters.push_back(35111);
        internalCounters.push_back(35230);
        internalCounters.push_back(35349);
        internalCounters.push_back(35468);
        internalCounters.push_back(35587);
        internalCounters.push_back(35706);
        internalCounters.push_back(35825);
        internalCounters.push_back(35944);
        internalCounters.push_back(36063);
        internalCounters.push_back(36182);
        internalCounters.push_back(36301);
        internalCounters.push_back(36420);
        internalCounters.push_back(36539);
        internalCounters.push_back(36658);
        internalCounters.push_back(36777);
        internalCounters.push_back(36896);
        internalCounters.push_back(37015);
        internalCounters.push_back(29517);
        internalCounters.push_back(29636);
        internalCounters.push_back(29755);
        internalCounters.push_back(29874);
        internalCounters.push_back(29993);
        internalCounters.push_back(30112);
        internalCounters.push_back(30231);
        internalCounters.push_back(30350);
        internalCounters.push_back(30469);
        internalCounters.push_back(30588);
        internalCounters.push_back(30707);
        internalCounters.push_back(30826);
        internalCounters.push_back(30945);
        internalCounters.push_back(31064);
        internalCounters.push_back(31183);
        internalCounters.push_back(31302);
        internalCounters.push_back(31421);
        internalCounters.push_back(31540);
        internalCounters.push_back(31659);
        internalCounters.push_back(31778);
        internalCounters.push_back(31897);
        internalCounters.push_back(32016);
        internalCounters.push_back(32135);
        internalCounters.push_back(32254);
        internalCounters.push_back(32373);
        internalCounters.push_back(32492);
        internalCounters.push_back(32611);
        internalCounters.push_back(32730);
        internalCounters.push_back(32849);
        internalCounters.push_back(32968);
        internalCounters.push_back(33087);
        internalCounters.push_back(33206);
        internalCounters.push_back(33325);
        internalCounters.push_back(33444);
        internalCounters.push_back(33563);
        internalCounters.push_back(33682);
        internalCounters.push_back(33801);
        internalCounters.push_back(33920);
        internalCounters.push_back(34039);
        internalCounters.push_back(34158);
        internalCounters.push_back(34277);
        internalCounters.push_back(34396);
        internalCounters.push_back(34515);
        internalCounters.push_back(34634);
        internalCounters.push_back(34753);
        internalCounters.push_back(34872);
        internalCounters.push_back(34991);
        internalCounters.push_back(35110);
        internalCounters.push_back(35229);
        internalCounters.push_back(35348);
        internalCounters.push_back(35467);
        internalCounters.push_back(35586);
        internalCounters.push_back(35705);
        internalCounters.push_back(35824);
        internalCounters.push_back(35943);
        internalCounters.push_back(36062);
        internalCounters.push_back(36181);
        internalCounters.push_back(36300);
        internalCounters.push_back(36419);
        internalCounters.push_back(36538);
        internalCounters.push_back(36657);
        internalCounters.push_back(36776);
        internalCounters.push_back(36895);
        internalCounters.push_back(37014);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29518);
        internalCounters.push_back(29637);
        internalCounters.push_back(29756);
        internalCounters.push_back(29875);
        internalCounters.push_back(29994);
        internalCounters.push_back(30113);
        internalCounters.push_back(30232);
        internalCounters.push_back(30351);
        internalCounters.push_back(30470);
        internalCounters.push_back(30589);
        internalCounters.push_back(30708);
        internalCounters.push_back(30827);
        internalCounters.push_back(30946);
        internalCounters.push_back(31065);
        internalCounters.push_back(31184);
        internalCounters.push_back(31303);
        internalCounters.push_back(31422);
        internalCounters.push_back(31541);
        internalCounters.push_back(31660);
        internalCounters.push_back(31779);
        internalCounters.push_back(31898);
        internalCounters.push_back(32017);
        internalCounters.push_back(32136);
        internalCounters.push_back(32255);
        internalCounters.push_back(32374);
        internalCounters.push_back(32493);
        internalCounters.push_back(32612);
        internalCounters.push_back(32731);
        internalCounters.push_back(32850);
        internalCounters.push_back(32969);
        internalCounters.push_back(33088);
        internalCounters.push_back(33207);
        internalCounters.push_back(33326);
        internalCounters.push_back(33445);
        internalCounters.push_back(33564);
        internalCounters.push_back(33683);
        internalCounters.push_back(33802);
        internalCounters.push_back(33921);
        internalCounters.push_back(34040);
        internalCounters.push_back(34159);
        internalCounters.push_back(34278);
        internalCounters.push_back(34397);
        internalCounters.push_back(34516);
        internalCounters.push_back(34635);
        internalCounters.push_back(34754);
        internalCounters.push_back(34873);
        internalCounters.push_back(34992);
        internalCounters.push_back(35111);
        internalCounters.push_back(35230);
        internalCounters.push_back(35349);
        internalCounters.push_back(35468);
        internalCounters.push_back(35587);
        internalCounters.push_back(35706);
        internalCounters.push_back(35825);
        internalCounters.push_back(35944);
        internalCounters.push_back(36063);
        internalCounters.push_back(36182);
        internalCounters.push_back(36301);
        internalCounters.push_back(36420);
        internalCounters.push_back(36539);
        internalCounters.push_back(36658);
        internalCounters.push_back(36777);
        internalCounters.push_back(36896);
        internalCounters.push_back(37015);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29517);
        internalCounters.push_back(29636);
        internalCounters.push_back(29755);
        internalCounters.push_back(29874);
        internalCounters.push_back(29993);
        internalCounters.push_back(30112);
        internalCounters.push_back(30231);
        internalCounters.push_back(30350);
        internalCounters.push_back(30469);
        internalCounters.push_back(30588);
        internalCounters.push_back(30707);
        internalCounters.push_back(30826);
        internalCounters.push_back(30945);
        internalCounters.push_back(31064);
        internalCounters.push_back(31183);
        internalCounters.push_back(31302);
        internalCounters.push_back(31421);
        internalCounters.push_back(31540);
        internalCounters.push_back(31659);
        internalCounters.push_back(31778);
        internalCounters.push_back(31897);
        internalCounters.push_back(32016);
        internalCounters.push_back(32135);
        internalCounters.push_back(32254);
        internalCounters.push_back(32373);
        internalCounters.push_back(32492);
        internalCounters.push_back(32611);
        internalCounters.push_back(32730);
        internalCounters.push_back(32849);
        internalCounters.push_back(32968);
        internalCounters.push_back(33087);
        internalCounters.push_back(33206);
        internalCounters.push_back(33325);
        internalCounters.push_back(33444);
        internalCounters.push_back(33563);
        internalCounters.push_back(33682);
        internalCounters.push_back(33801);
        internalCounters.push_back(33920);
        internalCounters.push_back(34039);
        internalCounters.push_back(34158);
        internalCounters.push_back(34277);
        internalCounters.push_back(34396);
        internalCounters.push_back(34515);
        internalCounters.push_back(34634);
        internalCounters.push_back(34753);
        internalCounters.push_back(34872);
        internalCounters.push_back(34991);
        internalCounters.push_back(35110);
        internalCounters.push_back(35229);
        internalCounters.push_back(35348);
        internalCounters.push_back(35467);
        internalCounters.push_back(35586);
        internalCounters.push_back(35705);
        internalCounters.push_back(35824);
        internalCounters.push_back(35943);
        internalCounters.push_back(36062);
        internalCounters.push_back(36181);
        internalCounters.push_back(36300);
        internalCounters.push_back(36419);
        internalCounters.push_back(36538);
        internalCounters.push_back(36657);
        internalCounters.push_back(36776);
        internalCounters.push_back(36895);
        internalCounters.push_back(37014);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29520);
        internalCounters.push_back(29639);
        internalCounters.push_back(29758);
        internalCounters.push_back(29877);
        internalCounters.push_back(29996);
        internalCounters.push_back(30115);
        internalCounters.push_back(30234);
        internalCounters.push_back(30353);
        internalCounters.push_back(30472);
        internalCounters.push_back(30591);
        internalCounters.push_back(30710);
        internalCounters.push_back(30829);
        internalCounters.push_back(30948);
        internalCounters.push_back(31067);
        internalCounters.push_back(31186);
        internalCounters.push_back(31305);
        internalCounters.push_back(31424);
        internalCounters.push_back(31543);
        internalCounters.push_back(31662);
        internalCounters.push_back(31781);
        internalCounters.push_back(31900);
        internalCounters.push_back(32019);
        internalCounters.push_back(32138);
        internalCounters.push_back(32257);
        internalCounters.push_back(32376);
        internalCounters.push_back(32495);
        internalCounters.push_back(32614);
        internalCounters.push_back(32733);
        internalCounters.push_back(32852);
        internalCounters.push_back(32971);
        internalCounters.push_back(33090);
        internalCounters.push_back(33209);
        internalCounters.push_back(33328);
        internalCounters.push_back(33447);
        internalCounters.push_back(33566);
        internalCounters.push_back(33685);
        internalCounters.push_back(33804);
        internalCounters.push_back(33923);
        internalCounters.push_back(34042);
        internalCounters.push_back(34161);
        internalCounters.push_back(34280);
        internalCounters.push_back(34399);
        internalCounters.push_back(34518);
        internalCounters.push_back(34637);
        internalCounters.push_back(34756);
        internalCounters.push_back(34875);
        internalCounters.push_back(34994);
        internalCounters.push_back(35113);
        internalCounters.push_back(35232);
        internalCounters.push_back(35351);
        internalCounters.push_back(35470);
        internalCounters.push_back(35589);
        internalCounters.push_back(35708);
        internalCounters.push_back(35827);
        internalCounters.push_back(35946);
        internalCounters.push_back(36065);
        internalCounters.push_back(36184);
        internalCounters.push_back(36303);
        internalCounters.push_back(36422);
        internalCounters.push_back(36541);
        internalCounters.push_back(36660);
        internalCounters.push_back(36779);
        internalCounters.push_back(36898);
        internalCounters.push_back(37017);
        internalCounters.push_back(29519);
        internalCounters.push_back(29638);
        internalCounters.push_back(29757);
        internalCounters.push_back(29876);
        internalCounters.push_back(29995);
        internalCounters.push_back(30114);
        internalCounters.push_back(30233);
        internalCounters.push_back(30352);
        internalCounters.push_back(30471);
        internalCounters.push_back(30590);
        internalCounters.push_back(30709);
        internalCounters.push_back(30828);
        internalCounters.push_back(30947);
        internalCounters.push_back(31066);
        internalCounters.push_back(31185);
        internalCounters.push_back(31304);
        internalCounters.push_back(31423);
        internalCounters.push_back(31542);
        internalCounters.push_back(31661);
        internalCounters.push_back(31780);
        internalCounters.push_back(31899);
        internalCounters.push_back(32018);
        internalCounters.push_back(32137);
        internalCounters.push_back(32256);
        internalCounters.push_back(32375);
        internalCounters.push_back(32494);
        internalCounters.push_back(32613);
        internalCounters.push_back(32732);
        internalCounters.push_back(32851);
        internalCounters.push_back(32970);
        internalCounters.push_back(33089);
        internalCounters.push_back(33208);
        internalCounters.push_back(33327);
        internalCounters.push_back(33446);
        internalCounters.push_back(33565);
        internalCounters.push_back(33684);
        internalCounters.push_back(33803);
        internalCounters.push_back(33922);
        internalCounters.push_back(34041);
        internalCounters.push_back(34160);
        internalCounters.push_back(34279);
        internalCounters.push_back(34398);
        internalCounters.push_back(34517);
        internalCounters.push_back(34636);
        internalCounters.push_back(34755);
        internalCounters.push_back(34874);
        internalCounters.push_back(34993);
        internalCounters.push_back(35112);
        internalCounters.push_back(35231);
        internalCounters.push_back(35350);
        internalCounters.push_back(35469);
        internalCounters.push_back(35588);
        internalCounters.push_back(35707);
        internalCounters.push_back(35826);
        internalCounters.push_back(35945);
        internalCounters.push_back(36064);
        internalCounters.push_back(36183);
        internalCounters.push_back(36302);
        internalCounters.push_back(36421);
        internalCounters.push_back(36540);
        internalCounters.push_back(36659);
        internalCounters.push_back(36778);
        internalCounters.push_back(36897);
        internalCounters.push_back(37016);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29520);
        internalCounters.push_back(29639);
        internalCounters.push_back(29758);
        internalCounters.push_back(29877);
        internalCounters.push_back(29996);
        internalCounters.push_back(30115);
        internalCounters.push_back(30234);
        internalCounters.push_back(30353);
        internalCounters.push_back(30472);
        internalCounters.push_back(30591);
        internalCounters.push_back(30710);
        internalCounters.push_back(30829);
        internalCounters.push_back(30948);
        internalCounters.push_back(31067);
        internalCounters.push_back(31186);
        internalCounters.push_back(31305);
        internalCounters.push_back(31424);
        internalCounters.push_back(31543);
        internalCounters.push_back(31662);
        internalCounters.push_back(31781);
        internalCounters.push_back(31900);
        internalCounters.push_back(32019);
        internalCounters.push_back(32138);
        internalCounters.push_back(32257);
        internalCounters.push_back(32376);
        internalCounters.push_back(32495);
        internalCounters.push_back(32614);
        internalCounters.push_back(32733);
        internalCounters.push_back(32852);
        internalCounters.push_back(32971);
        internalCounters.push_back(33090);
        internalCounters.push_back(33209);
        internalCounters.push_back(33328);
        internalCounters.push_back(33447);
        internalCounters.push_back(33566);
        internalCounters.push_back(33685);
        internalCounters.push_back(33804);
        internalCounters.push_back(33923);
        internalCounters.push_back(34042);
        internalCounters.push_back(34161);
        internalCounters.push_back(34280);
        internalCounters.push_back(34399);
        internalCounters.push_back(34518);
        internalCounters.push_back(34637);
        internalCounters.push_back(34756);
        internalCounters.push_back(34875);
        internalCounters.push_back(34994);
        internalCounters.push_back(35113);
        internalCounters.push_back(35232);
        internalCounters.push_back(35351);
        internalCounters.push_back(35470);
        internalCounters.push_back(35589);
        internalCounters.push_back(35708);
        internalCounters.push_back(35827);
        internalCounters.push_back(35946);
        internalCounters.push_back(36065);
        internalCounters.push_back(36184);
        internalCounters.push_back(36303);
        internalCounters.push_back(36422);
        internalCounters.push_back(36541);
        internalCounters.push_back(36660);
        internalCounters.push_back(36779);
        internalCounters.push_back(36898);
        internalCounters.push_back(37017);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29519);
        internalCounters.push_back(29638);
        internalCounters.push_back(29757);
        internalCounters.push_back(29876);
        internalCounters.push_back(29995);
        internalCounters.push_back(30114);
        internalCounters.push_back(30233);
        internalCounters.push_back(30352);
        internalCounters.push_back(30471);
        internalCounters.push_back(30590);
        internalCounters.push_back(30709);
        internalCounters.push_back(30828);
        internalCounters.push_back(30947);
        internalCounters.push_back(31066);
        internalCounters.push_back(31185);
        internalCounters.push_back(31304);
        internalCounters.push_back(31423);
        internalCounters.push_back(31542);
        internalCounters.push_back(31661);
        internalCounters.push_back(31780);
        internalCounters.push_back(31899);
        internalCounters.push_back(32018);
        internalCounters.push_back(32137);
        internalCounters.push_back(32256);
        internalCounters.push_back(32375);
        internalCounters.push_back(32494);
        internalCounters.push_back(32613);
        internalCounters.push_back(32732);
        internalCounters.push_back(32851);
        internalCounters.push_back(32970);
        internalCounters.push_back(33089);
        internalCounters.push_back(33208);
        internalCounters.push_back(33327);
        internalCounters.push_back(33446);
        internalCounters.push_back(33565);
        internalCounters.push_back(33684);
        internalCounters.push_back(33803);
        internalCounters.push_back(33922);
        internalCounters.push_back(34041);
        internalCounters.push_back(34160);
        internalCounters.push_back(34279);
        internalCounters.push_back(34398);
        internalCounters.push_back(34517);
        internalCounters.push_back(34636);
        internalCounters.push_back(34755);
        internalCounters.push_back(34874);
        internalCounters.push_back(34993);
        internalCounters.push_back(35112);
        internalCounters.push_back(35231);
        internalCounters.push_back(35350);
        internalCounters.push_back(35469);
        internalCounters.push_back(35588);
        internalCounters.push_back(35707);
        internalCounters.push_back(35826);
        internalCounters.push_back(35945);
        internalCounters.push_back(36064);
        internalCounters.push_back(36183);
        internalCounters.push_back(36302);
        internalCounters.push_back(36421);
        internalCounters.push_back(36540);
        internalCounters.push_back(36659);
        internalCounters.push_back(36778);
        internalCounters.push_back(36897);
        internalCounters.push_back(37016);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29538);
        internalCounters.push_back(29657);
        internalCounters.push_back(29776);
        internalCounters.push_back(29895);
        internalCounters.push_back(30014);
        internalCounters.push_back(30133);
        internalCounters.push_back(30252);
        internalCounters.push_back(30371);
        internalCounters.push_back(30490);
        internalCounters.push_back(30609);
        internalCounters.push_back(30728);
        internalCounters.push_back(30847);
        internalCounters.push_back(30966);
        internalCounters.push_back(31085);
        internalCounters.push_back(31204);
        internalCounters.push_back(31323);
        internalCounters.push_back(31442);
        internalCounters.push_back(31561);
        internalCounters.push_back(31680);
        internalCounters.push_back(31799);
        internalCounters.push_back(31918);
        internalCounters.push_back(32037);
        internalCounters.push_back(32156);
        internalCounters.push_back(32275);
        internalCounters.push_back(32394);
        internalCounters.push_back(32513);
        internalCounters.push_back(32632);
        internalCounters.push_back(32751);
        internalCounters.push_back(32870);
        internalCounters.push_back(32989);
        internalCounters.push_back(33108);
        internalCounters.push_back(33227);
        internalCounters.push_back(33346);
        internalCounters.push_back(33465);
        internalCounters.push_back(33584);
        internalCounters.push_back(33703);
        internalCounters.push_back(33822);
        internalCounters.push_back(33941);
        internalCounters.push_back(34060);
        internalCounters.push_back(34179);
        internalCounters.push_back(34298);
        internalCounters.push_back(34417);
        internalCounters.push_back(34536);
        internalCounters.push_back(34655);
        internalCounters.push_back(34774);
        internalCounters.push_back(34893);
        internalCounters.push_back(35012);
        internalCounters.push_back(35131);
        internalCounters.push_back(35250);
        internalCounters.push_back(35369);
        internalCounters.push_back(35488);
        internalCounters.push_back(35607);
        internalCounters.push_back(35726);
        internalCounters.push_back(35845);
        internalCounters.push_back(35964);
        internalCounters.push_back(36083);
        internalCounters.push_back(36202);
        internalCounters.push_back(36321);
        internalCounters.push_back(36440);
        internalCounters.push_back(36559);
        internalCounters.push_back(36678);
        internalCounters.push_back(36797);
        internalCounters.push_back(36916);
        internalCounters.push_back(37035);
        internalCounters.push_back(29539);
        internalCounters.push_back(29658);
        internalCounters.push_back(29777);
        internalCounters.push_back(29896);
        internalCounters.push_back(30015);
        internalCounters.push_back(30134);
        internalCounters.push_back(30253);
        internalCounters.push_back(30372);
        internalCounters.push_back(30491);
        internalCounters.push_back(30610);
        internalCounters.push_back(30729);
        internalCounters.push_back(30848);
        internalCounters.push_back(30967);
        internalCounters.push_back(31086);
        internalCounters.push_back(31205);
        internalCounters.push_back(31324);
        internalCounters.push_back(31443);
        internalCounters.push_back(31562);
        internalCounters.push_back(31681);
        internalCounters.push_back(31800);
        internalCounters.push_back(31919);
        internalCounters.push_back(32038);
        internalCounters.push_back(32157);
        internalCounters.push_back(32276);
        internalCounters.push_back(32395);
        internalCounters.push_back(32514);
        internalCounters.push_back(32633);
        internalCounters.push_back(32752);
        internalCounters.push_back(32871);
        internalCounters.push_back(32990);
        internalCounters.push_back(33109);
        internalCounters.push_back(33228);
        internalCounters.push_back(33347);
        internalCounters.push_back(33466);
        internalCounters.push_back(33585);
        internalCounters.push_back(33704);
        internalCounters.push_back(33823);
        internalCounters.push_back(33942);
        internalCounters.push_back(34061);
        internalCounters.push_back(34180);
        internalCounters.push_back(34299);
        internalCounters.push_back(34418);
        internalCounters.push_back(34537);
        internalCounters.push_back(34656);
        internalCounters.push_back(34775);
        internalCounters.push_back(34894);
        internalCounters.push_back(35013);
        internalCounters.push_back(35132);
        internalCounters.push_back(35251);
        internalCounters.push_back(35370);
        internalCounters.push_back(35489);
        internalCounters.push_back(35608);
        internalCounters.push_back(35727);
        internalCounters.push_back(35846);
        internalCounters.push_back(35965);
        internalCounters.push_back(36084);
        internalCounters.push_back(36203);
        internalCounters.push_back(36322);
        internalCounters.push_back(36441);
        internalCounters.push_back(36560);
        internalCounters.push_back(36679);
        internalCounters.push_back(36798);
        internalCounters.push_back(36917);
        internalCounters.push_back(37036);
        internalCounters.push_back(29540);
        internalCounters.push_back(29659);
        internalCounters.push_back(29778);
        internalCounters.push_back(29897);
        internalCounters.push_back(30016);
        internalCounters.push_back(30135);
        internalCounters.push_back(30254);
        internalCounters.push_back(30373);
        internalCounters.push_back(30492);
        internalCounters.push_back(30611);
        internalCounters.push_back(30730);
        internalCounters.push_back(30849);
        internalCounters.push_back(30968);
        internalCounters.push_back(31087);
        internalCounters.push_back(31206);
        internalCounters.push_back(31325);
        internalCounters.push_back(31444);
        internalCounters.push_back(31563);
        internalCounters.push_back(31682);
        internalCounters.push_back(31801);
        internalCounters.push_back(31920);
        internalCounters.push_back(32039);
        internalCounters.push_back(32158);
        internalCounters.push_back(32277);
        internalCounters.push_back(32396);
        internalCounters.push_back(32515);
        internalCounters.push_back(32634);
        internalCounters.push_back(32753);
        internalCounters.push_back(32872);
        internalCounters.push_back(32991);
        internalCounters.push_back(33110);
        internalCounters.push_back(33229);
        internalCounters.push_back(33348);
        internalCounters.push_back(33467);
        internalCounters.push_back(33586);
        internalCounters.push_back(33705);
        internalCounters.push_back(33824);
        internalCounters.push_back(33943);
        internalCounters.push_back(34062);
        internalCounters.push_back(34181);
        internalCounters.push_back(34300);
        internalCounters.push_back(34419);
        internalCounters.push_back(34538);
        internalCounters.push_back(34657);
        internalCounters.push_back(34776);
        internalCounters.push_back(34895);
        internalCounters.push_back(35014);
        internalCounters.push_back(35133);
        internalCounters.push_back(35252);
        internalCounters.push_back(35371);
        internalCounters.push_back(35490);
        internalCounters.push_back(35609);
        internalCounters.push_back(35728);
        internalCounters.push_back(35847);
        internalCounters.push_back(35966);
        internalCounters.push_back(36085);
        internalCounters.push_back(36204);
        internalCounters.push_back(36323);
        internalCounters.push_back(36442);
        internalCounters.push_back(36561);
        internalCounters.push_back(36680);
        internalCounters.push_back(36799);
        internalCounters.push_back(36918);
        internalCounters.push_back(37037);
        internalCounters.push_back(29541);
        internalCounters.push_back(29660);
        internalCounters.push_back(29779);
        internalCounters.push_back(29898);
        internalCounters.push_back(30017);
        internalCounters.push_back(30136);
        internalCounters.push_back(30255);
        internalCounters.push_back(30374);
        internalCounters.push_back(30493);
        internalCounters.push_back(30612);
        internalCounters.push_back(30731);
        internalCounters.push_back(30850);
        internalCounters.push_back(30969);
        internalCounters.push_back(31088);
        internalCounters.push_back(31207);
        internalCounters.push_back(31326);
        internalCounters.push_back(31445);
        internalCounters.push_back(31564);
        internalCounters.push_back(31683);
        internalCounters.push_back(31802);
        internalCounters.push_back(31921);
        internalCounters.push_back(32040);
        internalCounters.push_back(32159);
        internalCounters.push_back(32278);
        internalCounters.push_back(32397);
        internalCounters.push_back(32516);
        internalCounters.push_back(32635);
        internalCounters.push_back(32754);
        internalCounters.push_back(32873);
        internalCounters.push_back(32992);
        internalCounters.push_back(33111);
        internalCounters.push_back(33230);
        internalCounters.push_back(33349);
        internalCounters.push_back(33468);
        internalCounters.push_back(33587);
        internalCounters.push_back(33706);
        internalCounters.push_back(33825);
        internalCounters.push_back(33944);
        internalCounters.push_back(34063);
        internalCounters.push_back(34182);
        internalCounters.push_back(34301);
        internalCounters.push_back(34420);
        internalCounters.push_back(34539);
        internalCounters.push_back(34658);
        internalCounters.push_back(34777);
        internalCounters.push_back(34896);
        internalCounters.push_back(35015);
        internalCounters.push_back(35134);
        internalCounters.push_back(35253);
        internalCounters.push_back(35372);
        internalCounters.push_back(35491);
        internalCounters.push_back(35610);
        internalCounters.push_back(35729);
        internalCounters.push_back(35848);
        internalCounters.push_back(35967);
        internalCounters.push_back(36086);
        internalCounters.push_back(36205);
        internalCounters.push_back(36324);
        internalCounters.push_back(36443);
        internalCounters.push_back(36562);
        internalCounters.push_back(36681);
        internalCounters.push_back(36800);
        internalCounters.push_back(36919);
        internalCounters.push_back(37038);
        internalCounters.push_back(29542);
        internalCounters.push_back(29661);
        internalCounters.push_back(29780);
        internalCounters.push_back(29899);
        internalCounters.push_back(30018);
        internalCounters.push_back(30137);
        internalCounters.push_back(30256);
        internalCounters.push_back(30375);
        internalCounters.push_back(30494);
        internalCounters.push_back(30613);
        internalCounters.push_back(30732);
        internalCounters.push_back(30851);
        internalCounters.push_back(30970);
        internalCounters.push_back(31089);
        internalCounters.push_back(31208);
        internalCounters.push_back(31327);
        internalCounters.push_back(31446);
        internalCounters.push_back(31565);
        internalCounters.push_back(31684);
        internalCounters.push_back(31803);
        internalCounters.push_back(31922);
        internalCounters.push_back(32041);
        internalCounters.push_back(32160);
        internalCounters.push_back(32279);
        internalCounters.push_back(32398);
        internalCounters.push_back(32517);
        internalCounters.push_back(32636);
        internalCounters.push_back(32755);
        internalCounters.push_back(32874);
        internalCounters.push_back(32993);
        internalCounters.push_back(33112);
        internalCounters.push_back(33231);
        internalCounters.push_back(33350);
        internalCounters.push_back(33469);
        internalCounters.push_back(33588);
        internalCounters.push_back(33707);
        internalCounters.push_back(33826);
        internalCounters.push_back(33945);
        internalCounters.push_back(34064);
        internalCounters.push_back(34183);
        internalCounters.push_back(34302);
        internalCounters.push_back(34421);
        internalCounters.push_back(34540);
        internalCounters.push_back(34659);
        internalCounters.push_back(34778);
        internalCounters.push_back(34897);
        internalCounters.push_back(35016);
        internalCounters.push_back(35135);
        internalCounters.push_back(35254);
        internalCounters.push_back(35373);
        internalCounters.push_back(35492);
        internalCounters.push_back(35611);
        internalCounters.push_back(35730);
        internalCounters.push_back(35849);
        internalCounters.push_back(35968);
        internalCounters.push_back(36087);
        internalCounters.push_back(36206);
        internalCounters.push_back(36325);
        internalCounters.push_back(36444);
        internalCounters.push_back(36563);
        internalCounters.push_back(36682);
        internalCounters.push_back(36801);
        internalCounters.push_back(36920);
        internalCounters.push_back(37039);
        internalCounters.push_back(29543);
        internalCounters.push_back(29662);
        internalCounters.push_back(29781);
        internalCounters.push_back(29900);
        internalCounters.push_back(30019);
        internalCounters.push_back(30138);
        internalCounters.push_back(30257);
        internalCounters.push_back(30376);
        internalCounters.push_back(30495);
        internalCounters.push_back(30614);
        internalCounters.push_back(30733);
        internalCounters.push_back(30852);
        internalCounters.push_back(30971);
        internalCounters.push_back(31090);
        internalCounters.push_back(31209);
        internalCounters.push_back(31328);
        internalCounters.push_back(31447);
        internalCounters.push_back(31566);
        internalCounters.push_back(31685);
        internalCounters.push_back(31804);
        internalCounters.push_back(31923);
        internalCounters.push_back(32042);
        internalCounters.push_back(32161);
        internalCounters.push_back(32280);
        internalCounters.push_back(32399);
        internalCounters.push_back(32518);
        internalCounters.push_back(32637);
        internalCounters.push_back(32756);
        internalCounters.push_back(32875);
        internalCounters.push_back(32994);
        internalCounters.push_back(33113);
        internalCounters.push_back(33232);
        internalCounters.push_back(33351);
        internalCounters.push_back(33470);
        internalCounters.push_back(33589);
        internalCounters.push_back(33708);
        internalCounters.push_back(33827);
        internalCounters.push_back(33946);
        internalCounters.push_back(34065);
        internalCounters.push_back(34184);
        internalCounters.push_back(34303);
        internalCounters.push_back(34422);
        internalCounters.push_back(34541);
        internalCounters.push_back(34660);
        internalCounters.push_back(34779);
        internalCounters.push_back(34898);
        internalCounters.push_back(35017);
        internalCounters.push_back(35136);
        internalCounters.push_back(35255);
        internalCounters.push_back(35374);
        internalCounters.push_back(35493);
        internalCounters.push_back(35612);
        internalCounters.push_back(35731);
        internalCounters.push_back(35850);
        internalCounters.push_back(35969);
        internalCounters.push_back(36088);
        internalCounters.push_back(36207);
        internalCounters.push_back(36326);
        internalCounters.push_back(36445);
        internalCounters.push_back(36564);
        internalCounters.push_back(36683);
        internalCounters.push_back(36802);
        internalCounters.push_back(36921);
        internalCounters.push_back(37040);
        internalCounters.push_back(29544);
        internalCounters.push_back(29663);
        internalCounters.push_back(29782);
        internalCounters.push_back(29901);
        internalCounters.push_back(30020);
        internalCounters.push_back(30139);
        internalCounters.push_back(30258);
        internalCounters.push_back(30377);
        internalCounters.push_back(30496);
        internalCounters.push_back(30615);
        internalCounters.push_back(30734);
        internalCounters.push_back(30853);
        internalCounters.push_back(30972);
        internalCounters.push_back(31091);
        internalCounters.push_back(31210);
        internalCounters.push_back(31329);
        internalCounters.push_back(31448);
        internalCounters.push_back(31567);
        internalCounters.push_back(31686);
        internalCounters.push_back(31805);
        internalCounters.push_back(31924);
        internalCounters.push_back(32043);
        internalCounters.push_back(32162);
        internalCounters.push_back(32281);
        internalCounters.push_back(32400);
        internalCounters.push_back(32519);
        internalCounters.push_back(32638);
        internalCounters.push_back(32757);
        internalCounters.push_back(32876);
        internalCounters.push_back(32995);
        internalCounters.push_back(33114);
        internalCounters.push_back(33233);
        internalCounters.push_back(33352);
        internalCounters.push_back(33471);
        internalCounters.push_back(33590);
        internalCounters.push_back(33709);
        internalCounters.push_back(33828);
        internalCounters.push_back(33947);
        internalCounters.push_back(34066);
        internalCounters.push_back(34185);
        internalCounters.push_back(34304);
        internalCounters.push_back(34423);
        internalCounters.push_back(34542);
        internalCounters.push_back(34661);
        internalCounters.push_back(34780);
        internalCounters.push_back(34899);
        internalCounters.push_back(35018);
        internalCounters.push_back(35137);
        internalCounters.push_back(35256);
        internalCounters.push_back(35375);
        internalCounters.push_back(35494);
        internalCounters.push_back(35613);
        internalCounters.push_back(35732);
        internalCounters.push_back(35851);
        internalCounters.push_back(35970);
        internalCounters.push_back(36089);
        internalCounters.push_back(36208);
        internalCounters.push_back(36327);
        internalCounters.push_back(36446);
        internalCounters.push_back(36565);
        internalCounters.push_back(36684);
        internalCounters.push_back(36803);
        internalCounters.push_back(36922);
        internalCounters.push_back(37041);
        internalCounters.push_back(29545);
        internalCounters.push_back(29664);
        internalCounters.push_back(29783);
        internalCounters.push_back(29902);
        internalCounters.push_back(30021);
        internalCounters.push_back(30140);
        internalCounters.push_back(30259);
        internalCounters.push_back(30378);
        internalCounters.push_back(30497);
        internalCounters.push_back(30616);
        internalCounters.push_back(30735);
        internalCounters.push_back(30854);
        internalCounters.push_back(30973);
        internalCounters.push_back(31092);
        internalCounters.push_back(31211);
        internalCounters.push_back(31330);
        internalCounters.push_back(31449);
        internalCounters.push_back(31568);
        internalCounters.push_back(31687);
        internalCounters.push_back(31806);
        internalCounters.push_back(31925);
        internalCounters.push_back(32044);
        internalCounters.push_back(32163);
        internalCounters.push_back(32282);
        internalCounters.push_back(32401);
        internalCounters.push_back(32520);
        internalCounters.push_back(32639);
        internalCounters.push_back(32758);
        internalCounters.push_back(32877);
        internalCounters.push_back(32996);
        internalCounters.push_back(33115);
        internalCounters.push_back(33234);
        internalCounters.push_back(33353);
        internalCounters.push_back(33472);
        internalCounters.push_back(33591);
        internalCounters.push_back(33710);
        internalCounters.push_back(33829);
        internalCounters.push_back(33948);
        internalCounters.push_back(34067);
        internalCounters.push_back(34186);
        internalCounters.push_back(34305);
        internalCounters.push_back(34424);
        internalCounters.push_back(34543);
        internalCounters.push_back(34662);
        internalCounters.push_back(34781);
        internalCounters.push_back(34900);
        internalCounters.push_back(35019);
        internalCounters.push_back(35138);
        internalCounters.push_back(35257);
        internalCounters.push_back(35376);
        internalCounters.push_back(35495);
        internalCounters.push_back(35614);
        internalCounters.push_back(35733);
        internalCounters.push_back(35852);
        internalCounters.push_back(35971);
        internalCounters.push_back(36090);
        internalCounters.push_back(36209);
        internalCounters.push_back(36328);
        internalCounters.push_back(36447);
        internalCounters.push_back(36566);
        internalCounters.push_back(36685);
        internalCounters.push_back(36804);
        internalCounters.push_back(36923);
        internalCounters.push_back(37042);
        internalCounters.push_back(29546);
        internalCounters.push_back(29665);
        internalCounters.push_back(29784);
        internalCounters.push_back(29903);
        internalCounters.push_back(30022);
        internalCounters.push_back(30141);
        internalCounters.push_back(30260);
        internalCounters.push_back(30379);
        internalCounters.push_back(30498);
        internalCounters.push_back(30617);
        internalCounters.push_back(30736);
        internalCounters.push_back(30855);
        internalCounters.push_back(30974);
        internalCounters.push_back(31093);
        internalCounters.push_back(31212);
        internalCounters.push_back(31331);
        internalCounters.push_back(31450);
        internalCounters.push_back(31569);
        internalCounters.push_back(31688);
        internalCounters.push_back(31807);
        internalCounters.push_back(31926);
        internalCounters.push_back(32045);
        internalCounters.push_back(32164);
        internalCounters.push_back(32283);
        internalCounters.push_back(32402);
        internalCounters.push_back(32521);
        internalCounters.push_back(32640);
        internalCounters.push_back(32759);
        internalCounters.push_back(32878);
        internalCounters.push_back(32997);
        internalCounters.push_back(33116);
        internalCounters.push_back(33235);
        internalCounters.push_back(33354);
        internalCounters.push_back(33473);
        internalCounters.push_back(33592);
        internalCounters.push_back(33711);
        internalCounters.push_back(33830);
        internalCounters.push_back(33949);
        internalCounters.push_back(34068);
        internalCounters.push_back(34187);
        internalCounters.push_back(34306);
        internalCounters.push_back(34425);
        internalCounters.push_back(34544);
        internalCounters.push_back(34663);
        internalCounters.push_back(34782);
        internalCounters.push_back(34901);
        internalCounters.push_back(35020);
        internalCounters.push_back(35139);
        internalCounters.push_back(35258);
        internalCounters.push_back(35377);
        internalCounters.push_back(35496);
        internalCounters.push_back(35615);
        internalCounters.push_back(35734);
        internalCounters.push_back(35853);
        internalCounters.push_back(35972);
        internalCounters.push_back(36091);
        internalCounters.push_back(36210);
        internalCounters.push_back(36329);
        internalCounters.push_back(36448);
        internalCounters.push_back(36567);
        internalCounters.push_back(36686);
        internalCounters.push_back(36805);
        internalCounters.push_back(36924);
        internalCounters.push_back(37043);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(2),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,*,+,(4),128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,*,+,(6),192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,*,+,(8),256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,*,+,(10),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,*,+,(12),384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,*,+,(14),448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,*,+,(16),512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,sum64,+,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,sum64,+,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum64,+,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum64,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,sum64,+,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,sum64,+,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,sum64,+,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,sum64,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7280);
        internalCounters.push_back(7608);
        internalCounters.push_back(7936);
        internalCounters.push_back(8264);
        internalCounters.push_back(8592);
        internalCounters.push_back(8920);
        internalCounters.push_back(9248);
        internalCounters.push_back(9576);
        internalCounters.push_back(9904);
        internalCounters.push_back(10232);
        internalCounters.push_back(10560);
        internalCounters.push_back(10888);
        internalCounters.push_back(11216);
        internalCounters.push_back(11544);
        internalCounters.push_back(11872);
        internalCounters.push_back(12200);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7280);
        internalCounters.push_back(7608);
        internalCounters.push_back(7936);
        internalCounters.push_back(8264);
        internalCounters.push_back(8592);
        internalCounters.push_back(8920);
        internalCounters.push_back(9248);
        internalCounters.push_back(9576);
        internalCounters.push_back(9904);
        internalCounters.push_back(10232);
        internalCounters.push_back(10560);
        internalCounters.push_back(10888);
        internalCounters.push_back(11216);
        internalCounters.push_back(11544);
        internalCounters.push_back(11872);
        internalCounters.push_back(12200);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7151);
        internalCounters.push_back(7479);
        internalCounters.push_back(7807);
        internalCounters.push_back(8135);
        internalCounters.push_back(8463);
        internalCounters.push_back(8791);
        internalCounters.push_back(9119);
        internalCounters.push_back(9447);
        internalCounters.push_back(9775);
        internalCounters.push_back(10103);
        internalCounters.push_back(10431);
        internalCounters.push_back(10759);
        internalCounters.push_back(11087);
        internalCounters.push_back(11415);
        internalCounters.push_back(11743);
        internalCounters.push_back(12071);
        internalCounters.push_back(7140);
        internalCounters.push_back(7468);
        internalCounters.push_back(7796);
        internalCounters.push_back(8124);
        internalCounters.push_back(8452);
        internalCounters.push_back(8780);
        internalCounters.push_back(9108);
        internalCounters.push_back(9436);
        internalCounters.push_back(9764);
        internalCounters.push_back(10092);
        internalCounters.push_back(10420);
        internalCounters.push_back(10748);
        internalCounters.push_back(11076);
        internalCounters.push_back(11404);
        internalCounters.push_back(11732);
        internalCounters.push_back(12060);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7151);
        internalCounters.push_back(7479);
        internalCounters.push_back(7807);
        internalCounters.push_back(8135);
        internalCounters.push_back(8463);
        internalCounters.push_back(8791);
        internalCounters.push_back(9119);
        internalCounters.push_back(9447);
        internalCounters.push_back(9775);
        internalCounters.push_back(10103);
        internalCounters.push_back(10431);
        internalCounters.push_back(10759);
        internalCounters.push_back(11087);
        internalCounters.push_back(11415);
        internalCounters.push_back(11743);
        internalCounters.push_back(12071);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7140);
        internalCounters.push_back(7468);
        internalCounters.push_back(7796);
        internalCounters.push_back(8124);
        internalCounters.push_back(8452);
        internalCounters.push_back(8780);
        internalCounters.push_back(9108);
        internalCounters.push_back(9436);
        internalCounters.push_back(9764);
        internalCounters.push_back(10092);
        internalCounters.push_back(10420);
        internalCounters.push_back(10748);
        internalCounters.push_back(11076);
        internalCounters.push_back(11404);
        internalCounters.push_back(11732);
        internalCounters.push_back(12060);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7140);
        internalCounters.push_back(7468);
        internalCounters.push_back(7796);
        internalCounters.push_back(8124);
        internalCounters.push_back(8452);
        internalCounters.push_back(8780);
        internalCounters.push_back(9108);
        internalCounters.push_back(9436);
        internalCounters.push_back(9764);
        internalCounters.push_back(10092);
        internalCounters.push_back(10420);
        internalCounters.push_back(10748);
        internalCounters.push_back(11076);
        internalCounters.push_back(11404);
        internalCounters.push_back(11732);
        internalCounters.push_back(12060);
        internalCounters.push_back(7164);
        internalCounters.push_back(7492);
        internalCounters.push_back(7820);
        internalCounters.push_back(8148);
        internalCounters.push_back(8476);
        internalCounters.push_back(8804);
        internalCounters.push_back(9132);
        internalCounters.push_back(9460);
        internalCounters.push_back(9788);
        internalCounters.push_back(10116);
        internalCounters.push_back(10444);
        internalCounters.push_back(10772);
        internalCounters.push_back(11100);
        internalCounters.push_back(11428);
        internalCounters.push_back(11756);
        internalCounters.push_back(12084);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7164);
        internalCounters.push_back(7492);
        internalCounters.push_back(7820);
        internalCounters.push_back(8148);
        internalCounters.push_back(8476);
        internalCounters.push_back(8804);
        internalCounters.push_back(9132);
        internalCounters.push_back(9460);
        internalCounters.push_back(9788);
        internalCounters.push_back(10116);
        internalCounters.push_back(10444);
        internalCounters.push_back(10772);
        internalCounters.push_back(11100);
        internalCounters.push_back(11428);
        internalCounters.push_back(11756);
        internalCounters.push_back(12084);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7140);
        internalCounters.push_back(7468);
        internalCounters.push_back(7796);
        internalCounters.push_back(8124);
        internalCounters.push_back(8452);
        internalCounters.push_back(8780);
        internalCounters.push_back(9108);
        internalCounters.push_back(9436);
        internalCounters.push_back(9764);
        internalCounters.push_back(10092);
        internalCounters.push_back(10420);
        internalCounters.push_back(10748);
        internalCounters.push_back(11076);
        internalCounters.push_back(11404);
        internalCounters.push_back(11732);
        internalCounters.push_back(12060);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14056);
        internalCounters.push_back(14548);
        internalCounters.push_back(15040);
        internalCounters.push_back(15532);
        internalCounters.push_back(14057);
        internalCounters.push_back(14549);
        internalCounters.push_back(15041);
        internalCounters.push_back(15533);
        internalCounters.push_back(14058);
        internalCounters.push_back(14550);
        internalCounters.push_back(15042);
        internalCounters.push_back(15534);
        internalCounters.push_back(14059);
        internalCounters.push_back(14551);
        internalCounters.push_back(15043);
        internalCounters.push_back(15535);
        internalCounters.push_back(14132);
        internalCounters.push_back(14624);
        internalCounters.push_back(15116);
        internalCounters.push_back(15608);
        internalCounters.push_back(14133);
        internalCounters.push_back(14625);
        internalCounters.push_back(15117);
        internalCounters.push_back(15609);
        internalCounters.push_back(14134);
        internalCounters.push_back(14626);
        internalCounters.push_back(15118);
        internalCounters.push_back(15610);
        internalCounters.push_back(14135);
        internalCounters.push_back(14627);
        internalCounters.push_back(15119);
        internalCounters.push_back(15611);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14056);
        internalCounters.push_back(14548);
        internalCounters.push_back(15040);
        internalCounters.push_back(15532);
        internalCounters.push_back(14057);
        internalCounters.push_back(14549);
        internalCounters.push_back(15041);
        internalCounters.push_back(15533);
        internalCounters.push_back(14058);
        internalCounters.push_back(14550);
        internalCounters.push_back(15042);
        internalCounters.push_back(15534);
        internalCounters.push_back(14059);
        internalCounters.push_back(14551);
        internalCounters.push_back(15043);
        internalCounters.push_back(15535);
        internalCounters.push_back(14132);
        internalCounters.push_back(14624);
        internalCounters.push_back(15116);
        internalCounters.push_back(15608);
        internalCounters.push_back(14133);
        internalCounters.push_back(14625);
        internalCounters.push_back(15117);
        internalCounters.push_back(15609);
        internalCounters.push_back(14134);
        internalCounters.push_back(14626);
        internalCounters.push_back(15118);
        internalCounters.push_back(15610);
        internalCounters.push_back(14135);
        internalCounters.push_back(14627);
        internalCounters.push_back(15119);
        internalCounters.push_back(15611);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14132);
        internalCounters.push_back(14624);
        internalCounters.push_back(15116);
        internalCounters.push_back(15608);
        internalCounters.push_back(14133);
        internalCounters.push_back(14625);
        internalCounters.push_back(15117);
        internalCounters.push_back(15609);
        internalCounters.push_back(14134);
        internalCounters.push_back(14626);
        internalCounters.push_back(15118);
        internalCounters.push_back(15610);
        internalCounters.push_back(14135);
        internalCounters.push_back(14627);
        internalCounters.push_back(15119);
        internalCounters.push_back(15611);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14056);
        internalCounters.push_back(14548);
        internalCounters.push_back(15040);
        internalCounters.push_back(15532);
        internalCounters.push_back(14057);
        internalCounters.push_back(14549);
        internalCounters.push_back(15041);
        internalCounters.push_back(15533);
        internalCounters.push_back(14058);
        internalCounters.push_back(14550);
        internalCounters.push_back(15042);
        internalCounters.push_back(15534);
        internalCounters.push_back(14059);
        internalCounters.push_back(14551);
        internalCounters.push_back(15043);
        internalCounters.push_back(15535);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14132);
        internalCounters.push_back(14624);
        internalCounters.push_back(15116);
        internalCounters.push_back(15608);
        internalCounters.push_back(14133);
        internalCounters.push_back(14625);
        internalCounters.push_back(15117);
        internalCounters.push_back(15609);
        internalCounters.push_back(14134);
        internalCounters.push_back(14626);
        internalCounters.push_back(15118);
        internalCounters.push_back(15610);
        internalCounters.push_back(14135);
        internalCounters.push_back(14627);
        internalCounters.push_back(15119);
        internalCounters.push_back(15611);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,16,17,18,19,sum4,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14056);
        internalCounters.push_back(14548);
        internalCounters.push_back(15040);
        internalCounters.push_back(15532);
        internalCounters.push_back(14057);
        internalCounters.push_back(14549);
        internalCounters.push_back(15041);
        internalCounters.push_back(15533);
        internalCounters.push_back(14058);
        internalCounters.push_back(14550);
        internalCounters.push_back(15042);
        internalCounters.push_back(15534);
        internalCounters.push_back(14059);
        internalCounters.push_back(14551);
        internalCounters.push_back(15043);
        internalCounters.push_back(15535);
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14132);
        internalCounters.push_back(14624);
        internalCounters.push_back(15116);
        internalCounters.push_back(15608);
        internalCounters.push_back(14133);
        internalCounters.push_back(14625);
        internalCounters.push_back(15117);
        internalCounters.push_back(15609);
        internalCounters.push_back(14134);
        internalCounters.push_back(14626);
        internalCounters.push_back(15118);
        internalCounters.push_back(15610);
        internalCounters.push_back(14135);
        internalCounters.push_back(14627);
        internalCounters.push_back(15119);
        internalCounters.push_back(15611);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,sum4,-,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14132);
        internalCounters.push_back(14624);
        internalCounters.push_back(15116);
        internalCounters.push_back(15608);
        internalCounters.push_back(14133);
        internalCounters.push_back(14625);
        internalCounters.push_back(15117);
        internalCounters.push_back(15609);
        internalCounters.push_back(14134);
        internalCounters.push_back(14626);
        internalCounters.push_back(15118);
        internalCounters.push_back(15610);
        internalCounters.push_back(14135);
        internalCounters.push_back(14627);
        internalCounters.push_back(15119);
        internalCounters.push_back(15611);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,0,1,2,3,sum4,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);
        internalCounters.push_back(14056);
        internalCounters.push_back(14548);
        internalCounters.push_back(15040);
        internalCounters.push_back(15532);
        internalCounters.push_back(14057);
        internalCounters.push_back(14549);
        internalCounters.push_back(15041);
        internalCounters.push_back(15533);
        internalCounters.push_back(14058);
        internalCounters.push_back(14550);
        internalCounters.push_back(15042);
        internalCounters.push_back(15534);
        internalCounters.push_back(14059);
        internalCounters.push_back(14551);
        internalCounters.push_back(15043);
        internalCounters.push_back(15535);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14156);
        internalCounters.push_back(14648);
        internalCounters.push_back(15140);
        internalCounters.push_back(15632);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7313);
        internalCounters.push_back(7641);
        internalCounters.push_back(7969);
        internalCounters.push_back(8297);
        internalCounters.push_back(8625);
        internalCounters.push_back(8953);
        internalCounters.push_back(9281);
        internalCounters.push_back(9609);
        internalCounters.push_back(9937);
        internalCounters.push_back(10265);
        internalCounters.push_back(10593);
        internalCounters.push_back(10921);
        internalCounters.push_back(11249);
        internalCounters.push_back(11577);
        internalCounters.push_back(11905);
        internalCounters.push_back(12233);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7315);
        internalCounters.push_back(7643);
        internalCounters.push_back(7971);
        internalCounters.push_back(8299);
        internalCounters.push_back(8627);
        internalCounters.push_back(8955);
        internalCounters.push_back(9283);
        internalCounters.push_back(9611);
        internalCounters.push_back(9939);
        internalCounters.push_back(10267);
        internalCounters.push_back(10595);
        internalCounters.push_back(10923);
        internalCounters.push_back(11251);
        internalCounters.push_back(11579);
        internalCounters.push_back(11907);
        internalCounters.push_back(12235);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7314);
        internalCounters.push_back(7642);
        internalCounters.push_back(7970);
        internalCounters.push_back(8298);
        internalCounters.push_back(8626);
        internalCounters.push_back(8954);
        internalCounters.push_back(9282);
        internalCounters.push_back(9610);
        internalCounters.push_back(9938);
        internalCounters.push_back(10266);
        internalCounters.push_back(10594);
        internalCounters.push_back(10922);
        internalCounters.push_back(11250);
        internalCounters.push_back(11578);
        internalCounters.push_back(11906);
        internalCounters.push_back(12234);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7310);
        internalCounters.push_back(7638);
        internalCounters.push_back(7966);
        internalCounters.push_back(8294);
        internalCounters.push_back(8622);
        internalCounters.push_back(8950);
        internalCounters.push_back(9278);
        internalCounters.push_back(9606);
        internalCounters.push_back(9934);
        internalCounters.push_back(10262);
        internalCounters.push_back(10590);
        internalCounters.push_back(10918);
        internalCounters.push_back(11246);
        internalCounters.push_back(11574);
        internalCounters.push_back(11902);
        internalCounters.push_back(12230);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7312);
        internalCounters.push_back(7640);
        internalCounters.push_back(7968);
        internalCounters.push_back(8296);
        internalCounters.push_back(8624);
        internalCounters.push_back(8952);
        internalCounters.push_back(9280);
        internalCounters.push_back(9608);
        internalCounters.push_back(9936);
        internalCounters.push_back(10264);
        internalCounters.push_back(10592);
        internalCounters.push_back(10920);
        internalCounters.push_back(11248);
        internalCounters.push_back(11576);
        internalCounters.push_back(11904);
        internalCounters.push_back(12232);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7311);
        internalCounters.push_back(7639);
        internalCounters.push_back(7967);
        internalCounters.push_back(8295);
        internalCounters.push_back(8623);
        internalCounters.push_back(8951);
        internalCounters.push_back(9279);
        internalCounters.push_back(9607);
        internalCounters.push_back(9935);
        internalCounters.push_back(10263);
        internalCounters.push_back(10591);
        internalCounters.push_back(10919);
        internalCounters.push_back(11247);
        internalCounters.push_back(11575);
        internalCounters.push_back(11903);
        internalCounters.push_back(12231);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7182);
        internalCounters.push_back(7510);
        internalCounters.push_back(7838);
        internalCounters.push_back(8166);
        internalCounters.push_back(8494);
        internalCounters.push_back(8822);
        internalCounters.push_back(9150);
        internalCounters.push_back(9478);
        internalCounters.push_back(9806);
        internalCounters.push_back(10134);
        internalCounters.push_back(10462);
        internalCounters.push_back(10790);
        internalCounters.push_back(11118);
        internalCounters.push_back(11446);
        internalCounters.push_back(11774);
        internalCounters.push_back(12102);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7182);
        internalCounters.push_back(7510);
        internalCounters.push_back(7838);
        internalCounters.push_back(8166);
        internalCounters.push_back(8494);
        internalCounters.push_back(8822);
        internalCounters.push_back(9150);
        internalCounters.push_back(9478);
        internalCounters.push_back(9806);
        internalCounters.push_back(10134);
        internalCounters.push_back(10462);
        internalCounters.push_back(10790);
        internalCounters.push_back(11118);
        internalCounters.push_back(11446);
        internalCounters.push_back(11774);
        internalCounters.push_back(12102);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7184);
        internalCounters.push_back(7512);
        internalCounters.push_back(7840);
        internalCounters.push_back(8168);
        internalCounters.push_back(8496);
        internalCounters.push_back(8824);
        internalCounters.push_back(9152);
        internalCounters.push_back(9480);
        internalCounters.push_back(9808);
        internalCounters.push_back(10136);
        internalCounters.push_back(10464);
        internalCounters.push_back(10792);
        internalCounters.push_back(11120);
        internalCounters.push_back(11448);
        internalCounters.push_back(11776);
        internalCounters.push_back(12104);
        internalCounters.push_back(7191);
        internalCounters.push_back(7519);
        internalCounters.push_back(7847);
        internalCounters.push_back(8175);
        internalCounters.push_back(8503);
        internalCounters.push_back(8831);
        internalCounters.push_back(9159);
        internalCounters.push_back(9487);
        internalCounters.push_back(9815);
        internalCounters.push_back(10143);
        internalCounters.push_back(10471);
        internalCounters.push_back(10799);
        internalCounters.push_back(11127);
        internalCounters.push_back(11455);
        internalCounters.push_back(11783);
        internalCounters.push_back(12111);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(7196);
        internalCounters.push_back(7524);
        internalCounters.push_back(7852);
        internalCounters.push_back(8180);
        internalCounters.push_back(8508);
        internalCounters.push_back(8836);
        internalCounters.push_back(9164);
        internalCounters.push_back(9492);
        internalCounters.push_back(9820);
        internalCounters.push_back(10148);
        internalCounters.push_back(10476);
        internalCounters.push_back(10804);
        internalCounters.push_back(11132);
        internalCounters.push_back(11460);
        internalCounters.push_back(11788);
        internalCounters.push_back(12116);
        internalCounters.push_back(7199);
        internalCounters.push_back(7527);
        internalCounters.push_back(7855);
        internalCounters.push_back(8183);
        internalCounters.push_back(8511);
        internalCounters.push_back(8839);
        internalCounters.push_back(9167);
        internalCounters.push_back(9495);
        internalCounters.push_back(9823);
        internalCounters.push_back(10151);
        internalCounters.push_back(10479);
        internalCounters.push_back(10807);
        internalCounters.push_back(11135);
        internalCounters.push_back(11463);
        internalCounters.push_back(11791);
        internalCounters.push_back(12119);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(160);
        internalCounters.push_back(604);
        internalCounters.push_back(1048);
        internalCounters.push_back(1492);
        internalCounters.push_back(1936);
        internalCounters.push_back(2380);
        internalCounters.push_back(2824);
        internalCounters.push_back(3268);
        internalCounters.push_back(3712);
        internalCounters.push_back(4156);
        internalCounters.push_back(4600);
        internalCounters.push_back(5044);
        internalCounters.push_back(5488);
        internalCounters.push_back(5932);
        internalCounters.push_back(6376);
        internalCounters.push_back(6820);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(291);
        internalCounters.push_back(735);
        internalCounters.push_back(1179);
        internalCounters.push_back(1623);
        internalCounters.push_back(2067);
        internalCounters.push_back(2511);
        internalCounters.push_back(2955);
        internalCounters.push_back(3399);
        internalCounters.push_back(3843);
        internalCounters.push_back(4287);
        internalCounters.push_back(4731);
        internalCounters.push_back(5175);
        internalCounters.push_back(5619);
        internalCounters.push_back(6063);
        internalCounters.push_back(6507);
        internalCounters.push_back(6951);
        internalCounters.push_back(158);
        internalCounters.push_back(602);
        internalCounters.push_back(1046);
        internalCounters.push_back(1490);
        internalCounters.push_back(1934);
        internalCounters.push_back(2378);
        internalCounters.push_back(2822);
        internalCounters.push_back(3266);
        internalCounters.push_back(3710);
        internalCounters.push_back(4154);
        internalCounters.push_back(4598);
        internalCounters.push_back(5042);
        internalCounters.push_back(5486);
        internalCounters.push_back(5930);
        internalCounters.push_back(6374);
        internalCounters.push_back(6818);
        internalCounters.push_back(159);
        internalCounters.push_back(603);
        internalCounters.push_back(1047);
        internalCounters.push_back(1491);
        internalCounters.push_back(1935);
        internalCounters.push_back(2379);
        internalCounters.push_back(2823);
        internalCounters.push_back(3267);
        internalCounters.push_back(3711);
        internalCounters.push_back(4155);
        internalCounters.push_back(4599);
        internalCounters.push_back(5043);
        internalCounters.push_back(5487);
        internalCounters.push_back(5931);
        internalCounters.push_back(6375);
        internalCounters.push_back(6819);
        internalCounters.push_back(160);
        internalCounters.push_back(604);
        internalCounters.push_back(1048);
        internalCounters.push_back(1492);
        internalCounters.push_back(1936);
        internalCounters.push_back(2380);
        internalCounters.push_back(2824);
        internalCounters.push_back(3268);
        internalCounters.push_back(3712);
        internalCounters.push_back(4156);
        internalCounters.push_back(4600);
        internalCounters.push_back(5044);
        internalCounters.push_back(5488);
        internalCounters.push_back(5932);
        internalCounters.push_back(6376);
        internalCounters.push_back(6820);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(150);
        internalCounters.push_back(594);
        internalCounters.push_back(1038);
        internalCounters.push_back(1482);
        internalCounters.push_back(1926);
        internalCounters.push_back(2370);
        internalCounters.push_back(2814);
        internalCounters.push_back(3258);
        internalCounters.push_back(3702);
        internalCounters.push_back(4146);
        internalCounters.push_back(4590);
        internalCounters.push_back(5034);
        internalCounters.push_back(5478);
        internalCounters.push_back(5922);
        internalCounters.push_back(6366);
        internalCounters.push_back(6810);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(289);
        internalCounters.push_back(733);
        internalCounters.push_back(1177);
        internalCounters.push_back(1621);
        internalCounters.push_back(2065);
        internalCounters.push_back(2509);
        internalCounters.push_back(2953);
        internalCounters.push_back(3397);
        internalCounters.push_back(3841);
        internalCounters.push_back(4285);
        internalCounters.push_back(4729);
        internalCounters.push_back(5173);
        internalCounters.push_back(5617);
        internalCounters.push_back(6061);
        internalCounters.push_back(6505);
        internalCounters.push_back(6949);
        internalCounters.push_back(148);
        internalCounters.push_back(592);
        internalCounters.push_back(1036);
        internalCounters.push_back(1480);
        internalCounters.push_back(1924);
        internalCounters.push_back(2368);
        internalCounters.push_back(2812);
        internalCounters.push_back(3256);
        internalCounters.push_back(3700);
        internalCounters.push_back(4144);
        internalCounters.push_back(4588);
        internalCounters.push_back(5032);
        internalCounters.push_back(5476);
        internalCounters.push_back(5920);
        internalCounters.push_back(6364);
        internalCounters.push_back(6808);
        internalCounters.push_back(149);
        internalCounters.push_back(593);
        internalCounters.push_back(1037);
        internalCounters.push_back(1481);
        internalCounters.push_back(1925);
        internalCounters.push_back(2369);
        internalCounters.push_back(2813);
        internalCounters.push_back(3257);
        internalCounters.push_back(3701);
        internalCounters.push_back(4145);
        internalCounters.push_back(4589);
        internalCounters.push_back(5033);
        internalCounters.push_back(5477);
        internalCounters.push_back(5921);
        internalCounters.push_back(6365);
        internalCounters.push_back(6809);
        internalCounters.push_back(150);
        internalCounters.push_back(594);
        internalCounters.push_back(1038);
        internalCounters.push_back(1482);
        internalCounters.push_back(1926);
        internalCounters.push_back(2370);
        internalCounters.push_back(2814);
        internalCounters.push_back(3258);
        internalCounters.push_back(3702);
        internalCounters.push_back(4146);
        internalCounters.push_back(4590);
        internalCounters.push_back(5034);
        internalCounters.push_back(5478);
        internalCounters.push_back(5922);
        internalCounters.push_back(6366);
        internalCounters.push_back(6810);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(194);
        internalCounters.push_back(638);
        internalCounters.push_back(1082);
        internalCounters.push_back(1526);
        internalCounters.push_back(1970);
        internalCounters.push_back(2414);
        internalCounters.push_back(2858);
        internalCounters.push_back(3302);
        internalCounters.push_back(3746);
        internalCounters.push_back(4190);
        internalCounters.push_back(4634);
        internalCounters.push_back(5078);
        internalCounters.push_back(5522);
        internalCounters.push_back(5966);
        internalCounters.push_back(6410);
        internalCounters.push_back(6854);
        internalCounters.push_back(39);
        internalCounters.push_back(483);
        internalCounters.push_back(927);
        internalCounters.push_back(1371);
        internalCounters.push_back(1815);
        internalCounters.push_back(2259);
        internalCounters.push_back(2703);
        internalCounters.push_back(3147);
        internalCounters.push_back(3591);
        internalCounters.push_back(4035);
        internalCounters.push_back(4479);
        internalCounters.push_back(4923);
        internalCounters.push_back(5367);
        internalCounters.push_back(5811);
        internalCounters.push_back(6255);
        internalCounters.push_back(6699);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(194);
        internalCounters.push_back(638);
        internalCounters.push_back(1082);
        internalCounters.push_back(1526);
        internalCounters.push_back(1970);
        internalCounters.push_back(2414);
        internalCounters.push_back(2858);
        internalCounters.push_back(3302);
        internalCounters.push_back(3746);
        internalCounters.push_back(4190);
        internalCounters.push_back(4634);
        internalCounters.push_back(5078);
        internalCounters.push_back(5522);
        internalCounters.push_back(5966);
        internalCounters.push_back(6410);
        internalCounters.push_back(6854);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46194);
        internalCounters.push_back(46476);
        internalCounters.push_back(46758);
        internalCounters.push_back(47040);
        internalCounters.push_back(47322);
        internalCounters.push_back(47604);
        internalCounters.push_back(47886);
        internalCounters.push_back(48168);
        internalCounters.push_back(48450);
        internalCounters.push_back(48732);
        internalCounters.push_back(49014);
        internalCounters.push_back(49296);
        internalCounters.push_back(49578);
        internalCounters.push_back(49860);
        internalCounters.push_back(50142);
        internalCounters.push_back(50424);
        internalCounters.push_back(46195);
        internalCounters.push_back(46477);
        internalCounters.push_back(46759);
        internalCounters.push_back(47041);
        internalCounters.push_back(47323);
        internalCounters.push_back(47605);
        internalCounters.push_back(47887);
        internalCounters.push_back(48169);
        internalCounters.push_back(48451);
        internalCounters.push_back(48733);
        internalCounters.push_back(49015);
        internalCounters.push_back(49297);
        internalCounters.push_back(49579);
        internalCounters.push_back(49861);
        internalCounters.push_back(50143);
        internalCounters.push_back(50425);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(64),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46182);
        internalCounters.push_back(46464);
        internalCounters.push_back(46746);
        internalCounters.push_back(47028);
        internalCounters.push_back(47310);
        internalCounters.push_back(47592);
        internalCounters.push_back(47874);
        internalCounters.push_back(48156);
        internalCounters.push_back(48438);
        internalCounters.push_back(48720);
        internalCounters.push_back(49002);
        internalCounters.push_back(49284);
        internalCounters.push_back(49566);
        internalCounters.push_back(49848);
        internalCounters.push_back(50130);
        internalCounters.push_back(50412);
        internalCounters.push_back(46183);
        internalCounters.push_back(46465);
        internalCounters.push_back(46747);
        internalCounters.push_back(47029);
        internalCounters.push_back(47311);
        internalCounters.push_back(47593);
        internalCounters.push_back(47875);
        internalCounters.push_back(48157);
        internalCounters.push_back(48439);
        internalCounters.push_back(48721);
        internalCounters.push_back(49003);
        internalCounters.push_back(49285);
        internalCounters.push_back(49567);
        internalCounters.push_back(49849);
        internalCounters.push_back(50131);
        internalCounters.push_back(50413);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40773);
        internalCounters.push_back(40858);
        internalCounters.push_back(40943);
        internalCounters.push_back(41028);
        internalCounters.push_back(41113);
        internalCounters.push_back(41198);
        internalCounters.push_back(41283);
        internalCounters.push_back(41368);
        internalCounters.push_back(41453);
        internalCounters.push_back(41538);
        internalCounters.push_back(41623);
        internalCounters.push_back(41708);
        internalCounters.push_back(41793);
        internalCounters.push_back(41878);
        internalCounters.push_back(41963);
        internalCounters.push_back(42048);
        internalCounters.push_back(42133);
        internalCounters.push_back(42218);
        internalCounters.push_back(42303);
        internalCounters.push_back(42388);
        internalCounters.push_back(42473);
        internalCounters.push_back(42558);
        internalCounters.push_back(42643);
        internalCounters.push_back(42728);
        internalCounters.push_back(42813);
        internalCounters.push_back(42898);
        internalCounters.push_back(42983);
        internalCounters.push_back(43068);
        internalCounters.push_back(43153);
        internalCounters.push_back(43238);
        internalCounters.push_back(43323);
        internalCounters.push_back(43408);
        internalCounters.push_back(43493);
        internalCounters.push_back(43578);
        internalCounters.push_back(43663);
        internalCounters.push_back(43748);
        internalCounters.push_back(43833);
        internalCounters.push_back(43918);
        internalCounters.push_back(44003);
        internalCounters.push_back(44088);
        internalCounters.push_back(44173);
        internalCounters.push_back(44258);
        internalCounters.push_back(44343);
        internalCounters.push_back(44428);
        internalCounters.push_back(44513);
        internalCounters.push_back(44598);
        internalCounters.push_back(44683);
        internalCounters.push_back(44768);
        internalCounters.push_back(44853);
        internalCounters.push_back(44938);
        internalCounters.push_back(45023);
        internalCounters.push_back(45108);
        internalCounters.push_back(45193);
        internalCounters.push_back(45278);
        internalCounters.push_back(45363);
        internalCounters.push_back(45448);
        internalCounters.push_back(45533);
        internalCounters.push_back(45618);
        internalCounters.push_back(45703);
        internalCounters.push_back(45788);
        internalCounters.push_back(45873);
        internalCounters.push_back(45958);
        internalCounters.push_back(46043);
        internalCounters.push_back(46128);
        internalCounters.push_back(40782);
        internalCounters.push_back(40867);
        internalCounters.push_back(40952);
        internalCounters.push_back(41037);
        internalCounters.push_back(41122);
        internalCounters.push_back(41207);
        internalCounters.push_back(41292);
        internalCounters.push_back(41377);
        internalCounters.push_back(41462);
        internalCounters.push_back(41547);
        internalCounters.push_back(41632);
        internalCounters.push_back(41717);
        internalCounters.push_back(41802);
        internalCounters.push_back(41887);
        internalCounters.push_back(41972);
        internalCounters.push_back(42057);
        internalCounters.push_back(42142);
        internalCounters.push_back(42227);
        internalCounters.push_back(42312);
        internalCounters.push_back(42397);
        internalCounters.push_back(42482);
        internalCounters.push_back(42567);
        internalCounters.push_back(42652);
        internalCounters.push_back(42737);
        internalCounters.push_back(42822);
        internalCounters.push_back(42907);
        internalCounters.push_back(42992);
        internalCounters.push_back(43077);
        internalCounters.push_back(43162);
        internalCounters.push_back(43247);
        internalCounters.push_back(43332);
        internalCounters.push_back(43417);
        internalCounters.push_back(43502);
        internalCounters.push_back(43587);
        internalCounters.push_back(43672);
        internalCounters.push_back(43757);
        internalCounters.push_back(43842);
        internalCounters.push_back(43927);
        internalCounters.push_back(44012);
        internalCounters.push_back(44097);
        internalCounters.push_back(44182);
        internalCounters.push_back(44267);
        internalCounters.push_back(44352);
        internalCounters.push_back(44437);
        internalCounters.push_back(44522);
        internalCounters.push_back(44607);
        internalCounters.push_back(44692);
        internalCounters.push_back(44777);
        internalCounters.push_back(44862);
        internalCounters.push_back(44947);
        internalCounters.push_back(45032);
        internalCounters.push_back(45117);
        internalCounters.push_back(45202);
        internalCounters.push_back(45287);
        internalCounters.push_back(45372);
        internalCounters.push_back(45457);
        internalCounters.push_back(45542);
        internalCounters.push_back(45627);
        internalCounters.push_back(45712);
        internalCounters.push_back(45797);
        internalCounters.push_back(45882);
        internalCounters.push_back(45967);
        internalCounters.push_back(46052);
        internalCounters.push_back(46137);
        internalCounters.push_back(40783);
        internalCounters.push_back(40868);
        internalCounters.push_back(40953);
        internalCounters.push_back(41038);
        internalCounters.push_back(41123);
        internalCounters.push_back(41208);
        internalCounters.push_back(41293);
        internalCounters.push_back(41378);
        internalCounters.push_back(41463);
        internalCounters.push_back(41548);
        internalCounters.push_back(41633);
        internalCounters.push_back(41718);
        internalCounters.push_back(41803);
        internalCounters.push_back(41888);
        internalCounters.push_back(41973);
        internalCounters.push_back(42058);
        internalCounters.push_back(42143);
        internalCounters.push_back(42228);
        internalCounters.push_back(42313);
        internalCounters.push_back(42398);
        internalCounters.push_back(42483);
        internalCounters.push_back(42568);
        internalCounters.push_back(42653);
        internalCounters.push_back(42738);
        internalCounters.push_back(42823);
        internalCounters.push_back(42908);
        internalCounters.push_back(42993);
        internalCounters.push_back(43078);
        internalCounters.push_back(43163);
        internalCounters.push_back(43248);
        internalCounters.push_back(43333);
        internalCounters.push_back(43418);
        internalCounters.push_back(43503);
        internalCounters.push_back(43588);
        internalCounters.push_back(43673);
        internalCounters.push_back(43758);
        internalCounters.push_back(43843);
        internalCounters.push_back(43928);
        internalCounters.push_back(44013);
        internalCounters.push_back(44098);
        internalCounters.push_back(44183);
        internalCounters.push_back(44268);
        internalCounters.push_back(44353);
        internalCounters.push_back(44438);
        internalCounters.push_back(44523);
        internalCounters.push_back(44608);
        internalCounters.push_back(44693);
        internalCounters.push_back(44778);
        internalCounters.push_back(44863);
        internalCounters.push_back(44948);
        internalCounters.push_back(45033);
        internalCounters.push_back(45118);
        internalCounters.push_back(45203);
        internalCounters.push_back(45288);
        internalCounters.push_back(45373);
        internalCounters.push_back(45458);
        internalCounters.push_back(45543);
        internalCounters.push_back(45628);
        internalCounters.push_back(45713);
        internalCounters.push_back(45798);
        internalCounters.push_back(45883);
        internalCounters.push_back(45968);
        internalCounters.push_back(46053);
        internalCounters.push_back(46138);
        internalCounters.push_back(40784);
        internalCounters.push_back(40869);
        internalCounters.push_back(40954);
        internalCounters.push_back(41039);
        internalCounters.push_back(41124);
        internalCounters.push_back(41209);
        internalCounters.push_back(41294);
        internalCounters.push_back(41379);
        internalCounters.push_back(41464);
        internalCounters.push_back(41549);
        internalCounters.push_back(41634);
        internalCounters.push_back(41719);
        internalCounters.push_back(41804);
        internalCounters.push_back(41889);
        internalCounters.push_back(41974);
        internalCounters.push_back(42059);
        internalCounters.push_back(42144);
        internalCounters.push_back(42229);
        internalCounters.push_back(42314);
        internalCounters.push_back(42399);
        internalCounters.push_back(42484);
        internalCounters.push_back(42569);
        internalCounters.push_back(42654);
        internalCounters.push_back(42739);
        internalCounters.push_back(42824);
        internalCounters.push_back(42909);
        internalCounters.push_back(42994);
        internalCounters.push_back(43079);
        internalCounters.push_back(43164);
        internalCounters.push_back(43249);
        internalCounters.push_back(43334);
        internalCounters.push_back(43419);
        internalCounters.push_back(43504);
        internalCounters.push_back(43589);
        internalCounters.push_back(43674);
        internalCounters.push_back(43759);
        internalCounters.push_back(43844);
        internalCounters.push_back(43929);
        internalCounters.push_back(44014);
        internalCounters.push_back(44099);
        internalCounters.push_back(44184);
        internalCounters.push_back(44269);
        internalCounters.push_back(44354);
        internalCounters.push_back(44439);
        internalCounters.push_back(44524);
        internalCounters.push_back(44609);
        internalCounters.push_back(44694);
        internalCounters.push_back(44779);
        internalCounters.push_back(44864);
        internalCounters.push_back(44949);
        internalCounters.push_back(45034);
        internalCounters.push_back(45119);
        internalCounters.push_back(45204);
        internalCounters.push_back(45289);
        internalCounters.push_back(45374);
        internalCounters.push_back(45459);
        internalCounters.push_back(45544);
        internalCounters.push_back(45629);
        internalCounters.push_back(45714);
        internalCounters.push_back(45799);
        internalCounters.push_back(45884);
        internalCounters.push_back(45969);
        internalCounters.push_back(46054);
        internalCounters.push_back(46139);
        internalCounters.push_back(40785);
        internalCounters.push_back(40870);
        internalCounters.push_back(40955);
        internalCounters.push_back(41040);
        internalCounters.push_back(41125);
        internalCounters.push_back(41210);
        internalCounters.push_back(41295);
        internalCounters.push_back(41380);
        internalCounters.push_back(41465);
        internalCounters.push_back(41550);
        internalCounters.push_back(41635);
        internalCounters.push_back(41720);
        internalCounters.push_back(41805);
        internalCounters.push_back(41890);
        internalCounters.push_back(41975);
        internalCounters.push_back(42060);
        internalCounters.push_back(42145);
        internalCounters.push_back(42230);
        internalCounters.push_back(42315);
        internalCounters.push_back(42400);
        internalCounters.push_back(42485);
        internalCounters.push_back(42570);
        internalCounters.push_back(42655);
        internalCounters.push_back(42740);
        internalCounters.push_back(42825);
        internalCounters.push_back(42910);
        internalCounters.push_back(42995);
        internalCounters.push_back(43080);
        internalCounters.push_back(43165);
        internalCounters.push_back(43250);
        internalCounters.push_back(43335);
        internalCounters.push_back(43420);
        internalCounters.push_back(43505);
        internalCounters.push_back(43590);
        internalCounters.push_back(43675);
        internalCounters.push_back(43760);
        internalCounters.push_back(43845);
        internalCounters.push_back(43930);
        internalCounters.push_back(44015);
        internalCounters.push_back(44100);
        internalCounters.push_back(44185);
        internalCounters.push_back(44270);
        internalCounters.push_back(44355);
        internalCounters.push_back(44440);
        internalCounters.push_back(44525);
        internalCounters.push_back(44610);
        internalCounters.push_back(44695);
        internalCounters.push_back(44780);
        internalCounters.push_back(44865);
        internalCounters.push_back(44950);
        internalCounters.push_back(45035);
        internalCounters.push_back(45120);
        internalCounters.push_back(45205);
        internalCounters.push_back(45290);
        internalCounters.push_back(45375);
        internalCounters.push_back(45460);
        internalCounters.push_back(45545);
        internalCounters.push_back(45630);
        internalCounters.push_back(45715);
        internalCounters.push_back(45800);
        internalCounters.push_back(45885);
        internalCounters.push_back(45970);
        internalCounters.push_back(46055);
        internalCounters.push_back(46140);

        c.DefineDerivedCounter("L1CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L1 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,ifnotzero", "6deaf002-3cac-2d2d-7b89-566c7a52b08e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40773);
        internalCounters.push_back(40858);
        internalCounters.push_back(40943);
        internalCounters.push_back(41028);
        internalCounters.push_back(41113);
        internalCounters.push_back(41198);
        internalCounters.push_back(41283);
        internalCounters.push_back(41368);
        internalCounters.push_back(41453);
        internalCounters.push_back(41538);
        internalCounters.push_back(41623);
        internalCounters.push_back(41708);
        internalCounters.push_back(41793);
        internalCounters.push_back(41878);
        internalCounters.push_back(41963);
        internalCounters.push_back(42048);
        internalCounters.push_back(42133);
        internalCounters.push_back(42218);
        internalCounters.push_back(42303);
        internalCounters.push_back(42388);
        internalCounters.push_back(42473);
        internalCounters.push_back(42558);
        internalCounters.push_back(42643);
        internalCounters.push_back(42728);
        internalCounters.push_back(42813);
        internalCounters.push_back(42898);
        internalCounters.push_back(42983);
        internalCounters.push_back(43068);
        internalCounters.push_back(43153);
        internalCounters.push_back(43238);
        internalCounters.push_back(43323);
        internalCounters.push_back(43408);
        internalCounters.push_back(43493);
        internalCounters.push_back(43578);
        internalCounters.push_back(43663);
        internalCounters.push_back(43748);
        internalCounters.push_back(43833);
        internalCounters.push_back(43918);
        internalCounters.push_back(44003);
        internalCounters.push_back(44088);
        internalCounters.push_back(44173);
        internalCounters.push_back(44258);
        internalCounters.push_back(44343);
        internalCounters.push_back(44428);
        internalCounters.push_back(44513);
        internalCounters.push_back(44598);
        internalCounters.push_back(44683);
        internalCounters.push_back(44768);
        internalCounters.push_back(44853);
        internalCounters.push_back(44938);
        internalCounters.push_back(45023);
        internalCounters.push_back(45108);
        internalCounters.push_back(45193);
        internalCounters.push_back(45278);
        internalCounters.push_back(45363);
        internalCounters.push_back(45448);
        internalCounters.push_back(45533);
        internalCounters.push_back(45618);
        internalCounters.push_back(45703);
        internalCounters.push_back(45788);
        internalCounters.push_back(45873);
        internalCounters.push_back(45958);
        internalCounters.push_back(46043);
        internalCounters.push_back(46128);
        internalCounters.push_back(40782);
        internalCounters.push_back(40867);
        internalCounters.push_back(40952);
        internalCounters.push_back(41037);
        internalCounters.push_back(41122);
        internalCounters.push_back(41207);
        internalCounters.push_back(41292);
        internalCounters.push_back(41377);
        internalCounters.push_back(41462);
        internalCounters.push_back(41547);
        internalCounters.push_back(41632);
        internalCounters.push_back(41717);
        internalCounters.push_back(41802);
        internalCounters.push_back(41887);
        internalCounters.push_back(41972);
        internalCounters.push_back(42057);
        internalCounters.push_back(42142);
        internalCounters.push_back(42227);
        internalCounters.push_back(42312);
        internalCounters.push_back(42397);
        internalCounters.push_back(42482);
        internalCounters.push_back(42567);
        internalCounters.push_back(42652);
        internalCounters.push_back(42737);
        internalCounters.push_back(42822);
        internalCounters.push_back(42907);
        internalCounters.push_back(42992);
        internalCounters.push_back(43077);
        internalCounters.push_back(43162);
        internalCounters.push_back(43247);
        internalCounters.push_back(43332);
        internalCounters.push_back(43417);
        internalCounters.push_back(43502);
        internalCounters.push_back(43587);
        internalCounters.push_back(43672);
        internalCounters.push_back(43757);
        internalCounters.push_back(43842);
        internalCounters.push_back(43927);
        internalCounters.push_back(44012);
        internalCounters.push_back(44097);
        internalCounters.push_back(44182);
        internalCounters.push_back(44267);
        internalCounters.push_back(44352);
        internalCounters.push_back(44437);
        internalCounters.push_back(44522);
        internalCounters.push_back(44607);
        internalCounters.push_back(44692);
        internalCounters.push_back(44777);
        internalCounters.push_back(44862);
        internalCounters.push_back(44947);
        internalCounters.push_back(45032);
        internalCounters.push_back(45117);
        internalCounters.push_back(45202);
        internalCounters.push_back(45287);
        internalCounters.push_back(45372);
        internalCounters.push_back(45457);
        internalCounters.push_back(45542);
        internalCounters.push_back(45627);
        internalCounters.push_back(45712);
        internalCounters.push_back(45797);
        internalCounters.push_back(45882);
        internalCounters.push_back(45967);
        internalCounters.push_back(46052);
        internalCounters.push_back(46137);
        internalCounters.push_back(40783);
        internalCounters.push_back(40868);
        internalCounters.push_back(40953);
        internalCounters.push_back(41038);
        internalCounters.push_back(41123);
        internalCounters.push_back(41208);
        internalCounters.push_back(41293);
        internalCounters.push_back(41378);
        internalCounters.push_back(41463);
        internalCounters.push_back(41548);
        internalCounters.push_back(41633);
        internalCounters.push_back(41718);
        internalCounters.push_back(41803);
        internalCounters.push_back(41888);
        internalCounters.push_back(41973);
        internalCounters.push_back(42058);
        internalCounters.push_back(42143);
        internalCounters.push_back(42228);
        internalCounters.push_back(42313);
        internalCounters.push_back(42398);
        internalCounters.push_back(42483);
        internalCounters.push_back(42568);
        internalCounters.push_back(42653);
        internalCounters.push_back(42738);
        internalCounters.push_back(42823);
        internalCounters.push_back(42908);
        internalCounters.push_back(42993);
        internalCounters.push_back(43078);
        internalCounters.push_back(43163);
        internalCounters.push_back(43248);
        internalCounters.push_back(43333);
        internalCounters.push_back(43418);
        internalCounters.push_back(43503);
        internalCounters.push_back(43588);
        internalCounters.push_back(43673);
        internalCounters.push_back(43758);
        internalCounters.push_back(43843);
        internalCounters.push_back(43928);
        internalCounters.push_back(44013);
        internalCounters.push_back(44098);
        internalCounters.push_back(44183);
        internalCounters.push_back(44268);
        internalCounters.push_back(44353);
        internalCounters.push_back(44438);
        internalCounters.push_back(44523);
        internalCounters.push_back(44608);
        internalCounters.push_back(44693);
        internalCounters.push_back(44778);
        internalCounters.push_back(44863);
        internalCounters.push_back(44948);
        internalCounters.push_back(45033);
        internalCounters.push_back(45118);
        internalCounters.push_back(45203);
        internalCounters.push_back(45288);
        internalCounters.push_back(45373);
        internalCounters.push_back(45458);
        internalCounters.push_back(45543);
        internalCounters.push_back(45628);
        internalCounters.push_back(45713);
        internalCounters.push_back(45798);
        internalCounters.push_back(45883);
        internalCounters.push_back(45968);
        internalCounters.push_back(46053);
        internalCounters.push_back(46138);
        internalCounters.push_back(40784);
        internalCounters.push_back(40869);
        internalCounters.push_back(40954);
        internalCounters.push_back(41039);
        internalCounters.push_back(41124);
        internalCounters.push_back(41209);
        internalCounters.push_back(41294);
        internalCounters.push_back(41379);
        internalCounters.push_back(41464);
        internalCounters.push_back(41549);
        internalCounters.push_back(41634);
        internalCounters.push_back(41719);
        internalCounters.push_back(41804);
        internalCounters.push_back(41889);
        internalCounters.push_back(41974);
        internalCounters.push_back(42059);
        internalCounters.push_back(42144);
        internalCounters.push_back(42229);
        internalCounters.push_back(42314);
        internalCounters.push_back(42399);
        internalCounters.push_back(42484);
        internalCounters.push_back(42569);
        internalCounters.push_back(42654);
        internalCounters.push_back(42739);
        internalCounters.push_back(42824);
        internalCounters.push_back(42909);
        internalCounters.push_back(42994);
        internalCounters.push_back(43079);
        internalCounters.push_back(43164);
        internalCounters.push_back(43249);
        internalCounters.push_back(43334);
        internalCounters.push_back(43419);
        internalCounters.push_back(43504);
        internalCounters.push_back(43589);
        internalCounters.push_back(43674);
        internalCounters.push_back(43759);
        internalCounters.push_back(43844);
        internalCounters.push_back(43929);
        internalCounters.push_back(44014);
        internalCounters.push_back(44099);
        internalCounters.push_back(44184);
        internalCounters.push_back(44269);
        internalCounters.push_back(44354);
        internalCounters.push_back(44439);
        internalCounters.push_back(44524);
        internalCounters.push_back(44609);
        internalCounters.push_back(44694);
        internalCounters.push_back(44779);
        internalCounters.push_back(44864);
        internalCounters.push_back(44949);
        internalCounters.push_back(45034);
        internalCounters.push_back(45119);
        internalCounters.push_back(45204);
        internalCounters.push_back(45289);
        internalCounters.push_back(45374);
        internalCounters.push_back(45459);
        internalCounters.push_back(45544);
        internalCounters.push_back(45629);
        internalCounters.push_back(45714);
        internalCounters.push_back(45799);
        internalCounters.push_back(45884);
        internalCounters.push_back(45969);
        internalCounters.push_back(46054);
        internalCounters.push_back(46139);
        internalCounters.push_back(40785);
        internalCounters.push_back(40870);
        internalCounters.push_back(40955);
        internalCounters.push_back(41040);
        internalCounters.push_back(41125);
        internalCounters.push_back(41210);
        internalCounters.push_back(41295);
        internalCounters.push_back(41380);
        internalCounters.push_back(41465);
        internalCounters.push_back(41550);
        internalCounters.push_back(41635);
        internalCounters.push_back(41720);
        internalCounters.push_back(41805);
        internalCounters.push_back(41890);
        internalCounters.push_back(41975);
        internalCounters.push_back(42060);
        internalCounters.push_back(42145);
        internalCounters.push_back(42230);
        internalCounters.push_back(42315);
        internalCounters.push_back(42400);
        internalCounters.push_back(42485);
        internalCounters.push_back(42570);
        internalCounters.push_back(42655);
        internalCounters.push_back(42740);
        internalCounters.push_back(42825);
        internalCounters.push_back(42910);
        internalCounters.push_back(42995);
        internalCounters.push_back(43080);
        internalCounters.push_back(43165);
        internalCounters.push_back(43250);
        internalCounters.push_back(43335);
        internalCounters.push_back(43420);
        internalCounters.push_back(43505);
        internalCounters.push_back(43590);
        internalCounters.push_back(43675);
        internalCounters.push_back(43760);
        internalCounters.push_back(43845);
        internalCounters.push_back(43930);
        internalCounters.push_back(44015);
        internalCounters.push_back(44100);
        internalCounters.push_back(44185);
        internalCounters.push_back(44270);
        internalCounters.push_back(44355);
        internalCounters.push_back(44440);
        internalCounters.push_back(44525);
        internalCounters.push_back(44610);
        internalCounters.push_back(44695);
        internalCounters.push_back(44780);
        internalCounters.push_back(44865);
        internalCounters.push_back(44950);
        internalCounters.push_back(45035);
        internalCounters.push_back(45120);
        internalCounters.push_back(45205);
        internalCounters.push_back(45290);
        internalCounters.push_back(45375);
        internalCounters.push_back(45460);
        internalCounters.push_back(45545);
        internalCounters.push_back(45630);
        internalCounters.push_back(45715);
        internalCounters.push_back(45800);
        internalCounters.push_back(45885);
        internalCounters.push_back(45970);
        internalCounters.push_back(46055);
        internalCounters.push_back(46140);

        c.DefineDerivedCounter("L1CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum256,-", "279c8bff-ec6a-f9bf-96d7-5e8000f77891");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40782);
        internalCounters.push_back(40867);
        internalCounters.push_back(40952);
        internalCounters.push_back(41037);
        internalCounters.push_back(41122);
        internalCounters.push_back(41207);
        internalCounters.push_back(41292);
        internalCounters.push_back(41377);
        internalCounters.push_back(41462);
        internalCounters.push_back(41547);
        internalCounters.push_back(41632);
        internalCounters.push_back(41717);
        internalCounters.push_back(41802);
        internalCounters.push_back(41887);
        internalCounters.push_back(41972);
        internalCounters.push_back(42057);
        internalCounters.push_back(42142);
        internalCounters.push_back(42227);
        internalCounters.push_back(42312);
        internalCounters.push_back(42397);
        internalCounters.push_back(42482);
        internalCounters.push_back(42567);
        internalCounters.push_back(42652);
        internalCounters.push_back(42737);
        internalCounters.push_back(42822);
        internalCounters.push_back(42907);
        internalCounters.push_back(42992);
        internalCounters.push_back(43077);
        internalCounters.push_back(43162);
        internalCounters.push_back(43247);
        internalCounters.push_back(43332);
        internalCounters.push_back(43417);
        internalCounters.push_back(43502);
        internalCounters.push_back(43587);
        internalCounters.push_back(43672);
        internalCounters.push_back(43757);
        internalCounters.push_back(43842);
        internalCounters.push_back(43927);
        internalCounters.push_back(44012);
        internalCounters.push_back(44097);
        internalCounters.push_back(44182);
        internalCounters.push_back(44267);
        internalCounters.push_back(44352);
        internalCounters.push_back(44437);
        internalCounters.push_back(44522);
        internalCounters.push_back(44607);
        internalCounters.push_back(44692);
        internalCounters.push_back(44777);
        internalCounters.push_back(44862);
        internalCounters.push_back(44947);
        internalCounters.push_back(45032);
        internalCounters.push_back(45117);
        internalCounters.push_back(45202);
        internalCounters.push_back(45287);
        internalCounters.push_back(45372);
        internalCounters.push_back(45457);
        internalCounters.push_back(45542);
        internalCounters.push_back(45627);
        internalCounters.push_back(45712);
        internalCounters.push_back(45797);
        internalCounters.push_back(45882);
        internalCounters.push_back(45967);
        internalCounters.push_back(46052);
        internalCounters.push_back(46137);
        internalCounters.push_back(40783);
        internalCounters.push_back(40868);
        internalCounters.push_back(40953);
        internalCounters.push_back(41038);
        internalCounters.push_back(41123);
        internalCounters.push_back(41208);
        internalCounters.push_back(41293);
        internalCounters.push_back(41378);
        internalCounters.push_back(41463);
        internalCounters.push_back(41548);
        internalCounters.push_back(41633);
        internalCounters.push_back(41718);
        internalCounters.push_back(41803);
        internalCounters.push_back(41888);
        internalCounters.push_back(41973);
        internalCounters.push_back(42058);
        internalCounters.push_back(42143);
        internalCounters.push_back(42228);
        internalCounters.push_back(42313);
        internalCounters.push_back(42398);
        internalCounters.push_back(42483);
        internalCounters.push_back(42568);
        internalCounters.push_back(42653);
        internalCounters.push_back(42738);
        internalCounters.push_back(42823);
        internalCounters.push_back(42908);
        internalCounters.push_back(42993);
        internalCounters.push_back(43078);
        internalCounters.push_back(43163);
        internalCounters.push_back(43248);
        internalCounters.push_back(43333);
        internalCounters.push_back(43418);
        internalCounters.push_back(43503);
        internalCounters.push_back(43588);
        internalCounters.push_back(43673);
        internalCounters.push_back(43758);
        internalCounters.push_back(43843);
        internalCounters.push_back(43928);
        internalCounters.push_back(44013);
        internalCounters.push_back(44098);
        internalCounters.push_back(44183);
        internalCounters.push_back(44268);
        internalCounters.push_back(44353);
        internalCounters.push_back(44438);
        internalCounters.push_back(44523);
        internalCounters.push_back(44608);
        internalCounters.push_back(44693);
        internalCounters.push_back(44778);
        internalCounters.push_back(44863);
        internalCounters.push_back(44948);
        internalCounters.push_back(45033);
        internalCounters.push_back(45118);
        internalCounters.push_back(45203);
        internalCounters.push_back(45288);
        internalCounters.push_back(45373);
        internalCounters.push_back(45458);
        internalCounters.push_back(45543);
        internalCounters.push_back(45628);
        internalCounters.push_back(45713);
        internalCounters.push_back(45798);
        internalCounters.push_back(45883);
        internalCounters.push_back(45968);
        internalCounters.push_back(46053);
        internalCounters.push_back(46138);
        internalCounters.push_back(40784);
        internalCounters.push_back(40869);
        internalCounters.push_back(40954);
        internalCounters.push_back(41039);
        internalCounters.push_back(41124);
        internalCounters.push_back(41209);
        internalCounters.push_back(41294);
        internalCounters.push_back(41379);
        internalCounters.push_back(41464);
        internalCounters.push_back(41549);
        internalCounters.push_back(41634);
        internalCounters.push_back(41719);
        internalCounters.push_back(41804);
        internalCounters.push_back(41889);
        internalCounters.push_back(41974);
        internalCounters.push_back(42059);
        internalCounters.push_back(42144);
        internalCounters.push_back(42229);
        internalCounters.push_back(42314);
        internalCounters.push_back(42399);
        internalCounters.push_back(42484);
        internalCounters.push_back(42569);
        internalCounters.push_back(42654);
        internalCounters.push_back(42739);
        internalCounters.push_back(42824);
        internalCounters.push_back(42909);
        internalCounters.push_back(42994);
        internalCounters.push_back(43079);
        internalCounters.push_back(43164);
        internalCounters.push_back(43249);
        internalCounters.push_back(43334);
        internalCounters.push_back(43419);
        internalCounters.push_back(43504);
        internalCounters.push_back(43589);
        internalCounters.push_back(43674);
        internalCounters.push_back(43759);
        internalCounters.push_back(43844);
        internalCounters.push_back(43929);
        internalCounters.push_back(44014);
        internalCounters.push_back(44099);
        internalCounters.push_back(44184);
        internalCounters.push_back(44269);
        internalCounters.push_back(44354);
        internalCounters.push_back(44439);
        internalCounters.push_back(44524);
        internalCounters.push_back(44609);
        internalCounters.push_back(44694);
        internalCounters.push_back(44779);
        internalCounters.push_back(44864);
        internalCounters.push_back(44949);
        internalCounters.push_back(45034);
        internalCounters.push_back(45119);
        internalCounters.push_back(45204);
        internalCounters.push_back(45289);
        internalCounters.push_back(45374);
        internalCounters.push_back(45459);
        internalCounters.push_back(45544);
        internalCounters.push_back(45629);
        internalCounters.push_back(45714);
        internalCounters.push_back(45799);
        internalCounters.push_back(45884);
        internalCounters.push_back(45969);
        internalCounters.push_back(46054);
        internalCounters.push_back(46139);
        internalCounters.push_back(40785);
        internalCounters.push_back(40870);
        internalCounters.push_back(40955);
        internalCounters.push_back(41040);
        internalCounters.push_back(41125);
        internalCounters.push_back(41210);
        internalCounters.push_back(41295);
        internalCounters.push_back(41380);
        internalCounters.push_back(41465);
        internalCounters.push_back(41550);
        internalCounters.push_back(41635);
        internalCounters.push_back(41720);
        internalCounters.push_back(41805);
        internalCounters.push_back(41890);
        internalCounters.push_back(41975);
        internalCounters.push_back(42060);
        internalCounters.push_back(42145);
        internalCounters.push_back(42230);
        internalCounters.push_back(42315);
        internalCounters.push_back(42400);
        internalCounters.push_back(42485);
        internalCounters.push_back(42570);
        internalCounters.push_back(42655);
        internalCounters.push_back(42740);
        internalCounters.push_back(42825);
        internalCounters.push_back(42910);
        internalCounters.push_back(42995);
        internalCounters.push_back(43080);
        internalCounters.push_back(43165);
        internalCounters.push_back(43250);
        internalCounters.push_back(43335);
        internalCounters.push_back(43420);
        internalCounters.push_back(43505);
        internalCounters.push_back(43590);
        internalCounters.push_back(43675);
        internalCounters.push_back(43760);
        internalCounters.push_back(43845);
        internalCounters.push_back(43930);
        internalCounters.push_back(44015);
        internalCounters.push_back(44100);
        internalCounters.push_back(44185);
        internalCounters.push_back(44270);
        internalCounters.push_back(44355);
        internalCounters.push_back(44440);
        internalCounters.push_back(44525);
        internalCounters.push_back(44610);
        internalCounters.push_back(44695);
        internalCounters.push_back(44780);
        internalCounters.push_back(44865);
        internalCounters.push_back(44950);
        internalCounters.push_back(45035);
        internalCounters.push_back(45120);
        internalCounters.push_back(45205);
        internalCounters.push_back(45290);
        internalCounters.push_back(45375);
        internalCounters.push_back(45460);
        internalCounters.push_back(45545);
        internalCounters.push_back(45630);
        internalCounters.push_back(45715);
        internalCounters.push_back(45800);
        internalCounters.push_back(45885);
        internalCounters.push_back(45970);
        internalCounters.push_back(46055);
        internalCounters.push_back(46140);

        c.DefineDerivedCounter("L1CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L1 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,sum256", "6e4ee364-41d7-476d-361d-f47b266c15db");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46173);
        internalCounters.push_back(46455);
        internalCounters.push_back(46737);
        internalCounters.push_back(47019);
        internalCounters.push_back(47301);
        internalCounters.push_back(47583);
        internalCounters.push_back(47865);
        internalCounters.push_back(48147);
        internalCounters.push_back(48429);
        internalCounters.push_back(48711);
        internalCounters.push_back(48993);
        internalCounters.push_back(49275);
        internalCounters.push_back(49557);
        internalCounters.push_back(49839);
        internalCounters.push_back(50121);
        internalCounters.push_back(50403);
        internalCounters.push_back(46175);
        internalCounters.push_back(46457);
        internalCounters.push_back(46739);
        internalCounters.push_back(47021);
        internalCounters.push_back(47303);
        internalCounters.push_back(47585);
        internalCounters.push_back(47867);
        internalCounters.push_back(48149);
        internalCounters.push_back(48431);
        internalCounters.push_back(48713);
        internalCounters.push_back(48995);
        internalCounters.push_back(49277);
        internalCounters.push_back(49559);
        internalCounters.push_back(49841);
        internalCounters.push_back(50123);
        internalCounters.push_back(50405);

        c.DefineDerivedCounter("L2CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the L2 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "d78fdf66-104f-8372-02c1-91d07d7dc62e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46173);
        internalCounters.push_back(46455);
        internalCounters.push_back(46737);
        internalCounters.push_back(47019);
        internalCounters.push_back(47301);
        internalCounters.push_back(47583);
        internalCounters.push_back(47865);
        internalCounters.push_back(48147);
        internalCounters.push_back(48429);
        internalCounters.push_back(48711);
        internalCounters.push_back(48993);
        internalCounters.push_back(49275);
        internalCounters.push_back(49557);
        internalCounters.push_back(49839);
        internalCounters.push_back(50121);
        internalCounters.push_back(50403);
        internalCounters.push_back(46175);
        internalCounters.push_back(46457);
        internalCounters.push_back(46739);
        internalCounters.push_back(47021);
        internalCounters.push_back(47303);
        internalCounters.push_back(47585);
        internalCounters.push_back(47867);
        internalCounters.push_back(48149);
        internalCounters.push_back(48431);
        internalCounters.push_back(48713);
        internalCounters.push_back(48995);
        internalCounters.push_back(49277);
        internalCounters.push_back(49559);
        internalCounters.push_back(49841);
        internalCounters.push_back(50123);
        internalCounters.push_back(50405);

        c.DefineDerivedCounter("L2CacheMiss", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that miss the L2 cache. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,+,/,(100),*", "4cd70885-41b3-25cd-92db-c76a0decc634");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46173);
        internalCounters.push_back(46455);
        internalCounters.push_back(46737);
        internalCounters.push_back(47019);
        internalCounters.push_back(47301);
        internalCounters.push_back(47583);
        internalCounters.push_back(47865);
        internalCounters.push_back(48147);
        internalCounters.push_back(48429);
        internalCounters.push_back(48711);
        internalCounters.push_back(48993);
        internalCounters.push_back(49275);
        internalCounters.push_back(49557);
        internalCounters.push_back(49839);
        internalCounters.push_back(50121);
        internalCounters.push_back(50403);

        c.DefineDerivedCounter("L2CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "d0bce171-560c-1895-66b3-bc56abccb077");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46175);
        internalCounters.push_back(46457);
        internalCounters.push_back(46739);
        internalCounters.push_back(47021);
        internalCounters.push_back(47303);
        internalCounters.push_back(47585);
        internalCounters.push_back(47867);
        internalCounters.push_back(48149);
        internalCounters.push_back(48431);
        internalCounters.push_back(48713);
        internalCounters.push_back(48995);
        internalCounters.push_back(49277);
        internalCounters.push_back(49559);
        internalCounters.push_back(49841);
        internalCounters.push_back(50123);
        internalCounters.push_back(50405);

        c.DefineDerivedCounter("L2CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f2ab3a1a-ead6-9893-961b-88ba2a758807");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29464);
        internalCounters.push_back(29583);
        internalCounters.push_back(29702);
        internalCounters.push_back(29821);
        internalCounters.push_back(29940);
        internalCounters.push_back(30059);
        internalCounters.push_back(30178);
        internalCounters.push_back(30297);
        internalCounters.push_back(30416);
        internalCounters.push_back(30535);
        internalCounters.push_back(30654);
        internalCounters.push_back(30773);
        internalCounters.push_back(30892);
        internalCounters.push_back(31011);
        internalCounters.push_back(31130);
        internalCounters.push_back(31249);
        internalCounters.push_back(31368);
        internalCounters.push_back(31487);
        internalCounters.push_back(31606);
        internalCounters.push_back(31725);
        internalCounters.push_back(31844);
        internalCounters.push_back(31963);
        internalCounters.push_back(32082);
        internalCounters.push_back(32201);
        internalCounters.push_back(32320);
        internalCounters.push_back(32439);
        internalCounters.push_back(32558);
        internalCounters.push_back(32677);
        internalCounters.push_back(32796);
        internalCounters.push_back(32915);
        internalCounters.push_back(33034);
        internalCounters.push_back(33153);
        internalCounters.push_back(33272);
        internalCounters.push_back(33391);
        internalCounters.push_back(33510);
        internalCounters.push_back(33629);
        internalCounters.push_back(33748);
        internalCounters.push_back(33867);
        internalCounters.push_back(33986);
        internalCounters.push_back(34105);
        internalCounters.push_back(34224);
        internalCounters.push_back(34343);
        internalCounters.push_back(34462);
        internalCounters.push_back(34581);
        internalCounters.push_back(34700);
        internalCounters.push_back(34819);
        internalCounters.push_back(34938);
        internalCounters.push_back(35057);
        internalCounters.push_back(35176);
        internalCounters.push_back(35295);
        internalCounters.push_back(35414);
        internalCounters.push_back(35533);
        internalCounters.push_back(35652);
        internalCounters.push_back(35771);
        internalCounters.push_back(35890);
        internalCounters.push_back(36009);
        internalCounters.push_back(36128);
        internalCounters.push_back(36247);
        internalCounters.push_back(36366);
        internalCounters.push_back(36485);
        internalCounters.push_back(36604);
        internalCounters.push_back(36723);
        internalCounters.push_back(36842);
        internalCounters.push_back(36961);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(29464);
        internalCounters.push_back(29583);
        internalCounters.push_back(29702);
        internalCounters.push_back(29821);
        internalCounters.push_back(29940);
        internalCounters.push_back(30059);
        internalCounters.push_back(30178);
        internalCounters.push_back(30297);
        internalCounters.push_back(30416);
        internalCounters.push_back(30535);
        internalCounters.push_back(30654);
        internalCounters.push_back(30773);
        internalCounters.push_back(30892);
        internalCounters.push_back(31011);
        internalCounters.push_back(31130);
        internalCounters.push_back(31249);
        internalCounters.push_back(31368);
        internalCounters.push_back(31487);
        internalCounters.push_back(31606);
        internalCounters.push_back(31725);
        internalCounters.push_back(31844);
        internalCounters.push_back(31963);
        internalCounters.push_back(32082);
        internalCounters.push_back(32201);
        internalCounters.push_back(32320);
        internalCounters.push_back(32439);
        internalCounters.push_back(32558);
        internalCounters.push_back(32677);
        internalCounters.push_back(32796);
        internalCounters.push_back(32915);
        internalCounters.push_back(33034);
        internalCounters.push_back(33153);
        internalCounters.push_back(33272);
        internalCounters.push_back(33391);
        internalCounters.push_back(33510);
        internalCounters.push_back(33629);
        internalCounters.push_back(33748);
        internalCounters.push_back(33867);
        internalCounters.push_back(33986);
        internalCounters.push_back(34105);
        internalCounters.push_back(34224);
        internalCounters.push_back(34343);
        internalCounters.push_back(34462);
        internalCounters.push_back(34581);
        internalCounters.push_back(34700);
        internalCounters.push_back(34819);
        internalCounters.push_back(34938);
        internalCounters.push_back(35057);
        internalCounters.push_back(35176);
        internalCounters.push_back(35295);
        internalCounters.push_back(35414);
        internalCounters.push_back(35533);
        internalCounters.push_back(35652);
        internalCounters.push_back(35771);
        internalCounters.push_back(35890);
        internalCounters.push_back(36009);
        internalCounters.push_back(36128);
        internalCounters.push_back(36247);
        internalCounters.push_back(36366);
        internalCounters.push_back(36485);
        internalCounters.push_back(36604);
        internalCounters.push_back(36723);
        internalCounters.push_back(36842);
        internalCounters.push_back(36961);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40719);
        internalCounters.push_back(40804);
        internalCounters.push_back(40889);
        internalCounters.push_back(40974);
        internalCounters.push_back(41059);
        internalCounters.push_back(41144);
        internalCounters.push_back(41229);
        internalCounters.push_back(41314);
        internalCounters.push_back(41399);
        internalCounters.push_back(41484);
        internalCounters.push_back(41569);
        internalCounters.push_back(41654);
        internalCounters.push_back(41739);
        internalCounters.push_back(41824);
        internalCounters.push_back(41909);
        internalCounters.push_back(41994);
        internalCounters.push_back(42079);
        internalCounters.push_back(42164);
        internalCounters.push_back(42249);
        internalCounters.push_back(42334);
        internalCounters.push_back(42419);
        internalCounters.push_back(42504);
        internalCounters.push_back(42589);
        internalCounters.push_back(42674);
        internalCounters.push_back(42759);
        internalCounters.push_back(42844);
        internalCounters.push_back(42929);
        internalCounters.push_back(43014);
        internalCounters.push_back(43099);
        internalCounters.push_back(43184);
        internalCounters.push_back(43269);
        internalCounters.push_back(43354);
        internalCounters.push_back(43439);
        internalCounters.push_back(43524);
        internalCounters.push_back(43609);
        internalCounters.push_back(43694);
        internalCounters.push_back(43779);
        internalCounters.push_back(43864);
        internalCounters.push_back(43949);
        internalCounters.push_back(44034);
        internalCounters.push_back(44119);
        internalCounters.push_back(44204);
        internalCounters.push_back(44289);
        internalCounters.push_back(44374);
        internalCounters.push_back(44459);
        internalCounters.push_back(44544);
        internalCounters.push_back(44629);
        internalCounters.push_back(44714);
        internalCounters.push_back(44799);
        internalCounters.push_back(44884);
        internalCounters.push_back(44969);
        internalCounters.push_back(45054);
        internalCounters.push_back(45139);
        internalCounters.push_back(45224);
        internalCounters.push_back(45309);
        internalCounters.push_back(45394);
        internalCounters.push_back(45479);
        internalCounters.push_back(45564);
        internalCounters.push_back(45649);
        internalCounters.push_back(45734);
        internalCounters.push_back(45819);
        internalCounters.push_back(45904);
        internalCounters.push_back(45989);
        internalCounters.push_back(46074);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64,64,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(40719);
        internalCounters.push_back(40804);
        internalCounters.push_back(40889);
        internalCounters.push_back(40974);
        internalCounters.push_back(41059);
        internalCounters.push_back(41144);
        internalCounters.push_back(41229);
        internalCounters.push_back(41314);
        internalCounters.push_back(41399);
        internalCounters.push_back(41484);
        internalCounters.push_back(41569);
        internalCounters.push_back(41654);
        internalCounters.push_back(41739);
        internalCounters.push_back(41824);
        internalCounters.push_back(41909);
        internalCounters.push_back(41994);
        internalCounters.push_back(42079);
        internalCounters.push_back(42164);
        internalCounters.push_back(42249);
        internalCounters.push_back(42334);
        internalCounters.push_back(42419);
        internalCounters.push_back(42504);
        internalCounters.push_back(42589);
        internalCounters.push_back(42674);
        internalCounters.push_back(42759);
        internalCounters.push_back(42844);
        internalCounters.push_back(42929);
        internalCounters.push_back(43014);
        internalCounters.push_back(43099);
        internalCounters.push_back(43184);
        internalCounters.push_back(43269);
        internalCounters.push_back(43354);
        internalCounters.push_back(43439);
        internalCounters.push_back(43524);
        internalCounters.push_back(43609);
        internalCounters.push_back(43694);
        internalCounters.push_back(43779);
        internalCounters.push_back(43864);
        internalCounters.push_back(43949);
        internalCounters.push_back(44034);
        internalCounters.push_back(44119);
        internalCounters.push_back(44204);
        internalCounters.push_back(44289);
        internalCounters.push_back(44374);
        internalCounters.push_back(44459);
        internalCounters.push_back(44544);
        internalCounters.push_back(44629);
        internalCounters.push_back(44714);
        internalCounters.push_back(44799);
        internalCounters.push_back(44884);
        internalCounters.push_back(44969);
        internalCounters.push_back(45054);
        internalCounters.push_back(45139);
        internalCounters.push_back(45224);
        internalCounters.push_back(45309);
        internalCounters.push_back(45394);
        internalCounters.push_back(45479);
        internalCounters.push_back(45564);
        internalCounters.push_back(45649);
        internalCounters.push_back(45734);
        internalCounters.push_back(45819);
        internalCounters.push_back(45904);
        internalCounters.push_back(45989);
        internalCounters.push_back(46074);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,max64", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46186);
        internalCounters.push_back(46468);
        internalCounters.push_back(46750);
        internalCounters.push_back(47032);
        internalCounters.push_back(47314);
        internalCounters.push_back(47596);
        internalCounters.push_back(47878);
        internalCounters.push_back(48160);
        internalCounters.push_back(48442);
        internalCounters.push_back(48724);
        internalCounters.push_back(49006);
        internalCounters.push_back(49288);
        internalCounters.push_back(49570);
        internalCounters.push_back(49852);
        internalCounters.push_back(50134);
        internalCounters.push_back(50416);
        internalCounters.push_back(23);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(46186);
        internalCounters.push_back(46468);
        internalCounters.push_back(46750);
        internalCounters.push_back(47032);
        internalCounters.push_back(47314);
        internalCounters.push_back(47596);
        internalCounters.push_back(47878);
        internalCounters.push_back(48160);
        internalCounters.push_back(48442);
        internalCounters.push_back(48724);
        internalCounters.push_back(49006);
        internalCounters.push_back(49288);
        internalCounters.push_back(49570);
        internalCounters.push_back(49852);
        internalCounters.push_back(50134);
        internalCounters.push_back(50416);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
}

