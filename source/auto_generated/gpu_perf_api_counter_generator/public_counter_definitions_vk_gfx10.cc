//==============================================================================
// Copyright (c) 2010-2020 Advanced Micro Devices, Inc. All rights reserved.
/// \author AMD Developer Tools Team
/// \file
/// \brief Public Counter Definitions for VK GFX10 
//==============================================================================

#include "gpa_counter.h"
#include "public_counter_definitions_vk_gfx10.h"

// *** Note, this is an auto-generated file. Do not edit. Execute PublicCounterCompiler to rebuild.

void AutoDefinePublicDerivedCountersVKGfx10(GPA_DerivedCounters& c)
{
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103685);

        c.DefineDerivedCounter("GPUTime", "Timing", "Time this API command took to execute on the GPU in nanoseconds from the time the previous command reached the bottom of the pipeline (BOP) to the time this command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "cbd338f2-de6c-7b14-92ad-ba724ca2e501");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103688);

        c.DefineDerivedCounter("ExecutionDuration", "Timing", "GPU command execution duration in nanoseconds, from the time the command enters the top of the pipeline (TOP) to the time the command reaches the bottom of the pipeline (BOP). Does not include time that draw calls are processed in parallel.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "b2f08d0d-af13-cd66-d3b4-b290ad448e69");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103689);

        c.DefineDerivedCounter("ExecutionStart", "Timing", "GPU command execution start time in nanoseconds. This is the time the command enters the top of the pipeline (TOP).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "a368f79d-fcfe-2158-71c4-2f0c4eef5aa4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103690);

        c.DefineDerivedCounter("ExecutionEnd", "Timing", "GPU command execution end time in nanoseconds. This is the time the command reaches the bottom of the pipeline (BOP).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "0,TS_FREQ,/,(1000000000),*", "0bce206a-0976-06a2-bf20-03fb351035a8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24);
        internalCounters.push_back(0);

        c.DefineDerivedCounter("GPUBusy", "Timing", "The percentage of time the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,/,(100),*,(100),min", "b1ba5363-1abc-fe66-2fdd-1fe6ee8989a0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24);

        c.DefineDerivedCounter("GPUBusyCycles", "Timing", "Number of GPU cycles that the GPU command processor was busy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0", "451cb045-23af-ac44-4603-d5832fa041d9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11308);
        internalCounters.push_back(11637);
        internalCounters.push_back(11966);
        internalCounters.push_back(12295);
        internalCounters.push_back(11320);
        internalCounters.push_back(11649);
        internalCounters.push_back(11978);
        internalCounters.push_back(12307);
        internalCounters.push_back(11001);
        internalCounters.push_back(11330);
        internalCounters.push_back(11659);
        internalCounters.push_back(11988);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSBusy", "Timing", "The percentage of time the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,12,/,(100),*,(100),min", "94caad5e-867c-6c09-cf3a-d05b51df8f3b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11308);
        internalCounters.push_back(11637);
        internalCounters.push_back(11966);
        internalCounters.push_back(12295);
        internalCounters.push_back(11320);
        internalCounters.push_back(11649);
        internalCounters.push_back(11978);
        internalCounters.push_back(12307);
        internalCounters.push_back(11001);
        internalCounters.push_back(11330);
        internalCounters.push_back(11659);
        internalCounters.push_back(11988);

        c.DefineDerivedCounter("VSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has vertex shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,4,ifnotzero,8,8,ifnotzero,1,5,5,ifnotzero,9,9,ifnotzero,max,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max", "a2086d4e-274b-48a8-3e08-a4ab76ac15dd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103685);
        internalCounters.push_back(11308);
        internalCounters.push_back(11637);
        internalCounters.push_back(11966);
        internalCounters.push_back(12295);
        internalCounters.push_back(11320);
        internalCounters.push_back(11649);
        internalCounters.push_back(11978);
        internalCounters.push_back(12307);
        internalCounters.push_back(11001);
        internalCounters.push_back(11330);
        internalCounters.push_back(11659);
        internalCounters.push_back(11988);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSTime", "Timing", "Time vertex shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,5,5,ifnotzero,9,9,ifnotzero,2,6,6,ifnotzero,10,10,ifnotzero,max,3,7,7,ifnotzero,11,11,ifnotzero,max,4,8,8,ifnotzero,12,12,ifnotzero,max,13,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "d6ce819e-69af-a241-d07a-5dd8d146e436");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11034);
        internalCounters.push_back(11363);
        internalCounters.push_back(11692);
        internalCounters.push_back(12021);
        internalCounters.push_back(11041);
        internalCounters.push_back(11370);
        internalCounters.push_back(11699);
        internalCounters.push_back(12028);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSBusy", "Timing", "The percentage of time the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,8,/,(100),*,(100),min", "16f30a0b-4cbf-eccd-b13f-ab68dd254d32");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11034);
        internalCounters.push_back(11363);
        internalCounters.push_back(11692);
        internalCounters.push_back(12021);
        internalCounters.push_back(11041);
        internalCounters.push_back(11370);
        internalCounters.push_back(11699);
        internalCounters.push_back(12028);

        c.DefineDerivedCounter("HSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has hull shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,max,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max", "753e76ef-8ef8-3f13-b511-4bd9f3589fdb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103685);
        internalCounters.push_back(11034);
        internalCounters.push_back(11363);
        internalCounters.push_back(11692);
        internalCounters.push_back(12021);
        internalCounters.push_back(11041);
        internalCounters.push_back(11370);
        internalCounters.push_back(11699);
        internalCounters.push_back(12028);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSTime", "Timing", "Time hull shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,max,(0),3,7,ifnotzero,max,(0),4,8,ifnotzero,max,9,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "8386a863-dd34-1526-f703-0f0c7b241bc4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11001);
        internalCounters.push_back(11330);
        internalCounters.push_back(11659);
        internalCounters.push_back(11988);
        internalCounters.push_back(11308);
        internalCounters.push_back(11637);
        internalCounters.push_back(11966);
        internalCounters.push_back(12295);
        internalCounters.push_back(11314);
        internalCounters.push_back(11643);
        internalCounters.push_back(11972);
        internalCounters.push_back(12301);
        internalCounters.push_back(11326);
        internalCounters.push_back(11655);
        internalCounters.push_back(11984);
        internalCounters.push_back(12313);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DSBusy", "Timing", "The percentage of time the ShaderUnit has domain shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,16,/,(100),*,(100),min", "0c626e8a-9b82-b6d4-d9a3-578509316301");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11001);
        internalCounters.push_back(11330);
        internalCounters.push_back(11659);
        internalCounters.push_back(11988);
        internalCounters.push_back(11308);
        internalCounters.push_back(11637);
        internalCounters.push_back(11966);
        internalCounters.push_back(12295);
        internalCounters.push_back(11314);
        internalCounters.push_back(11643);
        internalCounters.push_back(11972);
        internalCounters.push_back(12301);
        internalCounters.push_back(11326);
        internalCounters.push_back(11655);
        internalCounters.push_back(11984);
        internalCounters.push_back(12313);

        c.DefineDerivedCounter("DSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has domain shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,8,ifnotzero,12,ifnotzero,(0),1,5,9,ifnotzero,13,ifnotzero,max,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max", "2f3f7561-0549-2232-536d-129ffc5f7703");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103685);
        internalCounters.push_back(11001);
        internalCounters.push_back(11330);
        internalCounters.push_back(11659);
        internalCounters.push_back(11988);
        internalCounters.push_back(11308);
        internalCounters.push_back(11637);
        internalCounters.push_back(11966);
        internalCounters.push_back(12295);
        internalCounters.push_back(11314);
        internalCounters.push_back(11643);
        internalCounters.push_back(11972);
        internalCounters.push_back(12301);
        internalCounters.push_back(11326);
        internalCounters.push_back(11655);
        internalCounters.push_back(11984);
        internalCounters.push_back(12313);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DSTime", "Timing", "Time domain shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,9,ifnotzero,13,ifnotzero,(0),2,6,10,ifnotzero,14,ifnotzero,max,(0),3,7,11,ifnotzero,15,ifnotzero,max,(0),4,8,12,ifnotzero,16,ifnotzero,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "bfe28947-c727-8a9f-aa59-c218e58bfba5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11060);
        internalCounters.push_back(11389);
        internalCounters.push_back(11718);
        internalCounters.push_back(12047);
        internalCounters.push_back(11080);
        internalCounters.push_back(11409);
        internalCounters.push_back(11738);
        internalCounters.push_back(12067);
        internalCounters.push_back(11061);
        internalCounters.push_back(11390);
        internalCounters.push_back(11719);
        internalCounters.push_back(12048);
        internalCounters.push_back(11081);
        internalCounters.push_back(11410);
        internalCounters.push_back(11739);
        internalCounters.push_back(12068);
        internalCounters.push_back(11062);
        internalCounters.push_back(11391);
        internalCounters.push_back(11720);
        internalCounters.push_back(12049);
        internalCounters.push_back(11082);
        internalCounters.push_back(11411);
        internalCounters.push_back(11740);
        internalCounters.push_back(12069);
        internalCounters.push_back(11063);
        internalCounters.push_back(11392);
        internalCounters.push_back(11721);
        internalCounters.push_back(12050);
        internalCounters.push_back(11083);
        internalCounters.push_back(11412);
        internalCounters.push_back(11741);
        internalCounters.push_back(12070);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSBusy", "Timing", "The percentage of time the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4,32,/,(100),*,(100),min", "7e772beb-d82c-bd9a-aed0-fe504d416ce5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11060);
        internalCounters.push_back(11389);
        internalCounters.push_back(11718);
        internalCounters.push_back(12047);
        internalCounters.push_back(11080);
        internalCounters.push_back(11409);
        internalCounters.push_back(11738);
        internalCounters.push_back(12067);
        internalCounters.push_back(11061);
        internalCounters.push_back(11390);
        internalCounters.push_back(11719);
        internalCounters.push_back(12048);
        internalCounters.push_back(11081);
        internalCounters.push_back(11410);
        internalCounters.push_back(11739);
        internalCounters.push_back(12068);
        internalCounters.push_back(11062);
        internalCounters.push_back(11391);
        internalCounters.push_back(11720);
        internalCounters.push_back(12049);
        internalCounters.push_back(11082);
        internalCounters.push_back(11411);
        internalCounters.push_back(11740);
        internalCounters.push_back(12069);
        internalCounters.push_back(11063);
        internalCounters.push_back(11392);
        internalCounters.push_back(11721);
        internalCounters.push_back(12050);
        internalCounters.push_back(11083);
        internalCounters.push_back(11412);
        internalCounters.push_back(11741);
        internalCounters.push_back(12070);

        c.DefineDerivedCounter("PSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has pixel shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,4,ifnotzero,(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,max4,(0),8,12,ifnotzero,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,max4,(0),16,20,ifnotzero,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,max4,(0),24,28,ifnotzero,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,max4,max4", "b58bea04-ce8e-2984-80f4-8aba7d4c817b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103685);
        internalCounters.push_back(11060);
        internalCounters.push_back(11389);
        internalCounters.push_back(11718);
        internalCounters.push_back(12047);
        internalCounters.push_back(11080);
        internalCounters.push_back(11409);
        internalCounters.push_back(11738);
        internalCounters.push_back(12067);
        internalCounters.push_back(11061);
        internalCounters.push_back(11390);
        internalCounters.push_back(11719);
        internalCounters.push_back(12048);
        internalCounters.push_back(11081);
        internalCounters.push_back(11410);
        internalCounters.push_back(11739);
        internalCounters.push_back(12068);
        internalCounters.push_back(11062);
        internalCounters.push_back(11391);
        internalCounters.push_back(11720);
        internalCounters.push_back(12049);
        internalCounters.push_back(11082);
        internalCounters.push_back(11411);
        internalCounters.push_back(11740);
        internalCounters.push_back(12069);
        internalCounters.push_back(11063);
        internalCounters.push_back(11392);
        internalCounters.push_back(11721);
        internalCounters.push_back(12050);
        internalCounters.push_back(11083);
        internalCounters.push_back(11412);
        internalCounters.push_back(11741);
        internalCounters.push_back(12070);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSTime", "Timing", "Time pixel shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "(0),1,5,ifnotzero,(0),2,6,ifnotzero,(0),3,7,ifnotzero,(0),4,8,ifnotzero,max4,(0),9,13,ifnotzero,(0),10,14,ifnotzero,(0),11,15,ifnotzero,(0),12,16,ifnotzero,max4,(0),17,21,ifnotzero,(0),18,22,ifnotzero,(0),19,23,ifnotzero,(0),20,24,ifnotzero,max4,(0),25,29,ifnotzero,(0),26,30,ifnotzero,(0),27,31,ifnotzero,(0),28,32,ifnotzero,max4,max4,33,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "edca7694-7416-e8a6-0c5a-63a5ad5f3d74");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11045);
        internalCounters.push_back(11374);
        internalCounters.push_back(11703);
        internalCounters.push_back(12032);
        internalCounters.push_back(11049);
        internalCounters.push_back(11378);
        internalCounters.push_back(11707);
        internalCounters.push_back(12036);
        internalCounters.push_back(11051);
        internalCounters.push_back(11380);
        internalCounters.push_back(11709);
        internalCounters.push_back(12038);
        internalCounters.push_back(11055);
        internalCounters.push_back(11384);
        internalCounters.push_back(11713);
        internalCounters.push_back(12042);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("CSBusy", "Timing", "The percentage of time the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max,16,/,(100),*,(100),min", "493fdd90-8d2b-a055-5e4e-2d29c3396b8c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11045);
        internalCounters.push_back(11374);
        internalCounters.push_back(11703);
        internalCounters.push_back(12032);
        internalCounters.push_back(11049);
        internalCounters.push_back(11378);
        internalCounters.push_back(11707);
        internalCounters.push_back(12036);
        internalCounters.push_back(11051);
        internalCounters.push_back(11380);
        internalCounters.push_back(11709);
        internalCounters.push_back(12038);
        internalCounters.push_back(11055);
        internalCounters.push_back(11384);
        internalCounters.push_back(11713);
        internalCounters.push_back(12042);

        c.DefineDerivedCounter("CSBusyCycles", "Timing", "Number of GPU cycles that the ShaderUnit has compute shader work to do.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,comparemax4,8,9,10,11,12,13,14,15,comparemax4,max", "39bcf1b8-f6b2-4c37-f9af-0a2bb59512f9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(103685);
        internalCounters.push_back(11045);
        internalCounters.push_back(11374);
        internalCounters.push_back(11703);
        internalCounters.push_back(12032);
        internalCounters.push_back(11049);
        internalCounters.push_back(11378);
        internalCounters.push_back(11707);
        internalCounters.push_back(12036);
        internalCounters.push_back(11051);
        internalCounters.push_back(11380);
        internalCounters.push_back(11709);
        internalCounters.push_back(12038);
        internalCounters.push_back(11055);
        internalCounters.push_back(11384);
        internalCounters.push_back(11713);
        internalCounters.push_back(12042);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("CSTime", "Timing", "Time compute shaders are busy in nanoseconds.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_NANOSECONDS, internalCounters, "1,2,3,4,5,6,7,8,comparemax4,9,10,11,12,13,14,15,16,comparemax4,max,17,/,(1),min,0,TS_FREQ,/,(1000000000),*,*", "dbc24916-ecb2-7eef-8d63-7afadaaab6bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93479);
        internalCounters.push_back(93501);
        internalCounters.push_back(93543);

        c.DefineDerivedCounter("VSVerticesIn", "VertexShader", "The number of vertices processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,1,ifnotzero,2,2,ifnotzero", "810a04c8-2ff4-081d-766d-bfa2bd4ad916");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14428);
        internalCounters.push_back(14940);
        internalCounters.push_back(15452);
        internalCounters.push_back(15964);
        internalCounters.push_back(14368);
        internalCounters.push_back(14880);
        internalCounters.push_back(15392);
        internalCounters.push_back(15904);
        internalCounters.push_back(22620);
        internalCounters.push_back(23132);
        internalCounters.push_back(23644);
        internalCounters.push_back(24156);
        internalCounters.push_back(22560);
        internalCounters.push_back(23072);
        internalCounters.push_back(23584);
        internalCounters.push_back(24096);
        internalCounters.push_back(18524);
        internalCounters.push_back(19036);
        internalCounters.push_back(19548);
        internalCounters.push_back(20060);
        internalCounters.push_back(18464);
        internalCounters.push_back(18976);
        internalCounters.push_back(19488);
        internalCounters.push_back(20000);

        c.DefineDerivedCounter("VSVALUInstCount", "VertexShader", "Average number of vector ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "8ec604e4-63f5-e6b5-4558-c38f0b26d4b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14424);
        internalCounters.push_back(14936);
        internalCounters.push_back(15448);
        internalCounters.push_back(15960);
        internalCounters.push_back(14368);
        internalCounters.push_back(14880);
        internalCounters.push_back(15392);
        internalCounters.push_back(15904);
        internalCounters.push_back(22616);
        internalCounters.push_back(23128);
        internalCounters.push_back(23640);
        internalCounters.push_back(24152);
        internalCounters.push_back(22560);
        internalCounters.push_back(23072);
        internalCounters.push_back(23584);
        internalCounters.push_back(24096);
        internalCounters.push_back(18520);
        internalCounters.push_back(19032);
        internalCounters.push_back(19544);
        internalCounters.push_back(20056);
        internalCounters.push_back(18464);
        internalCounters.push_back(18976);
        internalCounters.push_back(19488);
        internalCounters.push_back(20000);

        c.DefineDerivedCounter("VSSALUInstCount", "VertexShader", "Average number of scalar ALU instructions executed in the VS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,12,13,14,15,sum4,/,12,13,14,15,sum4,ifnotzero,16,17,18,19,sum4,20,21,22,23,sum4,/,20,21,22,23,sum4,ifnotzero", "e3da0383-7322-7f65-8cf2-3ce641578e54");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14481);
        internalCounters.push_back(14993);
        internalCounters.push_back(15505);
        internalCounters.push_back(16017);
        internalCounters.push_back(22673);
        internalCounters.push_back(23185);
        internalCounters.push_back(23697);
        internalCounters.push_back(24209);
        internalCounters.push_back(18577);
        internalCounters.push_back(19089);
        internalCounters.push_back(19601);
        internalCounters.push_back(20113);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSVALUBusy", "VertexShader", "The percentage of GPUTime vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_SIMDS,/,12,/,(100),*", "8b3572f7-fda0-eddf-6c93-2ab145b8754b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14481);
        internalCounters.push_back(14993);
        internalCounters.push_back(15505);
        internalCounters.push_back(16017);
        internalCounters.push_back(22673);
        internalCounters.push_back(23185);
        internalCounters.push_back(23697);
        internalCounters.push_back(24209);
        internalCounters.push_back(18577);
        internalCounters.push_back(19089);
        internalCounters.push_back(19601);
        internalCounters.push_back(20113);

        c.DefineDerivedCounter("VSVALUBusyCycles", "VertexShader", "Number of GPU cycles where vector ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero", "0af1686e-6d77-2f6e-2862-7bb8e869a776");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14424);
        internalCounters.push_back(14936);
        internalCounters.push_back(15448);
        internalCounters.push_back(15960);
        internalCounters.push_back(22616);
        internalCounters.push_back(23128);
        internalCounters.push_back(23640);
        internalCounters.push_back(24152);
        internalCounters.push_back(18520);
        internalCounters.push_back(19032);
        internalCounters.push_back(19544);
        internalCounters.push_back(20056);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("VSSALUBusy", "VertexShader", "The percentage of GPUTime scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/,12,/,(100),*", "3bc8730c-e3bc-e2f0-7d24-36974064c25a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(14424);
        internalCounters.push_back(14936);
        internalCounters.push_back(15448);
        internalCounters.push_back(15960);
        internalCounters.push_back(22616);
        internalCounters.push_back(23128);
        internalCounters.push_back(23640);
        internalCounters.push_back(24152);
        internalCounters.push_back(18520);
        internalCounters.push_back(19032);
        internalCounters.push_back(19544);
        internalCounters.push_back(20056);

        c.DefineDerivedCounter("VSSALUBusyCycles", "VertexShader", "Number of GPU cycles where scalar ALU instructions are being processed by the VS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,4,5,6,7,sum4,ifnotzero,8,9,10,11,sum4,8,9,10,11,sum4,ifnotzero,NUM_CUS,/", "357ac7cd-2e1c-dcb0-77f6-37527237f35b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93495);

        c.DefineDerivedCounter("HSPatches", "HullShader", "The number of patches processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0", "d1bbd27d-d591-4509-df52-d329fb73a98f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24668);
        internalCounters.push_back(25180);
        internalCounters.push_back(25692);
        internalCounters.push_back(26204);
        internalCounters.push_back(24608);
        internalCounters.push_back(25120);
        internalCounters.push_back(25632);
        internalCounters.push_back(26144);

        c.DefineDerivedCounter("HSVALUInstCount", "HullShader", "Average number of vector ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "786673bf-d58f-9895-3a37-9d6efb5e5804");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24664);
        internalCounters.push_back(25176);
        internalCounters.push_back(25688);
        internalCounters.push_back(26200);
        internalCounters.push_back(24608);
        internalCounters.push_back(25120);
        internalCounters.push_back(25632);
        internalCounters.push_back(26144);

        c.DefineDerivedCounter("HSSALUInstCount", "HullShader", "Average number of scalar ALU instructions executed in the HS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "1af675c4-cb0b-c4c5-c131-2796750f683e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24721);
        internalCounters.push_back(25233);
        internalCounters.push_back(25745);
        internalCounters.push_back(26257);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSVALUBusy", "HullShader", "The percentage of GPUTime vector ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "7880d192-8015-0311-d43e-fb0b7a4df179");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24721);
        internalCounters.push_back(25233);
        internalCounters.push_back(25745);
        internalCounters.push_back(26257);

        c.DefineDerivedCounter("HSVALUBusyCycles", "HullShader", "Number of GPU cycles vector where ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "3afb94e4-e937-5730-0cc9-41d3113ba012");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24664);
        internalCounters.push_back(25176);
        internalCounters.push_back(25688);
        internalCounters.push_back(26200);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("HSSALUBusy", "HullShader", "The percentage of GPUTime scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "34748a4b-9148-0b06-b7b9-5700d6631bde");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(24664);
        internalCounters.push_back(25176);
        internalCounters.push_back(25688);
        internalCounters.push_back(26200);

        c.DefineDerivedCounter("HSSALUBusyCycles", "HullShader", "Number of GPU cycles where scalar ALU instructions are being processed by the HS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "9bceabf7-3f01-2fd9-7b1d-8fe46c729efc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93543);
        internalCounters.push_back(93479);
        internalCounters.push_back(93501);

        c.DefineDerivedCounter("DSVerticesIn", "DomainShader", "The number of vertices processed by the DS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,1,ifnotzero,2,ifnotzero", "b88d9d05-2418-e639-4e3d-3a5815855f8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(18524);
        internalCounters.push_back(19036);
        internalCounters.push_back(19548);
        internalCounters.push_back(20060);
        internalCounters.push_back(18464);
        internalCounters.push_back(18976);
        internalCounters.push_back(19488);
        internalCounters.push_back(20000);
        internalCounters.push_back(14428);
        internalCounters.push_back(14940);
        internalCounters.push_back(15452);
        internalCounters.push_back(15964);
        internalCounters.push_back(14368);
        internalCounters.push_back(14880);
        internalCounters.push_back(15392);
        internalCounters.push_back(15904);
        internalCounters.push_back(14372);
        internalCounters.push_back(14884);
        internalCounters.push_back(15396);
        internalCounters.push_back(15908);
        internalCounters.push_back(22564);
        internalCounters.push_back(23076);
        internalCounters.push_back(23588);
        internalCounters.push_back(24100);

        c.DefineDerivedCounter("DSVALUInstCount", "DomainShader", "Average number of vector ALU instructions executed in the DS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "03a3e949-82f9-be4d-7228-5eb5ad80915a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(18520);
        internalCounters.push_back(19032);
        internalCounters.push_back(19544);
        internalCounters.push_back(20056);
        internalCounters.push_back(18464);
        internalCounters.push_back(18976);
        internalCounters.push_back(19488);
        internalCounters.push_back(20000);
        internalCounters.push_back(14424);
        internalCounters.push_back(14936);
        internalCounters.push_back(15448);
        internalCounters.push_back(15960);
        internalCounters.push_back(14368);
        internalCounters.push_back(14880);
        internalCounters.push_back(15392);
        internalCounters.push_back(15904);
        internalCounters.push_back(14372);
        internalCounters.push_back(14884);
        internalCounters.push_back(15396);
        internalCounters.push_back(15908);
        internalCounters.push_back(22564);
        internalCounters.push_back(23076);
        internalCounters.push_back(23588);
        internalCounters.push_back(24100);

        c.DefineDerivedCounter("DSSALUInstCount", "DomainShader", "Average number of scalar ALU instructions executed in the DS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,sum4,12,13,14,15,sum4,/,16,17,18,19,sum4,ifnotzero,20,21,22,23,sum4,ifnotzero", "73daa728-483e-95d0-5b40-504719aadc1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(145);
        internalCounters.push_back(411);
        internalCounters.push_back(677);
        internalCounters.push_back(943);
        internalCounters.push_back(149);
        internalCounters.push_back(415);
        internalCounters.push_back(681);
        internalCounters.push_back(947);
        internalCounters.push_back(101);
        internalCounters.push_back(367);
        internalCounters.push_back(633);
        internalCounters.push_back(899);
        internalCounters.push_back(113);
        internalCounters.push_back(379);
        internalCounters.push_back(645);
        internalCounters.push_back(911);
        internalCounters.push_back(102);
        internalCounters.push_back(368);
        internalCounters.push_back(634);
        internalCounters.push_back(900);
        internalCounters.push_back(114);
        internalCounters.push_back(380);
        internalCounters.push_back(646);
        internalCounters.push_back(912);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PrimitiveAssemblyBusy", "Timing", "The percentage of GPUTime that primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max,24,/,(100),*,(100),min", "54ac5640-c4d7-95e2-20e0-6a9fdfc07333");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(145);
        internalCounters.push_back(411);
        internalCounters.push_back(677);
        internalCounters.push_back(943);
        internalCounters.push_back(149);
        internalCounters.push_back(415);
        internalCounters.push_back(681);
        internalCounters.push_back(947);
        internalCounters.push_back(101);
        internalCounters.push_back(367);
        internalCounters.push_back(633);
        internalCounters.push_back(899);
        internalCounters.push_back(113);
        internalCounters.push_back(379);
        internalCounters.push_back(645);
        internalCounters.push_back(911);
        internalCounters.push_back(102);
        internalCounters.push_back(368);
        internalCounters.push_back(634);
        internalCounters.push_back(900);
        internalCounters.push_back(114);
        internalCounters.push_back(380);
        internalCounters.push_back(646);
        internalCounters.push_back(912);

        c.DefineDerivedCounter("PrimitiveAssemblyBusyCycles", "Timing", "Number of GPU cycles the primitive assembly (clipping and culling) is busy. High values may be caused by having many small primitives; mid to low values may indicate pixel shader or output buffer bottleneck.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,4,-,8,12,+,16,+,20,(2),*,+,SU_CLOCKS_PRIM,*,-,1,5,-,9,13,+,17,+,21,(2),*,+,SU_CLOCKS_PRIM,*,-,max,2,6,-,10,14,+,18,+,22,(2),*,+,SU_CLOCKS_PRIM,*,-,max,3,7,-,11,15,+,19,+,23,(2),*,+,SU_CLOCKS_PRIM,*,-,max,(0),max", "99777f2d-9626-c78a-a97c-c4505eba1e5f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(48);
        internalCounters.push_back(314);
        internalCounters.push_back(580);
        internalCounters.push_back(846);

        c.DefineDerivedCounter("PrimitivesIn", "PrimitiveAssembly", "The number of primitives received by the hardware. This includes primitives generated by tessellation.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "a515b80d-75c3-c7d2-0d2f-d7766b4759a6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(54);
        internalCounters.push_back(320);
        internalCounters.push_back(586);
        internalCounters.push_back(852);
        internalCounters.push_back(94);
        internalCounters.push_back(360);
        internalCounters.push_back(626);
        internalCounters.push_back(892);
        internalCounters.push_back(95);
        internalCounters.push_back(361);
        internalCounters.push_back(627);
        internalCounters.push_back(893);
        internalCounters.push_back(96);
        internalCounters.push_back(362);
        internalCounters.push_back(628);
        internalCounters.push_back(894);
        internalCounters.push_back(97);
        internalCounters.push_back(363);
        internalCounters.push_back(629);
        internalCounters.push_back(895);

        c.DefineDerivedCounter("CulledPrims", "PrimitiveAssembly", "The number of culled primitives. Typical reasons include scissor, the primitive having zero area, and back or front face culling.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,+,2,+,3,+,4,+,5,+,6,+,7,+,8,+,9,+,10,+,11,+,12,+,13,+,14,+,15,+,16,+,17,+,18,+,19,+", "589bdf55-9192-280a-41c3-584bc94f2562");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(61);
        internalCounters.push_back(327);
        internalCounters.push_back(593);
        internalCounters.push_back(859);

        c.DefineDerivedCounter("ClippedPrims", "PrimitiveAssembly", "The number of primitives that required one or more clipping operations due to intersecting the view volume or user clip planes.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "5ef6f9d5-155e-5baa-163f-8359d9ea9bbf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(149);
        internalCounters.push_back(415);
        internalCounters.push_back(681);
        internalCounters.push_back(947);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PAStalledOnRasterizer", "PrimitiveAssembly", "Percentage of GPUTime that primitive assembly waits for rasterization to be ready to accept data. This roughly indicates for what percentage of time the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,max,2,max,3,max,4,/,(100),*", "6f9f416b-53c1-0457-f88c-7b6ba8973974");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(149);
        internalCounters.push_back(415);
        internalCounters.push_back(681);
        internalCounters.push_back(947);

        c.DefineDerivedCounter("PAStalledOnRasterizerCycles", "PrimitiveAssembly", "Number of GPU cycles the primitive assembly waits for rasterization to be ready to accept data. Indicates the number of GPU cycles the pipeline is bottlenecked by pixel operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,max,2,max,3,max", "7a8c492a-c566-9328-6805-760dbff5c0f2");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28712);
        internalCounters.push_back(28937);
        internalCounters.push_back(29162);
        internalCounters.push_back(29387);
        internalCounters.push_back(29612);
        internalCounters.push_back(29837);
        internalCounters.push_back(30062);
        internalCounters.push_back(30287);
        internalCounters.push_back(28717);
        internalCounters.push_back(28942);
        internalCounters.push_back(29167);
        internalCounters.push_back(29392);
        internalCounters.push_back(29617);
        internalCounters.push_back(29842);
        internalCounters.push_back(30067);
        internalCounters.push_back(30292);
        internalCounters.push_back(28722);
        internalCounters.push_back(28947);
        internalCounters.push_back(29172);
        internalCounters.push_back(29397);
        internalCounters.push_back(29622);
        internalCounters.push_back(29847);
        internalCounters.push_back(30072);
        internalCounters.push_back(30297);
        internalCounters.push_back(28727);
        internalCounters.push_back(28952);
        internalCounters.push_back(29177);
        internalCounters.push_back(29402);
        internalCounters.push_back(29627);
        internalCounters.push_back(29852);
        internalCounters.push_back(30077);
        internalCounters.push_back(30302);

        c.DefineDerivedCounter("PSPixelsOut", "PixelShader", "Pixels exported from shader to color buffers. Does not include killed or alpha tested pixels; if there are multiple render targets, each render target receives one export, so this will be 2 for 1 pixel written to two RTs.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum32", "24cba16c-baa6-6ecd-95ad-92ecb1338da1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28714);
        internalCounters.push_back(28939);
        internalCounters.push_back(29164);
        internalCounters.push_back(29389);
        internalCounters.push_back(29614);
        internalCounters.push_back(29839);
        internalCounters.push_back(30064);
        internalCounters.push_back(30289);
        internalCounters.push_back(28719);
        internalCounters.push_back(28944);
        internalCounters.push_back(29169);
        internalCounters.push_back(29394);
        internalCounters.push_back(29619);
        internalCounters.push_back(29844);
        internalCounters.push_back(30069);
        internalCounters.push_back(30294);
        internalCounters.push_back(28724);
        internalCounters.push_back(28949);
        internalCounters.push_back(29174);
        internalCounters.push_back(29399);
        internalCounters.push_back(29624);
        internalCounters.push_back(29849);
        internalCounters.push_back(30074);
        internalCounters.push_back(30299);
        internalCounters.push_back(28729);
        internalCounters.push_back(28954);
        internalCounters.push_back(29179);
        internalCounters.push_back(29404);
        internalCounters.push_back(29629);
        internalCounters.push_back(29854);
        internalCounters.push_back(30079);
        internalCounters.push_back(30304);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSExportStalls", "PixelShader", "Pixel shader output stalls. Percentage of GPUBusy. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32,32,/,(100),*", "9b4f466c-ff97-22bb-557d-84d3c4c51895");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(28714);
        internalCounters.push_back(28939);
        internalCounters.push_back(29164);
        internalCounters.push_back(29389);
        internalCounters.push_back(29614);
        internalCounters.push_back(29839);
        internalCounters.push_back(30064);
        internalCounters.push_back(30289);
        internalCounters.push_back(28719);
        internalCounters.push_back(28944);
        internalCounters.push_back(29169);
        internalCounters.push_back(29394);
        internalCounters.push_back(29619);
        internalCounters.push_back(29844);
        internalCounters.push_back(30069);
        internalCounters.push_back(30294);
        internalCounters.push_back(28724);
        internalCounters.push_back(28949);
        internalCounters.push_back(29174);
        internalCounters.push_back(29399);
        internalCounters.push_back(29624);
        internalCounters.push_back(29849);
        internalCounters.push_back(30074);
        internalCounters.push_back(30299);
        internalCounters.push_back(28729);
        internalCounters.push_back(28954);
        internalCounters.push_back(29179);
        internalCounters.push_back(29404);
        internalCounters.push_back(29629);
        internalCounters.push_back(29854);
        internalCounters.push_back(30079);
        internalCounters.push_back(30304);

        c.DefineDerivedCounter("PSExportStallsCycles", "PixelShader", "Number of GPU cycles the pixel shader output stalls. Should be zero for PS or further upstream limited cases; if not zero, indicates a bottleneck in late Z testing or in the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,max32", "47c72aad-64e6-0864-d533-d8e0bc27c156");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20572);
        internalCounters.push_back(21084);
        internalCounters.push_back(21596);
        internalCounters.push_back(22108);
        internalCounters.push_back(20512);
        internalCounters.push_back(21024);
        internalCounters.push_back(21536);
        internalCounters.push_back(22048);

        c.DefineDerivedCounter("PSVALUInstCount", "PixelShader", "Average number of vector ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "eb74389e-435c-4137-ecf1-39eb5bc1cbfe");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20568);
        internalCounters.push_back(21080);
        internalCounters.push_back(21592);
        internalCounters.push_back(22104);
        internalCounters.push_back(20512);
        internalCounters.push_back(21024);
        internalCounters.push_back(21536);
        internalCounters.push_back(22048);

        c.DefineDerivedCounter("PSSALUInstCount", "PixelShader", "Average number of scalar ALU instructions executed in the PS. Affected by flow control.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4,4,5,6,7,sum4,/", "e6a06580-8a82-96d6-976c-acc121fc5516");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20625);
        internalCounters.push_back(21137);
        internalCounters.push_back(21649);
        internalCounters.push_back(22161);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSVALUBusy", "PixelShader", "The percentage of GPUTime vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*", "6ce6fef7-8e33-10b4-f351-af755e177e85");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20625);
        internalCounters.push_back(21137);
        internalCounters.push_back(21649);
        internalCounters.push_back(22161);

        c.DefineDerivedCounter("PSVALUBusyCycles", "PixelShader", "Number of GPU cycles where vector ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_SIMDS,/", "1e276f86-cd2a-72e7-fc9d-004f666f2981");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20568);
        internalCounters.push_back(21080);
        internalCounters.push_back(21592);
        internalCounters.push_back(22104);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("PSSALUBusy", "PixelShader", "The percentage of GPUTime scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*", "2ff9f34f-e94b-af4d-18c2-5fbbf6d1727a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(20568);
        internalCounters.push_back(21080);
        internalCounters.push_back(21592);
        internalCounters.push_back(22104);

        c.DefineDerivedCounter("PSSALUBusyCycles", "PixelShader", "Number of GPU cycles where scalar ALU instructions are being processed by the PS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,sum4,NUM_CUS,/", "29808906-f128-b078-fc79-820a4b3b3b8d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSThreadGroups", "ComputeShader", "Total number of thread groups.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "8ce3fc80-56b2-97f9-8e70-2e8c747cea68");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11049);
        internalCounters.push_back(11378);
        internalCounters.push_back(11707);
        internalCounters.push_back(12036);
        internalCounters.push_back(11055);
        internalCounters.push_back(11384);
        internalCounters.push_back(11713);
        internalCounters.push_back(12042);

        c.DefineDerivedCounter("CSWavefronts", "ComputeShader", "The total number of wavefronts used for the CS.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,sum8", "42379c6e-369b-c237-8b25-cdb9cdc65c4d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);
        internalCounters.push_back(26660);
        internalCounters.push_back(27172);
        internalCounters.push_back(27684);
        internalCounters.push_back(28196);

        c.DefineDerivedCounter("CSThreads", "ComputeShader", "The number of CS threads processed by the hardware.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,4,5,6,7,sum8,8,9,10,11,sum4,ifnotzero", "7a648013-6eac-2665-ac36-13c6f4ac9c26");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26716);
        internalCounters.push_back(27228);
        internalCounters.push_back(27740);
        internalCounters.push_back(28252);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSVALUInsts", "ComputeShader", "The average number of vector ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,9,10,11,12,13,14,15,sum8,ifnotzero", "376cb1cc-5a40-9d1d-404c-f1736c0c5084");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26734);
        internalCounters.push_back(27246);
        internalCounters.push_back(27758);
        internalCounters.push_back(28270);
        internalCounters.push_back(26769);
        internalCounters.push_back(27281);
        internalCounters.push_back(27793);
        internalCounters.push_back(28305);
        internalCounters.push_back(26657);
        internalCounters.push_back(27169);
        internalCounters.push_back(27681);
        internalCounters.push_back(28193);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSVALUUtilization", "ComputeShader", "The percentage of active vector ALU threads in a wave. A lower number can mean either more thread divergence in a wave or that the work-group size is not a multiple of the wave size. Value range: 0% (bad), 100% (ideal - no thread divergence).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,(64),(32),8,9,10,11,sum4,ifnotzero,*,/,(100),*,4,5,6,7,sum4,ifnotzero,(100),min,12,13,14,15,16,17,18,19,sum8,ifnotzero", "ae943d2a-76e1-bb68-e1e2-0e06c9031611");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26712);
        internalCounters.push_back(27224);
        internalCounters.push_back(27736);
        internalCounters.push_back(28248);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSSALUInsts", "ComputeShader", "The average number of scalar ALU instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "eb211144-8136-ff86-e8bf-4d0493a904cb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26721);
        internalCounters.push_back(27233);
        internalCounters.push_back(27745);
        internalCounters.push_back(28257);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSVFetchInsts", "ComputeShader", "The average number of vector fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "3e2829c0-6215-783b-c271-6d57ff2c520e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26713);
        internalCounters.push_back(27225);
        internalCounters.push_back(27737);
        internalCounters.push_back(28249);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSSFetchInsts", "ComputeShader", "The average number of scalar fetch instructions from the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "da09171c-6a0a-584f-fddc-dc5062d63a3e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26722);
        internalCounters.push_back(27234);
        internalCounters.push_back(27746);
        internalCounters.push_back(28258);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSVWriteInsts", "ComputeShader", "The average number of vector write instructions to the video memory executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "43438c22-e910-b377-b767-b32902e0df0d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26769);
        internalCounters.push_back(27281);
        internalCounters.push_back(27793);
        internalCounters.push_back(28305);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSVALUBusy", "ComputeShader", "The percentage of GPUTime vector ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "f1e64815-f6a8-c277-d4f9-d054b443e205");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26769);
        internalCounters.push_back(27281);
        internalCounters.push_back(27793);
        internalCounters.push_back(28305);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSVALUBusyCycles", "ComputeShader", "Number of GPU cycles where vector ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "2d0d5852-2658-eb73-68d2-f23f7118c9c3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26712);
        internalCounters.push_back(27224);
        internalCounters.push_back(27736);
        internalCounters.push_back(28248);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSSALUBusy", "ComputeShader", "The percentage of GPUTime scalar ALU instructions are processed. Value range: 0% (bad) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "3fc35f4e-9882-94e3-6f5f-4e81cd97082a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26712);
        internalCounters.push_back(27224);
        internalCounters.push_back(27736);
        internalCounters.push_back(28248);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSSALUBusyCycles", "ComputeShader", "Number of GPU cycles where scalar ALU instructions are processed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_CUS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "de58f8fc-8ed4-a799-648d-62ded7b1c4c4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30515);
        internalCounters.push_back(30741);
        internalCounters.push_back(30967);
        internalCounters.push_back(31193);
        internalCounters.push_back(31419);
        internalCounters.push_back(31645);
        internalCounters.push_back(31871);
        internalCounters.push_back(32097);
        internalCounters.push_back(32323);
        internalCounters.push_back(32549);
        internalCounters.push_back(32775);
        internalCounters.push_back(33001);
        internalCounters.push_back(33227);
        internalCounters.push_back(33453);
        internalCounters.push_back(33679);
        internalCounters.push_back(33905);
        internalCounters.push_back(34131);
        internalCounters.push_back(34357);
        internalCounters.push_back(34583);
        internalCounters.push_back(34809);
        internalCounters.push_back(35035);
        internalCounters.push_back(35261);
        internalCounters.push_back(35487);
        internalCounters.push_back(35713);
        internalCounters.push_back(35939);
        internalCounters.push_back(36165);
        internalCounters.push_back(36391);
        internalCounters.push_back(36617);
        internalCounters.push_back(36843);
        internalCounters.push_back(37069);
        internalCounters.push_back(37295);
        internalCounters.push_back(37521);
        internalCounters.push_back(37747);
        internalCounters.push_back(37973);
        internalCounters.push_back(38199);
        internalCounters.push_back(38425);
        internalCounters.push_back(38651);
        internalCounters.push_back(38877);
        internalCounters.push_back(39103);
        internalCounters.push_back(39329);
        internalCounters.push_back(39555);
        internalCounters.push_back(39781);
        internalCounters.push_back(40007);
        internalCounters.push_back(40233);
        internalCounters.push_back(40459);
        internalCounters.push_back(40685);
        internalCounters.push_back(40911);
        internalCounters.push_back(41137);
        internalCounters.push_back(41363);
        internalCounters.push_back(41589);
        internalCounters.push_back(41815);
        internalCounters.push_back(42041);
        internalCounters.push_back(42267);
        internalCounters.push_back(42493);
        internalCounters.push_back(42719);
        internalCounters.push_back(42945);
        internalCounters.push_back(43171);
        internalCounters.push_back(43397);
        internalCounters.push_back(43623);
        internalCounters.push_back(43849);
        internalCounters.push_back(44075);
        internalCounters.push_back(44301);
        internalCounters.push_back(44527);
        internalCounters.push_back(44753);
        internalCounters.push_back(44979);
        internalCounters.push_back(45205);
        internalCounters.push_back(45431);
        internalCounters.push_back(45657);
        internalCounters.push_back(45883);
        internalCounters.push_back(46109);
        internalCounters.push_back(46335);
        internalCounters.push_back(46561);
        internalCounters.push_back(46787);
        internalCounters.push_back(47013);
        internalCounters.push_back(47239);
        internalCounters.push_back(47465);
        internalCounters.push_back(47691);
        internalCounters.push_back(47917);
        internalCounters.push_back(48143);
        internalCounters.push_back(48369);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSMemUnitBusy", "ComputeShader", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "42ab96e1-0a24-96c8-c4ff-098fa267d78e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30515);
        internalCounters.push_back(30741);
        internalCounters.push_back(30967);
        internalCounters.push_back(31193);
        internalCounters.push_back(31419);
        internalCounters.push_back(31645);
        internalCounters.push_back(31871);
        internalCounters.push_back(32097);
        internalCounters.push_back(32323);
        internalCounters.push_back(32549);
        internalCounters.push_back(32775);
        internalCounters.push_back(33001);
        internalCounters.push_back(33227);
        internalCounters.push_back(33453);
        internalCounters.push_back(33679);
        internalCounters.push_back(33905);
        internalCounters.push_back(34131);
        internalCounters.push_back(34357);
        internalCounters.push_back(34583);
        internalCounters.push_back(34809);
        internalCounters.push_back(35035);
        internalCounters.push_back(35261);
        internalCounters.push_back(35487);
        internalCounters.push_back(35713);
        internalCounters.push_back(35939);
        internalCounters.push_back(36165);
        internalCounters.push_back(36391);
        internalCounters.push_back(36617);
        internalCounters.push_back(36843);
        internalCounters.push_back(37069);
        internalCounters.push_back(37295);
        internalCounters.push_back(37521);
        internalCounters.push_back(37747);
        internalCounters.push_back(37973);
        internalCounters.push_back(38199);
        internalCounters.push_back(38425);
        internalCounters.push_back(38651);
        internalCounters.push_back(38877);
        internalCounters.push_back(39103);
        internalCounters.push_back(39329);
        internalCounters.push_back(39555);
        internalCounters.push_back(39781);
        internalCounters.push_back(40007);
        internalCounters.push_back(40233);
        internalCounters.push_back(40459);
        internalCounters.push_back(40685);
        internalCounters.push_back(40911);
        internalCounters.push_back(41137);
        internalCounters.push_back(41363);
        internalCounters.push_back(41589);
        internalCounters.push_back(41815);
        internalCounters.push_back(42041);
        internalCounters.push_back(42267);
        internalCounters.push_back(42493);
        internalCounters.push_back(42719);
        internalCounters.push_back(42945);
        internalCounters.push_back(43171);
        internalCounters.push_back(43397);
        internalCounters.push_back(43623);
        internalCounters.push_back(43849);
        internalCounters.push_back(44075);
        internalCounters.push_back(44301);
        internalCounters.push_back(44527);
        internalCounters.push_back(44753);
        internalCounters.push_back(44979);
        internalCounters.push_back(45205);
        internalCounters.push_back(45431);
        internalCounters.push_back(45657);
        internalCounters.push_back(45883);
        internalCounters.push_back(46109);
        internalCounters.push_back(46335);
        internalCounters.push_back(46561);
        internalCounters.push_back(46787);
        internalCounters.push_back(47013);
        internalCounters.push_back(47239);
        internalCounters.push_back(47465);
        internalCounters.push_back(47691);
        internalCounters.push_back(47917);
        internalCounters.push_back(48143);
        internalCounters.push_back(48369);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSMemUnitBusyCycles", "ComputeShader", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "39d5687f-c727-7c0c-af82-bb711d3897ed");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53496);
        internalCounters.push_back(53573);
        internalCounters.push_back(53650);
        internalCounters.push_back(53727);
        internalCounters.push_back(53804);
        internalCounters.push_back(53881);
        internalCounters.push_back(53958);
        internalCounters.push_back(54035);
        internalCounters.push_back(54112);
        internalCounters.push_back(54189);
        internalCounters.push_back(54266);
        internalCounters.push_back(54343);
        internalCounters.push_back(54420);
        internalCounters.push_back(54497);
        internalCounters.push_back(54574);
        internalCounters.push_back(54651);
        internalCounters.push_back(54728);
        internalCounters.push_back(54805);
        internalCounters.push_back(54882);
        internalCounters.push_back(54959);
        internalCounters.push_back(55036);
        internalCounters.push_back(55113);
        internalCounters.push_back(55190);
        internalCounters.push_back(55267);
        internalCounters.push_back(55344);
        internalCounters.push_back(55421);
        internalCounters.push_back(55498);
        internalCounters.push_back(55575);
        internalCounters.push_back(55652);
        internalCounters.push_back(55729);
        internalCounters.push_back(55806);
        internalCounters.push_back(55883);
        internalCounters.push_back(55960);
        internalCounters.push_back(56037);
        internalCounters.push_back(56114);
        internalCounters.push_back(56191);
        internalCounters.push_back(56268);
        internalCounters.push_back(56345);
        internalCounters.push_back(56422);
        internalCounters.push_back(56499);
        internalCounters.push_back(56576);
        internalCounters.push_back(56653);
        internalCounters.push_back(56730);
        internalCounters.push_back(56807);
        internalCounters.push_back(56884);
        internalCounters.push_back(56961);
        internalCounters.push_back(57038);
        internalCounters.push_back(57115);
        internalCounters.push_back(57192);
        internalCounters.push_back(57269);
        internalCounters.push_back(57346);
        internalCounters.push_back(57423);
        internalCounters.push_back(57500);
        internalCounters.push_back(57577);
        internalCounters.push_back(57654);
        internalCounters.push_back(57731);
        internalCounters.push_back(57808);
        internalCounters.push_back(57885);
        internalCounters.push_back(57962);
        internalCounters.push_back(58039);
        internalCounters.push_back(58116);
        internalCounters.push_back(58193);
        internalCounters.push_back(58270);
        internalCounters.push_back(58347);
        internalCounters.push_back(58424);
        internalCounters.push_back(58501);
        internalCounters.push_back(58578);
        internalCounters.push_back(58655);
        internalCounters.push_back(58732);
        internalCounters.push_back(58809);
        internalCounters.push_back(58886);
        internalCounters.push_back(58963);
        internalCounters.push_back(59040);
        internalCounters.push_back(59117);
        internalCounters.push_back(59194);
        internalCounters.push_back(59271);
        internalCounters.push_back(59348);
        internalCounters.push_back(59425);
        internalCounters.push_back(59502);
        internalCounters.push_back(59579);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSMemUnitStalled", "ComputeShader", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*,81,82,83,84,85,86,87,88,sum8,ifnotzero", "f18e8679-1511-d533-d9ee-4365197f7d0c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53496);
        internalCounters.push_back(53573);
        internalCounters.push_back(53650);
        internalCounters.push_back(53727);
        internalCounters.push_back(53804);
        internalCounters.push_back(53881);
        internalCounters.push_back(53958);
        internalCounters.push_back(54035);
        internalCounters.push_back(54112);
        internalCounters.push_back(54189);
        internalCounters.push_back(54266);
        internalCounters.push_back(54343);
        internalCounters.push_back(54420);
        internalCounters.push_back(54497);
        internalCounters.push_back(54574);
        internalCounters.push_back(54651);
        internalCounters.push_back(54728);
        internalCounters.push_back(54805);
        internalCounters.push_back(54882);
        internalCounters.push_back(54959);
        internalCounters.push_back(55036);
        internalCounters.push_back(55113);
        internalCounters.push_back(55190);
        internalCounters.push_back(55267);
        internalCounters.push_back(55344);
        internalCounters.push_back(55421);
        internalCounters.push_back(55498);
        internalCounters.push_back(55575);
        internalCounters.push_back(55652);
        internalCounters.push_back(55729);
        internalCounters.push_back(55806);
        internalCounters.push_back(55883);
        internalCounters.push_back(55960);
        internalCounters.push_back(56037);
        internalCounters.push_back(56114);
        internalCounters.push_back(56191);
        internalCounters.push_back(56268);
        internalCounters.push_back(56345);
        internalCounters.push_back(56422);
        internalCounters.push_back(56499);
        internalCounters.push_back(56576);
        internalCounters.push_back(56653);
        internalCounters.push_back(56730);
        internalCounters.push_back(56807);
        internalCounters.push_back(56884);
        internalCounters.push_back(56961);
        internalCounters.push_back(57038);
        internalCounters.push_back(57115);
        internalCounters.push_back(57192);
        internalCounters.push_back(57269);
        internalCounters.push_back(57346);
        internalCounters.push_back(57423);
        internalCounters.push_back(57500);
        internalCounters.push_back(57577);
        internalCounters.push_back(57654);
        internalCounters.push_back(57731);
        internalCounters.push_back(57808);
        internalCounters.push_back(57885);
        internalCounters.push_back(57962);
        internalCounters.push_back(58039);
        internalCounters.push_back(58116);
        internalCounters.push_back(58193);
        internalCounters.push_back(58270);
        internalCounters.push_back(58347);
        internalCounters.push_back(58424);
        internalCounters.push_back(58501);
        internalCounters.push_back(58578);
        internalCounters.push_back(58655);
        internalCounters.push_back(58732);
        internalCounters.push_back(58809);
        internalCounters.push_back(58886);
        internalCounters.push_back(58963);
        internalCounters.push_back(59040);
        internalCounters.push_back(59117);
        internalCounters.push_back(59194);
        internalCounters.push_back(59271);
        internalCounters.push_back(59348);
        internalCounters.push_back(59425);
        internalCounters.push_back(59502);
        internalCounters.push_back(59579);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSMemUnitStalledCycles", "ComputeShader", "Number of GPU cycles the memory unit is stalled. Try reducing the number or size of fetches and writes if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,81,82,83,84,85,86,87,sum8,ifnotzero", "51991c84-ed2b-bf31-c4ab-8f8e9eb8f29f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96554);
        internalCounters.push_back(96789);
        internalCounters.push_back(97024);
        internalCounters.push_back(97259);
        internalCounters.push_back(97494);
        internalCounters.push_back(97729);
        internalCounters.push_back(97964);
        internalCounters.push_back(98199);
        internalCounters.push_back(98434);
        internalCounters.push_back(98669);
        internalCounters.push_back(98904);
        internalCounters.push_back(99139);
        internalCounters.push_back(99374);
        internalCounters.push_back(99609);
        internalCounters.push_back(99844);
        internalCounters.push_back(100079);
        internalCounters.push_back(100314);
        internalCounters.push_back(100549);
        internalCounters.push_back(100784);
        internalCounters.push_back(101019);
        internalCounters.push_back(101254);
        internalCounters.push_back(101489);
        internalCounters.push_back(101724);
        internalCounters.push_back(101959);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSWriteUnitStalled", "ComputeShader", "The percentage of GPUTime the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*,25,26,27,28,29,30,31,32,sum8,ifnotzero", "55118f7a-8f92-726f-78c6-407f689a2eb4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96554);
        internalCounters.push_back(96789);
        internalCounters.push_back(97024);
        internalCounters.push_back(97259);
        internalCounters.push_back(97494);
        internalCounters.push_back(97729);
        internalCounters.push_back(97964);
        internalCounters.push_back(98199);
        internalCounters.push_back(98434);
        internalCounters.push_back(98669);
        internalCounters.push_back(98904);
        internalCounters.push_back(99139);
        internalCounters.push_back(99374);
        internalCounters.push_back(99609);
        internalCounters.push_back(99844);
        internalCounters.push_back(100079);
        internalCounters.push_back(100314);
        internalCounters.push_back(100549);
        internalCounters.push_back(100784);
        internalCounters.push_back(101019);
        internalCounters.push_back(101254);
        internalCounters.push_back(101489);
        internalCounters.push_back(101724);
        internalCounters.push_back(101959);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSWriteUnitStalledCycles", "ComputeShader", "Number of GPU cycles the write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,25,26,27,28,29,30,31,sum8,ifnotzero", "be164c60-5e48-acac-9622-29616d09aa9a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26707);
        internalCounters.push_back(27219);
        internalCounters.push_back(27731);
        internalCounters.push_back(28243);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSGDSInsts", "ComputeShader", "The average number of GDS read or GDS write instructions executed per work item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "2a867f3e-4a37-ad16-55d1-f03d74707819");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26711);
        internalCounters.push_back(27223);
        internalCounters.push_back(27735);
        internalCounters.push_back(28247);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSLDSInsts", "ComputeShader", "The average number of LDS read/write instructions executed per work-item (affected by flow control).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,4,5,6,7,sum4,ifnotzero,8,9,10,11,12,13,14,15,sum8,ifnotzero", "61b0b351-7e06-ef8e-a8e0-7a9e3200a836");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26683);
        internalCounters.push_back(27195);
        internalCounters.push_back(27707);
        internalCounters.push_back(28219);
        internalCounters.push_back(26656);
        internalCounters.push_back(27168);
        internalCounters.push_back(27680);
        internalCounters.push_back(28192);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSALUStalledByLDS", "ComputeShader", "The percentage of GPUTime ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(0),0,1,2,3,sum4,4,5,6,7,sum4,/,8,/,NUM_SHADER_ENGINES,/,(100),*,4,5,6,7,sum4,ifnotzero,9,10,11,12,13,14,15,16,sum8,ifnotzero", "6dc4f1c2-bad0-c9ff-156e-883b319a752a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26683);
        internalCounters.push_back(27195);
        internalCounters.push_back(27707);
        internalCounters.push_back(28219);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSALUStalledByLDSCycles", "ComputeShader", "Number of GPU cycles the ALU units are stalled by the LDS input queue being full or the output queue being not ready. If there are LDS bank conflicts, reduce them. Otherwise, try reducing the number of LDS accesses if possible.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SHADER_ENGINES,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "8f3d5f25-2159-0374-fafe-e26a7799b6c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26937);
        internalCounters.push_back(27449);
        internalCounters.push_back(27961);
        internalCounters.push_back(28473);
        internalCounters.push_back(24);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSLDSBankConflict", "ComputeShader", "The percentage of GPUTime LDS is stalled by bank conflicts. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),0,1,2,3,sum4,4,/,NUM_SIMDS,/,(100),*,5,6,7,8,9,10,11,12,sum8,ifnotzero", "1065ee10-2e41-ea41-1eb3-b61b491752f4");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(26937);
        internalCounters.push_back(27449);
        internalCounters.push_back(27961);
        internalCounters.push_back(28473);
        internalCounters.push_back(11046);
        internalCounters.push_back(11375);
        internalCounters.push_back(11704);
        internalCounters.push_back(12033);
        internalCounters.push_back(11052);
        internalCounters.push_back(11381);
        internalCounters.push_back(11710);
        internalCounters.push_back(12039);

        c.DefineDerivedCounter("CSLDSBankConflictCycles", "ComputeShader", "Number of GPU cycles the LDS is stalled by bank conflicts. Value range: 0 (optimal) to GPUBusyCycles (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "(0),0,1,2,3,sum4,NUM_SIMDS,/,4,5,6,7,8,9,10,11,sum8,ifnotzero", "1fd1adf3-c51e-94fd-083e-c482a0a0809e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30515);
        internalCounters.push_back(30741);
        internalCounters.push_back(30967);
        internalCounters.push_back(31193);
        internalCounters.push_back(31419);
        internalCounters.push_back(31645);
        internalCounters.push_back(31871);
        internalCounters.push_back(32097);
        internalCounters.push_back(32323);
        internalCounters.push_back(32549);
        internalCounters.push_back(32775);
        internalCounters.push_back(33001);
        internalCounters.push_back(33227);
        internalCounters.push_back(33453);
        internalCounters.push_back(33679);
        internalCounters.push_back(33905);
        internalCounters.push_back(34131);
        internalCounters.push_back(34357);
        internalCounters.push_back(34583);
        internalCounters.push_back(34809);
        internalCounters.push_back(35035);
        internalCounters.push_back(35261);
        internalCounters.push_back(35487);
        internalCounters.push_back(35713);
        internalCounters.push_back(35939);
        internalCounters.push_back(36165);
        internalCounters.push_back(36391);
        internalCounters.push_back(36617);
        internalCounters.push_back(36843);
        internalCounters.push_back(37069);
        internalCounters.push_back(37295);
        internalCounters.push_back(37521);
        internalCounters.push_back(37747);
        internalCounters.push_back(37973);
        internalCounters.push_back(38199);
        internalCounters.push_back(38425);
        internalCounters.push_back(38651);
        internalCounters.push_back(38877);
        internalCounters.push_back(39103);
        internalCounters.push_back(39329);
        internalCounters.push_back(39555);
        internalCounters.push_back(39781);
        internalCounters.push_back(40007);
        internalCounters.push_back(40233);
        internalCounters.push_back(40459);
        internalCounters.push_back(40685);
        internalCounters.push_back(40911);
        internalCounters.push_back(41137);
        internalCounters.push_back(41363);
        internalCounters.push_back(41589);
        internalCounters.push_back(41815);
        internalCounters.push_back(42041);
        internalCounters.push_back(42267);
        internalCounters.push_back(42493);
        internalCounters.push_back(42719);
        internalCounters.push_back(42945);
        internalCounters.push_back(43171);
        internalCounters.push_back(43397);
        internalCounters.push_back(43623);
        internalCounters.push_back(43849);
        internalCounters.push_back(44075);
        internalCounters.push_back(44301);
        internalCounters.push_back(44527);
        internalCounters.push_back(44753);
        internalCounters.push_back(44979);
        internalCounters.push_back(45205);
        internalCounters.push_back(45431);
        internalCounters.push_back(45657);
        internalCounters.push_back(45883);
        internalCounters.push_back(46109);
        internalCounters.push_back(46335);
        internalCounters.push_back(46561);
        internalCounters.push_back(46787);
        internalCounters.push_back(47013);
        internalCounters.push_back(47239);
        internalCounters.push_back(47465);
        internalCounters.push_back(47691);
        internalCounters.push_back(47917);
        internalCounters.push_back(48143);
        internalCounters.push_back(48369);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("TexUnitBusy", "Timing", "The percentage of GPUTime the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "36afb8d9-42fc-aafe-66c5-449542153b2c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30515);
        internalCounters.push_back(30741);
        internalCounters.push_back(30967);
        internalCounters.push_back(31193);
        internalCounters.push_back(31419);
        internalCounters.push_back(31645);
        internalCounters.push_back(31871);
        internalCounters.push_back(32097);
        internalCounters.push_back(32323);
        internalCounters.push_back(32549);
        internalCounters.push_back(32775);
        internalCounters.push_back(33001);
        internalCounters.push_back(33227);
        internalCounters.push_back(33453);
        internalCounters.push_back(33679);
        internalCounters.push_back(33905);
        internalCounters.push_back(34131);
        internalCounters.push_back(34357);
        internalCounters.push_back(34583);
        internalCounters.push_back(34809);
        internalCounters.push_back(35035);
        internalCounters.push_back(35261);
        internalCounters.push_back(35487);
        internalCounters.push_back(35713);
        internalCounters.push_back(35939);
        internalCounters.push_back(36165);
        internalCounters.push_back(36391);
        internalCounters.push_back(36617);
        internalCounters.push_back(36843);
        internalCounters.push_back(37069);
        internalCounters.push_back(37295);
        internalCounters.push_back(37521);
        internalCounters.push_back(37747);
        internalCounters.push_back(37973);
        internalCounters.push_back(38199);
        internalCounters.push_back(38425);
        internalCounters.push_back(38651);
        internalCounters.push_back(38877);
        internalCounters.push_back(39103);
        internalCounters.push_back(39329);
        internalCounters.push_back(39555);
        internalCounters.push_back(39781);
        internalCounters.push_back(40007);
        internalCounters.push_back(40233);
        internalCounters.push_back(40459);
        internalCounters.push_back(40685);
        internalCounters.push_back(40911);
        internalCounters.push_back(41137);
        internalCounters.push_back(41363);
        internalCounters.push_back(41589);
        internalCounters.push_back(41815);
        internalCounters.push_back(42041);
        internalCounters.push_back(42267);
        internalCounters.push_back(42493);
        internalCounters.push_back(42719);
        internalCounters.push_back(42945);
        internalCounters.push_back(43171);
        internalCounters.push_back(43397);
        internalCounters.push_back(43623);
        internalCounters.push_back(43849);
        internalCounters.push_back(44075);
        internalCounters.push_back(44301);
        internalCounters.push_back(44527);
        internalCounters.push_back(44753);
        internalCounters.push_back(44979);
        internalCounters.push_back(45205);
        internalCounters.push_back(45431);
        internalCounters.push_back(45657);
        internalCounters.push_back(45883);
        internalCounters.push_back(46109);
        internalCounters.push_back(46335);
        internalCounters.push_back(46561);
        internalCounters.push_back(46787);
        internalCounters.push_back(47013);
        internalCounters.push_back(47239);
        internalCounters.push_back(47465);
        internalCounters.push_back(47691);
        internalCounters.push_back(47917);
        internalCounters.push_back(48143);
        internalCounters.push_back(48369);

        c.DefineDerivedCounter("TexUnitBusyCycles", "Timing", "Number of GPU cycles the texture unit is active. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "c68761f2-248c-4f39-6528-c308b1c0807c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30569);
        internalCounters.push_back(30795);
        internalCounters.push_back(31021);
        internalCounters.push_back(31247);
        internalCounters.push_back(31473);
        internalCounters.push_back(31699);
        internalCounters.push_back(31925);
        internalCounters.push_back(32151);
        internalCounters.push_back(32377);
        internalCounters.push_back(32603);
        internalCounters.push_back(32829);
        internalCounters.push_back(33055);
        internalCounters.push_back(33281);
        internalCounters.push_back(33507);
        internalCounters.push_back(33733);
        internalCounters.push_back(33959);
        internalCounters.push_back(34185);
        internalCounters.push_back(34411);
        internalCounters.push_back(34637);
        internalCounters.push_back(34863);
        internalCounters.push_back(35089);
        internalCounters.push_back(35315);
        internalCounters.push_back(35541);
        internalCounters.push_back(35767);
        internalCounters.push_back(35993);
        internalCounters.push_back(36219);
        internalCounters.push_back(36445);
        internalCounters.push_back(36671);
        internalCounters.push_back(36897);
        internalCounters.push_back(37123);
        internalCounters.push_back(37349);
        internalCounters.push_back(37575);
        internalCounters.push_back(37801);
        internalCounters.push_back(38027);
        internalCounters.push_back(38253);
        internalCounters.push_back(38479);
        internalCounters.push_back(38705);
        internalCounters.push_back(38931);
        internalCounters.push_back(39157);
        internalCounters.push_back(39383);
        internalCounters.push_back(39609);
        internalCounters.push_back(39835);
        internalCounters.push_back(40061);
        internalCounters.push_back(40287);
        internalCounters.push_back(40513);
        internalCounters.push_back(40739);
        internalCounters.push_back(40965);
        internalCounters.push_back(41191);
        internalCounters.push_back(41417);
        internalCounters.push_back(41643);
        internalCounters.push_back(41869);
        internalCounters.push_back(42095);
        internalCounters.push_back(42321);
        internalCounters.push_back(42547);
        internalCounters.push_back(42773);
        internalCounters.push_back(42999);
        internalCounters.push_back(43225);
        internalCounters.push_back(43451);
        internalCounters.push_back(43677);
        internalCounters.push_back(43903);
        internalCounters.push_back(44129);
        internalCounters.push_back(44355);
        internalCounters.push_back(44581);
        internalCounters.push_back(44807);
        internalCounters.push_back(45033);
        internalCounters.push_back(45259);
        internalCounters.push_back(45485);
        internalCounters.push_back(45711);
        internalCounters.push_back(45937);
        internalCounters.push_back(46163);
        internalCounters.push_back(46389);
        internalCounters.push_back(46615);
        internalCounters.push_back(46841);
        internalCounters.push_back(47067);
        internalCounters.push_back(47293);
        internalCounters.push_back(47519);
        internalCounters.push_back(47745);
        internalCounters.push_back(47971);
        internalCounters.push_back(48197);
        internalCounters.push_back(48423);
        internalCounters.push_back(30568);
        internalCounters.push_back(30794);
        internalCounters.push_back(31020);
        internalCounters.push_back(31246);
        internalCounters.push_back(31472);
        internalCounters.push_back(31698);
        internalCounters.push_back(31924);
        internalCounters.push_back(32150);
        internalCounters.push_back(32376);
        internalCounters.push_back(32602);
        internalCounters.push_back(32828);
        internalCounters.push_back(33054);
        internalCounters.push_back(33280);
        internalCounters.push_back(33506);
        internalCounters.push_back(33732);
        internalCounters.push_back(33958);
        internalCounters.push_back(34184);
        internalCounters.push_back(34410);
        internalCounters.push_back(34636);
        internalCounters.push_back(34862);
        internalCounters.push_back(35088);
        internalCounters.push_back(35314);
        internalCounters.push_back(35540);
        internalCounters.push_back(35766);
        internalCounters.push_back(35992);
        internalCounters.push_back(36218);
        internalCounters.push_back(36444);
        internalCounters.push_back(36670);
        internalCounters.push_back(36896);
        internalCounters.push_back(37122);
        internalCounters.push_back(37348);
        internalCounters.push_back(37574);
        internalCounters.push_back(37800);
        internalCounters.push_back(38026);
        internalCounters.push_back(38252);
        internalCounters.push_back(38478);
        internalCounters.push_back(38704);
        internalCounters.push_back(38930);
        internalCounters.push_back(39156);
        internalCounters.push_back(39382);
        internalCounters.push_back(39608);
        internalCounters.push_back(39834);
        internalCounters.push_back(40060);
        internalCounters.push_back(40286);
        internalCounters.push_back(40512);
        internalCounters.push_back(40738);
        internalCounters.push_back(40964);
        internalCounters.push_back(41190);
        internalCounters.push_back(41416);
        internalCounters.push_back(41642);
        internalCounters.push_back(41868);
        internalCounters.push_back(42094);
        internalCounters.push_back(42320);
        internalCounters.push_back(42546);
        internalCounters.push_back(42772);
        internalCounters.push_back(42998);
        internalCounters.push_back(43224);
        internalCounters.push_back(43450);
        internalCounters.push_back(43676);
        internalCounters.push_back(43902);
        internalCounters.push_back(44128);
        internalCounters.push_back(44354);
        internalCounters.push_back(44580);
        internalCounters.push_back(44806);
        internalCounters.push_back(45032);
        internalCounters.push_back(45258);
        internalCounters.push_back(45484);
        internalCounters.push_back(45710);
        internalCounters.push_back(45936);
        internalCounters.push_back(46162);
        internalCounters.push_back(46388);
        internalCounters.push_back(46614);
        internalCounters.push_back(46840);
        internalCounters.push_back(47066);
        internalCounters.push_back(47292);
        internalCounters.push_back(47518);
        internalCounters.push_back(47744);
        internalCounters.push_back(47970);
        internalCounters.push_back(48196);
        internalCounters.push_back(48422);

        c.DefineDerivedCounter("TexTriFilteringPct", "TextureUnit", "Percentage of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,+,/,(100),*", "1affc3c8-b917-5c81-622b-7004527208ae");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30569);
        internalCounters.push_back(30795);
        internalCounters.push_back(31021);
        internalCounters.push_back(31247);
        internalCounters.push_back(31473);
        internalCounters.push_back(31699);
        internalCounters.push_back(31925);
        internalCounters.push_back(32151);
        internalCounters.push_back(32377);
        internalCounters.push_back(32603);
        internalCounters.push_back(32829);
        internalCounters.push_back(33055);
        internalCounters.push_back(33281);
        internalCounters.push_back(33507);
        internalCounters.push_back(33733);
        internalCounters.push_back(33959);
        internalCounters.push_back(34185);
        internalCounters.push_back(34411);
        internalCounters.push_back(34637);
        internalCounters.push_back(34863);
        internalCounters.push_back(35089);
        internalCounters.push_back(35315);
        internalCounters.push_back(35541);
        internalCounters.push_back(35767);
        internalCounters.push_back(35993);
        internalCounters.push_back(36219);
        internalCounters.push_back(36445);
        internalCounters.push_back(36671);
        internalCounters.push_back(36897);
        internalCounters.push_back(37123);
        internalCounters.push_back(37349);
        internalCounters.push_back(37575);
        internalCounters.push_back(37801);
        internalCounters.push_back(38027);
        internalCounters.push_back(38253);
        internalCounters.push_back(38479);
        internalCounters.push_back(38705);
        internalCounters.push_back(38931);
        internalCounters.push_back(39157);
        internalCounters.push_back(39383);
        internalCounters.push_back(39609);
        internalCounters.push_back(39835);
        internalCounters.push_back(40061);
        internalCounters.push_back(40287);
        internalCounters.push_back(40513);
        internalCounters.push_back(40739);
        internalCounters.push_back(40965);
        internalCounters.push_back(41191);
        internalCounters.push_back(41417);
        internalCounters.push_back(41643);
        internalCounters.push_back(41869);
        internalCounters.push_back(42095);
        internalCounters.push_back(42321);
        internalCounters.push_back(42547);
        internalCounters.push_back(42773);
        internalCounters.push_back(42999);
        internalCounters.push_back(43225);
        internalCounters.push_back(43451);
        internalCounters.push_back(43677);
        internalCounters.push_back(43903);
        internalCounters.push_back(44129);
        internalCounters.push_back(44355);
        internalCounters.push_back(44581);
        internalCounters.push_back(44807);
        internalCounters.push_back(45033);
        internalCounters.push_back(45259);
        internalCounters.push_back(45485);
        internalCounters.push_back(45711);
        internalCounters.push_back(45937);
        internalCounters.push_back(46163);
        internalCounters.push_back(46389);
        internalCounters.push_back(46615);
        internalCounters.push_back(46841);
        internalCounters.push_back(47067);
        internalCounters.push_back(47293);
        internalCounters.push_back(47519);
        internalCounters.push_back(47745);
        internalCounters.push_back(47971);
        internalCounters.push_back(48197);
        internalCounters.push_back(48423);

        c.DefineDerivedCounter("TexTriFilteringCount", "TextureUnit", "Count of pixels that received trilinear filtering. Note that not all pixels for which trilinear filtering is enabled will receive it (e.g. if the texture is magnified).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "5785b3a1-a513-18db-4b1c-bdeef75bb2b6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30568);
        internalCounters.push_back(30794);
        internalCounters.push_back(31020);
        internalCounters.push_back(31246);
        internalCounters.push_back(31472);
        internalCounters.push_back(31698);
        internalCounters.push_back(31924);
        internalCounters.push_back(32150);
        internalCounters.push_back(32376);
        internalCounters.push_back(32602);
        internalCounters.push_back(32828);
        internalCounters.push_back(33054);
        internalCounters.push_back(33280);
        internalCounters.push_back(33506);
        internalCounters.push_back(33732);
        internalCounters.push_back(33958);
        internalCounters.push_back(34184);
        internalCounters.push_back(34410);
        internalCounters.push_back(34636);
        internalCounters.push_back(34862);
        internalCounters.push_back(35088);
        internalCounters.push_back(35314);
        internalCounters.push_back(35540);
        internalCounters.push_back(35766);
        internalCounters.push_back(35992);
        internalCounters.push_back(36218);
        internalCounters.push_back(36444);
        internalCounters.push_back(36670);
        internalCounters.push_back(36896);
        internalCounters.push_back(37122);
        internalCounters.push_back(37348);
        internalCounters.push_back(37574);
        internalCounters.push_back(37800);
        internalCounters.push_back(38026);
        internalCounters.push_back(38252);
        internalCounters.push_back(38478);
        internalCounters.push_back(38704);
        internalCounters.push_back(38930);
        internalCounters.push_back(39156);
        internalCounters.push_back(39382);
        internalCounters.push_back(39608);
        internalCounters.push_back(39834);
        internalCounters.push_back(40060);
        internalCounters.push_back(40286);
        internalCounters.push_back(40512);
        internalCounters.push_back(40738);
        internalCounters.push_back(40964);
        internalCounters.push_back(41190);
        internalCounters.push_back(41416);
        internalCounters.push_back(41642);
        internalCounters.push_back(41868);
        internalCounters.push_back(42094);
        internalCounters.push_back(42320);
        internalCounters.push_back(42546);
        internalCounters.push_back(42772);
        internalCounters.push_back(42998);
        internalCounters.push_back(43224);
        internalCounters.push_back(43450);
        internalCounters.push_back(43676);
        internalCounters.push_back(43902);
        internalCounters.push_back(44128);
        internalCounters.push_back(44354);
        internalCounters.push_back(44580);
        internalCounters.push_back(44806);
        internalCounters.push_back(45032);
        internalCounters.push_back(45258);
        internalCounters.push_back(45484);
        internalCounters.push_back(45710);
        internalCounters.push_back(45936);
        internalCounters.push_back(46162);
        internalCounters.push_back(46388);
        internalCounters.push_back(46614);
        internalCounters.push_back(46840);
        internalCounters.push_back(47066);
        internalCounters.push_back(47292);
        internalCounters.push_back(47518);
        internalCounters.push_back(47744);
        internalCounters.push_back(47970);
        internalCounters.push_back(48196);
        internalCounters.push_back(48422);

        c.DefineDerivedCounter("NoTexTriFilteringCount", "TextureUnit", "Count of pixels that did not receive trilinear filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "179da29a-81af-c06e-ce8c-a0a731ea030d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30571);
        internalCounters.push_back(30797);
        internalCounters.push_back(31023);
        internalCounters.push_back(31249);
        internalCounters.push_back(31475);
        internalCounters.push_back(31701);
        internalCounters.push_back(31927);
        internalCounters.push_back(32153);
        internalCounters.push_back(32379);
        internalCounters.push_back(32605);
        internalCounters.push_back(32831);
        internalCounters.push_back(33057);
        internalCounters.push_back(33283);
        internalCounters.push_back(33509);
        internalCounters.push_back(33735);
        internalCounters.push_back(33961);
        internalCounters.push_back(34187);
        internalCounters.push_back(34413);
        internalCounters.push_back(34639);
        internalCounters.push_back(34865);
        internalCounters.push_back(35091);
        internalCounters.push_back(35317);
        internalCounters.push_back(35543);
        internalCounters.push_back(35769);
        internalCounters.push_back(35995);
        internalCounters.push_back(36221);
        internalCounters.push_back(36447);
        internalCounters.push_back(36673);
        internalCounters.push_back(36899);
        internalCounters.push_back(37125);
        internalCounters.push_back(37351);
        internalCounters.push_back(37577);
        internalCounters.push_back(37803);
        internalCounters.push_back(38029);
        internalCounters.push_back(38255);
        internalCounters.push_back(38481);
        internalCounters.push_back(38707);
        internalCounters.push_back(38933);
        internalCounters.push_back(39159);
        internalCounters.push_back(39385);
        internalCounters.push_back(39611);
        internalCounters.push_back(39837);
        internalCounters.push_back(40063);
        internalCounters.push_back(40289);
        internalCounters.push_back(40515);
        internalCounters.push_back(40741);
        internalCounters.push_back(40967);
        internalCounters.push_back(41193);
        internalCounters.push_back(41419);
        internalCounters.push_back(41645);
        internalCounters.push_back(41871);
        internalCounters.push_back(42097);
        internalCounters.push_back(42323);
        internalCounters.push_back(42549);
        internalCounters.push_back(42775);
        internalCounters.push_back(43001);
        internalCounters.push_back(43227);
        internalCounters.push_back(43453);
        internalCounters.push_back(43679);
        internalCounters.push_back(43905);
        internalCounters.push_back(44131);
        internalCounters.push_back(44357);
        internalCounters.push_back(44583);
        internalCounters.push_back(44809);
        internalCounters.push_back(45035);
        internalCounters.push_back(45261);
        internalCounters.push_back(45487);
        internalCounters.push_back(45713);
        internalCounters.push_back(45939);
        internalCounters.push_back(46165);
        internalCounters.push_back(46391);
        internalCounters.push_back(46617);
        internalCounters.push_back(46843);
        internalCounters.push_back(47069);
        internalCounters.push_back(47295);
        internalCounters.push_back(47521);
        internalCounters.push_back(47747);
        internalCounters.push_back(47973);
        internalCounters.push_back(48199);
        internalCounters.push_back(48425);
        internalCounters.push_back(30570);
        internalCounters.push_back(30796);
        internalCounters.push_back(31022);
        internalCounters.push_back(31248);
        internalCounters.push_back(31474);
        internalCounters.push_back(31700);
        internalCounters.push_back(31926);
        internalCounters.push_back(32152);
        internalCounters.push_back(32378);
        internalCounters.push_back(32604);
        internalCounters.push_back(32830);
        internalCounters.push_back(33056);
        internalCounters.push_back(33282);
        internalCounters.push_back(33508);
        internalCounters.push_back(33734);
        internalCounters.push_back(33960);
        internalCounters.push_back(34186);
        internalCounters.push_back(34412);
        internalCounters.push_back(34638);
        internalCounters.push_back(34864);
        internalCounters.push_back(35090);
        internalCounters.push_back(35316);
        internalCounters.push_back(35542);
        internalCounters.push_back(35768);
        internalCounters.push_back(35994);
        internalCounters.push_back(36220);
        internalCounters.push_back(36446);
        internalCounters.push_back(36672);
        internalCounters.push_back(36898);
        internalCounters.push_back(37124);
        internalCounters.push_back(37350);
        internalCounters.push_back(37576);
        internalCounters.push_back(37802);
        internalCounters.push_back(38028);
        internalCounters.push_back(38254);
        internalCounters.push_back(38480);
        internalCounters.push_back(38706);
        internalCounters.push_back(38932);
        internalCounters.push_back(39158);
        internalCounters.push_back(39384);
        internalCounters.push_back(39610);
        internalCounters.push_back(39836);
        internalCounters.push_back(40062);
        internalCounters.push_back(40288);
        internalCounters.push_back(40514);
        internalCounters.push_back(40740);
        internalCounters.push_back(40966);
        internalCounters.push_back(41192);
        internalCounters.push_back(41418);
        internalCounters.push_back(41644);
        internalCounters.push_back(41870);
        internalCounters.push_back(42096);
        internalCounters.push_back(42322);
        internalCounters.push_back(42548);
        internalCounters.push_back(42774);
        internalCounters.push_back(43000);
        internalCounters.push_back(43226);
        internalCounters.push_back(43452);
        internalCounters.push_back(43678);
        internalCounters.push_back(43904);
        internalCounters.push_back(44130);
        internalCounters.push_back(44356);
        internalCounters.push_back(44582);
        internalCounters.push_back(44808);
        internalCounters.push_back(45034);
        internalCounters.push_back(45260);
        internalCounters.push_back(45486);
        internalCounters.push_back(45712);
        internalCounters.push_back(45938);
        internalCounters.push_back(46164);
        internalCounters.push_back(46390);
        internalCounters.push_back(46616);
        internalCounters.push_back(46842);
        internalCounters.push_back(47068);
        internalCounters.push_back(47294);
        internalCounters.push_back(47520);
        internalCounters.push_back(47746);
        internalCounters.push_back(47972);
        internalCounters.push_back(48198);
        internalCounters.push_back(48424);

        c.DefineDerivedCounter("TexVolFilteringPct", "TextureUnit", "Percentage of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,+,/,(100),*", "b5ff6bed-3178-aee4-42dd-c74391c02a2d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30571);
        internalCounters.push_back(30797);
        internalCounters.push_back(31023);
        internalCounters.push_back(31249);
        internalCounters.push_back(31475);
        internalCounters.push_back(31701);
        internalCounters.push_back(31927);
        internalCounters.push_back(32153);
        internalCounters.push_back(32379);
        internalCounters.push_back(32605);
        internalCounters.push_back(32831);
        internalCounters.push_back(33057);
        internalCounters.push_back(33283);
        internalCounters.push_back(33509);
        internalCounters.push_back(33735);
        internalCounters.push_back(33961);
        internalCounters.push_back(34187);
        internalCounters.push_back(34413);
        internalCounters.push_back(34639);
        internalCounters.push_back(34865);
        internalCounters.push_back(35091);
        internalCounters.push_back(35317);
        internalCounters.push_back(35543);
        internalCounters.push_back(35769);
        internalCounters.push_back(35995);
        internalCounters.push_back(36221);
        internalCounters.push_back(36447);
        internalCounters.push_back(36673);
        internalCounters.push_back(36899);
        internalCounters.push_back(37125);
        internalCounters.push_back(37351);
        internalCounters.push_back(37577);
        internalCounters.push_back(37803);
        internalCounters.push_back(38029);
        internalCounters.push_back(38255);
        internalCounters.push_back(38481);
        internalCounters.push_back(38707);
        internalCounters.push_back(38933);
        internalCounters.push_back(39159);
        internalCounters.push_back(39385);
        internalCounters.push_back(39611);
        internalCounters.push_back(39837);
        internalCounters.push_back(40063);
        internalCounters.push_back(40289);
        internalCounters.push_back(40515);
        internalCounters.push_back(40741);
        internalCounters.push_back(40967);
        internalCounters.push_back(41193);
        internalCounters.push_back(41419);
        internalCounters.push_back(41645);
        internalCounters.push_back(41871);
        internalCounters.push_back(42097);
        internalCounters.push_back(42323);
        internalCounters.push_back(42549);
        internalCounters.push_back(42775);
        internalCounters.push_back(43001);
        internalCounters.push_back(43227);
        internalCounters.push_back(43453);
        internalCounters.push_back(43679);
        internalCounters.push_back(43905);
        internalCounters.push_back(44131);
        internalCounters.push_back(44357);
        internalCounters.push_back(44583);
        internalCounters.push_back(44809);
        internalCounters.push_back(45035);
        internalCounters.push_back(45261);
        internalCounters.push_back(45487);
        internalCounters.push_back(45713);
        internalCounters.push_back(45939);
        internalCounters.push_back(46165);
        internalCounters.push_back(46391);
        internalCounters.push_back(46617);
        internalCounters.push_back(46843);
        internalCounters.push_back(47069);
        internalCounters.push_back(47295);
        internalCounters.push_back(47521);
        internalCounters.push_back(47747);
        internalCounters.push_back(47973);
        internalCounters.push_back(48199);
        internalCounters.push_back(48425);

        c.DefineDerivedCounter("TexVolFilteringCount", "TextureUnit", "Count of pixels that received volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "4bddc587-d589-8128-e18c-762eab2c871f");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30570);
        internalCounters.push_back(30796);
        internalCounters.push_back(31022);
        internalCounters.push_back(31248);
        internalCounters.push_back(31474);
        internalCounters.push_back(31700);
        internalCounters.push_back(31926);
        internalCounters.push_back(32152);
        internalCounters.push_back(32378);
        internalCounters.push_back(32604);
        internalCounters.push_back(32830);
        internalCounters.push_back(33056);
        internalCounters.push_back(33282);
        internalCounters.push_back(33508);
        internalCounters.push_back(33734);
        internalCounters.push_back(33960);
        internalCounters.push_back(34186);
        internalCounters.push_back(34412);
        internalCounters.push_back(34638);
        internalCounters.push_back(34864);
        internalCounters.push_back(35090);
        internalCounters.push_back(35316);
        internalCounters.push_back(35542);
        internalCounters.push_back(35768);
        internalCounters.push_back(35994);
        internalCounters.push_back(36220);
        internalCounters.push_back(36446);
        internalCounters.push_back(36672);
        internalCounters.push_back(36898);
        internalCounters.push_back(37124);
        internalCounters.push_back(37350);
        internalCounters.push_back(37576);
        internalCounters.push_back(37802);
        internalCounters.push_back(38028);
        internalCounters.push_back(38254);
        internalCounters.push_back(38480);
        internalCounters.push_back(38706);
        internalCounters.push_back(38932);
        internalCounters.push_back(39158);
        internalCounters.push_back(39384);
        internalCounters.push_back(39610);
        internalCounters.push_back(39836);
        internalCounters.push_back(40062);
        internalCounters.push_back(40288);
        internalCounters.push_back(40514);
        internalCounters.push_back(40740);
        internalCounters.push_back(40966);
        internalCounters.push_back(41192);
        internalCounters.push_back(41418);
        internalCounters.push_back(41644);
        internalCounters.push_back(41870);
        internalCounters.push_back(42096);
        internalCounters.push_back(42322);
        internalCounters.push_back(42548);
        internalCounters.push_back(42774);
        internalCounters.push_back(43000);
        internalCounters.push_back(43226);
        internalCounters.push_back(43452);
        internalCounters.push_back(43678);
        internalCounters.push_back(43904);
        internalCounters.push_back(44130);
        internalCounters.push_back(44356);
        internalCounters.push_back(44582);
        internalCounters.push_back(44808);
        internalCounters.push_back(45034);
        internalCounters.push_back(45260);
        internalCounters.push_back(45486);
        internalCounters.push_back(45712);
        internalCounters.push_back(45938);
        internalCounters.push_back(46164);
        internalCounters.push_back(46390);
        internalCounters.push_back(46616);
        internalCounters.push_back(46842);
        internalCounters.push_back(47068);
        internalCounters.push_back(47294);
        internalCounters.push_back(47520);
        internalCounters.push_back(47746);
        internalCounters.push_back(47972);
        internalCounters.push_back(48198);
        internalCounters.push_back(48424);

        c.DefineDerivedCounter("NoTexVolFilteringCount", "TextureUnit", "Count of pixels that did not receive volume filtering.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "9fe1a854-17c6-9d26-b2b9-80610cd5827d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30589);
        internalCounters.push_back(30815);
        internalCounters.push_back(31041);
        internalCounters.push_back(31267);
        internalCounters.push_back(31493);
        internalCounters.push_back(31719);
        internalCounters.push_back(31945);
        internalCounters.push_back(32171);
        internalCounters.push_back(32397);
        internalCounters.push_back(32623);
        internalCounters.push_back(32849);
        internalCounters.push_back(33075);
        internalCounters.push_back(33301);
        internalCounters.push_back(33527);
        internalCounters.push_back(33753);
        internalCounters.push_back(33979);
        internalCounters.push_back(34205);
        internalCounters.push_back(34431);
        internalCounters.push_back(34657);
        internalCounters.push_back(34883);
        internalCounters.push_back(35109);
        internalCounters.push_back(35335);
        internalCounters.push_back(35561);
        internalCounters.push_back(35787);
        internalCounters.push_back(36013);
        internalCounters.push_back(36239);
        internalCounters.push_back(36465);
        internalCounters.push_back(36691);
        internalCounters.push_back(36917);
        internalCounters.push_back(37143);
        internalCounters.push_back(37369);
        internalCounters.push_back(37595);
        internalCounters.push_back(37821);
        internalCounters.push_back(38047);
        internalCounters.push_back(38273);
        internalCounters.push_back(38499);
        internalCounters.push_back(38725);
        internalCounters.push_back(38951);
        internalCounters.push_back(39177);
        internalCounters.push_back(39403);
        internalCounters.push_back(39629);
        internalCounters.push_back(39855);
        internalCounters.push_back(40081);
        internalCounters.push_back(40307);
        internalCounters.push_back(40533);
        internalCounters.push_back(40759);
        internalCounters.push_back(40985);
        internalCounters.push_back(41211);
        internalCounters.push_back(41437);
        internalCounters.push_back(41663);
        internalCounters.push_back(41889);
        internalCounters.push_back(42115);
        internalCounters.push_back(42341);
        internalCounters.push_back(42567);
        internalCounters.push_back(42793);
        internalCounters.push_back(43019);
        internalCounters.push_back(43245);
        internalCounters.push_back(43471);
        internalCounters.push_back(43697);
        internalCounters.push_back(43923);
        internalCounters.push_back(44149);
        internalCounters.push_back(44375);
        internalCounters.push_back(44601);
        internalCounters.push_back(44827);
        internalCounters.push_back(45053);
        internalCounters.push_back(45279);
        internalCounters.push_back(45505);
        internalCounters.push_back(45731);
        internalCounters.push_back(45957);
        internalCounters.push_back(46183);
        internalCounters.push_back(46409);
        internalCounters.push_back(46635);
        internalCounters.push_back(46861);
        internalCounters.push_back(47087);
        internalCounters.push_back(47313);
        internalCounters.push_back(47539);
        internalCounters.push_back(47765);
        internalCounters.push_back(47991);
        internalCounters.push_back(48217);
        internalCounters.push_back(48443);
        internalCounters.push_back(30590);
        internalCounters.push_back(30816);
        internalCounters.push_back(31042);
        internalCounters.push_back(31268);
        internalCounters.push_back(31494);
        internalCounters.push_back(31720);
        internalCounters.push_back(31946);
        internalCounters.push_back(32172);
        internalCounters.push_back(32398);
        internalCounters.push_back(32624);
        internalCounters.push_back(32850);
        internalCounters.push_back(33076);
        internalCounters.push_back(33302);
        internalCounters.push_back(33528);
        internalCounters.push_back(33754);
        internalCounters.push_back(33980);
        internalCounters.push_back(34206);
        internalCounters.push_back(34432);
        internalCounters.push_back(34658);
        internalCounters.push_back(34884);
        internalCounters.push_back(35110);
        internalCounters.push_back(35336);
        internalCounters.push_back(35562);
        internalCounters.push_back(35788);
        internalCounters.push_back(36014);
        internalCounters.push_back(36240);
        internalCounters.push_back(36466);
        internalCounters.push_back(36692);
        internalCounters.push_back(36918);
        internalCounters.push_back(37144);
        internalCounters.push_back(37370);
        internalCounters.push_back(37596);
        internalCounters.push_back(37822);
        internalCounters.push_back(38048);
        internalCounters.push_back(38274);
        internalCounters.push_back(38500);
        internalCounters.push_back(38726);
        internalCounters.push_back(38952);
        internalCounters.push_back(39178);
        internalCounters.push_back(39404);
        internalCounters.push_back(39630);
        internalCounters.push_back(39856);
        internalCounters.push_back(40082);
        internalCounters.push_back(40308);
        internalCounters.push_back(40534);
        internalCounters.push_back(40760);
        internalCounters.push_back(40986);
        internalCounters.push_back(41212);
        internalCounters.push_back(41438);
        internalCounters.push_back(41664);
        internalCounters.push_back(41890);
        internalCounters.push_back(42116);
        internalCounters.push_back(42342);
        internalCounters.push_back(42568);
        internalCounters.push_back(42794);
        internalCounters.push_back(43020);
        internalCounters.push_back(43246);
        internalCounters.push_back(43472);
        internalCounters.push_back(43698);
        internalCounters.push_back(43924);
        internalCounters.push_back(44150);
        internalCounters.push_back(44376);
        internalCounters.push_back(44602);
        internalCounters.push_back(44828);
        internalCounters.push_back(45054);
        internalCounters.push_back(45280);
        internalCounters.push_back(45506);
        internalCounters.push_back(45732);
        internalCounters.push_back(45958);
        internalCounters.push_back(46184);
        internalCounters.push_back(46410);
        internalCounters.push_back(46636);
        internalCounters.push_back(46862);
        internalCounters.push_back(47088);
        internalCounters.push_back(47314);
        internalCounters.push_back(47540);
        internalCounters.push_back(47766);
        internalCounters.push_back(47992);
        internalCounters.push_back(48218);
        internalCounters.push_back(48444);
        internalCounters.push_back(30591);
        internalCounters.push_back(30817);
        internalCounters.push_back(31043);
        internalCounters.push_back(31269);
        internalCounters.push_back(31495);
        internalCounters.push_back(31721);
        internalCounters.push_back(31947);
        internalCounters.push_back(32173);
        internalCounters.push_back(32399);
        internalCounters.push_back(32625);
        internalCounters.push_back(32851);
        internalCounters.push_back(33077);
        internalCounters.push_back(33303);
        internalCounters.push_back(33529);
        internalCounters.push_back(33755);
        internalCounters.push_back(33981);
        internalCounters.push_back(34207);
        internalCounters.push_back(34433);
        internalCounters.push_back(34659);
        internalCounters.push_back(34885);
        internalCounters.push_back(35111);
        internalCounters.push_back(35337);
        internalCounters.push_back(35563);
        internalCounters.push_back(35789);
        internalCounters.push_back(36015);
        internalCounters.push_back(36241);
        internalCounters.push_back(36467);
        internalCounters.push_back(36693);
        internalCounters.push_back(36919);
        internalCounters.push_back(37145);
        internalCounters.push_back(37371);
        internalCounters.push_back(37597);
        internalCounters.push_back(37823);
        internalCounters.push_back(38049);
        internalCounters.push_back(38275);
        internalCounters.push_back(38501);
        internalCounters.push_back(38727);
        internalCounters.push_back(38953);
        internalCounters.push_back(39179);
        internalCounters.push_back(39405);
        internalCounters.push_back(39631);
        internalCounters.push_back(39857);
        internalCounters.push_back(40083);
        internalCounters.push_back(40309);
        internalCounters.push_back(40535);
        internalCounters.push_back(40761);
        internalCounters.push_back(40987);
        internalCounters.push_back(41213);
        internalCounters.push_back(41439);
        internalCounters.push_back(41665);
        internalCounters.push_back(41891);
        internalCounters.push_back(42117);
        internalCounters.push_back(42343);
        internalCounters.push_back(42569);
        internalCounters.push_back(42795);
        internalCounters.push_back(43021);
        internalCounters.push_back(43247);
        internalCounters.push_back(43473);
        internalCounters.push_back(43699);
        internalCounters.push_back(43925);
        internalCounters.push_back(44151);
        internalCounters.push_back(44377);
        internalCounters.push_back(44603);
        internalCounters.push_back(44829);
        internalCounters.push_back(45055);
        internalCounters.push_back(45281);
        internalCounters.push_back(45507);
        internalCounters.push_back(45733);
        internalCounters.push_back(45959);
        internalCounters.push_back(46185);
        internalCounters.push_back(46411);
        internalCounters.push_back(46637);
        internalCounters.push_back(46863);
        internalCounters.push_back(47089);
        internalCounters.push_back(47315);
        internalCounters.push_back(47541);
        internalCounters.push_back(47767);
        internalCounters.push_back(47993);
        internalCounters.push_back(48219);
        internalCounters.push_back(48445);
        internalCounters.push_back(30592);
        internalCounters.push_back(30818);
        internalCounters.push_back(31044);
        internalCounters.push_back(31270);
        internalCounters.push_back(31496);
        internalCounters.push_back(31722);
        internalCounters.push_back(31948);
        internalCounters.push_back(32174);
        internalCounters.push_back(32400);
        internalCounters.push_back(32626);
        internalCounters.push_back(32852);
        internalCounters.push_back(33078);
        internalCounters.push_back(33304);
        internalCounters.push_back(33530);
        internalCounters.push_back(33756);
        internalCounters.push_back(33982);
        internalCounters.push_back(34208);
        internalCounters.push_back(34434);
        internalCounters.push_back(34660);
        internalCounters.push_back(34886);
        internalCounters.push_back(35112);
        internalCounters.push_back(35338);
        internalCounters.push_back(35564);
        internalCounters.push_back(35790);
        internalCounters.push_back(36016);
        internalCounters.push_back(36242);
        internalCounters.push_back(36468);
        internalCounters.push_back(36694);
        internalCounters.push_back(36920);
        internalCounters.push_back(37146);
        internalCounters.push_back(37372);
        internalCounters.push_back(37598);
        internalCounters.push_back(37824);
        internalCounters.push_back(38050);
        internalCounters.push_back(38276);
        internalCounters.push_back(38502);
        internalCounters.push_back(38728);
        internalCounters.push_back(38954);
        internalCounters.push_back(39180);
        internalCounters.push_back(39406);
        internalCounters.push_back(39632);
        internalCounters.push_back(39858);
        internalCounters.push_back(40084);
        internalCounters.push_back(40310);
        internalCounters.push_back(40536);
        internalCounters.push_back(40762);
        internalCounters.push_back(40988);
        internalCounters.push_back(41214);
        internalCounters.push_back(41440);
        internalCounters.push_back(41666);
        internalCounters.push_back(41892);
        internalCounters.push_back(42118);
        internalCounters.push_back(42344);
        internalCounters.push_back(42570);
        internalCounters.push_back(42796);
        internalCounters.push_back(43022);
        internalCounters.push_back(43248);
        internalCounters.push_back(43474);
        internalCounters.push_back(43700);
        internalCounters.push_back(43926);
        internalCounters.push_back(44152);
        internalCounters.push_back(44378);
        internalCounters.push_back(44604);
        internalCounters.push_back(44830);
        internalCounters.push_back(45056);
        internalCounters.push_back(45282);
        internalCounters.push_back(45508);
        internalCounters.push_back(45734);
        internalCounters.push_back(45960);
        internalCounters.push_back(46186);
        internalCounters.push_back(46412);
        internalCounters.push_back(46638);
        internalCounters.push_back(46864);
        internalCounters.push_back(47090);
        internalCounters.push_back(47316);
        internalCounters.push_back(47542);
        internalCounters.push_back(47768);
        internalCounters.push_back(47994);
        internalCounters.push_back(48220);
        internalCounters.push_back(48446);
        internalCounters.push_back(30593);
        internalCounters.push_back(30819);
        internalCounters.push_back(31045);
        internalCounters.push_back(31271);
        internalCounters.push_back(31497);
        internalCounters.push_back(31723);
        internalCounters.push_back(31949);
        internalCounters.push_back(32175);
        internalCounters.push_back(32401);
        internalCounters.push_back(32627);
        internalCounters.push_back(32853);
        internalCounters.push_back(33079);
        internalCounters.push_back(33305);
        internalCounters.push_back(33531);
        internalCounters.push_back(33757);
        internalCounters.push_back(33983);
        internalCounters.push_back(34209);
        internalCounters.push_back(34435);
        internalCounters.push_back(34661);
        internalCounters.push_back(34887);
        internalCounters.push_back(35113);
        internalCounters.push_back(35339);
        internalCounters.push_back(35565);
        internalCounters.push_back(35791);
        internalCounters.push_back(36017);
        internalCounters.push_back(36243);
        internalCounters.push_back(36469);
        internalCounters.push_back(36695);
        internalCounters.push_back(36921);
        internalCounters.push_back(37147);
        internalCounters.push_back(37373);
        internalCounters.push_back(37599);
        internalCounters.push_back(37825);
        internalCounters.push_back(38051);
        internalCounters.push_back(38277);
        internalCounters.push_back(38503);
        internalCounters.push_back(38729);
        internalCounters.push_back(38955);
        internalCounters.push_back(39181);
        internalCounters.push_back(39407);
        internalCounters.push_back(39633);
        internalCounters.push_back(39859);
        internalCounters.push_back(40085);
        internalCounters.push_back(40311);
        internalCounters.push_back(40537);
        internalCounters.push_back(40763);
        internalCounters.push_back(40989);
        internalCounters.push_back(41215);
        internalCounters.push_back(41441);
        internalCounters.push_back(41667);
        internalCounters.push_back(41893);
        internalCounters.push_back(42119);
        internalCounters.push_back(42345);
        internalCounters.push_back(42571);
        internalCounters.push_back(42797);
        internalCounters.push_back(43023);
        internalCounters.push_back(43249);
        internalCounters.push_back(43475);
        internalCounters.push_back(43701);
        internalCounters.push_back(43927);
        internalCounters.push_back(44153);
        internalCounters.push_back(44379);
        internalCounters.push_back(44605);
        internalCounters.push_back(44831);
        internalCounters.push_back(45057);
        internalCounters.push_back(45283);
        internalCounters.push_back(45509);
        internalCounters.push_back(45735);
        internalCounters.push_back(45961);
        internalCounters.push_back(46187);
        internalCounters.push_back(46413);
        internalCounters.push_back(46639);
        internalCounters.push_back(46865);
        internalCounters.push_back(47091);
        internalCounters.push_back(47317);
        internalCounters.push_back(47543);
        internalCounters.push_back(47769);
        internalCounters.push_back(47995);
        internalCounters.push_back(48221);
        internalCounters.push_back(48447);
        internalCounters.push_back(30594);
        internalCounters.push_back(30820);
        internalCounters.push_back(31046);
        internalCounters.push_back(31272);
        internalCounters.push_back(31498);
        internalCounters.push_back(31724);
        internalCounters.push_back(31950);
        internalCounters.push_back(32176);
        internalCounters.push_back(32402);
        internalCounters.push_back(32628);
        internalCounters.push_back(32854);
        internalCounters.push_back(33080);
        internalCounters.push_back(33306);
        internalCounters.push_back(33532);
        internalCounters.push_back(33758);
        internalCounters.push_back(33984);
        internalCounters.push_back(34210);
        internalCounters.push_back(34436);
        internalCounters.push_back(34662);
        internalCounters.push_back(34888);
        internalCounters.push_back(35114);
        internalCounters.push_back(35340);
        internalCounters.push_back(35566);
        internalCounters.push_back(35792);
        internalCounters.push_back(36018);
        internalCounters.push_back(36244);
        internalCounters.push_back(36470);
        internalCounters.push_back(36696);
        internalCounters.push_back(36922);
        internalCounters.push_back(37148);
        internalCounters.push_back(37374);
        internalCounters.push_back(37600);
        internalCounters.push_back(37826);
        internalCounters.push_back(38052);
        internalCounters.push_back(38278);
        internalCounters.push_back(38504);
        internalCounters.push_back(38730);
        internalCounters.push_back(38956);
        internalCounters.push_back(39182);
        internalCounters.push_back(39408);
        internalCounters.push_back(39634);
        internalCounters.push_back(39860);
        internalCounters.push_back(40086);
        internalCounters.push_back(40312);
        internalCounters.push_back(40538);
        internalCounters.push_back(40764);
        internalCounters.push_back(40990);
        internalCounters.push_back(41216);
        internalCounters.push_back(41442);
        internalCounters.push_back(41668);
        internalCounters.push_back(41894);
        internalCounters.push_back(42120);
        internalCounters.push_back(42346);
        internalCounters.push_back(42572);
        internalCounters.push_back(42798);
        internalCounters.push_back(43024);
        internalCounters.push_back(43250);
        internalCounters.push_back(43476);
        internalCounters.push_back(43702);
        internalCounters.push_back(43928);
        internalCounters.push_back(44154);
        internalCounters.push_back(44380);
        internalCounters.push_back(44606);
        internalCounters.push_back(44832);
        internalCounters.push_back(45058);
        internalCounters.push_back(45284);
        internalCounters.push_back(45510);
        internalCounters.push_back(45736);
        internalCounters.push_back(45962);
        internalCounters.push_back(46188);
        internalCounters.push_back(46414);
        internalCounters.push_back(46640);
        internalCounters.push_back(46866);
        internalCounters.push_back(47092);
        internalCounters.push_back(47318);
        internalCounters.push_back(47544);
        internalCounters.push_back(47770);
        internalCounters.push_back(47996);
        internalCounters.push_back(48222);
        internalCounters.push_back(48448);
        internalCounters.push_back(30595);
        internalCounters.push_back(30821);
        internalCounters.push_back(31047);
        internalCounters.push_back(31273);
        internalCounters.push_back(31499);
        internalCounters.push_back(31725);
        internalCounters.push_back(31951);
        internalCounters.push_back(32177);
        internalCounters.push_back(32403);
        internalCounters.push_back(32629);
        internalCounters.push_back(32855);
        internalCounters.push_back(33081);
        internalCounters.push_back(33307);
        internalCounters.push_back(33533);
        internalCounters.push_back(33759);
        internalCounters.push_back(33985);
        internalCounters.push_back(34211);
        internalCounters.push_back(34437);
        internalCounters.push_back(34663);
        internalCounters.push_back(34889);
        internalCounters.push_back(35115);
        internalCounters.push_back(35341);
        internalCounters.push_back(35567);
        internalCounters.push_back(35793);
        internalCounters.push_back(36019);
        internalCounters.push_back(36245);
        internalCounters.push_back(36471);
        internalCounters.push_back(36697);
        internalCounters.push_back(36923);
        internalCounters.push_back(37149);
        internalCounters.push_back(37375);
        internalCounters.push_back(37601);
        internalCounters.push_back(37827);
        internalCounters.push_back(38053);
        internalCounters.push_back(38279);
        internalCounters.push_back(38505);
        internalCounters.push_back(38731);
        internalCounters.push_back(38957);
        internalCounters.push_back(39183);
        internalCounters.push_back(39409);
        internalCounters.push_back(39635);
        internalCounters.push_back(39861);
        internalCounters.push_back(40087);
        internalCounters.push_back(40313);
        internalCounters.push_back(40539);
        internalCounters.push_back(40765);
        internalCounters.push_back(40991);
        internalCounters.push_back(41217);
        internalCounters.push_back(41443);
        internalCounters.push_back(41669);
        internalCounters.push_back(41895);
        internalCounters.push_back(42121);
        internalCounters.push_back(42347);
        internalCounters.push_back(42573);
        internalCounters.push_back(42799);
        internalCounters.push_back(43025);
        internalCounters.push_back(43251);
        internalCounters.push_back(43477);
        internalCounters.push_back(43703);
        internalCounters.push_back(43929);
        internalCounters.push_back(44155);
        internalCounters.push_back(44381);
        internalCounters.push_back(44607);
        internalCounters.push_back(44833);
        internalCounters.push_back(45059);
        internalCounters.push_back(45285);
        internalCounters.push_back(45511);
        internalCounters.push_back(45737);
        internalCounters.push_back(45963);
        internalCounters.push_back(46189);
        internalCounters.push_back(46415);
        internalCounters.push_back(46641);
        internalCounters.push_back(46867);
        internalCounters.push_back(47093);
        internalCounters.push_back(47319);
        internalCounters.push_back(47545);
        internalCounters.push_back(47771);
        internalCounters.push_back(47997);
        internalCounters.push_back(48223);
        internalCounters.push_back(48449);
        internalCounters.push_back(30596);
        internalCounters.push_back(30822);
        internalCounters.push_back(31048);
        internalCounters.push_back(31274);
        internalCounters.push_back(31500);
        internalCounters.push_back(31726);
        internalCounters.push_back(31952);
        internalCounters.push_back(32178);
        internalCounters.push_back(32404);
        internalCounters.push_back(32630);
        internalCounters.push_back(32856);
        internalCounters.push_back(33082);
        internalCounters.push_back(33308);
        internalCounters.push_back(33534);
        internalCounters.push_back(33760);
        internalCounters.push_back(33986);
        internalCounters.push_back(34212);
        internalCounters.push_back(34438);
        internalCounters.push_back(34664);
        internalCounters.push_back(34890);
        internalCounters.push_back(35116);
        internalCounters.push_back(35342);
        internalCounters.push_back(35568);
        internalCounters.push_back(35794);
        internalCounters.push_back(36020);
        internalCounters.push_back(36246);
        internalCounters.push_back(36472);
        internalCounters.push_back(36698);
        internalCounters.push_back(36924);
        internalCounters.push_back(37150);
        internalCounters.push_back(37376);
        internalCounters.push_back(37602);
        internalCounters.push_back(37828);
        internalCounters.push_back(38054);
        internalCounters.push_back(38280);
        internalCounters.push_back(38506);
        internalCounters.push_back(38732);
        internalCounters.push_back(38958);
        internalCounters.push_back(39184);
        internalCounters.push_back(39410);
        internalCounters.push_back(39636);
        internalCounters.push_back(39862);
        internalCounters.push_back(40088);
        internalCounters.push_back(40314);
        internalCounters.push_back(40540);
        internalCounters.push_back(40766);
        internalCounters.push_back(40992);
        internalCounters.push_back(41218);
        internalCounters.push_back(41444);
        internalCounters.push_back(41670);
        internalCounters.push_back(41896);
        internalCounters.push_back(42122);
        internalCounters.push_back(42348);
        internalCounters.push_back(42574);
        internalCounters.push_back(42800);
        internalCounters.push_back(43026);
        internalCounters.push_back(43252);
        internalCounters.push_back(43478);
        internalCounters.push_back(43704);
        internalCounters.push_back(43930);
        internalCounters.push_back(44156);
        internalCounters.push_back(44382);
        internalCounters.push_back(44608);
        internalCounters.push_back(44834);
        internalCounters.push_back(45060);
        internalCounters.push_back(45286);
        internalCounters.push_back(45512);
        internalCounters.push_back(45738);
        internalCounters.push_back(45964);
        internalCounters.push_back(46190);
        internalCounters.push_back(46416);
        internalCounters.push_back(46642);
        internalCounters.push_back(46868);
        internalCounters.push_back(47094);
        internalCounters.push_back(47320);
        internalCounters.push_back(47546);
        internalCounters.push_back(47772);
        internalCounters.push_back(47998);
        internalCounters.push_back(48224);
        internalCounters.push_back(48450);
        internalCounters.push_back(30597);
        internalCounters.push_back(30823);
        internalCounters.push_back(31049);
        internalCounters.push_back(31275);
        internalCounters.push_back(31501);
        internalCounters.push_back(31727);
        internalCounters.push_back(31953);
        internalCounters.push_back(32179);
        internalCounters.push_back(32405);
        internalCounters.push_back(32631);
        internalCounters.push_back(32857);
        internalCounters.push_back(33083);
        internalCounters.push_back(33309);
        internalCounters.push_back(33535);
        internalCounters.push_back(33761);
        internalCounters.push_back(33987);
        internalCounters.push_back(34213);
        internalCounters.push_back(34439);
        internalCounters.push_back(34665);
        internalCounters.push_back(34891);
        internalCounters.push_back(35117);
        internalCounters.push_back(35343);
        internalCounters.push_back(35569);
        internalCounters.push_back(35795);
        internalCounters.push_back(36021);
        internalCounters.push_back(36247);
        internalCounters.push_back(36473);
        internalCounters.push_back(36699);
        internalCounters.push_back(36925);
        internalCounters.push_back(37151);
        internalCounters.push_back(37377);
        internalCounters.push_back(37603);
        internalCounters.push_back(37829);
        internalCounters.push_back(38055);
        internalCounters.push_back(38281);
        internalCounters.push_back(38507);
        internalCounters.push_back(38733);
        internalCounters.push_back(38959);
        internalCounters.push_back(39185);
        internalCounters.push_back(39411);
        internalCounters.push_back(39637);
        internalCounters.push_back(39863);
        internalCounters.push_back(40089);
        internalCounters.push_back(40315);
        internalCounters.push_back(40541);
        internalCounters.push_back(40767);
        internalCounters.push_back(40993);
        internalCounters.push_back(41219);
        internalCounters.push_back(41445);
        internalCounters.push_back(41671);
        internalCounters.push_back(41897);
        internalCounters.push_back(42123);
        internalCounters.push_back(42349);
        internalCounters.push_back(42575);
        internalCounters.push_back(42801);
        internalCounters.push_back(43027);
        internalCounters.push_back(43253);
        internalCounters.push_back(43479);
        internalCounters.push_back(43705);
        internalCounters.push_back(43931);
        internalCounters.push_back(44157);
        internalCounters.push_back(44383);
        internalCounters.push_back(44609);
        internalCounters.push_back(44835);
        internalCounters.push_back(45061);
        internalCounters.push_back(45287);
        internalCounters.push_back(45513);
        internalCounters.push_back(45739);
        internalCounters.push_back(45965);
        internalCounters.push_back(46191);
        internalCounters.push_back(46417);
        internalCounters.push_back(46643);
        internalCounters.push_back(46869);
        internalCounters.push_back(47095);
        internalCounters.push_back(47321);
        internalCounters.push_back(47547);
        internalCounters.push_back(47773);
        internalCounters.push_back(47999);
        internalCounters.push_back(48225);
        internalCounters.push_back(48451);

        c.DefineDerivedCounter("TexAveAnisotropy", "TextureUnit", "The average degree of anisotropy applied. A number between 1 and 16. The anisotropic filtering algorithm only applies samples where they are required (e.g. there will be no extra anisotropic samples if the view vector is perpendicular to the surface) so this can be much lower than the requested anisotropy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,(2),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,*,+,(4),160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,*,+,(6),240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,*,+,(8),320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,*,+,(10),400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,*,+,(12),480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,*,+,(14),560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,*,+,(16),640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,*,+,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,+,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,sum80,+,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,sum80,+,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,sum80,+,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,sum80,+,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,509,510,511,512,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,559,sum80,+,560,561,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,631,632,633,634,635,636,637,638,639,sum80,+,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,sum80,+,/", "7ca2a2b9-a4eb-ce23-d163-59147e672396");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59764);
        internalCounters.push_back(60134);
        internalCounters.push_back(60504);
        internalCounters.push_back(60874);
        internalCounters.push_back(61244);
        internalCounters.push_back(61614);
        internalCounters.push_back(61984);
        internalCounters.push_back(62354);
        internalCounters.push_back(62724);
        internalCounters.push_back(63094);
        internalCounters.push_back(63464);
        internalCounters.push_back(63834);
        internalCounters.push_back(64204);
        internalCounters.push_back(64574);
        internalCounters.push_back(64944);
        internalCounters.push_back(65314);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("DepthStencilTestBusy", "Timing", "Percentage of time GPU spent performing depth and stencil tests relative to GPUBusy.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "6834fb52-42e8-bb50-fd48-ec2f2904e7e0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59764);
        internalCounters.push_back(60134);
        internalCounters.push_back(60504);
        internalCounters.push_back(60874);
        internalCounters.push_back(61244);
        internalCounters.push_back(61614);
        internalCounters.push_back(61984);
        internalCounters.push_back(62354);
        internalCounters.push_back(62724);
        internalCounters.push_back(63094);
        internalCounters.push_back(63464);
        internalCounters.push_back(63834);
        internalCounters.push_back(64204);
        internalCounters.push_back(64574);
        internalCounters.push_back(64944);
        internalCounters.push_back(65314);

        c.DefineDerivedCounter("DepthStencilTestBusyCount", "Timing", "Number of GPU cycles spent performing depth and stencil tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "e02860fa-c7bd-90ea-2149-69b4e98a636c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59635);
        internalCounters.push_back(60005);
        internalCounters.push_back(60375);
        internalCounters.push_back(60745);
        internalCounters.push_back(61115);
        internalCounters.push_back(61485);
        internalCounters.push_back(61855);
        internalCounters.push_back(62225);
        internalCounters.push_back(62595);
        internalCounters.push_back(62965);
        internalCounters.push_back(63335);
        internalCounters.push_back(63705);
        internalCounters.push_back(64075);
        internalCounters.push_back(64445);
        internalCounters.push_back(64815);
        internalCounters.push_back(65185);
        internalCounters.push_back(59624);
        internalCounters.push_back(59994);
        internalCounters.push_back(60364);
        internalCounters.push_back(60734);
        internalCounters.push_back(61104);
        internalCounters.push_back(61474);
        internalCounters.push_back(61844);
        internalCounters.push_back(62214);
        internalCounters.push_back(62584);
        internalCounters.push_back(62954);
        internalCounters.push_back(63324);
        internalCounters.push_back(63694);
        internalCounters.push_back(64064);
        internalCounters.push_back(64434);
        internalCounters.push_back(64804);
        internalCounters.push_back(65174);

        c.DefineDerivedCounter("HiZTilesAccepted", "DepthAndStencil", "Percentage of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*", "56176f45-d7ff-813d-4f05-3b2f046067e7");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59635);
        internalCounters.push_back(60005);
        internalCounters.push_back(60375);
        internalCounters.push_back(60745);
        internalCounters.push_back(61115);
        internalCounters.push_back(61485);
        internalCounters.push_back(61855);
        internalCounters.push_back(62225);
        internalCounters.push_back(62595);
        internalCounters.push_back(62965);
        internalCounters.push_back(63335);
        internalCounters.push_back(63705);
        internalCounters.push_back(64075);
        internalCounters.push_back(64445);
        internalCounters.push_back(64815);
        internalCounters.push_back(65185);

        c.DefineDerivedCounter("HiZTilesAcceptedCount", "DepthAndStencil", "Count of tiles accepted by HiZ and will be rendered to the depth or color buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "95d4e3f6-b2f0-f26e-8423-aacdfaf79ea3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59624);
        internalCounters.push_back(59994);
        internalCounters.push_back(60364);
        internalCounters.push_back(60734);
        internalCounters.push_back(61104);
        internalCounters.push_back(61474);
        internalCounters.push_back(61844);
        internalCounters.push_back(62214);
        internalCounters.push_back(62584);
        internalCounters.push_back(62954);
        internalCounters.push_back(63324);
        internalCounters.push_back(63694);
        internalCounters.push_back(64064);
        internalCounters.push_back(64434);
        internalCounters.push_back(64804);
        internalCounters.push_back(65174);

        c.DefineDerivedCounter("HiZTilesRejectedCount", "DepthAndStencil", "Count of tiles not accepted by HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "156ba142-7eeb-aa6e-a00a-f8aea4e41e0b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59624);
        internalCounters.push_back(59994);
        internalCounters.push_back(60364);
        internalCounters.push_back(60734);
        internalCounters.push_back(61104);
        internalCounters.push_back(61474);
        internalCounters.push_back(61844);
        internalCounters.push_back(62214);
        internalCounters.push_back(62584);
        internalCounters.push_back(62954);
        internalCounters.push_back(63324);
        internalCounters.push_back(63694);
        internalCounters.push_back(64064);
        internalCounters.push_back(64434);
        internalCounters.push_back(64804);
        internalCounters.push_back(65174);
        internalCounters.push_back(59648);
        internalCounters.push_back(60018);
        internalCounters.push_back(60388);
        internalCounters.push_back(60758);
        internalCounters.push_back(61128);
        internalCounters.push_back(61498);
        internalCounters.push_back(61868);
        internalCounters.push_back(62238);
        internalCounters.push_back(62608);
        internalCounters.push_back(62978);
        internalCounters.push_back(63348);
        internalCounters.push_back(63718);
        internalCounters.push_back(64088);
        internalCounters.push_back(64458);
        internalCounters.push_back(64828);
        internalCounters.push_back(65198);

        c.DefineDerivedCounter("PreZTilesDetailCulled", "DepthAndStencil", "Percentage of tiles rejected because the associated prim had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "cad7f54d-a044-7574-c472-6f2065cbeeac");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59648);
        internalCounters.push_back(60018);
        internalCounters.push_back(60388);
        internalCounters.push_back(60758);
        internalCounters.push_back(61128);
        internalCounters.push_back(61498);
        internalCounters.push_back(61868);
        internalCounters.push_back(62238);
        internalCounters.push_back(62608);
        internalCounters.push_back(62978);
        internalCounters.push_back(63348);
        internalCounters.push_back(63718);
        internalCounters.push_back(64088);
        internalCounters.push_back(64458);
        internalCounters.push_back(64828);
        internalCounters.push_back(65198);

        c.DefineDerivedCounter("PreZTilesDetailCulledCount", "DepthAndStencil", "Count of tiles rejected because the associated primitive had no contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "49262c8a-b1e6-90dd-f096-0fc4921715e9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59624);
        internalCounters.push_back(59994);
        internalCounters.push_back(60364);
        internalCounters.push_back(60734);
        internalCounters.push_back(61104);
        internalCounters.push_back(61474);
        internalCounters.push_back(61844);
        internalCounters.push_back(62214);
        internalCounters.push_back(62584);
        internalCounters.push_back(62954);
        internalCounters.push_back(63324);
        internalCounters.push_back(63694);
        internalCounters.push_back(64064);
        internalCounters.push_back(64434);
        internalCounters.push_back(64804);
        internalCounters.push_back(65174);

        c.DefineDerivedCounter("PreZTilesDetailSurvivingCount", "DepthAndStencil", "Count of tiles surviving because the associated primitive had contributing area.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "f803eaa4-bbed-bd39-775f-a64df92e2c08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2327);
        internalCounters.push_back(2879);
        internalCounters.push_back(3431);
        internalCounters.push_back(3983);
        internalCounters.push_back(2328);
        internalCounters.push_back(2880);
        internalCounters.push_back(3432);
        internalCounters.push_back(3984);
        internalCounters.push_back(2329);
        internalCounters.push_back(2881);
        internalCounters.push_back(3433);
        internalCounters.push_back(3985);
        internalCounters.push_back(2330);
        internalCounters.push_back(2882);
        internalCounters.push_back(3434);
        internalCounters.push_back(3986);
        internalCounters.push_back(2403);
        internalCounters.push_back(2955);
        internalCounters.push_back(3507);
        internalCounters.push_back(4059);
        internalCounters.push_back(2404);
        internalCounters.push_back(2956);
        internalCounters.push_back(3508);
        internalCounters.push_back(4060);
        internalCounters.push_back(2405);
        internalCounters.push_back(2957);
        internalCounters.push_back(3509);
        internalCounters.push_back(4061);
        internalCounters.push_back(2406);
        internalCounters.push_back(2958);
        internalCounters.push_back(3510);
        internalCounters.push_back(4062);

        c.DefineDerivedCounter("HiZQuadsCulled", "DepthAndStencil", "Percentage of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "fa0e319b-5573-6d34-5bab-904769925036");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2327);
        internalCounters.push_back(2879);
        internalCounters.push_back(3431);
        internalCounters.push_back(3983);
        internalCounters.push_back(2328);
        internalCounters.push_back(2880);
        internalCounters.push_back(3432);
        internalCounters.push_back(3984);
        internalCounters.push_back(2329);
        internalCounters.push_back(2881);
        internalCounters.push_back(3433);
        internalCounters.push_back(3985);
        internalCounters.push_back(2330);
        internalCounters.push_back(2882);
        internalCounters.push_back(3434);
        internalCounters.push_back(3986);
        internalCounters.push_back(2403);
        internalCounters.push_back(2955);
        internalCounters.push_back(3507);
        internalCounters.push_back(4059);
        internalCounters.push_back(2404);
        internalCounters.push_back(2956);
        internalCounters.push_back(3508);
        internalCounters.push_back(4060);
        internalCounters.push_back(2405);
        internalCounters.push_back(2957);
        internalCounters.push_back(3509);
        internalCounters.push_back(4061);
        internalCounters.push_back(2406);
        internalCounters.push_back(2958);
        internalCounters.push_back(3510);
        internalCounters.push_back(4062);

        c.DefineDerivedCounter("HiZQuadsCulledCount", "DepthAndStencil", "Count of quads that did not have to continue on in the pipeline after HiZ. They may be written directly to the depth buffer, or culled completely. Consistently low values here may suggest that the Z-range is not being fully utilized.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-,(0),max", "73b0b39d-6df2-3e24-0b5c-7cb0ac8b6f39");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2403);
        internalCounters.push_back(2955);
        internalCounters.push_back(3507);
        internalCounters.push_back(4059);
        internalCounters.push_back(2404);
        internalCounters.push_back(2956);
        internalCounters.push_back(3508);
        internalCounters.push_back(4060);
        internalCounters.push_back(2405);
        internalCounters.push_back(2957);
        internalCounters.push_back(3509);
        internalCounters.push_back(4061);
        internalCounters.push_back(2406);
        internalCounters.push_back(2958);
        internalCounters.push_back(3510);
        internalCounters.push_back(4062);

        c.DefineDerivedCounter("HiZQuadsAcceptedCount", "DepthAndStencil", "Count of quads that did continue on in the pipeline after HiZ.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "59049ad9-42b5-c7cb-3616-6a8f6a8e4894");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2327);
        internalCounters.push_back(2879);
        internalCounters.push_back(3431);
        internalCounters.push_back(3983);
        internalCounters.push_back(2328);
        internalCounters.push_back(2880);
        internalCounters.push_back(3432);
        internalCounters.push_back(3984);
        internalCounters.push_back(2329);
        internalCounters.push_back(2881);
        internalCounters.push_back(3433);
        internalCounters.push_back(3985);
        internalCounters.push_back(2330);
        internalCounters.push_back(2882);
        internalCounters.push_back(3434);
        internalCounters.push_back(3986);
        internalCounters.push_back(2427);
        internalCounters.push_back(2979);
        internalCounters.push_back(3531);
        internalCounters.push_back(4083);
        internalCounters.push_back(2403);
        internalCounters.push_back(2955);
        internalCounters.push_back(3507);
        internalCounters.push_back(4059);
        internalCounters.push_back(2404);
        internalCounters.push_back(2956);
        internalCounters.push_back(3508);
        internalCounters.push_back(4060);
        internalCounters.push_back(2405);
        internalCounters.push_back(2957);
        internalCounters.push_back(3509);
        internalCounters.push_back(4061);
        internalCounters.push_back(2406);
        internalCounters.push_back(2958);
        internalCounters.push_back(3510);
        internalCounters.push_back(4062);

        c.DefineDerivedCounter("PreZQuadsCulled", "DepthAndStencil", "Percentage of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,16,17,18,19,sum4,-,(0),max,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,(100),*", "4e77547b-ec55-5663-f034-af59be66d77d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2327);
        internalCounters.push_back(2879);
        internalCounters.push_back(3431);
        internalCounters.push_back(3983);
        internalCounters.push_back(2328);
        internalCounters.push_back(2880);
        internalCounters.push_back(3432);
        internalCounters.push_back(3984);
        internalCounters.push_back(2329);
        internalCounters.push_back(2881);
        internalCounters.push_back(3433);
        internalCounters.push_back(3985);
        internalCounters.push_back(2330);
        internalCounters.push_back(2882);
        internalCounters.push_back(3434);
        internalCounters.push_back(3986);
        internalCounters.push_back(2427);
        internalCounters.push_back(2979);
        internalCounters.push_back(3531);
        internalCounters.push_back(4083);
        internalCounters.push_back(2403);
        internalCounters.push_back(2955);
        internalCounters.push_back(3507);
        internalCounters.push_back(4059);
        internalCounters.push_back(2404);
        internalCounters.push_back(2956);
        internalCounters.push_back(3508);
        internalCounters.push_back(4060);
        internalCounters.push_back(2405);
        internalCounters.push_back(2957);
        internalCounters.push_back(3509);
        internalCounters.push_back(4061);
        internalCounters.push_back(2406);
        internalCounters.push_back(2958);
        internalCounters.push_back(3510);
        internalCounters.push_back(4062);

        c.DefineDerivedCounter("PreZQuadsCulledCount", "DepthAndStencil", "Count of quads rejected based on the detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,sum4,-,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,sum16,-,(0),max", "1bf169e6-9304-834e-df5f-0c44d7890a08");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2427);
        internalCounters.push_back(2979);
        internalCounters.push_back(3531);
        internalCounters.push_back(4083);
        internalCounters.push_back(2403);
        internalCounters.push_back(2955);
        internalCounters.push_back(3507);
        internalCounters.push_back(4059);
        internalCounters.push_back(2404);
        internalCounters.push_back(2956);
        internalCounters.push_back(3508);
        internalCounters.push_back(4060);
        internalCounters.push_back(2405);
        internalCounters.push_back(2957);
        internalCounters.push_back(3509);
        internalCounters.push_back(4061);
        internalCounters.push_back(2406);
        internalCounters.push_back(2958);
        internalCounters.push_back(3510);
        internalCounters.push_back(4062);

        c.DefineDerivedCounter("PreZQuadsSurvivingCount", "DepthAndStencil", "Count of quads surviving detailZ and earlyZ tests.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,0,1,2,3,sum4,-,(0),max", "50e25e51-3713-89cb-7f92-559cde5e5532");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2427);
        internalCounters.push_back(2979);
        internalCounters.push_back(3531);
        internalCounters.push_back(4083);
        internalCounters.push_back(2327);
        internalCounters.push_back(2879);
        internalCounters.push_back(3431);
        internalCounters.push_back(3983);
        internalCounters.push_back(2328);
        internalCounters.push_back(2880);
        internalCounters.push_back(3432);
        internalCounters.push_back(3984);
        internalCounters.push_back(2329);
        internalCounters.push_back(2881);
        internalCounters.push_back(3433);
        internalCounters.push_back(3985);
        internalCounters.push_back(2330);
        internalCounters.push_back(2882);
        internalCounters.push_back(3434);
        internalCounters.push_back(3986);

        c.DefineDerivedCounter("PostZQuads", "DepthAndStencil", "Percentage of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,sum4,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,sum16,/,(100),*", "58f0d34b-eeb8-e8db-abce-cb72584144be");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(2427);
        internalCounters.push_back(2979);
        internalCounters.push_back(3531);
        internalCounters.push_back(4083);

        c.DefineDerivedCounter("PostZQuadCount", "DepthAndStencil", "Count of quads for which the pixel shader will run and may be postZ tested.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,sum4", "08404526-ce35-939b-34c8-a7a35a0ff4d6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59797);
        internalCounters.push_back(60167);
        internalCounters.push_back(60537);
        internalCounters.push_back(60907);
        internalCounters.push_back(61277);
        internalCounters.push_back(61647);
        internalCounters.push_back(62017);
        internalCounters.push_back(62387);
        internalCounters.push_back(62757);
        internalCounters.push_back(63127);
        internalCounters.push_back(63497);
        internalCounters.push_back(63867);
        internalCounters.push_back(64237);
        internalCounters.push_back(64607);
        internalCounters.push_back(64977);
        internalCounters.push_back(65347);

        c.DefineDerivedCounter("PreZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z before shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "3bfe6c4d-7422-ca03-7ea5-e67ff1a00136");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59799);
        internalCounters.push_back(60169);
        internalCounters.push_back(60539);
        internalCounters.push_back(60909);
        internalCounters.push_back(61279);
        internalCounters.push_back(61649);
        internalCounters.push_back(62019);
        internalCounters.push_back(62389);
        internalCounters.push_back(62759);
        internalCounters.push_back(63129);
        internalCounters.push_back(63499);
        internalCounters.push_back(63869);
        internalCounters.push_back(64239);
        internalCounters.push_back(64609);
        internalCounters.push_back(64979);
        internalCounters.push_back(65349);

        c.DefineDerivedCounter("PreZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z before shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "df7f705e-5162-d3b5-da8b-63466cf9c4e5");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59798);
        internalCounters.push_back(60168);
        internalCounters.push_back(60538);
        internalCounters.push_back(60908);
        internalCounters.push_back(61278);
        internalCounters.push_back(61648);
        internalCounters.push_back(62018);
        internalCounters.push_back(62388);
        internalCounters.push_back(62758);
        internalCounters.push_back(63128);
        internalCounters.push_back(63498);
        internalCounters.push_back(63868);
        internalCounters.push_back(64238);
        internalCounters.push_back(64608);
        internalCounters.push_back(64978);
        internalCounters.push_back(65348);

        c.DefineDerivedCounter("PreZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z before shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4484e950-f7a4-3800-bc74-78dd297f017e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59794);
        internalCounters.push_back(60164);
        internalCounters.push_back(60534);
        internalCounters.push_back(60904);
        internalCounters.push_back(61274);
        internalCounters.push_back(61644);
        internalCounters.push_back(62014);
        internalCounters.push_back(62384);
        internalCounters.push_back(62754);
        internalCounters.push_back(63124);
        internalCounters.push_back(63494);
        internalCounters.push_back(63864);
        internalCounters.push_back(64234);
        internalCounters.push_back(64604);
        internalCounters.push_back(64974);
        internalCounters.push_back(65344);

        c.DefineDerivedCounter("PostZSamplesPassing", "DepthAndStencil", "Number of samples tested for Z after shading and passed.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "4995d5d6-2330-b986-508b-fae24856f44c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59796);
        internalCounters.push_back(60166);
        internalCounters.push_back(60536);
        internalCounters.push_back(60906);
        internalCounters.push_back(61276);
        internalCounters.push_back(61646);
        internalCounters.push_back(62016);
        internalCounters.push_back(62386);
        internalCounters.push_back(62756);
        internalCounters.push_back(63126);
        internalCounters.push_back(63496);
        internalCounters.push_back(63866);
        internalCounters.push_back(64236);
        internalCounters.push_back(64606);
        internalCounters.push_back(64976);
        internalCounters.push_back(65346);

        c.DefineDerivedCounter("PostZSamplesFailingS", "DepthAndStencil", "Number of samples tested for Z after shading and failed stencil test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "ae558af4-f4be-3dd4-7316-b2c4dcf0def8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59795);
        internalCounters.push_back(60165);
        internalCounters.push_back(60535);
        internalCounters.push_back(60905);
        internalCounters.push_back(61275);
        internalCounters.push_back(61645);
        internalCounters.push_back(62015);
        internalCounters.push_back(62385);
        internalCounters.push_back(62755);
        internalCounters.push_back(63125);
        internalCounters.push_back(63495);
        internalCounters.push_back(63865);
        internalCounters.push_back(64235);
        internalCounters.push_back(64605);
        internalCounters.push_back(64975);
        internalCounters.push_back(65345);

        c.DefineDerivedCounter("PostZSamplesFailingZ", "DepthAndStencil", "Number of samples tested for Z after shading and failed Z test.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b3684c94-814a-c695-c85d-a5b6ab798b35");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59666);
        internalCounters.push_back(60036);
        internalCounters.push_back(60406);
        internalCounters.push_back(60776);
        internalCounters.push_back(61146);
        internalCounters.push_back(61516);
        internalCounters.push_back(61886);
        internalCounters.push_back(62256);
        internalCounters.push_back(62626);
        internalCounters.push_back(62996);
        internalCounters.push_back(63366);
        internalCounters.push_back(63736);
        internalCounters.push_back(64106);
        internalCounters.push_back(64476);
        internalCounters.push_back(64846);
        internalCounters.push_back(65216);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("ZUnitStalled", "DepthAndStencil", "The percentage of GPUTime the depth buffer spends waiting for the color buffer to be ready to accept data. High figures here indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16,16,/,(100),*", "5e86c3ad-1726-3157-1d01-7ed188bf854d");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59666);
        internalCounters.push_back(60036);
        internalCounters.push_back(60406);
        internalCounters.push_back(60776);
        internalCounters.push_back(61146);
        internalCounters.push_back(61516);
        internalCounters.push_back(61886);
        internalCounters.push_back(62256);
        internalCounters.push_back(62626);
        internalCounters.push_back(62996);
        internalCounters.push_back(63366);
        internalCounters.push_back(63736);
        internalCounters.push_back(64106);
        internalCounters.push_back(64476);
        internalCounters.push_back(64846);
        internalCounters.push_back(65216);

        c.DefineDerivedCounter("ZUnitStalledCycles", "DepthAndStencil", "Number of GPU cycles the depth buffer spends waiting for the color buffer to be ready to accept data. Larger numbers indicate a bottleneck in color buffer operations.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,max16", "4351fa7f-6737-2c3e-3ffb-b3addbdceedd");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59668);
        internalCounters.push_back(60038);
        internalCounters.push_back(60408);
        internalCounters.push_back(60778);
        internalCounters.push_back(61148);
        internalCounters.push_back(61518);
        internalCounters.push_back(61888);
        internalCounters.push_back(62258);
        internalCounters.push_back(62628);
        internalCounters.push_back(62998);
        internalCounters.push_back(63368);
        internalCounters.push_back(63738);
        internalCounters.push_back(64108);
        internalCounters.push_back(64478);
        internalCounters.push_back(64848);
        internalCounters.push_back(65218);
        internalCounters.push_back(59675);
        internalCounters.push_back(60045);
        internalCounters.push_back(60415);
        internalCounters.push_back(60785);
        internalCounters.push_back(61155);
        internalCounters.push_back(61525);
        internalCounters.push_back(61895);
        internalCounters.push_back(62265);
        internalCounters.push_back(62635);
        internalCounters.push_back(63005);
        internalCounters.push_back(63375);
        internalCounters.push_back(63745);
        internalCounters.push_back(64115);
        internalCounters.push_back(64485);
        internalCounters.push_back(64855);
        internalCounters.push_back(65225);

        c.DefineDerivedCounter("DBMemRead", "DepthAndStencil", "Number of bytes read from the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(256),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "dcdb4ee7-bd50-00f7-c028-9e5f4ce888c0");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(59680);
        internalCounters.push_back(60050);
        internalCounters.push_back(60420);
        internalCounters.push_back(60790);
        internalCounters.push_back(61160);
        internalCounters.push_back(61530);
        internalCounters.push_back(61900);
        internalCounters.push_back(62270);
        internalCounters.push_back(62640);
        internalCounters.push_back(63010);
        internalCounters.push_back(63380);
        internalCounters.push_back(63750);
        internalCounters.push_back(64120);
        internalCounters.push_back(64490);
        internalCounters.push_back(64860);
        internalCounters.push_back(65230);
        internalCounters.push_back(59683);
        internalCounters.push_back(60053);
        internalCounters.push_back(60423);
        internalCounters.push_back(60793);
        internalCounters.push_back(61163);
        internalCounters.push_back(61533);
        internalCounters.push_back(61903);
        internalCounters.push_back(62273);
        internalCounters.push_back(62643);
        internalCounters.push_back(63013);
        internalCounters.push_back(63383);
        internalCounters.push_back(63753);
        internalCounters.push_back(64123);
        internalCounters.push_back(64493);
        internalCounters.push_back(64863);
        internalCounters.push_back(65233);

        c.DefineDerivedCounter("DBMemWritten", "DepthAndStencil", "Number of bytes written to the depth buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,(32),*,+", "de5717f8-8a49-ee44-4645-10de51b37dcf");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(71588);
        internalCounters.push_back(72049);
        internalCounters.push_back(72510);
        internalCounters.push_back(72971);
        internalCounters.push_back(73432);
        internalCounters.push_back(73893);
        internalCounters.push_back(74354);
        internalCounters.push_back(74815);
        internalCounters.push_back(75276);
        internalCounters.push_back(75737);
        internalCounters.push_back(76198);
        internalCounters.push_back(76659);
        internalCounters.push_back(77120);
        internalCounters.push_back(77581);
        internalCounters.push_back(78042);
        internalCounters.push_back(78503);

        c.DefineDerivedCounter("CBMemRead", "ColorBuffer", "Number of bytes read from the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "84b531d8-a1f8-7f49-7c27-7bc97801f1e6");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(71719);
        internalCounters.push_back(72180);
        internalCounters.push_back(72641);
        internalCounters.push_back(73102);
        internalCounters.push_back(73563);
        internalCounters.push_back(74024);
        internalCounters.push_back(74485);
        internalCounters.push_back(74946);
        internalCounters.push_back(75407);
        internalCounters.push_back(75868);
        internalCounters.push_back(76329);
        internalCounters.push_back(76790);
        internalCounters.push_back(77251);
        internalCounters.push_back(77712);
        internalCounters.push_back(78173);
        internalCounters.push_back(78634);
        internalCounters.push_back(71586);
        internalCounters.push_back(72047);
        internalCounters.push_back(72508);
        internalCounters.push_back(72969);
        internalCounters.push_back(73430);
        internalCounters.push_back(73891);
        internalCounters.push_back(74352);
        internalCounters.push_back(74813);
        internalCounters.push_back(75274);
        internalCounters.push_back(75735);
        internalCounters.push_back(76196);
        internalCounters.push_back(76657);
        internalCounters.push_back(77118);
        internalCounters.push_back(77579);
        internalCounters.push_back(78040);
        internalCounters.push_back(78501);
        internalCounters.push_back(71587);
        internalCounters.push_back(72048);
        internalCounters.push_back(72509);
        internalCounters.push_back(72970);
        internalCounters.push_back(73431);
        internalCounters.push_back(73892);
        internalCounters.push_back(74353);
        internalCounters.push_back(74814);
        internalCounters.push_back(75275);
        internalCounters.push_back(75736);
        internalCounters.push_back(76197);
        internalCounters.push_back(76658);
        internalCounters.push_back(77119);
        internalCounters.push_back(77580);
        internalCounters.push_back(78041);
        internalCounters.push_back(78502);
        internalCounters.push_back(71588);
        internalCounters.push_back(72049);
        internalCounters.push_back(72510);
        internalCounters.push_back(72971);
        internalCounters.push_back(73432);
        internalCounters.push_back(73893);
        internalCounters.push_back(74354);
        internalCounters.push_back(74815);
        internalCounters.push_back(75276);
        internalCounters.push_back(75737);
        internalCounters.push_back(76198);
        internalCounters.push_back(76659);
        internalCounters.push_back(77120);
        internalCounters.push_back(77581);
        internalCounters.push_back(78042);
        internalCounters.push_back(78503);

        c.DefineDerivedCounter("CBColorAndMaskRead", "ColorBuffer", "Total number of bytes read from the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "da41660e-eb6f-32ec-8a64-b32ca17bd7eb");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(71578);
        internalCounters.push_back(72039);
        internalCounters.push_back(72500);
        internalCounters.push_back(72961);
        internalCounters.push_back(73422);
        internalCounters.push_back(73883);
        internalCounters.push_back(74344);
        internalCounters.push_back(74805);
        internalCounters.push_back(75266);
        internalCounters.push_back(75727);
        internalCounters.push_back(76188);
        internalCounters.push_back(76649);
        internalCounters.push_back(77110);
        internalCounters.push_back(77571);
        internalCounters.push_back(78032);
        internalCounters.push_back(78493);

        c.DefineDerivedCounter("CBMemWritten", "ColorBuffer", "Number of bytes written to the color buffer.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "550f8ff8-60b6-a6bf-87d0-25ac9e87de70");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(71717);
        internalCounters.push_back(72178);
        internalCounters.push_back(72639);
        internalCounters.push_back(73100);
        internalCounters.push_back(73561);
        internalCounters.push_back(74022);
        internalCounters.push_back(74483);
        internalCounters.push_back(74944);
        internalCounters.push_back(75405);
        internalCounters.push_back(75866);
        internalCounters.push_back(76327);
        internalCounters.push_back(76788);
        internalCounters.push_back(77249);
        internalCounters.push_back(77710);
        internalCounters.push_back(78171);
        internalCounters.push_back(78632);
        internalCounters.push_back(71576);
        internalCounters.push_back(72037);
        internalCounters.push_back(72498);
        internalCounters.push_back(72959);
        internalCounters.push_back(73420);
        internalCounters.push_back(73881);
        internalCounters.push_back(74342);
        internalCounters.push_back(74803);
        internalCounters.push_back(75264);
        internalCounters.push_back(75725);
        internalCounters.push_back(76186);
        internalCounters.push_back(76647);
        internalCounters.push_back(77108);
        internalCounters.push_back(77569);
        internalCounters.push_back(78030);
        internalCounters.push_back(78491);
        internalCounters.push_back(71577);
        internalCounters.push_back(72038);
        internalCounters.push_back(72499);
        internalCounters.push_back(72960);
        internalCounters.push_back(73421);
        internalCounters.push_back(73882);
        internalCounters.push_back(74343);
        internalCounters.push_back(74804);
        internalCounters.push_back(75265);
        internalCounters.push_back(75726);
        internalCounters.push_back(76187);
        internalCounters.push_back(76648);
        internalCounters.push_back(77109);
        internalCounters.push_back(77570);
        internalCounters.push_back(78031);
        internalCounters.push_back(78492);
        internalCounters.push_back(71578);
        internalCounters.push_back(72039);
        internalCounters.push_back(72500);
        internalCounters.push_back(72961);
        internalCounters.push_back(73422);
        internalCounters.push_back(73883);
        internalCounters.push_back(74344);
        internalCounters.push_back(74805);
        internalCounters.push_back(75266);
        internalCounters.push_back(75727);
        internalCounters.push_back(76188);
        internalCounters.push_back(76649);
        internalCounters.push_back(77110);
        internalCounters.push_back(77571);
        internalCounters.push_back(78032);
        internalCounters.push_back(78493);

        c.DefineDerivedCounter("CBColorAndMaskWritten", "ColorBuffer", "Total number of bytes written to the color and mask buffers.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,sum64,(32),*", "29a04b69-8f5f-b770-a0f2-3453e2c99e49");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(71622);
        internalCounters.push_back(72083);
        internalCounters.push_back(72544);
        internalCounters.push_back(73005);
        internalCounters.push_back(73466);
        internalCounters.push_back(73927);
        internalCounters.push_back(74388);
        internalCounters.push_back(74849);
        internalCounters.push_back(75310);
        internalCounters.push_back(75771);
        internalCounters.push_back(76232);
        internalCounters.push_back(76693);
        internalCounters.push_back(77154);
        internalCounters.push_back(77615);
        internalCounters.push_back(78076);
        internalCounters.push_back(78537);
        internalCounters.push_back(71467);
        internalCounters.push_back(71928);
        internalCounters.push_back(72389);
        internalCounters.push_back(72850);
        internalCounters.push_back(73311);
        internalCounters.push_back(73772);
        internalCounters.push_back(74233);
        internalCounters.push_back(74694);
        internalCounters.push_back(75155);
        internalCounters.push_back(75616);
        internalCounters.push_back(76077);
        internalCounters.push_back(76538);
        internalCounters.push_back(76999);
        internalCounters.push_back(77460);
        internalCounters.push_back(77921);
        internalCounters.push_back(78382);

        c.DefineDerivedCounter("CBSlowPixelPct", "ColorBuffer", "Percentage of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,/,(100),*,(100),min", "5775943f-0313-7e52-9638-b24a449197bc");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(71622);
        internalCounters.push_back(72083);
        internalCounters.push_back(72544);
        internalCounters.push_back(73005);
        internalCounters.push_back(73466);
        internalCounters.push_back(73927);
        internalCounters.push_back(74388);
        internalCounters.push_back(74849);
        internalCounters.push_back(75310);
        internalCounters.push_back(75771);
        internalCounters.push_back(76232);
        internalCounters.push_back(76693);
        internalCounters.push_back(77154);
        internalCounters.push_back(77615);
        internalCounters.push_back(78076);
        internalCounters.push_back(78537);

        c.DefineDerivedCounter("CBSlowPixelCount", "ColorBuffer", "Number of pixels written to the color buffer using a half-rate or quarter-rate format.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "47eacbb0-28c8-22b4-5c69-c00d5813bb1c");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53469);
        internalCounters.push_back(53546);
        internalCounters.push_back(53623);
        internalCounters.push_back(53700);
        internalCounters.push_back(53777);
        internalCounters.push_back(53854);
        internalCounters.push_back(53931);
        internalCounters.push_back(54008);
        internalCounters.push_back(54085);
        internalCounters.push_back(54162);
        internalCounters.push_back(54239);
        internalCounters.push_back(54316);
        internalCounters.push_back(54393);
        internalCounters.push_back(54470);
        internalCounters.push_back(54547);
        internalCounters.push_back(54624);
        internalCounters.push_back(54701);
        internalCounters.push_back(54778);
        internalCounters.push_back(54855);
        internalCounters.push_back(54932);
        internalCounters.push_back(55009);
        internalCounters.push_back(55086);
        internalCounters.push_back(55163);
        internalCounters.push_back(55240);
        internalCounters.push_back(55317);
        internalCounters.push_back(55394);
        internalCounters.push_back(55471);
        internalCounters.push_back(55548);
        internalCounters.push_back(55625);
        internalCounters.push_back(55702);
        internalCounters.push_back(55779);
        internalCounters.push_back(55856);
        internalCounters.push_back(55933);
        internalCounters.push_back(56010);
        internalCounters.push_back(56087);
        internalCounters.push_back(56164);
        internalCounters.push_back(56241);
        internalCounters.push_back(56318);
        internalCounters.push_back(56395);
        internalCounters.push_back(56472);
        internalCounters.push_back(56549);
        internalCounters.push_back(56626);
        internalCounters.push_back(56703);
        internalCounters.push_back(56780);
        internalCounters.push_back(56857);
        internalCounters.push_back(56934);
        internalCounters.push_back(57011);
        internalCounters.push_back(57088);
        internalCounters.push_back(57165);
        internalCounters.push_back(57242);
        internalCounters.push_back(57319);
        internalCounters.push_back(57396);
        internalCounters.push_back(57473);
        internalCounters.push_back(57550);
        internalCounters.push_back(57627);
        internalCounters.push_back(57704);
        internalCounters.push_back(57781);
        internalCounters.push_back(57858);
        internalCounters.push_back(57935);
        internalCounters.push_back(58012);
        internalCounters.push_back(58089);
        internalCounters.push_back(58166);
        internalCounters.push_back(58243);
        internalCounters.push_back(58320);
        internalCounters.push_back(58397);
        internalCounters.push_back(58474);
        internalCounters.push_back(58551);
        internalCounters.push_back(58628);
        internalCounters.push_back(58705);
        internalCounters.push_back(58782);
        internalCounters.push_back(58859);
        internalCounters.push_back(58936);
        internalCounters.push_back(59013);
        internalCounters.push_back(59090);
        internalCounters.push_back(59167);
        internalCounters.push_back(59244);
        internalCounters.push_back(59321);
        internalCounters.push_back(59398);
        internalCounters.push_back(59475);
        internalCounters.push_back(59552);
        internalCounters.push_back(53478);
        internalCounters.push_back(53555);
        internalCounters.push_back(53632);
        internalCounters.push_back(53709);
        internalCounters.push_back(53786);
        internalCounters.push_back(53863);
        internalCounters.push_back(53940);
        internalCounters.push_back(54017);
        internalCounters.push_back(54094);
        internalCounters.push_back(54171);
        internalCounters.push_back(54248);
        internalCounters.push_back(54325);
        internalCounters.push_back(54402);
        internalCounters.push_back(54479);
        internalCounters.push_back(54556);
        internalCounters.push_back(54633);
        internalCounters.push_back(54710);
        internalCounters.push_back(54787);
        internalCounters.push_back(54864);
        internalCounters.push_back(54941);
        internalCounters.push_back(55018);
        internalCounters.push_back(55095);
        internalCounters.push_back(55172);
        internalCounters.push_back(55249);
        internalCounters.push_back(55326);
        internalCounters.push_back(55403);
        internalCounters.push_back(55480);
        internalCounters.push_back(55557);
        internalCounters.push_back(55634);
        internalCounters.push_back(55711);
        internalCounters.push_back(55788);
        internalCounters.push_back(55865);
        internalCounters.push_back(55942);
        internalCounters.push_back(56019);
        internalCounters.push_back(56096);
        internalCounters.push_back(56173);
        internalCounters.push_back(56250);
        internalCounters.push_back(56327);
        internalCounters.push_back(56404);
        internalCounters.push_back(56481);
        internalCounters.push_back(56558);
        internalCounters.push_back(56635);
        internalCounters.push_back(56712);
        internalCounters.push_back(56789);
        internalCounters.push_back(56866);
        internalCounters.push_back(56943);
        internalCounters.push_back(57020);
        internalCounters.push_back(57097);
        internalCounters.push_back(57174);
        internalCounters.push_back(57251);
        internalCounters.push_back(57328);
        internalCounters.push_back(57405);
        internalCounters.push_back(57482);
        internalCounters.push_back(57559);
        internalCounters.push_back(57636);
        internalCounters.push_back(57713);
        internalCounters.push_back(57790);
        internalCounters.push_back(57867);
        internalCounters.push_back(57944);
        internalCounters.push_back(58021);
        internalCounters.push_back(58098);
        internalCounters.push_back(58175);
        internalCounters.push_back(58252);
        internalCounters.push_back(58329);
        internalCounters.push_back(58406);
        internalCounters.push_back(58483);
        internalCounters.push_back(58560);
        internalCounters.push_back(58637);
        internalCounters.push_back(58714);
        internalCounters.push_back(58791);
        internalCounters.push_back(58868);
        internalCounters.push_back(58945);
        internalCounters.push_back(59022);
        internalCounters.push_back(59099);
        internalCounters.push_back(59176);
        internalCounters.push_back(59253);
        internalCounters.push_back(59330);
        internalCounters.push_back(59407);
        internalCounters.push_back(59484);
        internalCounters.push_back(59561);

        c.DefineDerivedCounter("L0CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L0 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,ifnotzero", "be1e0578-82b8-ad7f-ba3f-3afce150937a");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53469);
        internalCounters.push_back(53546);
        internalCounters.push_back(53623);
        internalCounters.push_back(53700);
        internalCounters.push_back(53777);
        internalCounters.push_back(53854);
        internalCounters.push_back(53931);
        internalCounters.push_back(54008);
        internalCounters.push_back(54085);
        internalCounters.push_back(54162);
        internalCounters.push_back(54239);
        internalCounters.push_back(54316);
        internalCounters.push_back(54393);
        internalCounters.push_back(54470);
        internalCounters.push_back(54547);
        internalCounters.push_back(54624);
        internalCounters.push_back(54701);
        internalCounters.push_back(54778);
        internalCounters.push_back(54855);
        internalCounters.push_back(54932);
        internalCounters.push_back(55009);
        internalCounters.push_back(55086);
        internalCounters.push_back(55163);
        internalCounters.push_back(55240);
        internalCounters.push_back(55317);
        internalCounters.push_back(55394);
        internalCounters.push_back(55471);
        internalCounters.push_back(55548);
        internalCounters.push_back(55625);
        internalCounters.push_back(55702);
        internalCounters.push_back(55779);
        internalCounters.push_back(55856);
        internalCounters.push_back(55933);
        internalCounters.push_back(56010);
        internalCounters.push_back(56087);
        internalCounters.push_back(56164);
        internalCounters.push_back(56241);
        internalCounters.push_back(56318);
        internalCounters.push_back(56395);
        internalCounters.push_back(56472);
        internalCounters.push_back(56549);
        internalCounters.push_back(56626);
        internalCounters.push_back(56703);
        internalCounters.push_back(56780);
        internalCounters.push_back(56857);
        internalCounters.push_back(56934);
        internalCounters.push_back(57011);
        internalCounters.push_back(57088);
        internalCounters.push_back(57165);
        internalCounters.push_back(57242);
        internalCounters.push_back(57319);
        internalCounters.push_back(57396);
        internalCounters.push_back(57473);
        internalCounters.push_back(57550);
        internalCounters.push_back(57627);
        internalCounters.push_back(57704);
        internalCounters.push_back(57781);
        internalCounters.push_back(57858);
        internalCounters.push_back(57935);
        internalCounters.push_back(58012);
        internalCounters.push_back(58089);
        internalCounters.push_back(58166);
        internalCounters.push_back(58243);
        internalCounters.push_back(58320);
        internalCounters.push_back(58397);
        internalCounters.push_back(58474);
        internalCounters.push_back(58551);
        internalCounters.push_back(58628);
        internalCounters.push_back(58705);
        internalCounters.push_back(58782);
        internalCounters.push_back(58859);
        internalCounters.push_back(58936);
        internalCounters.push_back(59013);
        internalCounters.push_back(59090);
        internalCounters.push_back(59167);
        internalCounters.push_back(59244);
        internalCounters.push_back(59321);
        internalCounters.push_back(59398);
        internalCounters.push_back(59475);
        internalCounters.push_back(59552);
        internalCounters.push_back(53478);
        internalCounters.push_back(53555);
        internalCounters.push_back(53632);
        internalCounters.push_back(53709);
        internalCounters.push_back(53786);
        internalCounters.push_back(53863);
        internalCounters.push_back(53940);
        internalCounters.push_back(54017);
        internalCounters.push_back(54094);
        internalCounters.push_back(54171);
        internalCounters.push_back(54248);
        internalCounters.push_back(54325);
        internalCounters.push_back(54402);
        internalCounters.push_back(54479);
        internalCounters.push_back(54556);
        internalCounters.push_back(54633);
        internalCounters.push_back(54710);
        internalCounters.push_back(54787);
        internalCounters.push_back(54864);
        internalCounters.push_back(54941);
        internalCounters.push_back(55018);
        internalCounters.push_back(55095);
        internalCounters.push_back(55172);
        internalCounters.push_back(55249);
        internalCounters.push_back(55326);
        internalCounters.push_back(55403);
        internalCounters.push_back(55480);
        internalCounters.push_back(55557);
        internalCounters.push_back(55634);
        internalCounters.push_back(55711);
        internalCounters.push_back(55788);
        internalCounters.push_back(55865);
        internalCounters.push_back(55942);
        internalCounters.push_back(56019);
        internalCounters.push_back(56096);
        internalCounters.push_back(56173);
        internalCounters.push_back(56250);
        internalCounters.push_back(56327);
        internalCounters.push_back(56404);
        internalCounters.push_back(56481);
        internalCounters.push_back(56558);
        internalCounters.push_back(56635);
        internalCounters.push_back(56712);
        internalCounters.push_back(56789);
        internalCounters.push_back(56866);
        internalCounters.push_back(56943);
        internalCounters.push_back(57020);
        internalCounters.push_back(57097);
        internalCounters.push_back(57174);
        internalCounters.push_back(57251);
        internalCounters.push_back(57328);
        internalCounters.push_back(57405);
        internalCounters.push_back(57482);
        internalCounters.push_back(57559);
        internalCounters.push_back(57636);
        internalCounters.push_back(57713);
        internalCounters.push_back(57790);
        internalCounters.push_back(57867);
        internalCounters.push_back(57944);
        internalCounters.push_back(58021);
        internalCounters.push_back(58098);
        internalCounters.push_back(58175);
        internalCounters.push_back(58252);
        internalCounters.push_back(58329);
        internalCounters.push_back(58406);
        internalCounters.push_back(58483);
        internalCounters.push_back(58560);
        internalCounters.push_back(58637);
        internalCounters.push_back(58714);
        internalCounters.push_back(58791);
        internalCounters.push_back(58868);
        internalCounters.push_back(58945);
        internalCounters.push_back(59022);
        internalCounters.push_back(59099);
        internalCounters.push_back(59176);
        internalCounters.push_back(59253);
        internalCounters.push_back(59330);
        internalCounters.push_back(59407);
        internalCounters.push_back(59484);
        internalCounters.push_back(59561);

        c.DefineDerivedCounter("L0CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L0 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,sum80,-", "467f8740-98f0-2211-b8e2-3d60c40d9921");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53478);
        internalCounters.push_back(53555);
        internalCounters.push_back(53632);
        internalCounters.push_back(53709);
        internalCounters.push_back(53786);
        internalCounters.push_back(53863);
        internalCounters.push_back(53940);
        internalCounters.push_back(54017);
        internalCounters.push_back(54094);
        internalCounters.push_back(54171);
        internalCounters.push_back(54248);
        internalCounters.push_back(54325);
        internalCounters.push_back(54402);
        internalCounters.push_back(54479);
        internalCounters.push_back(54556);
        internalCounters.push_back(54633);
        internalCounters.push_back(54710);
        internalCounters.push_back(54787);
        internalCounters.push_back(54864);
        internalCounters.push_back(54941);
        internalCounters.push_back(55018);
        internalCounters.push_back(55095);
        internalCounters.push_back(55172);
        internalCounters.push_back(55249);
        internalCounters.push_back(55326);
        internalCounters.push_back(55403);
        internalCounters.push_back(55480);
        internalCounters.push_back(55557);
        internalCounters.push_back(55634);
        internalCounters.push_back(55711);
        internalCounters.push_back(55788);
        internalCounters.push_back(55865);
        internalCounters.push_back(55942);
        internalCounters.push_back(56019);
        internalCounters.push_back(56096);
        internalCounters.push_back(56173);
        internalCounters.push_back(56250);
        internalCounters.push_back(56327);
        internalCounters.push_back(56404);
        internalCounters.push_back(56481);
        internalCounters.push_back(56558);
        internalCounters.push_back(56635);
        internalCounters.push_back(56712);
        internalCounters.push_back(56789);
        internalCounters.push_back(56866);
        internalCounters.push_back(56943);
        internalCounters.push_back(57020);
        internalCounters.push_back(57097);
        internalCounters.push_back(57174);
        internalCounters.push_back(57251);
        internalCounters.push_back(57328);
        internalCounters.push_back(57405);
        internalCounters.push_back(57482);
        internalCounters.push_back(57559);
        internalCounters.push_back(57636);
        internalCounters.push_back(57713);
        internalCounters.push_back(57790);
        internalCounters.push_back(57867);
        internalCounters.push_back(57944);
        internalCounters.push_back(58021);
        internalCounters.push_back(58098);
        internalCounters.push_back(58175);
        internalCounters.push_back(58252);
        internalCounters.push_back(58329);
        internalCounters.push_back(58406);
        internalCounters.push_back(58483);
        internalCounters.push_back(58560);
        internalCounters.push_back(58637);
        internalCounters.push_back(58714);
        internalCounters.push_back(58791);
        internalCounters.push_back(58868);
        internalCounters.push_back(58945);
        internalCounters.push_back(59022);
        internalCounters.push_back(59099);
        internalCounters.push_back(59176);
        internalCounters.push_back(59253);
        internalCounters.push_back(59330);
        internalCounters.push_back(59407);
        internalCounters.push_back(59484);
        internalCounters.push_back(59561);

        c.DefineDerivedCounter("L0CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L0 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,sum80", "db23a1fd-a359-64d4-7283-f6a02bd8db64");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93885);
        internalCounters.push_back(93949);
        internalCounters.push_back(94013);
        internalCounters.push_back(94077);
        internalCounters.push_back(94141);
        internalCounters.push_back(94205);
        internalCounters.push_back(94269);
        internalCounters.push_back(94333);
        internalCounters.push_back(94397);
        internalCounters.push_back(94461);
        internalCounters.push_back(94525);
        internalCounters.push_back(94589);
        internalCounters.push_back(94653);
        internalCounters.push_back(94717);
        internalCounters.push_back(94781);
        internalCounters.push_back(94845);
        internalCounters.push_back(93889);
        internalCounters.push_back(93953);
        internalCounters.push_back(94017);
        internalCounters.push_back(94081);
        internalCounters.push_back(94145);
        internalCounters.push_back(94209);
        internalCounters.push_back(94273);
        internalCounters.push_back(94337);
        internalCounters.push_back(94401);
        internalCounters.push_back(94465);
        internalCounters.push_back(94529);
        internalCounters.push_back(94593);
        internalCounters.push_back(94657);
        internalCounters.push_back(94721);
        internalCounters.push_back(94785);
        internalCounters.push_back(94849);

        c.DefineDerivedCounter("L1CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the data in L1 cache. Writes and atomics always miss this cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,ifnotzero", "b10c589c-f7a5-b8f2-46c2-e0aed4a84105");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93885);
        internalCounters.push_back(93949);
        internalCounters.push_back(94013);
        internalCounters.push_back(94077);
        internalCounters.push_back(94141);
        internalCounters.push_back(94205);
        internalCounters.push_back(94269);
        internalCounters.push_back(94333);
        internalCounters.push_back(94397);
        internalCounters.push_back(94461);
        internalCounters.push_back(94525);
        internalCounters.push_back(94589);
        internalCounters.push_back(94653);
        internalCounters.push_back(94717);
        internalCounters.push_back(94781);
        internalCounters.push_back(94845);
        internalCounters.push_back(93889);
        internalCounters.push_back(93953);
        internalCounters.push_back(94017);
        internalCounters.push_back(94081);
        internalCounters.push_back(94145);
        internalCounters.push_back(94209);
        internalCounters.push_back(94273);
        internalCounters.push_back(94337);
        internalCounters.push_back(94401);
        internalCounters.push_back(94465);
        internalCounters.push_back(94529);
        internalCounters.push_back(94593);
        internalCounters.push_back(94657);
        internalCounters.push_back(94721);
        internalCounters.push_back(94785);
        internalCounters.push_back(94849);

        c.DefineDerivedCounter("L1CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the data in L1 cache. Writes and atomics always miss this cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,sum16,-", "e58da8e8-3c2d-723d-9e95-97888210155b");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(93889);
        internalCounters.push_back(93953);
        internalCounters.push_back(94017);
        internalCounters.push_back(94081);
        internalCounters.push_back(94145);
        internalCounters.push_back(94209);
        internalCounters.push_back(94273);
        internalCounters.push_back(94337);
        internalCounters.push_back(94401);
        internalCounters.push_back(94465);
        internalCounters.push_back(94529);
        internalCounters.push_back(94593);
        internalCounters.push_back(94657);
        internalCounters.push_back(94721);
        internalCounters.push_back(94785);
        internalCounters.push_back(94849);

        c.DefineDerivedCounter("L1CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the data in L1 cache. Writes and atomics always miss this cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16", "b9ee1c8c-9c9b-8b7e-6d9b-a7a94053a0ee");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96478);
        internalCounters.push_back(96713);
        internalCounters.push_back(96948);
        internalCounters.push_back(97183);
        internalCounters.push_back(97418);
        internalCounters.push_back(97653);
        internalCounters.push_back(97888);
        internalCounters.push_back(98123);
        internalCounters.push_back(98358);
        internalCounters.push_back(98593);
        internalCounters.push_back(98828);
        internalCounters.push_back(99063);
        internalCounters.push_back(99298);
        internalCounters.push_back(99533);
        internalCounters.push_back(99768);
        internalCounters.push_back(100003);
        internalCounters.push_back(100238);
        internalCounters.push_back(100473);
        internalCounters.push_back(100708);
        internalCounters.push_back(100943);
        internalCounters.push_back(101178);
        internalCounters.push_back(101413);
        internalCounters.push_back(101648);
        internalCounters.push_back(101883);
        internalCounters.push_back(96510);
        internalCounters.push_back(96745);
        internalCounters.push_back(96980);
        internalCounters.push_back(97215);
        internalCounters.push_back(97450);
        internalCounters.push_back(97685);
        internalCounters.push_back(97920);
        internalCounters.push_back(98155);
        internalCounters.push_back(98390);
        internalCounters.push_back(98625);
        internalCounters.push_back(98860);
        internalCounters.push_back(99095);
        internalCounters.push_back(99330);
        internalCounters.push_back(99565);
        internalCounters.push_back(99800);
        internalCounters.push_back(100035);
        internalCounters.push_back(100270);
        internalCounters.push_back(100505);
        internalCounters.push_back(100740);
        internalCounters.push_back(100975);
        internalCounters.push_back(101210);
        internalCounters.push_back(101445);
        internalCounters.push_back(101680);
        internalCounters.push_back(101915);

        c.DefineDerivedCounter("L2CacheHit", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that hit the L2 cache. Value range: 0% (no hit) to 100% (optimal).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "(0),(1),24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,/,-,(100),*,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,ifnotzero", "d78fdf66-104f-8372-02c1-91d07d7dc62e");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96510);
        internalCounters.push_back(96745);
        internalCounters.push_back(96980);
        internalCounters.push_back(97215);
        internalCounters.push_back(97450);
        internalCounters.push_back(97685);
        internalCounters.push_back(97920);
        internalCounters.push_back(98155);
        internalCounters.push_back(98390);
        internalCounters.push_back(98625);
        internalCounters.push_back(98860);
        internalCounters.push_back(99095);
        internalCounters.push_back(99330);
        internalCounters.push_back(99565);
        internalCounters.push_back(99800);
        internalCounters.push_back(100035);
        internalCounters.push_back(100270);
        internalCounters.push_back(100505);
        internalCounters.push_back(100740);
        internalCounters.push_back(100975);
        internalCounters.push_back(101210);
        internalCounters.push_back(101445);
        internalCounters.push_back(101680);
        internalCounters.push_back(101915);
        internalCounters.push_back(96478);
        internalCounters.push_back(96713);
        internalCounters.push_back(96948);
        internalCounters.push_back(97183);
        internalCounters.push_back(97418);
        internalCounters.push_back(97653);
        internalCounters.push_back(97888);
        internalCounters.push_back(98123);
        internalCounters.push_back(98358);
        internalCounters.push_back(98593);
        internalCounters.push_back(98828);
        internalCounters.push_back(99063);
        internalCounters.push_back(99298);
        internalCounters.push_back(99533);
        internalCounters.push_back(99768);
        internalCounters.push_back(100003);
        internalCounters.push_back(100238);
        internalCounters.push_back(100473);
        internalCounters.push_back(100708);
        internalCounters.push_back(100943);
        internalCounters.push_back(101178);
        internalCounters.push_back(101413);
        internalCounters.push_back(101648);
        internalCounters.push_back(101883);

        c.DefineDerivedCounter("L2CacheMiss", "GlobalMemory", "The percentage of fetch, write, atomic, and other instructions that miss the L2 cache. Value range: 0% (optimal) to 100% (all miss).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,/,(100),*", "4cd70885-41b3-25cd-92db-c76a0decc634");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96478);
        internalCounters.push_back(96713);
        internalCounters.push_back(96948);
        internalCounters.push_back(97183);
        internalCounters.push_back(97418);
        internalCounters.push_back(97653);
        internalCounters.push_back(97888);
        internalCounters.push_back(98123);
        internalCounters.push_back(98358);
        internalCounters.push_back(98593);
        internalCounters.push_back(98828);
        internalCounters.push_back(99063);
        internalCounters.push_back(99298);
        internalCounters.push_back(99533);
        internalCounters.push_back(99768);
        internalCounters.push_back(100003);
        internalCounters.push_back(100238);
        internalCounters.push_back(100473);
        internalCounters.push_back(100708);
        internalCounters.push_back(100943);
        internalCounters.push_back(101178);
        internalCounters.push_back(101413);
        internalCounters.push_back(101648);
        internalCounters.push_back(101883);
        internalCounters.push_back(96510);
        internalCounters.push_back(96745);
        internalCounters.push_back(96980);
        internalCounters.push_back(97215);
        internalCounters.push_back(97450);
        internalCounters.push_back(97685);
        internalCounters.push_back(97920);
        internalCounters.push_back(98155);
        internalCounters.push_back(98390);
        internalCounters.push_back(98625);
        internalCounters.push_back(98860);
        internalCounters.push_back(99095);
        internalCounters.push_back(99330);
        internalCounters.push_back(99565);
        internalCounters.push_back(99800);
        internalCounters.push_back(100035);
        internalCounters.push_back(100270);
        internalCounters.push_back(100505);
        internalCounters.push_back(100740);
        internalCounters.push_back(100975);
        internalCounters.push_back(101210);
        internalCounters.push_back(101445);
        internalCounters.push_back(101680);
        internalCounters.push_back(101915);

        c.DefineDerivedCounter("L2CacheHitCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that hit the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-", "d0bce171-560c-1895-66b3-bc56abccb077");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96510);
        internalCounters.push_back(96745);
        internalCounters.push_back(96980);
        internalCounters.push_back(97215);
        internalCounters.push_back(97450);
        internalCounters.push_back(97685);
        internalCounters.push_back(97920);
        internalCounters.push_back(98155);
        internalCounters.push_back(98390);
        internalCounters.push_back(98625);
        internalCounters.push_back(98860);
        internalCounters.push_back(99095);
        internalCounters.push_back(99330);
        internalCounters.push_back(99565);
        internalCounters.push_back(99800);
        internalCounters.push_back(100035);
        internalCounters.push_back(100270);
        internalCounters.push_back(100505);
        internalCounters.push_back(100740);
        internalCounters.push_back(100975);
        internalCounters.push_back(101210);
        internalCounters.push_back(101445);
        internalCounters.push_back(101680);
        internalCounters.push_back(101915);

        c.DefineDerivedCounter("L2CacheMissCount", "GlobalMemory", "Count of fetch, write, atomic, and other instructions that miss the L2 cache.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_ITEMS, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24", "f2ab3a1a-ead6-9893-961b-88ba2a758807");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96564);
        internalCounters.push_back(96799);
        internalCounters.push_back(97034);
        internalCounters.push_back(97269);
        internalCounters.push_back(97504);
        internalCounters.push_back(97739);
        internalCounters.push_back(97974);
        internalCounters.push_back(98209);
        internalCounters.push_back(98444);
        internalCounters.push_back(98679);
        internalCounters.push_back(98914);
        internalCounters.push_back(99149);
        internalCounters.push_back(99384);
        internalCounters.push_back(99619);
        internalCounters.push_back(99854);
        internalCounters.push_back(100089);
        internalCounters.push_back(100324);
        internalCounters.push_back(100559);
        internalCounters.push_back(100794);
        internalCounters.push_back(101029);
        internalCounters.push_back(101264);
        internalCounters.push_back(101499);
        internalCounters.push_back(101734);
        internalCounters.push_back(101969);
        internalCounters.push_back(96565);
        internalCounters.push_back(96800);
        internalCounters.push_back(97035);
        internalCounters.push_back(97270);
        internalCounters.push_back(97505);
        internalCounters.push_back(97740);
        internalCounters.push_back(97975);
        internalCounters.push_back(98210);
        internalCounters.push_back(98445);
        internalCounters.push_back(98680);
        internalCounters.push_back(98915);
        internalCounters.push_back(99150);
        internalCounters.push_back(99385);
        internalCounters.push_back(99620);
        internalCounters.push_back(99855);
        internalCounters.push_back(100090);
        internalCounters.push_back(100325);
        internalCounters.push_back(100560);
        internalCounters.push_back(100795);
        internalCounters.push_back(101030);
        internalCounters.push_back(101265);
        internalCounters.push_back(101500);
        internalCounters.push_back(101735);
        internalCounters.push_back(101970);
        internalCounters.push_back(96566);
        internalCounters.push_back(96801);
        internalCounters.push_back(97036);
        internalCounters.push_back(97271);
        internalCounters.push_back(97506);
        internalCounters.push_back(97741);
        internalCounters.push_back(97976);
        internalCounters.push_back(98211);
        internalCounters.push_back(98446);
        internalCounters.push_back(98681);
        internalCounters.push_back(98916);
        internalCounters.push_back(99151);
        internalCounters.push_back(99386);
        internalCounters.push_back(99621);
        internalCounters.push_back(99856);
        internalCounters.push_back(100091);
        internalCounters.push_back(100326);
        internalCounters.push_back(100561);
        internalCounters.push_back(100796);
        internalCounters.push_back(101031);
        internalCounters.push_back(101266);
        internalCounters.push_back(101501);
        internalCounters.push_back(101736);
        internalCounters.push_back(101971);
        internalCounters.push_back(96567);
        internalCounters.push_back(96802);
        internalCounters.push_back(97037);
        internalCounters.push_back(97272);
        internalCounters.push_back(97507);
        internalCounters.push_back(97742);
        internalCounters.push_back(97977);
        internalCounters.push_back(98212);
        internalCounters.push_back(98447);
        internalCounters.push_back(98682);
        internalCounters.push_back(98917);
        internalCounters.push_back(99152);
        internalCounters.push_back(99387);
        internalCounters.push_back(99622);
        internalCounters.push_back(99857);
        internalCounters.push_back(100092);
        internalCounters.push_back(100327);
        internalCounters.push_back(100562);
        internalCounters.push_back(100797);
        internalCounters.push_back(101032);
        internalCounters.push_back(101267);
        internalCounters.push_back(101502);
        internalCounters.push_back(101737);
        internalCounters.push_back(101972);

        c.DefineDerivedCounter("FetchSize", "GlobalMemory", "The total bytes fetched from the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,sum24,(96),*,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,sum24,(128),*,sum4", "664bb3ef-6eca-86b1-1e2d-30cb897b5fa9");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96550);
        internalCounters.push_back(96785);
        internalCounters.push_back(97020);
        internalCounters.push_back(97255);
        internalCounters.push_back(97490);
        internalCounters.push_back(97725);
        internalCounters.push_back(97960);
        internalCounters.push_back(98195);
        internalCounters.push_back(98430);
        internalCounters.push_back(98665);
        internalCounters.push_back(98900);
        internalCounters.push_back(99135);
        internalCounters.push_back(99370);
        internalCounters.push_back(99605);
        internalCounters.push_back(99840);
        internalCounters.push_back(100075);
        internalCounters.push_back(100310);
        internalCounters.push_back(100545);
        internalCounters.push_back(100780);
        internalCounters.push_back(101015);
        internalCounters.push_back(101250);
        internalCounters.push_back(101485);
        internalCounters.push_back(101720);
        internalCounters.push_back(101955);
        internalCounters.push_back(96551);
        internalCounters.push_back(96786);
        internalCounters.push_back(97021);
        internalCounters.push_back(97256);
        internalCounters.push_back(97491);
        internalCounters.push_back(97726);
        internalCounters.push_back(97961);
        internalCounters.push_back(98196);
        internalCounters.push_back(98431);
        internalCounters.push_back(98666);
        internalCounters.push_back(98901);
        internalCounters.push_back(99136);
        internalCounters.push_back(99371);
        internalCounters.push_back(99606);
        internalCounters.push_back(99841);
        internalCounters.push_back(100076);
        internalCounters.push_back(100311);
        internalCounters.push_back(100546);
        internalCounters.push_back(100781);
        internalCounters.push_back(101016);
        internalCounters.push_back(101251);
        internalCounters.push_back(101486);
        internalCounters.push_back(101721);
        internalCounters.push_back(101956);

        c.DefineDerivedCounter("WriteSize", "GlobalMemory", "The total bytes written to the video memory. This is measured with all extra fetches and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_KILOBYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,sum24,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,-,(32),*,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,sum24,(64),*,+", "f96f2c16-b1b4-4ec4-229c-fc82e6f80a82");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30515);
        internalCounters.push_back(30741);
        internalCounters.push_back(30967);
        internalCounters.push_back(31193);
        internalCounters.push_back(31419);
        internalCounters.push_back(31645);
        internalCounters.push_back(31871);
        internalCounters.push_back(32097);
        internalCounters.push_back(32323);
        internalCounters.push_back(32549);
        internalCounters.push_back(32775);
        internalCounters.push_back(33001);
        internalCounters.push_back(33227);
        internalCounters.push_back(33453);
        internalCounters.push_back(33679);
        internalCounters.push_back(33905);
        internalCounters.push_back(34131);
        internalCounters.push_back(34357);
        internalCounters.push_back(34583);
        internalCounters.push_back(34809);
        internalCounters.push_back(35035);
        internalCounters.push_back(35261);
        internalCounters.push_back(35487);
        internalCounters.push_back(35713);
        internalCounters.push_back(35939);
        internalCounters.push_back(36165);
        internalCounters.push_back(36391);
        internalCounters.push_back(36617);
        internalCounters.push_back(36843);
        internalCounters.push_back(37069);
        internalCounters.push_back(37295);
        internalCounters.push_back(37521);
        internalCounters.push_back(37747);
        internalCounters.push_back(37973);
        internalCounters.push_back(38199);
        internalCounters.push_back(38425);
        internalCounters.push_back(38651);
        internalCounters.push_back(38877);
        internalCounters.push_back(39103);
        internalCounters.push_back(39329);
        internalCounters.push_back(39555);
        internalCounters.push_back(39781);
        internalCounters.push_back(40007);
        internalCounters.push_back(40233);
        internalCounters.push_back(40459);
        internalCounters.push_back(40685);
        internalCounters.push_back(40911);
        internalCounters.push_back(41137);
        internalCounters.push_back(41363);
        internalCounters.push_back(41589);
        internalCounters.push_back(41815);
        internalCounters.push_back(42041);
        internalCounters.push_back(42267);
        internalCounters.push_back(42493);
        internalCounters.push_back(42719);
        internalCounters.push_back(42945);
        internalCounters.push_back(43171);
        internalCounters.push_back(43397);
        internalCounters.push_back(43623);
        internalCounters.push_back(43849);
        internalCounters.push_back(44075);
        internalCounters.push_back(44301);
        internalCounters.push_back(44527);
        internalCounters.push_back(44753);
        internalCounters.push_back(44979);
        internalCounters.push_back(45205);
        internalCounters.push_back(45431);
        internalCounters.push_back(45657);
        internalCounters.push_back(45883);
        internalCounters.push_back(46109);
        internalCounters.push_back(46335);
        internalCounters.push_back(46561);
        internalCounters.push_back(46787);
        internalCounters.push_back(47013);
        internalCounters.push_back(47239);
        internalCounters.push_back(47465);
        internalCounters.push_back(47691);
        internalCounters.push_back(47917);
        internalCounters.push_back(48143);
        internalCounters.push_back(48369);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("MemUnitBusy", "GlobalMemory", "The percentage of GPUTime the memory unit is active. The result includes the stall time (MemUnitStalled). This is measured with all extra fetches and writes and any cache or memory effects taken into account. Value range: 0% to 100% (fetch-bound).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "a1efa380-4a72-e066-e06a-2ab71a488521");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(30515);
        internalCounters.push_back(30741);
        internalCounters.push_back(30967);
        internalCounters.push_back(31193);
        internalCounters.push_back(31419);
        internalCounters.push_back(31645);
        internalCounters.push_back(31871);
        internalCounters.push_back(32097);
        internalCounters.push_back(32323);
        internalCounters.push_back(32549);
        internalCounters.push_back(32775);
        internalCounters.push_back(33001);
        internalCounters.push_back(33227);
        internalCounters.push_back(33453);
        internalCounters.push_back(33679);
        internalCounters.push_back(33905);
        internalCounters.push_back(34131);
        internalCounters.push_back(34357);
        internalCounters.push_back(34583);
        internalCounters.push_back(34809);
        internalCounters.push_back(35035);
        internalCounters.push_back(35261);
        internalCounters.push_back(35487);
        internalCounters.push_back(35713);
        internalCounters.push_back(35939);
        internalCounters.push_back(36165);
        internalCounters.push_back(36391);
        internalCounters.push_back(36617);
        internalCounters.push_back(36843);
        internalCounters.push_back(37069);
        internalCounters.push_back(37295);
        internalCounters.push_back(37521);
        internalCounters.push_back(37747);
        internalCounters.push_back(37973);
        internalCounters.push_back(38199);
        internalCounters.push_back(38425);
        internalCounters.push_back(38651);
        internalCounters.push_back(38877);
        internalCounters.push_back(39103);
        internalCounters.push_back(39329);
        internalCounters.push_back(39555);
        internalCounters.push_back(39781);
        internalCounters.push_back(40007);
        internalCounters.push_back(40233);
        internalCounters.push_back(40459);
        internalCounters.push_back(40685);
        internalCounters.push_back(40911);
        internalCounters.push_back(41137);
        internalCounters.push_back(41363);
        internalCounters.push_back(41589);
        internalCounters.push_back(41815);
        internalCounters.push_back(42041);
        internalCounters.push_back(42267);
        internalCounters.push_back(42493);
        internalCounters.push_back(42719);
        internalCounters.push_back(42945);
        internalCounters.push_back(43171);
        internalCounters.push_back(43397);
        internalCounters.push_back(43623);
        internalCounters.push_back(43849);
        internalCounters.push_back(44075);
        internalCounters.push_back(44301);
        internalCounters.push_back(44527);
        internalCounters.push_back(44753);
        internalCounters.push_back(44979);
        internalCounters.push_back(45205);
        internalCounters.push_back(45431);
        internalCounters.push_back(45657);
        internalCounters.push_back(45883);
        internalCounters.push_back(46109);
        internalCounters.push_back(46335);
        internalCounters.push_back(46561);
        internalCounters.push_back(46787);
        internalCounters.push_back(47013);
        internalCounters.push_back(47239);
        internalCounters.push_back(47465);
        internalCounters.push_back(47691);
        internalCounters.push_back(47917);
        internalCounters.push_back(48143);
        internalCounters.push_back(48369);

        c.DefineDerivedCounter("MemUnitBusyCycles", "GlobalMemory", "Number of GPU cycles the memory unit is active. The result includes the stall time (MemUnitStalledCycles). This is measured with all extra fetches and writes and any cache or memory effects taken into account.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "168f077c-4797-b2f5-717f-105c725266c8");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53496);
        internalCounters.push_back(53573);
        internalCounters.push_back(53650);
        internalCounters.push_back(53727);
        internalCounters.push_back(53804);
        internalCounters.push_back(53881);
        internalCounters.push_back(53958);
        internalCounters.push_back(54035);
        internalCounters.push_back(54112);
        internalCounters.push_back(54189);
        internalCounters.push_back(54266);
        internalCounters.push_back(54343);
        internalCounters.push_back(54420);
        internalCounters.push_back(54497);
        internalCounters.push_back(54574);
        internalCounters.push_back(54651);
        internalCounters.push_back(54728);
        internalCounters.push_back(54805);
        internalCounters.push_back(54882);
        internalCounters.push_back(54959);
        internalCounters.push_back(55036);
        internalCounters.push_back(55113);
        internalCounters.push_back(55190);
        internalCounters.push_back(55267);
        internalCounters.push_back(55344);
        internalCounters.push_back(55421);
        internalCounters.push_back(55498);
        internalCounters.push_back(55575);
        internalCounters.push_back(55652);
        internalCounters.push_back(55729);
        internalCounters.push_back(55806);
        internalCounters.push_back(55883);
        internalCounters.push_back(55960);
        internalCounters.push_back(56037);
        internalCounters.push_back(56114);
        internalCounters.push_back(56191);
        internalCounters.push_back(56268);
        internalCounters.push_back(56345);
        internalCounters.push_back(56422);
        internalCounters.push_back(56499);
        internalCounters.push_back(56576);
        internalCounters.push_back(56653);
        internalCounters.push_back(56730);
        internalCounters.push_back(56807);
        internalCounters.push_back(56884);
        internalCounters.push_back(56961);
        internalCounters.push_back(57038);
        internalCounters.push_back(57115);
        internalCounters.push_back(57192);
        internalCounters.push_back(57269);
        internalCounters.push_back(57346);
        internalCounters.push_back(57423);
        internalCounters.push_back(57500);
        internalCounters.push_back(57577);
        internalCounters.push_back(57654);
        internalCounters.push_back(57731);
        internalCounters.push_back(57808);
        internalCounters.push_back(57885);
        internalCounters.push_back(57962);
        internalCounters.push_back(58039);
        internalCounters.push_back(58116);
        internalCounters.push_back(58193);
        internalCounters.push_back(58270);
        internalCounters.push_back(58347);
        internalCounters.push_back(58424);
        internalCounters.push_back(58501);
        internalCounters.push_back(58578);
        internalCounters.push_back(58655);
        internalCounters.push_back(58732);
        internalCounters.push_back(58809);
        internalCounters.push_back(58886);
        internalCounters.push_back(58963);
        internalCounters.push_back(59040);
        internalCounters.push_back(59117);
        internalCounters.push_back(59194);
        internalCounters.push_back(59271);
        internalCounters.push_back(59348);
        internalCounters.push_back(59425);
        internalCounters.push_back(59502);
        internalCounters.push_back(59579);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("MemUnitStalled", "GlobalMemory", "The percentage of GPUTime the memory unit is stalled. Try reducing the number or size of fetches and writes if possible. Value range: 0% (optimal) to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80,80,/,(100),*", "465ba54f-d250-1453-790a-731b10d230b1");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(53496);
        internalCounters.push_back(53573);
        internalCounters.push_back(53650);
        internalCounters.push_back(53727);
        internalCounters.push_back(53804);
        internalCounters.push_back(53881);
        internalCounters.push_back(53958);
        internalCounters.push_back(54035);
        internalCounters.push_back(54112);
        internalCounters.push_back(54189);
        internalCounters.push_back(54266);
        internalCounters.push_back(54343);
        internalCounters.push_back(54420);
        internalCounters.push_back(54497);
        internalCounters.push_back(54574);
        internalCounters.push_back(54651);
        internalCounters.push_back(54728);
        internalCounters.push_back(54805);
        internalCounters.push_back(54882);
        internalCounters.push_back(54959);
        internalCounters.push_back(55036);
        internalCounters.push_back(55113);
        internalCounters.push_back(55190);
        internalCounters.push_back(55267);
        internalCounters.push_back(55344);
        internalCounters.push_back(55421);
        internalCounters.push_back(55498);
        internalCounters.push_back(55575);
        internalCounters.push_back(55652);
        internalCounters.push_back(55729);
        internalCounters.push_back(55806);
        internalCounters.push_back(55883);
        internalCounters.push_back(55960);
        internalCounters.push_back(56037);
        internalCounters.push_back(56114);
        internalCounters.push_back(56191);
        internalCounters.push_back(56268);
        internalCounters.push_back(56345);
        internalCounters.push_back(56422);
        internalCounters.push_back(56499);
        internalCounters.push_back(56576);
        internalCounters.push_back(56653);
        internalCounters.push_back(56730);
        internalCounters.push_back(56807);
        internalCounters.push_back(56884);
        internalCounters.push_back(56961);
        internalCounters.push_back(57038);
        internalCounters.push_back(57115);
        internalCounters.push_back(57192);
        internalCounters.push_back(57269);
        internalCounters.push_back(57346);
        internalCounters.push_back(57423);
        internalCounters.push_back(57500);
        internalCounters.push_back(57577);
        internalCounters.push_back(57654);
        internalCounters.push_back(57731);
        internalCounters.push_back(57808);
        internalCounters.push_back(57885);
        internalCounters.push_back(57962);
        internalCounters.push_back(58039);
        internalCounters.push_back(58116);
        internalCounters.push_back(58193);
        internalCounters.push_back(58270);
        internalCounters.push_back(58347);
        internalCounters.push_back(58424);
        internalCounters.push_back(58501);
        internalCounters.push_back(58578);
        internalCounters.push_back(58655);
        internalCounters.push_back(58732);
        internalCounters.push_back(58809);
        internalCounters.push_back(58886);
        internalCounters.push_back(58963);
        internalCounters.push_back(59040);
        internalCounters.push_back(59117);
        internalCounters.push_back(59194);
        internalCounters.push_back(59271);
        internalCounters.push_back(59348);
        internalCounters.push_back(59425);
        internalCounters.push_back(59502);
        internalCounters.push_back(59579);

        c.DefineDerivedCounter("MemUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the memory unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,max80", "2745659a-0e40-bace-3b9b-86a54f8e4623");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96554);
        internalCounters.push_back(96789);
        internalCounters.push_back(97024);
        internalCounters.push_back(97259);
        internalCounters.push_back(97494);
        internalCounters.push_back(97729);
        internalCounters.push_back(97964);
        internalCounters.push_back(98199);
        internalCounters.push_back(98434);
        internalCounters.push_back(98669);
        internalCounters.push_back(98904);
        internalCounters.push_back(99139);
        internalCounters.push_back(99374);
        internalCounters.push_back(99609);
        internalCounters.push_back(99844);
        internalCounters.push_back(100079);
        internalCounters.push_back(100314);
        internalCounters.push_back(100549);
        internalCounters.push_back(100784);
        internalCounters.push_back(101019);
        internalCounters.push_back(101254);
        internalCounters.push_back(101489);
        internalCounters.push_back(101724);
        internalCounters.push_back(101959);
        internalCounters.push_back(24);

        c.DefineDerivedCounter("WriteUnitStalled", "GlobalMemory", "The percentage of GPUTime the Write unit is stalled. Value range: 0% to 100% (bad).", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_PERCENTAGE, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24,24,/,(100),*", "594ad3ce-d1ec-10fc-7d59-25738e397d72");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(96554);
        internalCounters.push_back(96789);
        internalCounters.push_back(97024);
        internalCounters.push_back(97259);
        internalCounters.push_back(97494);
        internalCounters.push_back(97729);
        internalCounters.push_back(97964);
        internalCounters.push_back(98199);
        internalCounters.push_back(98434);
        internalCounters.push_back(98669);
        internalCounters.push_back(98904);
        internalCounters.push_back(99139);
        internalCounters.push_back(99374);
        internalCounters.push_back(99609);
        internalCounters.push_back(99844);
        internalCounters.push_back(100079);
        internalCounters.push_back(100314);
        internalCounters.push_back(100549);
        internalCounters.push_back(100784);
        internalCounters.push_back(101019);
        internalCounters.push_back(101254);
        internalCounters.push_back(101489);
        internalCounters.push_back(101724);
        internalCounters.push_back(101959);

        c.DefineDerivedCounter("WriteUnitStalledCycles", "GlobalMemory", "Number of GPU cycles the Write unit is stalled.", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_CYCLES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,max24", "ede3305e-abd4-d6bf-6b00-ffc57a29fce3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(86908);
        internalCounters.push_back(86997);
        internalCounters.push_back(87086);
        internalCounters.push_back(87175);
        internalCounters.push_back(87264);
        internalCounters.push_back(87353);
        internalCounters.push_back(87442);
        internalCounters.push_back(87531);
        internalCounters.push_back(87620);
        internalCounters.push_back(87709);
        internalCounters.push_back(87798);
        internalCounters.push_back(87887);
        internalCounters.push_back(87976);
        internalCounters.push_back(88065);
        internalCounters.push_back(88154);
        internalCounters.push_back(88243);

        c.DefineDerivedCounter("LocalVidMemBytes", "GlobalMemory", "Number of bytes read from or written to local video memory", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "2a601145-56c1-625b-bedd-66d959c5ecc3");
    }
    {
        vector<gpa_uint32> internalCounters;
        internalCounters.push_back(86910);
        internalCounters.push_back(86999);
        internalCounters.push_back(87088);
        internalCounters.push_back(87177);
        internalCounters.push_back(87266);
        internalCounters.push_back(87355);
        internalCounters.push_back(87444);
        internalCounters.push_back(87533);
        internalCounters.push_back(87622);
        internalCounters.push_back(87711);
        internalCounters.push_back(87800);
        internalCounters.push_back(87889);
        internalCounters.push_back(87978);
        internalCounters.push_back(88067);
        internalCounters.push_back(88156);
        internalCounters.push_back(88245);

        c.DefineDerivedCounter("PcieBytes", "GlobalMemory", "Number of bytes sent and received over the PCIe bus", GPA_DATA_TYPE_FLOAT64, GPA_USAGE_TYPE_BYTES, internalCounters, "0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,sum16,(32),*", "4bbe92de-f79e-ed39-bfde-9e08390cdb21");
    }
}

